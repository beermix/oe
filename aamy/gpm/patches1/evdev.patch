--- mice.c	Wed Jan 26 21:05:02 2000
+++ mice.c.new	Wed Jan 26 21:09:01 2000
@@ -69,6 +69,9 @@
 #include <linux/joystick.h>
 #endif
 
+#ifdef HAVE_LINUX_INPUT_H
+#include <linux/input.h>
+#endif
 
 #include "gpmInt.h"
 #include "twiddler.h"
@@ -1405,6 +1408,49 @@
   return type;
 }
 
+#ifdef HAVE_LINUX_INPUT_H
+static int M_evdev(Gpm_Event *state,  unsigned char *data)
+{
+  struct input_event *event = (struct input_event *)data;
+  
+  state->wdx = state->wdy = 0;
+  switch (event->type) {
+    case EV_KEY:
+      switch (event->code) {
+        case BTN_LEFT:
+          state->buttons = (state->buttons & ~GPM_B_LEFT) | (GPM_B_LEFT*event->value);
+          break;
+        case BTN_RIGHT:
+          state->buttons = (state->buttons & ~GPM_B_RIGHT) | (GPM_B_RIGHT*event->value);
+          break;
+        case BTN_MIDDLE:
+          state->buttons = (state->buttons & ~GPM_B_MIDDLE) | (GPM_B_MIDDLE*event->value);
+          break;
+        default:
+          break;
+      }
+      break;
+    case EV_REL:
+      switch (event->code) {
+        case REL_X:
+          state->dx = event->value;
+          break;
+	case REL_Y:
+          state->dy = event->value;
+          break;
+        case REL_WHEEL:
+          state->wdy = event->value;
+          break;
+	default:
+	  break;
+      }
+      break;
+    default:
+        break;
+  }
+  return 0;
+}
+#endif
 
 
 
@@ -1550,6 +1596,11 @@
            "                     connector with 6 pins), 3 buttons.",
            "", M_kmiabps2, I_kmiabps2, STD_FLG,
                                 {0x00, 0x00, 0x00, 0x00}, 3, 1, 0, 0, 0},
+
+#ifdef HAVE_LINUX_INPUT_H
+  {"evdev",   "Linux input event device", "", M_evdev, NULL, STD_FLG,
+              {0x00, 0x00, 0x00, 0x00}, sizeof(struct input_event), sizeof(struct input_event), 0, 0, 0},
+#endif
 
   {"",     "",
            "", NULL, NULL, 0,
--- configure.in.bak	Wed Jan 26 20:57:59 2000
+++ configure.in	Wed Jan 26 20:58:17 2000
@@ -64,7 +64,7 @@
         CURSES_OBJS=libcurses.o ; fi ;;
 esac
 
-AC_CHECK_HEADERS(sys/sysmacros.h linux/major.h linux/tty.h)
+AC_CHECK_HEADERS(sys/sysmacros.h linux/major.h linux/tty.h linux/input.h)
 
 ITZ_CHECK_TYPE(__u32,linux/types.h)
 if test ${itz_cv_type___u32} = yes || test ${ac_cv_type___u32} = yes ; then
