From eecbc197a50ddee696590019e8aa644108f3efb2 Mon Sep 17 00:00:00 2001
From: Maarten Lankhorst <maarten.lankhorst@canonical.com>
Date: Sat, 31 Aug 2013 08:36:02 +0200
Subject: [PATCH 31/41] winepulse v23: fixup a invalid free in mmdevapi

array members of ids should be dynamically allocated, judging from valgrind output.
---
 dlls/winepulse.drv/mmdevdrv.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

Index: wine1.6-1.7.1-actually1.6/dlls/winepulse.drv/mmdevdrv.c
===================================================================
--- wine1.6-1.7.1-actually1.6.orig/dlls/winepulse.drv/mmdevdrv.c	2013-09-13 16:19:21.319219809 -0700
+++ wine1.6-1.7.1-actually1.6/dlls/winepulse.drv/mmdevdrv.c	2013-09-13 16:19:42.000000000 -0700
@@ -726,6 +726,8 @@
         UINT *num, UINT *def_index)
 {
     HRESULT hr = S_OK;
+    WCHAR *id;
+
     TRACE("%d %p %p %p\n", flow, ids, num, def_index);
 
     pthread_mutex_lock(&pulse_lock);
@@ -737,16 +739,22 @@
     *def_index = 0;
 
     *ids = HeapAlloc(GetProcessHeap(), 0, sizeof(**ids));
+    *keys = NULL;
     if (!*ids)
         return E_OUTOFMEMORY;
-    (*ids)[0] = defaultW;
 
+    (*ids)[0] = id = HeapAlloc(GetProcessHeap(), 0, sizeof(defaultW));
     *keys = HeapAlloc(GetProcessHeap(), 0, sizeof(**keys));
-    if (!*keys) {
+    if (!*keys || !id) {
+        HeapFree(GetProcessHeap(), 0, id);
+        HeapFree(GetProcessHeap(), 0, *keys);
         HeapFree(GetProcessHeap(), 0, *ids);
         *ids = NULL;
+        *keys = NULL;
         return E_OUTOFMEMORY;
     }
+    memcpy(id, defaultW, sizeof(defaultW));
+
     if (flow == eRender)
         (*keys)[0] = pulse_render_guid;
     else
