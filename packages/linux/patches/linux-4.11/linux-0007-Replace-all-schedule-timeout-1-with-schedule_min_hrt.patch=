From fcb900aa085822f8dc98fb2f8647be262de4214d Mon Sep 17 00:00:00 2001
From: Con Kolivas <kernel@kolivas.org>
Date: Mon, 20 Feb 2017 13:28:30 +1100
Subject: [PATCH 07/24] Replace all schedule timeout(1) with
 schedule_min_hrtimeout()

---
 drivers/block/swim.c                            |    6 +++---
 drivers/bluetooth/hci_qca.c                     |    2 +-
 drivers/char/ipmi/ipmi_msghandler.c             |    2 +-
 drivers/char/ipmi/ipmi_ssif.c                   |    2 +-
 drivers/char/snsc.c                             |    4 ++--
 drivers/gpu/drm/vmwgfx/vmwgfx_fifo.c            |    2 +-
 drivers/gpu/drm/vmwgfx/vmwgfx_irq.c             |    2 +-
 drivers/media/pci/ivtv/ivtv-ioctl.c             |    2 +-
 drivers/media/pci/ivtv/ivtv-streams.c           |    2 +-
 drivers/mfd/ucb1x00-core.c                      |    2 +-
 drivers/misc/sgi-xp/xpc_channel.c               |    2 +-
 drivers/net/caif/caif_hsi.c                     |    2 +-
 drivers/net/can/usb/peak_usb/pcan_usb.c         |    2 +-
 drivers/net/usb/lan78xx.c                       |    2 +-
 drivers/net/usb/usbnet.c                        |    2 +-
 drivers/ntb/test/ntb_perf.c                     |    2 +-
 drivers/scsi/fnic/fnic_scsi.c                   |    4 ++--
 drivers/scsi/snic/snic_scsi.c                   |    2 +-
 drivers/staging/comedi/drivers/ni_mio_common.c  |    2 +-
 drivers/staging/lustre/lnet/lnet/lib-eq.c       |    2 +-
 drivers/staging/rts5208/rtsx.c                  |    2 +-
 drivers/staging/speakup/speakup_acntpc.c        |    4 ++--
 drivers/staging/speakup/speakup_apollo.c        |    2 +-
 drivers/staging/speakup/speakup_decext.c        |    2 +-
 drivers/staging/speakup/speakup_decpc.c         |    2 +-
 drivers/staging/speakup/speakup_dectlk.c        |    2 +-
 drivers/staging/speakup/speakup_dtlk.c          |    4 ++--
 drivers/staging/speakup/speakup_keypc.c         |    4 ++--
 drivers/staging/speakup/synth.c                 |    2 +-
 drivers/staging/unisys/visornic/visornic_main.c |    6 +++---
 drivers/target/target_core_user.c               |    5 ++---
 drivers/video/fbdev/omap/hwa742.c               |    2 +-
 drivers/video/fbdev/pxafb.c                     |    2 +-
 fs/afs/vlocation.c                              |    2 +-
 fs/btrfs/extent-tree.c                          |    2 +-
 fs/btrfs/inode-map.c                            |    2 +-
 sound/usb/line6/pcm.c                           |    2 +-
 37 files changed, 47 insertions(+), 48 deletions(-)

Index: linux-4.11-ck2/drivers/block/swim.c
===================================================================
--- linux-4.11-ck2.orig/drivers/block/swim.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/block/swim.c	2017-05-26 19:04:57.894240800 +1000
@@ -332,7 +332,7 @@ static inline void swim_motor(struct swi
 			if (swim_readbit(base, MOTOR_ON))
 				break;
 			current->state = TASK_INTERRUPTIBLE;
-			schedule_timeout(1);
+			schedule_min_hrtimeout();
 		}
 	} else if (action == OFF) {
 		swim_action(base, MOTOR_OFF);
@@ -351,7 +351,7 @@ static inline void swim_eject(struct swi
 		if (!swim_readbit(base, DISK_IN))
 			break;
 		current->state = TASK_INTERRUPTIBLE;
-		schedule_timeout(1);
+		schedule_min_hrtimeout();
 	}
 	swim_select(base, RELAX);
 }
@@ -375,7 +375,7 @@ static inline int swim_step(struct swim
 	for (wait = 0; wait < HZ; wait++) {
 
 		current->state = TASK_INTERRUPTIBLE;
-		schedule_timeout(1);
+		schedule_min_hrtimeout();
 
 		swim_select(base, RELAX);
 		if (!swim_readbit(base, STEP))
Index: linux-4.11-ck2/drivers/bluetooth/hci_qca.c
===================================================================
--- linux-4.11-ck2.orig/drivers/bluetooth/hci_qca.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/bluetooth/hci_qca.c	2017-05-26 19:04:57.894240800 +1000
@@ -880,7 +880,7 @@ static int qca_set_baudrate(struct hci_d
 	 * then host can communicate with new baudrate to controller
 	 */
 	set_current_state(TASK_UNINTERRUPTIBLE);
-	schedule_timeout(msecs_to_jiffies(BAUDRATE_SETTLE_TIMEOUT_MS));
+	schedule_msec_hrtimeout((BAUDRATE_SETTLE_TIMEOUT_MS));
 	set_current_state(TASK_INTERRUPTIBLE);
 
 	return 0;
Index: linux-4.11-ck2/drivers/char/ipmi/ipmi_msghandler.c
===================================================================
--- linux-4.11-ck2.orig/drivers/char/ipmi/ipmi_msghandler.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/char/ipmi/ipmi_msghandler.c	2017-05-26 19:04:57.894240800 +1000
@@ -2953,7 +2953,7 @@ static void cleanup_smi_msgs(ipmi_smi_t
 	/* Current message first, to preserve order */
 	while (intf->curr_msg && !list_empty(&intf->waiting_rcv_msgs)) {
 		/* Wait for the message to clear out. */
-		schedule_timeout(1);
+		schedule_min_hrtimeout();
 	}
 
 	/* No need for locks, the interface is down. */
Index: linux-4.11-ck2/drivers/char/ipmi/ipmi_ssif.c
===================================================================
--- linux-4.11-ck2.orig/drivers/char/ipmi/ipmi_ssif.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/char/ipmi/ipmi_ssif.c	2017-05-26 19:04:57.894240800 +1000
@@ -1185,7 +1185,7 @@ static int ssif_remove(struct i2c_client
 
 	/* make sure the driver is not looking for flags any more. */
 	while (ssif_info->ssif_state != SSIF_NORMAL)
-		schedule_timeout(1);
+		schedule_min_hrtimeout();
 
 	ssif_info->stopping = true;
 	del_timer_sync(&ssif_info->retry_timer);
Index: linux-4.11-ck2/drivers/char/snsc.c
===================================================================
--- linux-4.11-ck2.orig/drivers/char/snsc.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/char/snsc.c	2017-05-26 19:04:57.894240800 +1000
@@ -198,7 +198,7 @@ scdrv_read(struct file *file, char __use
 		add_wait_queue(&sd->sd_rq, &wait);
 		spin_unlock_irqrestore(&sd->sd_rlock, flags);
 
-		schedule_timeout(msecs_to_jiffies(SCDRV_TIMEOUT));
+		schedule_msec_hrtimeout((SCDRV_TIMEOUT));
 
 		remove_wait_queue(&sd->sd_rq, &wait);
 		if (signal_pending(current)) {
@@ -294,7 +294,7 @@ scdrv_write(struct file *file, const cha
 		add_wait_queue(&sd->sd_wq, &wait);
 		spin_unlock_irqrestore(&sd->sd_wlock, flags);
 
-		schedule_timeout(msecs_to_jiffies(SCDRV_TIMEOUT));
+		schedule_msec_hrtimeout((SCDRV_TIMEOUT));
 
 		remove_wait_queue(&sd->sd_wq, &wait);
 		if (signal_pending(current)) {
Index: linux-4.11-ck2/drivers/gpu/drm/vmwgfx/vmwgfx_fifo.c
===================================================================
--- linux-4.11-ck2.orig/drivers/gpu/drm/vmwgfx/vmwgfx_fifo.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/gpu/drm/vmwgfx/vmwgfx_fifo.c	2017-05-26 19:04:57.894240800 +1000
@@ -235,7 +235,7 @@ static int vmw_fifo_wait_noirq(struct vm
 			DRM_ERROR("SVGA device lockup.\n");
 			break;
 		}
-		schedule_timeout(1);
+		schedule_min_hrtimeout();
 		if (interruptible && signal_pending(current)) {
 			ret = -ERESTARTSYS;
 			break;
Index: linux-4.11-ck2/drivers/gpu/drm/vmwgfx/vmwgfx_irq.c
===================================================================
--- linux-4.11-ck2.orig/drivers/gpu/drm/vmwgfx/vmwgfx_irq.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/gpu/drm/vmwgfx/vmwgfx_irq.c	2017-05-26 19:04:57.894240800 +1000
@@ -156,7 +156,7 @@ int vmw_fallback_wait(struct vmw_private
 			break;
 		}
 		if (lazy)
-			schedule_timeout(1);
+			schedule_min_hrtimeout();
 		else if ((++count & 0x0F) == 0) {
 			/**
 			 * FIXME: Use schedule_hr_timeout here for
Index: linux-4.11-ck2/drivers/media/pci/ivtv/ivtv-ioctl.c
===================================================================
--- linux-4.11-ck2.orig/drivers/media/pci/ivtv/ivtv-ioctl.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/media/pci/ivtv/ivtv-ioctl.c	2017-05-26 19:04:57.894240800 +1000
@@ -1154,7 +1154,7 @@ void ivtv_s_std_dec(struct ivtv *itv, v4
 				TASK_UNINTERRUPTIBLE);
 		if ((read_reg(IVTV_REG_DEC_LINE_FIELD) >> 16) < 100)
 			break;
-		schedule_timeout(msecs_to_jiffies(25));
+		schedule_msec_hrtimeout((25));
 	}
 	finish_wait(&itv->vsync_waitq, &wait);
 	mutex_lock(&itv->serialize_lock);
Index: linux-4.11-ck2/drivers/media/pci/ivtv/ivtv-streams.c
===================================================================
--- linux-4.11-ck2.orig/drivers/media/pci/ivtv/ivtv-streams.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/media/pci/ivtv/ivtv-streams.c	2017-05-26 19:04:57.894240800 +1000
@@ -834,7 +834,7 @@ int ivtv_stop_v4l2_encode_stream(struct
 			while (!test_bit(IVTV_F_I_EOS, &itv->i_flags) &&
 				time_before(jiffies,
 					    then + msecs_to_jiffies(2000))) {
-				schedule_timeout(msecs_to_jiffies(10));
+				schedule_msec_hrtimeout((10));
 			}
 
 			/* To convert jiffies to ms, we must multiply by 1000
Index: linux-4.11-ck2/drivers/mfd/ucb1x00-core.c
===================================================================
--- linux-4.11-ck2.orig/drivers/mfd/ucb1x00-core.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/mfd/ucb1x00-core.c	2017-05-26 19:04:57.894240800 +1000
@@ -253,7 +253,7 @@ unsigned int ucb1x00_adc_read(struct ucb
 			break;
 		/* yield to other processes */
 		set_current_state(TASK_INTERRUPTIBLE);
-		schedule_timeout(1);
+		schedule_min_hrtimeout();
 	}
 
 	return UCB_ADC_DAT(val);
Index: linux-4.11-ck2/drivers/misc/sgi-xp/xpc_channel.c
===================================================================
--- linux-4.11-ck2.orig/drivers/misc/sgi-xp/xpc_channel.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/misc/sgi-xp/xpc_channel.c	2017-05-26 19:04:57.894240800 +1000
@@ -837,7 +837,7 @@ xpc_allocate_msg_wait(struct xpc_channel
 
 	atomic_inc(&ch->n_on_msg_allocate_wq);
 	prepare_to_wait(&ch->msg_allocate_wq, &wait, TASK_INTERRUPTIBLE);
-	ret = schedule_timeout(1);
+	ret = schedule_min_hrtimeout();
 	finish_wait(&ch->msg_allocate_wq, &wait);
 	atomic_dec(&ch->n_on_msg_allocate_wq);
 
Index: linux-4.11-ck2/drivers/net/caif/caif_hsi.c
===================================================================
--- linux-4.11-ck2.orig/drivers/net/caif/caif_hsi.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/net/caif/caif_hsi.c	2017-05-26 19:04:57.894240800 +1000
@@ -944,7 +944,7 @@ static void cfhsi_wake_down(struct work_
 			break;
 
 		set_current_state(TASK_INTERRUPTIBLE);
-		schedule_timeout(1);
+		schedule_min_hrtimeout();
 		retry--;
 	}
 
Index: linux-4.11-ck2/drivers/net/can/usb/peak_usb/pcan_usb.c
===================================================================
--- linux-4.11-ck2.orig/drivers/net/can/usb/peak_usb/pcan_usb.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/net/can/usb/peak_usb/pcan_usb.c	2017-05-26 19:04:57.894240800 +1000
@@ -250,7 +250,7 @@ static int pcan_usb_write_mode(struct pe
 	} else {
 		/* the PCAN-USB needs time to init */
 		set_current_state(TASK_INTERRUPTIBLE);
-		schedule_timeout(msecs_to_jiffies(PCAN_USB_STARTUP_TIMEOUT));
+		schedule_msec_hrtimeout((PCAN_USB_STARTUP_TIMEOUT));
 	}
 
 	return err;
Index: linux-4.11-ck2/drivers/net/usb/lan78xx.c
===================================================================
--- linux-4.11-ck2.orig/drivers/net/usb/lan78xx.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/net/usb/lan78xx.c	2017-05-26 19:04:57.894240800 +1000
@@ -2545,7 +2545,7 @@ static void lan78xx_terminate_urbs(struc
 	while (!skb_queue_empty(&dev->rxq) &&
 	       !skb_queue_empty(&dev->txq) &&
 	       !skb_queue_empty(&dev->done)) {
-		schedule_timeout(msecs_to_jiffies(UNLINK_TIMEOUT_MS));
+		schedule_msec_hrtimeout((UNLINK_TIMEOUT_MS));
 		set_current_state(TASK_UNINTERRUPTIBLE);
 		netif_dbg(dev, ifdown, dev->net,
 			  "waited for %d urb completions\n", temp);
Index: linux-4.11-ck2/drivers/net/usb/usbnet.c
===================================================================
--- linux-4.11-ck2.orig/drivers/net/usb/usbnet.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/net/usb/usbnet.c	2017-05-26 19:04:57.894240800 +1000
@@ -767,7 +767,7 @@ static void wait_skb_queue_empty(struct
 	spin_lock_irqsave(&q->lock, flags);
 	while (!skb_queue_empty(q)) {
 		spin_unlock_irqrestore(&q->lock, flags);
-		schedule_timeout(msecs_to_jiffies(UNLINK_TIMEOUT_MS));
+		schedule_msec_hrtimeout((UNLINK_TIMEOUT_MS));
 		set_current_state(TASK_UNINTERRUPTIBLE);
 		spin_lock_irqsave(&q->lock, flags);
 	}
Index: linux-4.11-ck2/drivers/ntb/test/ntb_perf.c
===================================================================
--- linux-4.11-ck2.orig/drivers/ntb/test/ntb_perf.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/ntb/test/ntb_perf.c	2017-05-26 19:04:57.894240800 +1000
@@ -308,7 +308,7 @@ static int perf_move_data(struct pthr_ct
 		if (unlikely((jiffies - last_sleep) > 5 * HZ)) {
 			last_sleep = jiffies;
 			set_current_state(TASK_INTERRUPTIBLE);
-			schedule_timeout(1);
+			schedule_min_hrtimeout();
 		}
 
 		if (unlikely(kthread_should_stop()))
Index: linux-4.11-ck2/drivers/scsi/fnic/fnic_scsi.c
===================================================================
--- linux-4.11-ck2.orig/drivers/scsi/fnic/fnic_scsi.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/scsi/fnic/fnic_scsi.c	2017-05-26 19:04:57.894240800 +1000
@@ -217,7 +217,7 @@ int fnic_fw_reset_handler(struct fnic *f
 
 	/* wait for io cmpl */
 	while (atomic_read(&fnic->in_flight))
-		schedule_timeout(msecs_to_jiffies(1));
+		schedule_msec_hrtimeout((1));
 
 	spin_lock_irqsave(&fnic->wq_copy_lock[0], flags);
 
@@ -2201,7 +2201,7 @@ static int fnic_clean_pending_aborts(str
 		}
 	}
 
-	schedule_timeout(msecs_to_jiffies(2 * fnic->config.ed_tov));
+	schedule_msec_hrtimeout((2 * fnic->config.ed_tov));
 
 	/* walk again to check, if IOs are still pending in fw */
 	if (fnic_is_abts_pending(fnic, lr_sc))
Index: linux-4.11-ck2/drivers/scsi/snic/snic_scsi.c
===================================================================
--- linux-4.11-ck2.orig/drivers/scsi/snic/snic_scsi.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/scsi/snic/snic_scsi.c	2017-05-26 19:04:57.894240800 +1000
@@ -2356,7 +2356,7 @@ snic_reset(struct Scsi_Host *shost, stru
 
 	/* Wait for all the IOs that are entered in Qcmd */
 	while (atomic_read(&snic->ios_inflight))
-		schedule_timeout(msecs_to_jiffies(1));
+		schedule_msec_hrtimeout((1));
 
 	ret = snic_issue_hba_reset(snic, sc);
 	if (ret) {
Index: linux-4.11-ck2/drivers/staging/comedi/drivers/ni_mio_common.c
===================================================================
--- linux-4.11-ck2.orig/drivers/staging/comedi/drivers/ni_mio_common.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/staging/comedi/drivers/ni_mio_common.c	2017-05-26 19:04:57.894240800 +1000
@@ -4655,7 +4655,7 @@ static int cs5529_wait_for_idle(struct c
 		if ((status & NI67XX_CAL_STATUS_BUSY) == 0)
 			break;
 		set_current_state(TASK_INTERRUPTIBLE);
-		if (schedule_timeout(1))
+		if (schedule_min_hrtimeout())
 			return -EIO;
 	}
 	if (i == timeout) {
Index: linux-4.11-ck2/drivers/staging/lustre/lnet/lnet/lib-eq.c
===================================================================
--- linux-4.11-ck2.orig/drivers/staging/lustre/lnet/lnet/lib-eq.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/staging/lustre/lnet/lnet/lib-eq.c	2017-05-26 19:04:57.894240800 +1000
@@ -328,7 +328,7 @@ __must_hold(&the_lnet.ln_eq_wait_lock)
 		schedule();
 	} else {
 		now = jiffies;
-		schedule_timeout(msecs_to_jiffies(tms));
+		schedule_msec_hrtimeout((tms));
 		tms -= jiffies_to_msecs(jiffies - now);
 		if (tms < 0) /* no more wait but may have new event */
 			tms = 0;
Index: linux-4.11-ck2/drivers/staging/rts5208/rtsx.c
===================================================================
--- linux-4.11-ck2.orig/drivers/staging/rts5208/rtsx.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/staging/rts5208/rtsx.c	2017-05-26 19:04:57.894240800 +1000
@@ -535,7 +535,7 @@ static int rtsx_polling_thread(void *__d
 
 	for (;;) {
 		set_current_state(TASK_INTERRUPTIBLE);
-		schedule_timeout(msecs_to_jiffies(POLLING_INTERVAL));
+		schedule_msec_hrtimeout((POLLING_INTERVAL));
 
 		/* lock the device pointers */
 		mutex_lock(&dev->dev_mutex);
Index: linux-4.11-ck2/drivers/staging/speakup/speakup_acntpc.c
===================================================================
--- linux-4.11-ck2.orig/drivers/staging/speakup/speakup_acntpc.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/staging/speakup/speakup_acntpc.c	2017-05-26 19:04:57.894240800 +1000
@@ -204,7 +204,7 @@ static void do_catch_up(struct spk_synth
 		full_time_val = full_time->u.n.value;
 		spin_unlock_irqrestore(&speakup_info.spinlock, flags);
 		if (synth_full()) {
-			schedule_timeout(msecs_to_jiffies(full_time_val));
+			schedule_msec_hrtimeout((full_time_val));
 			continue;
 		}
 		set_current_state(TASK_RUNNING);
@@ -232,7 +232,7 @@ static void do_catch_up(struct spk_synth
 			jiffy_delta_val = jiffy_delta->u.n.value;
 			delay_time_val = delay_time->u.n.value;
 			spin_unlock_irqrestore(&speakup_info.spinlock, flags);
-			schedule_timeout(msecs_to_jiffies(delay_time_val));
+			schedule_msec_hrtimeout((delay_time_val));
 			jiff_max = jiffies+jiffy_delta_val;
 		}
 	}
Index: linux-4.11-ck2/drivers/staging/speakup/speakup_apollo.c
===================================================================
--- linux-4.11-ck2.orig/drivers/staging/speakup/speakup_apollo.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/staging/speakup/speakup_apollo.c	2017-05-26 19:04:57.894240800 +1000
@@ -172,7 +172,7 @@ static void do_catch_up(struct spk_synth
 			outb(UART_MCR_DTR, speakup_info.port_tts + UART_MCR);
 			outb(UART_MCR_DTR | UART_MCR_RTS,
 					speakup_info.port_tts + UART_MCR);
-			schedule_timeout(msecs_to_jiffies(full_time_val));
+			schedule_msec_hrtimeout((full_time_val));
 			continue;
 		}
 		if (time_after_eq(jiffies, jiff_max) && (ch == SPACE)) {
Index: linux-4.11-ck2/drivers/staging/speakup/speakup_decext.c
===================================================================
--- linux-4.11-ck2.orig/drivers/staging/speakup/speakup_decext.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/staging/speakup/speakup_decext.c	2017-05-26 19:04:57.894240800 +1000
@@ -186,7 +186,7 @@ static void do_catch_up(struct spk_synth
 		if (ch == '\n')
 			ch = 0x0D;
 		if (synth_full() || !spk_serial_out(ch)) {
-			schedule_timeout(msecs_to_jiffies(delay_time_val));
+			schedule_msec_hrtimeout((delay_time_val));
 			continue;
 		}
 		set_current_state(TASK_RUNNING);
Index: linux-4.11-ck2/drivers/staging/speakup/speakup_decpc.c
===================================================================
--- linux-4.11-ck2.orig/drivers/staging/speakup/speakup_decpc.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/staging/speakup/speakup_decpc.c	2017-05-26 19:04:57.894240800 +1000
@@ -403,7 +403,7 @@ static void do_catch_up(struct spk_synth
 		if (ch == '\n')
 			ch = 0x0D;
 		if (dt_sendchar(ch)) {
-			schedule_timeout(msecs_to_jiffies(delay_time_val));
+			schedule_msec_hrtimeout((delay_time_val));
 			continue;
 		}
 		set_current_state(TASK_RUNNING);
Index: linux-4.11-ck2/drivers/staging/speakup/speakup_dectlk.c
===================================================================
--- linux-4.11-ck2.orig/drivers/staging/speakup/speakup_dectlk.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/staging/speakup/speakup_dectlk.c	2017-05-26 19:04:57.894240800 +1000
@@ -251,7 +251,7 @@ static void do_catch_up(struct spk_synth
 		if (ch == '\n')
 			ch = 0x0D;
 		if (synth_full_val || !spk_serial_out(ch)) {
-			schedule_timeout(msecs_to_jiffies(delay_time_val));
+			schedule_msec_hrtimeout((delay_time_val));
 			continue;
 		}
 		set_current_state(TASK_RUNNING);
Index: linux-4.11-ck2/drivers/staging/speakup/speakup_dtlk.c
===================================================================
--- linux-4.11-ck2.orig/drivers/staging/speakup/speakup_dtlk.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/staging/speakup/speakup_dtlk.c	2017-05-26 19:04:57.894240800 +1000
@@ -217,7 +217,7 @@ static void do_catch_up(struct spk_synth
 		delay_time_val = delay_time->u.n.value;
 		spin_unlock_irqrestore(&speakup_info.spinlock, flags);
 		if (synth_full()) {
-			schedule_timeout(msecs_to_jiffies(delay_time_val));
+			schedule_msec_hrtimeout((delay_time_val));
 			continue;
 		}
 		set_current_state(TASK_RUNNING);
@@ -233,7 +233,7 @@ static void do_catch_up(struct spk_synth
 			delay_time_val = delay_time->u.n.value;
 			jiffy_delta_val = jiffy_delta->u.n.value;
 			spin_unlock_irqrestore(&speakup_info.spinlock, flags);
-			schedule_timeout(msecs_to_jiffies(delay_time_val));
+			schedule_msec_hrtimeout((delay_time_val));
 			jiff_max = jiffies + jiffy_delta_val;
 		}
 	}
Index: linux-4.11-ck2/drivers/staging/speakup/speakup_keypc.c
===================================================================
--- linux-4.11-ck2.orig/drivers/staging/speakup/speakup_keypc.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/staging/speakup/speakup_keypc.c	2017-05-26 19:04:57.894240800 +1000
@@ -206,7 +206,7 @@ spin_lock_irqsave(&speakup_info.spinlock
 		full_time_val = full_time->u.n.value;
 		spin_unlock_irqrestore(&speakup_info.spinlock, flags);
 		if (synth_full()) {
-			schedule_timeout(msecs_to_jiffies(full_time_val));
+			schedule_msec_hrtimeout((full_time_val));
 			continue;
 		}
 		set_current_state(TASK_RUNNING);
@@ -239,7 +239,7 @@ spin_lock_irqsave(&speakup_info.spinlock
 			jiffy_delta_val = jiffy_delta->u.n.value;
 			delay_time_val = delay_time->u.n.value;
 			spin_unlock_irqrestore(&speakup_info.spinlock, flags);
-			schedule_timeout(msecs_to_jiffies(delay_time_val));
+			schedule_msec_hrtimeout((delay_time_val));
 			jiff_max = jiffies+jiffy_delta_val;
 		}
 	}
Index: linux-4.11-ck2/drivers/staging/speakup/synth.c
===================================================================
--- linux-4.11-ck2.orig/drivers/staging/speakup/synth.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/staging/speakup/synth.c	2017-05-26 19:04:57.894240800 +1000
@@ -120,7 +120,7 @@ void spk_do_catch_up(struct spk_synth *s
 		if (ch == '\n')
 			ch = synth->procspeech;
 		if (!spk_serial_out(ch)) {
-			schedule_timeout(msecs_to_jiffies(full_time_val));
+			schedule_msec_hrtimeout((full_time_val));
 			continue;
 		}
 		if (time_after_eq(jiffies, jiff_max) && (ch == SPACE)) {
Index: linux-4.11-ck2/drivers/staging/unisys/visornic/visornic_main.c
===================================================================
--- linux-4.11-ck2.orig/drivers/staging/unisys/visornic/visornic_main.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/staging/unisys/visornic/visornic_main.c	2017-05-26 19:04:57.894240800 +1000
@@ -467,7 +467,7 @@ visornic_disable_with_timeout(struct net
 		}
 		set_current_state(TASK_INTERRUPTIBLE);
 		spin_unlock_irqrestore(&devdata->priv_lock, flags);
-		wait += schedule_timeout(msecs_to_jiffies(10));
+		wait += schedule_msec_hrtimeout((10));
 		spin_lock_irqsave(&devdata->priv_lock, flags);
 	}
 
@@ -478,7 +478,7 @@ visornic_disable_with_timeout(struct net
 		while (1) {
 			set_current_state(TASK_INTERRUPTIBLE);
 			spin_unlock_irqrestore(&devdata->priv_lock, flags);
-			schedule_timeout(msecs_to_jiffies(10));
+			schedule_msec_hrtimeout((10));
 			spin_lock_irqsave(&devdata->priv_lock, flags);
 			if (atomic_read(&devdata->usage))
 				break;
@@ -610,7 +610,7 @@ visornic_enable_with_timeout(struct net_
 		}
 		set_current_state(TASK_INTERRUPTIBLE);
 		spin_unlock_irqrestore(&devdata->priv_lock, flags);
-		wait += schedule_timeout(msecs_to_jiffies(10));
+		wait += schedule_msec_hrtimeout((10));
 		spin_lock_irqsave(&devdata->priv_lock, flags);
 	}
 
Index: linux-4.11-ck2/drivers/target/target_core_user.c
===================================================================
--- linux-4.11-ck2.orig/drivers/target/target_core_user.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/target/target_core_user.c	2017-05-26 19:04:57.894240800 +1000
@@ -497,10 +497,9 @@ tcmu_queue_cmd_ring(struct tcmu_cmd *tcm
 		pr_debug("sleeping for ring space\n");
 		spin_unlock_irq(&udev->cmdr_lock);
 		if (udev->cmd_time_out)
-			ret = schedule_timeout(
-					msecs_to_jiffies(udev->cmd_time_out));
+			ret = schedule_msec_hrtimeout(udev->cmd_time_out);
 		else
-			ret = schedule_timeout(msecs_to_jiffies(TCMU_TIME_OUT));
+			ret = schedule_msec_hrtimeout(TCMU_TIME_OUT);
 		finish_wait(&udev->wait_cmdr, &__wait);
 		if (!ret) {
 			pr_warn("tcmu: command timed out\n");
Index: linux-4.11-ck2/drivers/video/fbdev/omap/hwa742.c
===================================================================
--- linux-4.11-ck2.orig/drivers/video/fbdev/omap/hwa742.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/video/fbdev/omap/hwa742.c	2017-05-26 19:04:57.894240800 +1000
@@ -926,7 +926,7 @@ static void hwa742_resume(void)
 		if (hwa742_read_reg(HWA742_PLL_DIV_REG) & (1 << 7))
 			break;
 		set_current_state(TASK_UNINTERRUPTIBLE);
-		schedule_timeout(msecs_to_jiffies(5));
+		schedule_msec_hrtimeout((5));
 	}
 	hwa742_set_update_mode(hwa742.update_mode_before_suspend);
 }
Index: linux-4.11-ck2/drivers/video/fbdev/pxafb.c
===================================================================
--- linux-4.11-ck2.orig/drivers/video/fbdev/pxafb.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/drivers/video/fbdev/pxafb.c	2017-05-26 19:04:57.894240800 +1000
@@ -1287,7 +1287,7 @@ static int pxafb_smart_thread(void *arg)
 		mutex_unlock(&fbi->ctrlr_lock);
 
 		set_current_state(TASK_INTERRUPTIBLE);
-		schedule_timeout(msecs_to_jiffies(30));
+		schedule_msec_hrtimeout((30));
 	}
 
 	pr_debug("%s(): task ending\n", __func__);
Index: linux-4.11-ck2/fs/afs/vlocation.c
===================================================================
--- linux-4.11-ck2.orig/fs/afs/vlocation.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/fs/afs/vlocation.c	2017-05-26 19:04:57.894240800 +1000
@@ -129,7 +129,7 @@ static int afs_vlocation_access_vl_by_id
 				if (vl->upd_busy_cnt > 1) {
 					/* second+ BUSY - sleep a little bit */
 					set_current_state(TASK_UNINTERRUPTIBLE);
-					schedule_timeout(1);
+					schedule_min_hrtimeout();
 				}
 				continue;
 			}
Index: linux-4.11-ck2/fs/btrfs/extent-tree.c
===================================================================
--- linux-4.11-ck2.orig/fs/btrfs/extent-tree.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/fs/btrfs/extent-tree.c	2017-05-26 19:04:57.894240800 +1000
@@ -5953,7 +5953,7 @@ int btrfs_delalloc_reserve_metadata(stru
 
 	if (flush != BTRFS_RESERVE_NO_FLUSH &&
 	    btrfs_transaction_in_commit(fs_info))
-		schedule_timeout(1);
+		schedule_min_hrtimeout();
 
 	if (delalloc_lock)
 		mutex_lock(&inode->delalloc_mutex);
Index: linux-4.11-ck2/fs/btrfs/inode-map.c
===================================================================
--- linux-4.11-ck2.orig/fs/btrfs/inode-map.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/fs/btrfs/inode-map.c	2017-05-26 19:04:57.904240726 +1000
@@ -89,7 +89,7 @@ again:
 				btrfs_release_path(path);
 				root->ino_cache_progress = last;
 				up_read(&fs_info->commit_root_sem);
-				schedule_timeout(1);
+				schedule_min_hrtimeout();
 				goto again;
 			} else
 				continue;
Index: linux-4.11-ck2/sound/usb/line6/pcm.c
===================================================================
--- linux-4.11-ck2.orig/sound/usb/line6/pcm.c	2017-05-26 19:04:57.914240656 +1000
+++ linux-4.11-ck2/sound/usb/line6/pcm.c	2017-05-26 19:04:57.904240726 +1000
@@ -131,7 +131,7 @@ static void line6_wait_clear_audio_urbs(
 		if (!alive)
 			break;
 		set_current_state(TASK_UNINTERRUPTIBLE);
-		schedule_timeout(1);
+		schedule_min_hrtimeout();
 	} while (--timeout > 0);
 	if (alive)
 		dev_err(line6pcm->line6->ifcdev,
