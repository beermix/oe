Author: Daniel Baumann <mail@daniel-baumann.ch>
Author: Lukas Schwaighofer <lukas@schwaighofer.name>
Description: Link against gnu-efi from Debian
 * Remove automatic update of the included gnu-efi using git submodules.
 * Adjust EFIINC, LIBDIR and LIBEFI variables in mk/efi.mk to point to the
   files installed by Debian's gnu-efi package.
   - The LIBDIR path depends on the build hosts' architecture, so the
     DEB_HOST_ARCH variable needs to be exported to determine the correct
     paths.
 * Use the jmp_buf declaration from gnu-efi. Patch for this part taken from:
   http://www.syslinux.org/archives/2017-June/025820.html
Forwarded: not-needed

--- a/efi/clean-gnu-efi.sh
+++ b/efi/clean-gnu-efi.sh
@@ -21,11 +21,6 @@
 ARCH="$1"
 objdir=$(readlink -f "$2")
 
-(
-	cd ../..
-	git submodule update --init
-)
-
 if [ -d "$objdir/gnu-efi" ];then
 	cd "$objdir/gnu-efi"
 	EFIDIR="$(readlink -f "$objdir/../gnu-efi/gnu-efi-3.0")"
--- a/mk/efi.mk
+++ b/mk/efi.mk
@@ -8,8 +8,15 @@
 # gnuefi sets up architecture specifics in ia32 or x86_64 sub directories
 # set up the LIBDIR and EFIINC for building for the appropriate architecture
 GCCOPT := $(call gcc_ok,-fno-stack-protector,)
-EFIINC = $(objdir)/include/efi
-LIBDIR  = $(objdir)/lib
+EFIINC = /usr/include/efi
+LIBDIR  = /usr/lib
+ifeq ($(DEB_HOST_ARCH)/$(ARCH),amd64/i386)
+	LIBDIR  = /usr/lib32
+endif
+ifeq ($(DEB_HOST_ARCH)/$(ARCH),i386/x86_64)
+	LIBDIR  = /usr/lib64
+endif
+
 
 ifeq ($(ARCH),i386)
 	ARCHOPT = -m32 -march=i386
@@ -44,7 +51,7 @@
 	     -nostdinc -iwithprefix include \
 	     -I$(com32)/libutil/include -I$(com32)/include -I$(com32)/include/sys $(GPLINCLUDE)
 
-LIBEFI = $(objdir)/lib/libefi.a
+LIBEFI = $(LIBDIR)/libefi.a
 
 $(LIBEFI):
 	@echo Building gnu-efi for $(EFI_SUBARCH)
--- a/efi/main.c
+++ b/efi/main.c
@@ -10,7 +10,6 @@
 #include <syslinux/firmware.h>
 #include <syslinux/linux.h>
 #include <sys/ansi.h>
-#include <setjmp.h>
 
 #include "efi.h"
 #include "fio.h"
@@ -30,7 +29,7 @@
 __export uint8_t KbdMap[256];
 char aux_seg[256];
 
-static jmp_buf load_error_buf;
+static jmp_buf *load_error_buf;
 
 static inline EFI_STATUS
 efi_close_protocol(EFI_HANDLE handle, EFI_GUID *guid, EFI_HANDLE agent,
