diff --git a/base/allocator/BUILD.gn b/base/allocator/BUILD.gn
index 3aa14cd32e..d51e7c85b5 100644
--- a/base/allocator/BUILD.gn
+++ b/base/allocator/BUILD.gn
@@ -45,7 +45,7 @@ config("tcmalloc_flags") {
       "-Wno-unused-function",
 
       # tcmalloc uses COMPILE_ASSERT without static_assert but with typedefs.
-      "-Wno-unused-local-typedefs",
+      # "-Wno-unused-local-typedefs",
 
       # for magic2_ in debugallocation.cc (only built in Debug builds) typedefs.
       "-Wno-unused-private-field",
diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
old mode 100644
new mode 100755
index a894a3997d..236a8ad250
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -640,9 +640,16 @@ config("compiler_cpu_abi") {
     if (current_cpu == "x64") {
       cflags += [
         "-m64",
-        "-march=x86-64",
+        "-march=westmere",
+        "-mtune=westmere",
+        "-fdiagnostics-color=always",
+        "-fno-delete-null-pointer-checks",
+      ]
+      ldflags += [
+        "-m64",
+        "-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now",
+        "-s",
       ]
-      ldflags += [ "-m64" ]
     } else if (current_cpu == "x86") {
       cflags += [ "-m32" ]
       ldflags += [ "-m32" ]
@@ -1261,7 +1268,7 @@ config("default_warnings") {
 
       # -Wunused-local-typedefs is broken in gcc,
       # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63872
-      cflags += [ "-Wno-unused-local-typedefs" ]
+      # cflags += [ "-Wno-unused-local-typedefs" ]
 
       # Don't warn about "maybe" uninitialized. Clang doesn't include this
       # in -Wall but gcc does, and it gives false positives.
diff --git a/build/config/linux/atk/BUILD.gn b/build/config/linux/atk/BUILD.gn
index 16a3f8c51a..b9d9ae3753 100644
--- a/build/config/linux/atk/BUILD.gn
+++ b/build/config/linux/atk/BUILD.gn
@@ -40,7 +40,7 @@ config("atk") {
 
   cflags = [
     # glib uses the pre-c++11 typedef-as-static_assert hack.
-    "-Wno-unused-local-typedef",
+    # "-Wno-unused-local-typedef",
 
     # G_DEFINE_TYPE automatically generates a *get_instance_private
     # inline function after glib 2.37. That's unused. Prevent to
