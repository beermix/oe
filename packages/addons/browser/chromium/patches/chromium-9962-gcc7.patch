--- chromium-62.0.3192.0/third_party/angle/src/compiler/translator/ValidateLimitations.cpp.gcc7	2017-08-22 21:06:34.000000000 +0200
+++ chromium-62.0.3192.0/third_party/angle/src/compiler/translator/ValidateLimitations.cpp	2017-09-08 22:31:37.405728676 +0200
@@ -82,7 +82,6 @@
   private:
     void error(TSourceLoc loc, const char *reason, const char *token);
 
-    bool withinLoopBody() const;
     bool isLoopIndex(TIntermSymbol *symbol);
     bool validateLoopType(TIntermLoop *node);
 
@@ -164,11 +163,6 @@
     mDiagnostics->error(loc, reason, token);
 }
 
-bool ValidateLimitationsTraverser::withinLoopBody() const
-{
-    return !mLoopSymbolIds.empty();
-}
-
 bool ValidateLimitationsTraverser::isLoopIndex(TIntermSymbol *symbol)
 {
     return std::find(mLoopSymbolIds.begin(), mLoopSymbolIds.end(), symbol->getId()) !=
--- chromium-62.0.3192.0/third_party/glslang-angle/src/SPIRV/GlslangToSpv.cpp.gcc7	2017-08-22 21:06:41.000000000 +0200
+++ chromium-62.0.3192.0/third_party/glslang-angle/src/SPIRV/GlslangToSpv.cpp	2017-09-08 22:38:00.736706539 +0200
@@ -171,7 +171,9 @@
     bool isTrivialLeaf(const glslang::TIntermTyped* node);
     bool isTrivial(const glslang::TIntermTyped* node);
     spv::Id createShortCircuit(glslang::TOperator, glslang::TIntermTyped& left, glslang::TIntermTyped& right);
+#ifdef AMD_EXTENSIONS
     spv::Id getExtBuiltins(const char* name);
+#endif
 
     spv::Function* shaderEntry;
     spv::Function* currentFunction;
@@ -5043,6 +5045,7 @@
     return builder.createOp(spv::OpPhi, boolTypeId, phiOperands);
 }
 
+#ifdef AMD_EXTENSIONS
 // Return type Id of the imported set of extended instructions corresponds to the name.
 // Import this set if it has not been imported yet.
 spv::Id TGlslangToSpvTraverser::getExtBuiltins(const char* name)
@@ -5056,6 +5059,7 @@
         return extBuiltins;
     }
 }
+#endif
 
 };  // end anonymous namespace
 
--- chromium-62.0.3192.0/third_party/libyuv/source/row_any.cc.gcc7	2017-08-22 21:06:36.000000000 +0200
+++ chromium-62.0.3192.0/third_party/libyuv/source/row_any.cc	2017-09-08 22:54:05.079961882 +0200
@@ -721,7 +721,7 @@
 #define ANY11P16(NAMEANY, ANY_SIMD, T, SBPP, BPP, MASK)                      \
   void NAMEANY(const uint16* src_ptr, uint16* dst_ptr, T param, int width) { \
     SIMD_ALIGNED(uint16 temp[16 * 2]);                                       \
-    memset(temp, 0, 32); /* for msan */                                      \
+    memset(temp, 0, 32*sizeof(uint16)); /* for msan */                                      \
     int r = width & MASK;                                                    \
     int n = width & ~MASK;                                                   \
     if (n > 0) {                                                             \
--- chromium-62.0.3192.0/third_party/webrtc/modules/video_coding/rtt_filter.cc.gcc7	2017-08-22 21:06:39.000000000 +0200
+++ chromium-62.0.3192.0/third_party/webrtc/modules/video_coding/rtt_filter.cc	2017-09-08 23:06:06.529620651 +0200
@@ -49,8 +49,8 @@
   _filtFactCount = 1;
   _jumpCount = 0;
   _driftCount = 0;
-  memset(_jumpBuf, 0, kMaxDriftJumpCount);
-  memset(_driftBuf, 0, kMaxDriftJumpCount);
+  memset(_jumpBuf, 0, kMaxDriftJumpCount * sizeof(int64_t));
+  memset(_driftBuf, 0, kMaxDriftJumpCount * sizeof(int64_t));
 }
 
 void VCMRttFilter::Update(int64_t rttMs) {
--- chromium-62.0.3192.0/third_party/webrtc/modules/video_processing/video_denoiser.cc.gcc7	2017-08-22 21:06:40.000000000 +0200
+++ chromium-62.0.3192.0/third_party/webrtc/modules/video_processing/video_denoiser.cc	2017-09-08 23:17:25.755051027 +0200
@@ -183,7 +183,7 @@
       // artifacts.
       if (mb_filter_decision_[mb_index] != FILTER_BLOCK ||
           IsTrailingBlock(moving_edge_, mb_row, mb_col) ||
-          (x_density_[mb_col] * y_density_[mb_row] &&
+          ((x_density_[mb_col] * y_density_[mb_row] != 0) &&
            moving_object_[mb_row * mb_cols_ + mb_col])) {
         // Copy y source.
         filter_->CopyMem16x16(mb_src, stride_src, mb_dst, stride_dst);
--- chromium-62.0.3192.0/v8/src/compiler/store-store-elimination.cc.gcc7	2017-08-22 21:06:45.000000000 +0200
+++ chromium-62.0.3192.0/v8/src/compiler/store-store-elimination.cc	2017-09-08 23:46:06.624665417 +0200
@@ -79,7 +79,6 @@
   StoreOffset offset_;
 
   bool operator==(const UnobservableStore) const;
-  bool operator!=(const UnobservableStore) const;
   bool operator<(const UnobservableStore) const;
 };
 
@@ -140,7 +139,6 @@
   void Visit(Node* node);
 
  private:
-  static bool IsEffectful(Node* node);
   void VisitEffectfulNode(Node* node);
   UnobservablesSet RecomputeUseIntersection(Node* node);
   UnobservablesSet RecomputeSet(Node* node, UnobservablesSet uses);
@@ -251,10 +249,6 @@
   }
 }
 
-bool RedundantStoreFinder::IsEffectful(Node* node) {
-  return (node->op()->EffectInputCount() >= 1);
-}
-
 // Recompute unobservables-set for a node. Will also mark superfluous nodes
 // as to be removed.
 
@@ -552,10 +546,6 @@
   return (id_ == other.id_) && (offset_ == other.offset_);
 }
 
-bool UnobservableStore::operator!=(const UnobservableStore other) const {
-  return !(*this == other);
-}
-
 bool UnobservableStore::operator<(const UnobservableStore other) const {
   return (id_ < other.id_) || (id_ == other.id_ && offset_ < other.offset_);
 }
--- chromium-62.0.3192.0/extensions/common/permissions/settings_override_permission.cc.gcc7	2017-08-22 21:04:44.000000000 +0200
+++ chromium-62.0.3192.0/extensions/common/permissions/settings_override_permission.cc	2017-09-09 00:43:40.708568094 +0200
@@ -43,7 +43,9 @@
 
 bool SettingsOverrideAPIPermission::Equal(const APIPermission* rhs) const {
   if (this != rhs)
+  {
     CHECK_EQ(info(), rhs->info());
+  }
   return true;
 }
 
--- chromium-62.0.3192.0/third_party/cacheinvalidation/src/google/cacheinvalidation/include/types.h.gcc7	2017-08-22 21:05:01.000000000 +0200
+++ chromium-62.0.3192.0/third_party/cacheinvalidation/src/google/cacheinvalidation/include/types.h	2017-09-09 00:47:09.190945226 +0200
@@ -174,7 +174,7 @@
  */
 class ObjectId {
  public:
-  ObjectId() : is_initialized_(false) {}
+  ObjectId() : is_initialized_(false), source_(0) {}
 
   /* Creates an object id for the given source and name (the name is copied). */
   ObjectId(int source, const string& name)
--- chromium-62.0.3192.0/extensions/common/permissions/api_permission.cc.gcc7	2017-08-22 21:04:44.000000000 +0200
+++ chromium-62.0.3192.0/extensions/common/permissions/api_permission.cc	2017-09-09 01:26:10.983202025 +0200
@@ -36,7 +36,9 @@
 
   bool Equal(const APIPermission* rhs) const override {
     if (this != rhs)
+    {
       CHECK_EQ(info(), rhs->info());
+    }
     return true;
   }
 
--- chromium-62.0.3192.0/content/browser/frame_host/navigation_controller_impl.cc.gcc7	2017-08-22 21:04:43.000000000 +0200
+++ chromium-62.0.3192.0/content/browser/frame_host/navigation_controller_impl.cc	2017-09-09 01:53:03.860647419 +0200
@@ -980,7 +980,9 @@
   // TODO(creis): This check won't pass for subframes until we create entries
   // for subframe navigations.
   if (!rfh->GetParent())
+  {
     CHECK_EQ(active_entry->site_instance(), rfh->GetSiteInstance());
+  }
 
   // Remember the bindings the renderer process has at this point, so that
   // we do not grant this entry additional bindings if we come back to it.
--- chromium-62.0.3192.0/content/browser/frame_host/navigator_impl.cc.gcc7	2017-08-22 21:04:43.000000000 +0200
+++ chromium-62.0.3192.0/content/browser/frame_host/navigator_impl.cc	2017-09-09 02:05:15.758922091 +0200
@@ -404,7 +404,9 @@
 
     // Make sure no code called via RFHM::Navigate clears the pending entry.
     if (is_pending_entry)
+    {
       CHECK_EQ(controller_->GetPendingEntry(), &entry);
+    }
 
     // For security, we should never send non-Web-UI URLs to a Web UI renderer.
     // Double check that here.
@@ -470,7 +472,9 @@
 
   // Make sure no code called via RFH::Navigate clears the pending entry.
   if (is_pending_entry)
+  {
     CHECK_EQ(controller_->GetPendingEntry(), &entry);
+  }
 
   if (controller_->GetPendingEntryIndex() == -1 &&
       dest_url.SchemeIs(url::kJavaScriptScheme)) {
--- chromium-62.0.3192.0/content/browser/frame_host/render_frame_host_manager.cc.gcc7	2017-08-22 21:04:43.000000000 +0200
+++ chromium-62.0.3192.0/content/browser/frame_host/render_frame_host_manager.cc	2017-09-09 02:07:40.371353881 +0200
@@ -1198,7 +1198,9 @@
   // SiteInstance and the same frame, breaking lookup of RenderFrameHosts by
   // SiteInstance.
   if (force_swap)
+  {
     CHECK_NE(new_instance, current_instance);
+  }
 
   if (new_instance == current_instance) {
     // If we're navigating to the same site instance, we won't need to use any
--- chromium-62.0.3192.0/third_party/WebKit/Source/platform/wtf/text/TextCodec.h.gcc7	2017-08-22 21:05:01.000000000 +0200
+++ chromium-62.0.3192.0/third_party/WebKit/Source/platform/wtf/text/TextCodec.h	2017-09-09 03:00:28.743370090 +0200
@@ -73,7 +73,7 @@
 
 static_assert(!kDoNotFlush, "DoNotFlush should be falsy");
 static_assert(kFetchEOF, "FetchEOF should be truthy");
-static_assert(kDataEOF, "DataEOF should be truthy");
+static_assert(kDataEOF != 0, "DataEOF should be truthy");
 
 class WTF_EXPORT TextCodec {
   WTF_MAKE_NONCOPYABLE(TextCodec);
--- chromium-62.0.3192.0/media/cast/receiver/video_decoder.cc.gcc7	2017-08-22 21:04:45.000000000 +0200
+++ chromium-62.0.3192.0/media/cast/receiver/video_decoder.cc	2017-09-09 05:02:17.907818439 +0200
@@ -133,7 +133,9 @@
  private:
   ~Vp8Impl() final {
     if (ImplBase::operational_status_ == STATUS_INITIALIZED)
+    {
       CHECK_EQ(VPX_CODEC_OK, vpx_codec_destroy(&context_));
+    }
   }
 
   scoped_refptr<VideoFrame> Decode(uint8_t* data, int len) final {
--- chromium-62.0.3192.0/chrome/browser/extensions/extension_service.cc.gcc7	2017-08-22 21:04:39.000000000 +0200
+++ chromium-62.0.3192.0/chrome/browser/extensions/extension_service.cc	2017-09-09 06:33:31.998535383 +0200
@@ -1344,7 +1344,9 @@
     // Other than for unpacked extensions, CrxInstaller should have guaranteed
     // that we aren't downgrading.
     if (!Manifest::IsUnpackedLocation(extension->location()))
+    {
       CHECK_GE(version_compare_result, 0);
+    }
   }
 
   // If the extension was disabled for a reload, we will enable it.
--- chromium-62.0.3192.0/third_party/WebKit/Source/core/frame/LocalFrameView.cpp.gcc7	2017-08-22 21:05:00.000000000 +0200
+++ chromium-62.0.3192.0/third_party/WebKit/Source/core/frame/LocalFrameView.cpp	2017-09-09 10:40:20.353155618 +0200
@@ -3856,7 +3856,9 @@
   // TODO(crbug.com/729196): Trace why LocalFrameView::DetachFromLayout crashes.
   CHECK(!is_attached_);
   if (frame_->GetDocument())
+  {
     CHECK_NE(Lifecycle().GetState(), DocumentLifecycle::kStopping);
+  }
   is_attached_ = true;
   parent_ = ParentFrameView();
   if (!parent_) {
--- chromium-62.0.3192.0/third_party/WebKit/Source/core/html/parser/HTMLTreeBuilder.cpp.gcc7	2017-08-22 21:05:00.000000000 +0200
+++ chromium-62.0.3192.0/third_party/WebKit/Source/core/html/parser/HTMLTreeBuilder.cpp	2017-09-09 11:00:10.392998875 +0200
@@ -937,7 +937,7 @@
   }
   if (token->GetName() == colTag) {
     ProcessFakeStartTag(colgroupTag);
-    DCHECK(kInColumnGroupMode);
+    DCHECK(kInColumnGroupMode != 0);
     ProcessStartTag(token);
     return;
   }
--- chromium-62.0.3202.9/third_party/skia/src/ports/SkTLS_pthread.cpp.gcc7	2017-09-11 04:39:22.554714295 +0200
+++ chromium-62.0.3202.9/third_party/skia/src/ports/SkTLS_pthread.cpp	2017-09-11 04:39:45.663296012 +0200
@@ -16,7 +16,7 @@
     // should we use forceCreateTheSlot to potentially just return nullptr if
     // we've never been called with forceCreateTheSlot==true ?
     static SkOnce once;
-    once(pthread_key_create, &gSkTLSKey, SkTLS::Destructor);
+    once(&pthread_key_create, &gSkTLSKey, SkTLS::Destructor);
     return pthread_getspecific(gSkTLSKey);
 }
 
--- chromium-62.0.3202.9/third_party/crc32c/BUILD.gn.gcc7-1	2017-09-06 21:06:53.000000000 +0200
+++ chromium-62.0.3202.9/third_party/crc32c/BUILD.gn	2017-09-13 18:25:33.647016467 +0200
@@ -39,6 +39,12 @@
   }
 }
 
+config("crc32c_pubconfig") {
+  if (!is_win) {
+    cflags_cc = [ "-std=c++17" ]
+  }
+}
+
 source_set("crc32c") {
   sources = [
     "config/crc32c/crc32c_config.h",
@@ -54,6 +60,7 @@
   ]
 
   configs += [ ":crc32c_config" ]
+  all_dependent_configs = [ ":crc32c_pubconfig" ]
   deps = [
     ":crc32c_arm64",
     ":crc32c_sse42",