diff -up chromium-63.0.3239.84/gpu/ipc/common/mailbox_struct_traits.h.gcc5-r3 chromium-63.0.3239.84/gpu/ipc/common/mailbox_struct_traits.h
--- chromium-63.0.3239.84/gpu/ipc/common/mailbox_struct_traits.h.gcc5-r3	2017-12-06 15:05:28.000000000 -0500
+++ chromium-63.0.3239.84/gpu/ipc/common/mailbox_struct_traits.h	2017-12-07 11:32:15.416636125 -0500
@@ -15,7 +15,7 @@ namespace mojo {
 template <>
 struct StructTraits<gpu::mojom::MailboxDataView, gpu::Mailbox> {
   static base::span<const int8_t> name(const gpu::Mailbox& mailbox) {
-    return mailbox.name;
+    return base::make_span(mailbox.name);
   }
   static bool Read(gpu::mojom::MailboxDataView data, gpu::Mailbox* out);
 };
diff -up chromium-63.0.3239.84/services/viz/public/cpp/compositing/filter_operation_struct_traits.h.gcc5-r3 chromium-63.0.3239.84/services/viz/public/cpp/compositing/filter_operation_struct_traits.h
--- chromium-63.0.3239.84/services/viz/public/cpp/compositing/filter_operation_struct_traits.h.gcc5-r3	2017-12-06 15:05:31.000000000 -0500
+++ chromium-63.0.3239.84/services/viz/public/cpp/compositing/filter_operation_struct_traits.h	2017-12-07 11:32:15.422636011 -0500
@@ -134,7 +134,7 @@ struct StructTraits<viz::mojom::FilterOp
   static base::span<const float> matrix(const cc::FilterOperation& operation) {
     if (operation.type() != cc::FilterOperation::COLOR_MATRIX)
       return base::span<const float>();
-    return operation.matrix();
+    return base::make_span(operation.matrix());
   }
 
   static base::span<const gfx::Rect> shape(
diff -up chromium-63.0.3239.84/services/viz/public/cpp/compositing/quads_struct_traits.h.gcc5-r3 chromium-63.0.3239.84/services/viz/public/cpp/compositing/quads_struct_traits.h
--- chromium-63.0.3239.84/services/viz/public/cpp/compositing/quads_struct_traits.h.gcc5-r3	2017-12-07 11:32:15.429635877 -0500
+++ chromium-63.0.3239.84/services/viz/public/cpp/compositing/quads_struct_traits.h	2017-12-07 11:34:00.081601880 -0500
@@ -309,7 +309,7 @@ struct StructTraits<viz::mojom::TextureQ
   static base::span<const float> vertex_opacity(const viz::DrawQuad& input) {
     const viz::TextureDrawQuad* quad =
         viz::TextureDrawQuad::MaterialCast(&input);
-    return quad->vertex_opacity;
+    return base::make_span(quad->vertex_opacity);
   }
 
   static bool y_flipped(const viz::DrawQuad& input) {
