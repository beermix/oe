import("//build/toolchain/gcc_toolchain.gni")
import("//build/config/sysroot.gni")

gcc_toolchain("target") {
  toolchainprefix = "x86_64-libreelec-linux-gnu-"
  cc = "${toolchainprefix}clang"
  cxx = "${toolchainprefix}clang++"
  readelf = "${toolchainprefix}readelf"
  nm = "${toolchainprefix}nm"
  ar = "${toolchainprefix}ar"
  ld = cxx

  extra_cflags = getenv("CFLAGS")
  extra_cppflags = getenv("CPPFLAGS")
  extra_cxxflags = getenv("CXXFLAGS")
  extra_ldflags = getenv("LDFLAGS")

#  toolchain_args = {
#    cc_wrapper = ""
#    current_cpu = target_cpu
#    current_os = target_os
#    is_clang = is_clang
#    use_sysroot = use_sysroot
#  }
}

gcc_toolchain("x64_host") {
  toolchainprefix = "host-"
  cc = "${toolchainprefix}gcc"
  cxx = "${toolchainprefix}g++"

  readelf = "readelf"
  nm = "nm"
  ar = "ar"
  ld = cxx

 # Output linker map files for binary size analysis.
 enable_linker_map = true

 toolchain_args = {
   current_cpu = "x64"
   current_os = "linux"
   is_clang = false
  }
}

