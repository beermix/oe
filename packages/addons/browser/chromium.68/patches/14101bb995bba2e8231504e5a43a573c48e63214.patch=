diff --git a/chromium-68.0.3440.106-boolfix.patch b/chromium-68.0.3440.106-boolfix.patch
new file mode 100644
index 0000000..ed22aa9
--- /dev/null
+++ b/chromium-68.0.3440.106-boolfix.patch
@@ -0,0 +1,36 @@
+diff -up chromium-68.0.3440.106/mojo/public/cpp/bindings/associated_interface_ptr_info.h.boolfix chromium-68.0.3440.106/mojo/public/cpp/bindings/associated_interface_ptr_info.h
+--- chromium-68.0.3440.106/mojo/public/cpp/bindings/associated_interface_ptr_info.h.boolfix	2018-08-09 03:21:23.066802340 -0400
++++ chromium-68.0.3440.106/mojo/public/cpp/bindings/associated_interface_ptr_info.h	2018-08-09 03:25:10.638595925 -0400
+@@ -45,7 +45,7 @@ class AssociatedInterfacePtrInfo {
+ 
+   bool is_valid() const { return handle_.is_valid(); }
+ 
+-  explicit operator bool() const { return handle_.is_valid(); }
++  explicit operator bool() const { return (bool) handle_.is_valid(); }
+ 
+   ScopedInterfaceEndpointHandle PassHandle() {
+     return std::move(handle_);
+diff -up chromium-68.0.3440.106/mojo/public/cpp/bindings/associated_interface_request.h.boolfix chromium-68.0.3440.106/mojo/public/cpp/bindings/associated_interface_request.h
+--- chromium-68.0.3440.106/mojo/public/cpp/bindings/associated_interface_request.h.boolfix	2018-08-09 03:21:23.067802318 -0400
++++ chromium-68.0.3440.106/mojo/public/cpp/bindings/associated_interface_request.h	2018-08-09 03:24:44.935229067 -0400
+@@ -50,7 +50,7 @@ class AssociatedInterfaceRequest {
+   // handle.
+   bool is_pending() const { return handle_.is_valid(); }
+ 
+-  explicit operator bool() const { return handle_.is_valid(); }
++  explicit operator bool() const { return (bool) handle_.is_valid(); }
+ 
+   ScopedInterfaceEndpointHandle PassHandle() { return std::move(handle_); }
+ 
+diff -up chromium-68.0.3440.106/mojo/public/cpp/bindings/interface_request.h.boolfix chromium-68.0.3440.106/mojo/public/cpp/bindings/interface_request.h
+--- chromium-68.0.3440.106/mojo/public/cpp/bindings/interface_request.h.boolfix	2018-08-08 15:11:05.000000000 -0400
++++ chromium-68.0.3440.106/mojo/public/cpp/bindings/interface_request.h	2018-08-09 03:21:23.067802318 -0400
+@@ -54,7 +54,7 @@ class InterfaceRequest {
+   // Indicates whether the request currently contains a valid message pipe.
+   bool is_pending() const { return handle_.is_valid(); }
+ 
+-  explicit operator bool() const { return handle_.is_valid(); }
++  explicit operator bool() const { return (bool) handle_.is_valid(); }
+ 
+   // Removes the message pipe from the request and returns it.
+   ScopedMessagePipeHandle PassMessagePipe() { return std::move(handle_); }
diff --git a/chromium-68.0.3440.106-fedora-user-agent.patch b/chromium-68.0.3440.106-fedora-user-agent.patch
new file mode 100644
index 0000000..6c4cb82
--- /dev/null
+++ b/chromium-68.0.3440.106-fedora-user-agent.patch
@@ -0,0 +1,12 @@
+diff -up chromium-68.0.3440.106/content/common/user_agent.cc.fedora-user-agent chromium-68.0.3440.106/content/common/user_agent.cc
+--- chromium-68.0.3440.106/content/common/user_agent.cc.fedora-user-agent	2018-08-09 03:27:45.965769824 -0400
++++ chromium-68.0.3440.106/content/common/user_agent.cc	2018-08-09 03:28:34.001586650 -0400
+@@ -135,7 +135,7 @@ std::string getUserAgentPlatform() {
+ #elif defined(OS_MACOSX)
+       "Macintosh; ";
+ #elif defined(USE_X11) || defined(USE_OZONE)
+-      "X11; ";           // strange, but that's what Firefox uses
++      "X11; Fedora; ";           // strange, but that's what Firefox uses
+ #elif defined(OS_ANDROID)
+       "Linux; ";
+ #elif defined(OS_POSIX) || defined(OS_FUCHSIA)
diff --git a/chromium-68.0.3440.106-fix-build-networking_private.patch b/chromium-68.0.3440.106-fix-build-networking_private.patch
new file mode 100644
index 0000000..787d3db
--- /dev/null
+++ b/chromium-68.0.3440.106-fix-build-networking_private.patch
@@ -0,0 +1,12 @@
+diff -up chromium-68.0.3440.106/extensions/browser/api/networking_private/BUILD.gn.fixb chromium-68.0.3440.106/extensions/browser/api/networking_private/BUILD.gn
+--- chromium-68.0.3440.106/extensions/browser/api/networking_private/BUILD.gn.fixb	2018-08-09 03:56:36.091622243 -0400
++++ chromium-68.0.3440.106/extensions/browser/api/networking_private/BUILD.gn	2018-08-09 03:57:03.047001659 -0400
+@@ -61,7 +61,7 @@ source_set("networking_private") {
+               ]
+     deps += [ "//chromeos" ]
+   } else {
+-    not_needed(default_sources)
++    not_needed([ "default_sources" ])
+     sources = [
+       "networking_private_stubs.cc",
+     ]
diff --git a/chromium-68.0.3440.106-master-prefs-path.patch b/chromium-68.0.3440.106-master-prefs-path.patch
new file mode 100644
index 0000000..9304adf
--- /dev/null
+++ b/chromium-68.0.3440.106-master-prefs-path.patch
@@ -0,0 +1,15 @@
+diff -up chromium-68.0.3440.106/chrome/browser/first_run/first_run_internal_linux.cc.etc chromium-68.0.3440.106/chrome/browser/first_run/first_run_internal_linux.cc
+--- chromium-68.0.3440.106/chrome/browser/first_run/first_run_internal_linux.cc.etc	2018-08-09 03:12:33.444705798 -0400
++++ chromium-68.0.3440.106/chrome/browser/first_run/first_run_internal_linux.cc	2018-08-09 03:14:46.275754910 -0400
+@@ -19,9 +19,9 @@ bool IsOrganicFirstRun() {
+ 
+ base::FilePath MasterPrefsPath() {
+   // The standard location of the master prefs is next to the chrome binary.
++  // ...but we patch it to use /etc/chromium
+   base::FilePath master_prefs;
+-  if (!base::PathService::Get(base::DIR_EXE, &master_prefs))
+-    return base::FilePath();
++  master_prefs = base::FilePath("/etc/chromium");
+   return master_prefs.AppendASCII(installer::kDefaultMasterPrefs);
+ }
+ 
diff --git a/chromium-68.0.3440.106-notest.patch b/chromium-68.0.3440.106-notest.patch
new file mode 100644
index 0000000..c20a40e
--- /dev/null
+++ b/chromium-68.0.3440.106-notest.patch
@@ -0,0 +1,11 @@
+diff -up chromium-68.0.3440.106/chrome/test/data/webui_test_resources.grd.notest chromium-68.0.3440.106/chrome/test/data/webui_test_resources.grd
+--- chromium-68.0.3440.106/chrome/test/data/webui_test_resources.grd.notest	2018-08-09 03:08:33.953029806 -0400
++++ chromium-68.0.3440.106/chrome/test/data/webui_test_resources.grd	2018-08-09 03:09:40.264567818 -0400
+@@ -8,7 +8,6 @@
+   </outputs>
+   <release seq="1">
+     <includes>
+-      <include name="IDR_WEBUI_TEST_I18N_PROCESS_CSS_TEST" file="webui/i18n_process_css_test.html" flattenhtml="true" allowexternalscript="true" type="BINDATA" />
+       <include name="IDR_WEB_UI_TEST_MOJO_JS" file="${root_gen_dir}/chrome/test/data/webui/web_ui_test.mojom.js" use_base_dir="false" type="BINDATA"/>
+     </includes>
+   </release>
diff --git a/chromium-68.0.3440.84-cors-string.patch b/chromium-68.0.3440.84-cors-string.patch
new file mode 100644
index 0000000..b724cd4
--- /dev/null
+++ b/chromium-68.0.3440.84-cors-string.patch
@@ -0,0 +1,51 @@
+From 01d891fa0790950549c7bedb34edf869827a372e Mon Sep 17 00:00:00 2001
+From: Jose Dapena Paz <jose.dapena@lge.com>
+Date: Thu, 31 May 2018 17:03:37 +0000
+Subject: [PATCH] CORS legacy: add missing string include
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+The cors_legacy.h file includes declarations using std::string, but
+it is not declared due to missing #include <string>.
+
+Also drop unneeded declarations in .cpp file.
+
+Change-Id: I00df799f84a6c3530c2f12f1e52d24c7d9bd6bfd
+Reviewed-on: https://chromium-review.googlesource.com/1080707
+Reviewed-by: Tom Sepez <tsepez@chromium.org>
+Commit-Queue: Jos√© Dapena Paz <jose.dapena@lge.com>
+Cr-Commit-Position: refs/heads/master@{#563282}
+---
+ services/network/public/cpp/cors/cors_legacy.cc | 2 --
+ services/network/public/cpp/cors/cors_legacy.h  | 1 +
+ 2 files changed, 1 insertion(+), 2 deletions(-)
+
+diff --git a/services/network/public/cpp/cors/cors_legacy.cc b/services/network/public/cpp/cors/cors_legacy.cc
+index 8f32ac3be64e..f01af63619b5 100644
+--- a/services/network/public/cpp/cors/cors_legacy.cc
++++ b/services/network/public/cpp/cors/cors_legacy.cc
+@@ -5,8 +5,6 @@
+ #include "services/network/public/cpp/cors/cors_legacy.h"
+ 
+ #include <algorithm>
+-#include <string>
+-#include <vector>
+ 
+ #include "url/gurl.h"
+ #include "url/url_util.h"
+diff --git a/services/network/public/cpp/cors/cors_legacy.h b/services/network/public/cpp/cors/cors_legacy.h
+index d2cdf026ca3a..dc9295a92c47 100644
+--- a/services/network/public/cpp/cors/cors_legacy.h
++++ b/services/network/public/cpp/cors/cors_legacy.h
+@@ -5,6 +5,7 @@
+ #ifndef SERVICES_NETWORK_PUBLIC_CPP_CORS_CORS_LEGACY_H_
+ #define SERVICES_NETWORK_PUBLIC_CPP_CORS_CORS_LEGACY_H_
+ 
++#include <string>
+ #include <vector>
+ 
+ #include "base/component_export.h"
+-- 
+2.17.1
+
diff --git a/chromium-68.0.3440.84-libjpeg.patch b/chromium-68.0.3440.84-libjpeg.patch
new file mode 100644
index 0000000..5354281
--- /dev/null
+++ b/chromium-68.0.3440.84-libjpeg.patch
@@ -0,0 +1,62 @@
+From c6b0194f7a4d9f494b2d51f46d2c332e2e5f4050 Mon Sep 17 00:00:00 2001
+From: Daniel Bratell <bratell@opera.com>
+Date: Mon, 28 May 2018 13:13:01 +0000
+Subject: [PATCH] Use the same libjpeg in all of blink/platform
+
+The normal libjpeg renames some symbols with macros so if its
+headers are included together with libjpeg-turbo's headers
+in the same translation unit, there will be an inconsistent
+renaming of libjpeg symbols. This happened in some extreme
+jumbo configuration and resulted in confising linker errors.
+
+This patch changes an include so that jpeglib.h becomes included
+the same way everywhere.
+
+Change-Id: I7f122d0919d58371bb40dc0097a766b857b9815e
+Reviewed-on: https://chromium-review.googlesource.com/1073423
+Reviewed-by: Kentaro Hara <haraken@chromium.org>
+Commit-Queue: Daniel Bratell <bratell@opera.com>
+Cr-Commit-Position: refs/heads/master@{#562243}
+---
+ .../renderer/platform/image-encoders/image_encoder.cc | 11 +++++++++++
+ .../renderer/platform/image-encoders/image_encoder.h  |  2 --
+ 2 files changed, 11 insertions(+), 2 deletions(-)
+
+diff --git a/third_party/blink/renderer/platform/image-encoders/image_encoder.cc b/third_party/blink/renderer/platform/image-encoders/image_encoder.cc
+index 0c7f14c7c0e4..4c450f5d6783 100644
+--- a/third_party/blink/renderer/platform/image-encoders/image_encoder.cc
++++ b/third_party/blink/renderer/platform/image-encoders/image_encoder.cc
+@@ -4,6 +4,17 @@
+ 
+ #include "third_party/blink/renderer/platform/image-encoders/image_encoder.h"
+ 
++#include "build/build_config.h"
++
++#if defined(OS_WIN)
++#include <basetsd.h>  // Included before jpeglib.h because of INT32 clash
++#endif                // OS_WIN
++#include <stdio.h>    // Needed by jpeglib.h
++
++#include "jpeglib.h"  // for JPEG_MAX_DIMENSION
++
++#include "third_party/libwebp/src/webp/encode.h"  // for WEBP_MAX_DIMENSION
++
+ namespace blink {
+ 
+ bool ImageEncoder::Encode(Vector<unsigned char>* dst,
+diff --git a/third_party/blink/renderer/platform/image-encoders/image_encoder.h b/third_party/blink/renderer/platform/image-encoders/image_encoder.h
+index 0d1460f34827..40306097d507 100644
+--- a/third_party/blink/renderer/platform/image-encoders/image_encoder.h
++++ b/third_party/blink/renderer/platform/image-encoders/image_encoder.h
+@@ -7,8 +7,6 @@
+ 
+ #include "third_party/blink/renderer/platform/platform_export.h"
+ #include "third_party/blink/renderer/platform/wtf/vector.h"
+-#include "third_party/libjpeg/jpeglib.h"          // for JPEG_MAX_DIMENSION
+-#include "third_party/libwebp/src/webp/encode.h"  // for WEBP_MAX_DIMENSION
+ #include "third_party/skia/include/core/SkStream.h"
+ #include "third_party/skia/include/encode/SkJpegEncoder.h"
+ #include "third_party/skia/include/encode/SkPngEncoder.h"
+-- 
+2.17.1
+
diff --git a/chromium-68.0.3440.84-libwebp-shim.patch b/chromium-68.0.3440.84-libwebp-shim.patch
new file mode 100644
index 0000000..cb387a4
--- /dev/null
+++ b/chromium-68.0.3440.84-libwebp-shim.patch
@@ -0,0 +1,43 @@
+diff --git a/build/linux/unbundle/libwebp.gn b/build/linux/unbundle/libwebp.gn
+index ab92adecf400..12574d87be58 100644
+--- a/build/linux/unbundle/libwebp.gn
++++ b/build/linux/unbundle/libwebp.gn
+@@ -2,12 +2,34 @@
+ # Use of this source code is governed by a BSD-style license that can be
+ # found in the LICENSE file.
+ 
++import("//build/config/linux/pkg_config.gni")
++import("//build/shim_headers.gni")
++
++pkg_config("system_libwebp") {
++  packages = [
++    "libwebp",
++    "libwebpdemux",
++    "libwebpmux",
++  ]
++}
++
++shim_headers("libwebp_shim") {
++  root_path = "src"
++  headers = [
++    "webp/decode.h",
++    "webp/demux.h",
++    "webp/encode.h",
++    "webp/mux.h",
++    "webp/mux_types.h",
++    "webp/types.h",
++  ]
++}
++
+ source_set("libwebp_webp") {
+-  libs = [
+-    "webp",
+-    "webpdemux",
+-    "webpmux",
++  deps = [
++    ":libwebp_shim",
+   ]
++  public_configs = [ ":system_libwebp" ]
+ }
+ 
+ group("libwebp") {
diff --git a/chromium-68.0.3440.84-move-unique-ptr.patch b/chromium-68.0.3440.84-move-unique-ptr.patch
new file mode 100644
index 0000000..2942a8f
--- /dev/null
+++ b/chromium-68.0.3440.84-move-unique-ptr.patch
@@ -0,0 +1,65 @@
+From 56cb5f7da1025f6db869e840ed34d3b98b9ab899 Mon Sep 17 00:00:00 2001
+From: Jose Dapena Paz <jose.dapena@lge.com>
+Date: Tue, 29 May 2018 16:04:14 +0000
+Subject: [PATCH] GCC: do not std::move unique ptr of forward declared UrlIndex
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+GCC fails to resolve the size of UrlIndex, needed
+for moving a std::unique_ptr of UrlIndex. This is because
+moved is done on a forward-declared UrlIndex.
+
+To avoid the problem, move the call to std::move to the .cc
+file so the full declaration is available.
+
+Build error:
+../../buildtools/third_party/libc++/trunk/include/memory: In instantiation of ‚Äòvoid std::__1::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = bookmarks::UrlIndex]‚Äô:
+../../buildtools/third_party/libc++/trunk/include/memory:2634:22:   required from ‚Äòvoid std::__1::unique_ptr<_Tp, _Dp>::reset(std::__1::unique_ptr<_Tp, _Dp>::pointer) [with _Tp = bookmarks::UrlIndex; _Dp = std::__1::default_delete<bookmarks::UrlIndex>; std::__1::unique_ptr<_Tp, _Dp>::pointer = bookmarks::UrlIndex*]‚Äô
+../../buildtools/third_party/libc++/trunk/include/memory:2588:24:   required from ‚Äòstd::__1::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = bookmarks::UrlIndex; _Dp = std::__1::default_delete<bookmarks::UrlIndex>]‚Äô
+../../components/bookmarks/browser/bookmark_storage.h:107:76:   required from here
+../../buildtools/third_party/libc++/trunk/include/memory:2317:25: error: invalid application of ‚Äòsizeof‚Äô to incomplete type ‚Äòbookmarks::UrlIndex‚Äô
+     static_assert(sizeof(_Tp) > 0,
+
+Bug: 819294
+Change-Id: I793a807c28e797aaa2e31d9c8b7e09fb6ca6b9e7
+Reviewed-on: https://chromium-review.googlesource.com/1071648
+Commit-Queue: Scott Violet <sky@chromium.org>
+Reviewed-by: Scott Violet <sky@chromium.org>
+Cr-Commit-Position: refs/heads/master@{#562446}
+---
+ components/bookmarks/browser/bookmark_storage.cc | 4 ++++
+ components/bookmarks/browser/bookmark_storage.h  | 2 +-
+ 2 files changed, 5 insertions(+), 1 deletion(-)
+
+diff --git a/components/bookmarks/browser/bookmark_storage.cc b/components/bookmarks/browser/bookmark_storage.cc
+index 1633ba1df2a4..3ae0c62292e7 100644
+--- a/components/bookmarks/browser/bookmark_storage.cc
++++ b/components/bookmarks/browser/bookmark_storage.cc
+@@ -158,6 +158,10 @@ void BookmarkLoadDetails::CreateUrlIndex() {
+   url_index_ = std::make_unique<UrlIndex>(std::move(root_node_));
+ }
+ 
++std::unique_ptr<UrlIndex> BookmarkLoadDetails::owned_url_index() {
++  return std::move(url_index_);
++}
++
+ BookmarkPermanentNode* BookmarkLoadDetails::CreatePermanentNode(
+     BookmarkClient* client,
+     BookmarkNode::Type type) {
+diff --git a/components/bookmarks/browser/bookmark_storage.h b/components/bookmarks/browser/bookmark_storage.h
+index 08df5bb65d83..0a1b1a1b65b9 100644
+--- a/components/bookmarks/browser/bookmark_storage.h
++++ b/components/bookmarks/browser/bookmark_storage.h
+@@ -104,7 +104,7 @@ class BookmarkLoadDetails {
+   bool ids_reassigned() const { return ids_reassigned_; }
+ 
+   void CreateUrlIndex();
+-  std::unique_ptr<UrlIndex> owned_url_index() { return std::move(url_index_); }
++  std::unique_ptr<UrlIndex> owned_url_index();
+ 
+  private:
+   // Creates one of the possible permanent nodes (bookmark bar node, other node
+-- 
+2.17.1
+
