--- chromium-66.0.3359.170/device/fido/device_response_converter.cc.mga7	2018-05-16 06:07:22.473118420 +0200
+++ chromium-66.0.3359.170/device/fido/device_response_converter.cc	2018-05-16 06:12:18.662791365 +0200
@@ -121,7 +121,7 @@
     response.SetNumCredentials(it->second.GetUnsigned());
   }
 
-  return response;
+  return base::Optional<AuthenticatorGetAssertionResponse>(std::move(response));
 }
 
 base::Optional<AuthenticatorGetInfoResponse> ReadCTAPGetInfoResponse(
@@ -241,7 +241,7 @@
     response.SetPinProtocols(std::move(supported_pin_protocols));
   }
 
-  return response;
+  return base::Optional<AuthenticatorGetInfoResponse>(std::move(response));
 }
 
 }  // namespace device
--- chromium-66.0.3359.170/cc/raster/playback_image_provider.cc.mga7	2018-05-16 06:16:58.704988411 +0200
+++ chromium-66.0.3359.170/cc/raster/playback_image_provider.cc	2018-05-16 06:18:11.323228706 +0200
@@ -70,7 +70,12 @@
 }
 
 PlaybackImageProvider::Settings::Settings() = default;
-PlaybackImageProvider::Settings::Settings(const Settings& other) = default;
+// PlaybackImageProvider::Settings::Settings(const Settings& other) = default;
+PlaybackImageProvider::Settings::Settings(const Settings& other) {
+  images_to_skip = other.images_to_skip;
+  image_to_current_frame_index = other.image_to_current_frame_index;
+}
+
 PlaybackImageProvider::Settings::~Settings() = default;
 
 }  // namespace cc
--- chromium-66.0.3359.170/chrome/browser/supervised_user/supervised_user_url_filter.cc.mga7	2018-05-16 07:26:32.123025519 +0200
+++ chromium-66.0.3359.170/chrome/browser/supervised_user/supervised_user_url_filter.cc	2018-05-16 07:43:20.125157951 +0200
@@ -368,7 +368,7 @@
 
   // Allow navigations to whitelisted origins (currently families.google.com).
   static const base::NoDestructor<base::flat_set<GURL>> kWhitelistedOrigins(
-      {GURL(kFamiliesUrl).GetOrigin()});
+      (const base::flat_set<GURL>&){GURL(kFamiliesUrl).GetOrigin()});
   if (base::ContainsKey(*kWhitelistedOrigins, effective_url.GetOrigin()))
     return ALLOW;
 
--- chromium-66.0.3359.170/content/browser/appcache/appcache_request_handler.cc.mga7	2018-05-16 11:27:42.050327621 +0200
+++ chromium-66.0.3359.170/content/browser/appcache/appcache_request_handler.cc	2018-05-16 11:30:16.992336108 +0200
@@ -639,7 +639,7 @@
 
   SubresourceLoaderParams params;
   params.loader_factory_info = factory_ptr.PassInterface();
-  return params;
+  return base::Optional<SubresourceLoaderParams>(std::move(params));
 }
 
 void AppCacheRequestHandler::MaybeCreateSubresourceLoader(
--- chromium-66.0.3359.170/content/browser/service_worker/service_worker_controllee_request_handler.cc.gmga7	2018-05-16 13:58:29.122823191 +0200
+++ chromium-66.0.3359.170/content/browser/service_worker/service_worker_controllee_request_handler.cc	2018-05-16 13:58:48.686824263 +0200
@@ -271,7 +271,7 @@
   controller_info->object_info = provider_host_->GetOrCreateServiceWorkerHandle(
       provider_host_->controller());
   params.controller_service_worker_info = std::move(controller_info);
-  return params;
+  return base::Optional<SubresourceLoaderParams>(std::move(params));
 }
 
 void ServiceWorkerControlleeRequestHandler::PrepareForMainResource(
