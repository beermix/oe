--- chromium-68.0.3440.106/base/metrics/histogram_samples.cc.gcc8	2018-08-08 21:10:31.000000000 +0200
+++ chromium-68.0.3440.106/base/metrics/histogram_samples.cc	2018-08-14 02:31:33.960840778 +0200
@@ -172,7 +172,9 @@
 HistogramSamples::LocalMetadata::LocalMetadata() {
   // This is the same way it's done for persistent metadata since no ctor
   // is called for the data members in that case.
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(this, 0, sizeof(*this));
+#pragma GCC diagnostic pop
 }
 
 HistogramSamples::HistogramSamples(uint64_t id, Metadata* meta)
--- chromium-68.0.3440.106/mojo/core/data_pipe_consumer_dispatcher.cc.gcc8	2018-08-14 03:11:50.492927855 +0200
+++ chromium-68.0.3440.106/mojo/core/data_pipe_consumer_dispatcher.cc	2018-08-14 03:12:32.254163933 +0200
@@ -40,7 +40,7 @@
   uint64_t buffer_guid_high;
   uint64_t buffer_guid_low;
   char padding[7];
-};
+} __attribute__ ((aligned(8)));
 
 static_assert(sizeof(SerializedState) % 8 == 0,
               "Invalid SerializedState size.");
--- chromium-68.0.3440.106/mojo/core/data_pipe_producer_dispatcher.cc.gcc8	2018-08-14 03:11:52.923883382 +0200
+++ chromium-68.0.3440.106/mojo/core/data_pipe_producer_dispatcher.cc	2018-08-14 03:12:35.341107472 +0200
@@ -39,7 +39,7 @@
   uint64_t buffer_guid_high;
   uint64_t buffer_guid_low;
   char padding[7];
-};
+} __attribute__ ((aligned(8)));
 
 static_assert(sizeof(SerializedState) % 8 == 0,
               "Invalid SerializedState size.");
--- chromium-68.0.3440.106/mojo/public/tools/bindings/generators/cpp_templates/struct_declaration.tmpl.gcc8	2018-08-14 21:12:13.141558150 +0200
+++ chromium-68.0.3440.106/mojo/public/tools/bindings/generators/cpp_templates/struct_declaration.tmpl	2018-08-14 21:13:14.068493440 +0200
@@ -1,6 +1,6 @@
 {%- set class_name = struct.name ~ "_Data" -%}
 
-class {{export_attribute}} {{class_name}} {
+class {{export_attribute}}  __attribute__ ((aligned(8))) {{class_name}} {
  public:
   class BufferWriter {
    public:
--- chromium-68.0.3440.106/mojo/public/tools/bindings/generators/cpp_templates/union_declaration.tmpl.gcc8	2018-08-14 21:12:15.324520008 +0200
+++ chromium-68.0.3440.106/mojo/public/tools/bindings/generators/cpp_templates/union_declaration.tmpl	2018-08-14 21:13:16.724447019 +0200
@@ -2,7 +2,7 @@
 {%- set enum_name = union.name ~ "_Tag" -%}
 {%- import "struct_macros.tmpl" as struct_macros %}
 
-class {{export_attribute}} {{class_name}} {
+class {{export_attribute}}  __attribute__ ((aligned(8))) {{class_name}} {
  public:
   // Used to identify Mojom Union Data Classes.
   typedef void MojomUnionDataType;
--- chromium-68.0.3440.106/third_party/angle/src/libANGLE/VertexArray.cpp.gcc8	2018-08-08 21:13:09.000000000 +0200
+++ chromium-68.0.3440.106/third_party/angle/src/libANGLE/VertexArray.cpp	2018-08-14 21:24:50.555374549 +0200
@@ -306,12 +306,14 @@
         mDirtyBits.reset();
         mDirtyBitsGuard.reset();
 
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
         // This is a bit of an implementation hack - but since we know the implementation
         // details of the dirty bit class it should always have the same effect as iterating
         // individual attribs. We could also look into schemes where iterating the dirty
         // bit set also resets it as you pass through it.
         memset(&mDirtyAttribBits, 0, sizeof(mDirtyAttribBits));
         memset(&mDirtyBindingBits, 0, sizeof(mDirtyBindingBits));
+#pragma GCC diagnostic pop
     }
     return gl::NoError();
 }
--- chromium-68.0.3440.106/third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.cpp.gcc8	2018-08-08 21:13:09.000000000 +0200
+++ chromium-68.0.3440.106/third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.cpp	2018-08-14 21:35:47.655983018 +0200
@@ -350,7 +350,9 @@
 
 PipelineDesc &PipelineDesc::operator=(const PipelineDesc &other)
 {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memcpy(this, &other, sizeof(PipelineDesc));
+#pragma GCC diagnostic pop
     return *this;
 }
 
--- chromium-68.0.3440.106/third_party/webrtc/modules/audio_processing/include/audio_processing.h.gcc8	2018-08-08 21:13:16.000000000 +0200
+++ chromium-68.0.3440.106/third_party/webrtc/modules/audio_processing/include/audio_processing.h	2018-08-14 21:40:29.208073793 +0200
@@ -292,7 +292,9 @@
     // sanitizer builds.
     Config& operator=(const Config& config) {
       if (this != &config) {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
         memcpy(this, &config, sizeof(*this));
+#pragma GCC diagnostic pop
       }
       return *this;
     }
--- chromium-68.0.3440.106/third_party/webrtc/modules/audio_processing/echo_cancellation_impl.cc.gcc8	2018-08-08 21:13:16.000000000 +0200
+++ chromium-68.0.3440.106/third_party/webrtc/modules/audio_processing/echo_cancellation_impl.cc	2018-08-14 21:46:52.906368109 +0200
@@ -300,7 +300,9 @@
 
   AecMetrics my_metrics;
   memset(&my_metrics, 0, sizeof(my_metrics));
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(metrics, 0, sizeof(Metrics));
+#pragma GCC diagnostic pop
 
   const int err = WebRtcAec_GetMetrics(cancellers_[0]->state(), &my_metrics);
   if (err != AudioProcessing::kNoError) {
--- chromium-68.0.3440.106/third_party/webrtc/modules/rtp_rtcp/source/rtp_header_parser.cc.gcc8	2018-08-08 21:13:16.000000000 +0200
+++ chromium-68.0.3440.106/third_party/webrtc/modules/rtp_rtcp/source/rtp_header_parser.cc	2018-08-14 21:49:50.106272582 +0200
@@ -49,7 +49,9 @@
                                 size_t length,
                                 RTPHeader* header) const {
   RtpUtility::RtpHeaderParser rtp_parser(packet, length);
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(header, 0, sizeof(*header));
+#pragma GCC diagnostic pop
 
   RtpHeaderExtensionMap map;
   {
--- chromium-68.0.3440.106/third_party/webrtc/modules/rtp_rtcp/source/rtp_rtcp_impl.cc.gcc8	2018-08-08 21:13:16.000000000 +0200
+++ chromium-68.0.3440.106/third_party/webrtc/modules/rtp_rtcp/source/rtp_rtcp_impl.cc	2018-08-14 21:51:07.382922793 +0200
@@ -64,7 +64,9 @@
   } else {
     // No clock implementation provided, use default clock.
     RtpRtcp::Configuration configuration_copy;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memcpy(&configuration_copy, &configuration, sizeof(RtpRtcp::Configuration));
+#pragma GCC diagnostic pop
     configuration_copy.clock = Clock::GetRealTimeClock();
     return new ModuleRtpRtcpImpl(configuration_copy);
   }
--- chromium-68.0.3440.106/third_party/blink/renderer/platform/wtf/vector.h.gcc8	2018-08-08 21:11:52.000000000 +0200
+++ chromium-68.0.3440.106/third_party/blink/renderer/platform/wtf/vector.h	2018-08-14 21:59:58.115654176 +0200
@@ -141,8 +141,10 @@
 struct VectorInitializer<true, T, Allocator> {
   STATIC_ONLY(VectorInitializer);
   static void Initialize(T* begin, T* end) {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memset(begin, 0,
            reinterpret_cast<char*>(end) - reinterpret_cast<char*>(begin));
+#pragma GCC diagnostic pop
   }
 };
 
@@ -190,9 +192,11 @@
   STATIC_ONLY(VectorMover);
   static void Move(const T* src, const T* src_end, T* dst) {
     if (LIKELY(dst && src)) {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
       memcpy(dst, src,
              reinterpret_cast<const char*>(src_end) -
                  reinterpret_cast<const char*>(src));
+#pragma GCC diagnostic pop
       ConstructTraits<T, VectorTraits<T>, Allocator>::NotifyNewElements(
           dst, src_end - src);
     }
@@ -203,9 +203,11 @@
   }
   static void MoveOverlapping(const T* src, const T* src_end, T* dst) {
     if (LIKELY(dst && src)) {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
       memmove(dst, src,
               reinterpret_cast<const char*>(src_end) -
                   reinterpret_cast<const char*>(src));
+#pragma GCC diagnostic pop
       ConstructTraits<T, VectorTraits<T>, Allocator>::NotifyNewElements(
           dst, src_end - src);
     }
@@ -242,9 +244,11 @@
   STATIC_ONLY(VectorCopier);
   static void UninitializedCopy(const T* src, const T* src_end, T* dst) {
     if (LIKELY(dst && src)) {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
       memcpy(dst, src,
              reinterpret_cast<const char*>(src_end) -
                  reinterpret_cast<const char*>(src));
+#pragma GCC diagnostic pop
       ConstructTraits<T, VectorTraits<T>, Allocator>::NotifyNewElements(
           dst, src_end - src);
     }
--- chromium-68.0.3440.106/third_party/blink/renderer/platform/wtf/hash_table.h.gcc8	2018-08-08 21:11:52.000000000 +0200
+++ chromium-68.0.3440.106/third_party/blink/renderer/platform/wtf/hash_table.h	2018-08-14 22:04:23.904013134 +0200
@@ -1216,7 +1216,9 @@
     // makes it possible to use this with types that don't support copying.
     // The memset to 0 looks like a slow operation but is optimized by the
     // compilers.
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memset(&bucket, 0, sizeof(bucket));
+#pragma GCC diagnostic pop
   }
 };
 
@@ -1688,7 +1690,9 @@
     if (IsEmptyOrDeletedBucket(table_[i])) {
       DCHECK_NE(&table_[i], entry);
       if (Traits::kEmptyValueIsZero) {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
         memset(&temporary_table[i], 0, sizeof(ValueType));
+#pragma GCC diagnostic pop
       } else {
         InitializeBucket(temporary_table[i]);
       }
@@ -1703,7 +1707,9 @@
   Allocator::BackingWriteBarrier(table_);
 
   if (Traits::kEmptyValueIsZero) {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memset(original_table, 0, new_table_size * sizeof(ValueType));
+#pragma GCC diagnostic pop
   } else {
     for (unsigned i = 0; i < new_table_size; i++)
       InitializeBucket(original_table[i]);
--- chromium-68.0.3440.106/gpu/command_buffer/client/raster_implementation.cc.gcc8	2018-08-08 21:10:58.000000000 +0200
+++ chromium-68.0.3440.106/gpu/command_buffer/client/raster_implementation.cc	2018-08-14 22:13:17.028701679 +0200
@@ -848,7 +848,9 @@
   for (GLsizei i = 0; i < count; ++i) {
     if (sync_tokens[i]) {
       SyncToken sync_token;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
       memcpy(&sync_token, sync_tokens[i], sizeof(sync_token));
+#pragma GCC diagnostic pop
 
       if (sync_token.HasData() && !sync_token.verified_flush()) {
         if (!GetVerifiedSyncTokenForIPC(sync_token, &sync_token)) {
@@ -879,7 +881,9 @@
 
   // Copy the data over before data access to ensure alignment.
   SyncToken sync_token, verified_sync_token;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memcpy(&sync_token, sync_token_data, sizeof(SyncToken));
+#pragma GCC diagnostic pop
 
   if (!sync_token.HasData())
     return;
--- chromium-68.0.3440.106/gpu/command_buffer/client/gles2_implementation.cc.gcc8	2018-08-08 21:10:58.000000000 +0200
+++ chromium-68.0.3440.106/gpu/command_buffer/client/gles2_implementation.cc	2018-08-14 22:15:45.728097911 +0200
@@ -6002,7 +6002,9 @@
   for (GLsizei i = 0; i < count; ++i) {
     if (sync_tokens[i]) {
       SyncToken sync_token;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
       memcpy(&sync_token, sync_tokens[i], sizeof(sync_token));
+#pragma GCC diagnostic pop
 
       if (sync_token.HasData() && !sync_token.verified_flush()) {
         if (!GetVerifiedSyncTokenForIPC(sync_token, &sync_token)) {
@@ -6032,7 +6034,9 @@
 
   // Copy the data over before data access to ensure alignment.
   SyncToken sync_token, verified_sync_token;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memcpy(&sync_token, sync_token_data, sizeof(SyncToken));
+#pragma GCC diagnostic pop
 
   if (!sync_token.HasData())
     return;
--- chromium-68.0.3440.106/third_party/webrtc/video/video_receive_stream.cc.gcc8	2018-08-08 21:13:17.000000000 +0200
+++ chromium-68.0.3440.106/third_party/webrtc/video/video_receive_stream.cc	2018-08-14 22:24:07.073210699 +0200
@@ -46,7 +46,9 @@
 namespace {
 VideoCodec CreateDecoderVideoCodec(const VideoReceiveStream::Decoder& decoder) {
   VideoCodec codec;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&codec, 0, sizeof(codec));
+#pragma GCC diagnostic pop
 
   codec.plType = decoder.payload_type;
   codec.codecType = PayloadStringToCodecType(decoder.payload_name);
--- chromium-68.0.3440.106/third_party/pdfium/core/fxcodec/jbig2/JBig2_Context.cpp.gcc8	2018-08-08 21:13:13.000000000 +0200
+++ chromium-68.0.3440.106/third_party/pdfium/core/fxcodec/jbig2/JBig2_Context.cpp	2018-08-14 22:32:06.974633434 +0200
@@ -817,7 +817,9 @@
   if (pTRD->SBREFINE == 1) {
     const size_t size = GetRefAggContextSize(pTRD->SBRTEMPLATE);
     grContext.reset(FX_Alloc(JBig2ArithCtx, size));
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memset(grContext.get(), 0, sizeof(JBig2ArithCtx) * size);
+#pragma GCC diagnostic pop
   }
   if (pTRD->SBHUFF == 0) {
     auto pArithDecoder =
@@ -871,7 +873,9 @@
     const size_t size = GetHuffContextSize(pPDD->HDTEMPLATE);
     std::unique_ptr<JBig2ArithCtx, FxFreeDeleter> gbContext(
         FX_Alloc(JBig2ArithCtx, size));
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memset(gbContext.get(), 0, sizeof(JBig2ArithCtx) * size);
+#pragma GCC diagnostic pop
     auto pArithDecoder =
         pdfium::MakeUnique<CJBig2_ArithDecoder>(m_pStream.get());
     pSegment->m_PatternDict =
@@ -940,7 +944,9 @@
     const size_t size = GetHuffContextSize(pHRD->HTEMPLATE);
     std::unique_ptr<JBig2ArithCtx, FxFreeDeleter> gbContext(
         FX_Alloc(JBig2ArithCtx, size));
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memset(gbContext.get(), 0, sizeof(JBig2ArithCtx) * size);
+#pragma GCC diagnostic pop
     auto pArithDecoder =
         pdfium::MakeUnique<CJBig2_ArithDecoder>(m_pStream.get());
     pSegment->m_Image =
@@ -1120,7 +1126,9 @@
   const size_t size = GetRefAggContextSize(pGRRD->GRTEMPLATE);
   std::unique_ptr<JBig2ArithCtx, FxFreeDeleter> grContext(
       FX_Alloc(JBig2ArithCtx, size));
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(grContext.get(), 0, sizeof(JBig2ArithCtx) * size);
+#pragma GCC diagnostic pop
   auto pArithDecoder = pdfium::MakeUnique<CJBig2_ArithDecoder>(m_pStream.get());
   pSegment->m_nResultType = JBIG2_IMAGE_POINTER;
   pSegment->m_Image = pGRRD->Decode(pArithDecoder.get(), grContext.get());
--- chromium-68.0.3440.106/third_party/pdfium/xfa/fde/cfde_texteditengine.cpp.gcc8	2018-08-08 21:13:13.000000000 +0200
+++ chromium-68.0.3440.106/third_party/pdfium/xfa/fde/cfde_texteditengine.cpp	2018-08-14 22:34:59.589550686 +0200
@@ -1043,7 +1043,9 @@
       const CFX_BreakPiece* piece = text_break_.GetBreakPieceUnstable(i);
 
       FDE_TEXTEDITPIECE txtEdtPiece;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
       memset(&txtEdtPiece, 0, sizeof(FDE_TEXTEDITPIECE));
+#pragma GCC diagnostic pop
 
       txtEdtPiece.nBidiLevel = piece->m_iBidiLevel;
       txtEdtPiece.nCount = piece->GetLength();
--- chromium-68.0.3440.106/third_party/webrtc/media/engine/simulcast_encoder_adapter.cc.gcc8	2018-08-08 21:13:15.000000000 +0200
+++ chromium-68.0.3440.106/third_party/webrtc/media/engine/simulcast_encoder_adapter.cc	2018-08-14 22:37:49.845519857 +0200
@@ -118,7 +118,9 @@
   // the encoder task queue.
   encoder_queue_.Detach();
 
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&codec_, 0, sizeof(webrtc::VideoCodec));
+#pragma GCC diagnostic pop
 }
 
 SimulcastEncoderAdapter::~SimulcastEncoderAdapter() {
--- chromium-68.0.3440.106/third_party/webrtc/modules/video_coding/encoder_database.cc.gcc8	2018-08-08 21:13:16.000000000 +0200
+++ chromium-68.0.3440.106/third_party/webrtc/modules/video_coding/encoder_database.cc	2018-08-14 22:40:27.598718970 +0200
@@ -103,7 +103,9 @@
 
 void VCMEncoderDataBase::DeregisterExternalEncoder() {
   DeleteEncoder();
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&send_codec_, 0, sizeof(VideoCodec));
+#pragma GCC diagnostic pop
   external_encoder_ = nullptr;
   internal_source_ = false;
 }
--- chromium-68.0.3440.106/third_party/webrtc/modules/video_coding/decoder_database.cc.gcc8	2018-08-08 21:13:16.000000000 +0200
+++ chromium-68.0.3440.106/third_party/webrtc/modules/video_coding/decoder_database.cc	2018-08-14 22:42:30.590539511 +0200
@@ -99,7 +99,9 @@
   dec_map_.erase(it);
   if (receive_codec_.plType == payload_type) {
     // This codec is currently in use.
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memset(&receive_codec_, 0, sizeof(VideoCodec));
+#pragma GCC diagnostic pop
   }
   return true;
 }
@@ -115,7 +117,9 @@
   // If decoder exists - delete.
   if (ptr_decoder_) {
     ptr_decoder_.reset();
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memset(&receive_codec_, 0, sizeof(VideoCodec));
+#pragma GCC diagnostic pop
   }
   ptr_decoder_ = CreateAndInitDecoder(frame, &receive_codec_);
   if (!ptr_decoder_) {
@@ -126,7 +130,9 @@
   if (ptr_decoder_->RegisterDecodeCompleteCallback(decoded_frame_callback) <
       0) {
     ptr_decoder_.reset();
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memset(&receive_codec_, 0, sizeof(VideoCodec));
+#pragma GCC diagnostic pop
     return nullptr;
   }
   return ptr_decoder_.get();
--- chromium-68.0.3440.106/third_party/webrtc/modules/video_coding/video_codec_initializer.cc.gcc8	2018-08-08 21:13:16.000000000 +0200
+++ chromium-68.0.3440.106/third_party/webrtc/modules/video_coding/video_codec_initializer.cc	2018-08-14 22:45:20.974525552 +0200
@@ -77,7 +77,9 @@
   RTC_DCHECK_GE(config.min_transmit_bitrate_bps, 0);
 
   VideoCodec video_codec;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&video_codec, 0, sizeof(video_codec));
+#pragma GCC diagnostic pop
   video_codec.codecType = config.codec_type;
 
   switch (config.content_type) {
--- chromium-68.0.3440.106/third_party/webrtc/modules/video_coding/codecs/vp9/vp9_impl.cc.gcc8	2018-08-08 21:13:16.000000000 +0200
+++ chromium-68.0.3440.106/third_party/webrtc/modules/video_coding/codecs/vp9/vp9_impl.cc	2018-08-14 22:46:55.545855003 +0200
@@ -86,7 +86,9 @@
       output_framerate_(1000.0, 1000.0),
       last_encoded_frame_rtp_timestamp_(0),
       is_flexible_mode_(false) {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&codec_, 0, sizeof(codec_));
+#pragma GCC diagnostic pop
   memset(&svc_params_, 0, sizeof(vpx_svc_extra_cfg_t));
 }
 
@@ -761,7 +763,9 @@
   }
   RTC_DCHECK_LE(encoded_image_._length, encoded_image_._size);
 
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&codec_specific_, 0, sizeof(codec_specific_));
+#pragma GCC diagnostic pop
   PopulateCodecSpecific(&codec_specific_, *pkt, input_image_->timestamp(),
                         first_frame_in_picture);
 
--- chromium-68.0.3440.106/media/filters/vp8_parser.cc.gcc8	2018-08-08 21:11:03.000000000 +0200
+++ chromium-68.0.3440.106/media/filters/vp8_parser.cc	2018-08-14 23:13:10.772858869 +0200
@@ -59,7 +59,9 @@
   stream_ = ptr;
   bytes_left_ = frame_size;
 
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(fhdr, 0, sizeof(*fhdr));
+#pragma GCC diagnostic pop
   fhdr->data = stream_;
   fhdr->frame_size = bytes_left_;
 
--- chromium-68.0.3440.106/media/video/h264_parser.cc.gcc8	2018-08-08 21:11:05.000000000 +0200
+++ chromium-68.0.3440.106/media/video/h264_parser.cc	2018-08-14 23:18:45.317942396 +0200
@@ -1368,7 +1368,9 @@
   const H264PPS* pps;
   Result res;
 
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(shdr, 0, sizeof(*shdr));
+#pragma GCC diagnostic pop
 
   shdr->idr_pic_flag = (nalu.nal_unit_type == 5);
   shdr->nal_ref_idc = nalu.nal_ref_idc;
@@ -1516,7 +1518,9 @@
 H264Parser::Result H264Parser::ParseSEI(H264SEIMessage* sei_msg) {
   int byte;
 
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(sei_msg, 0, sizeof(*sei_msg));
+#pragma GCC diagnostic pop
 
   READ_BITS_OR_RETURN(8, &byte);
   while (byte == 0xff) {
--- chromium-68.0.3440.106/third_party/pdfium/xfa/fxfa/cxfa_textlayout.cpp.gcc8	2018-08-08 21:13:13.000000000 +0200
+++ chromium-68.0.3440.106/third_party/pdfium/xfa/fxfa/cxfa_textlayout.cpp	2018-08-14 23:29:04.550904864 +0200
@@ -591,7 +591,9 @@
         pCharPos = FX_Realloc(FXTEXT_CHARPOS, pCharPos, iChars);
         iCharCount = iChars;
       }
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
       memset(pCharPos, 0, iCharCount * sizeof(FXTEXT_CHARPOS));
+#pragma GCC diagnostic pop
       RenderString(pFxDevice, pPieceLine, j, pCharPos, tmDoc2Device);
     }
     for (j = 0; j < iPieces; j++)
--- chromium-68.0.3440.106/v8/src/frames.h.gcc8	2018-08-08 21:13:19.000000000 +0200
+++ chromium-68.0.3440.106/v8/src/frames.h	2018-08-14 23:30:16.197615313 +0200
@@ -44,7 +44,9 @@
   }
 
   void Flush() {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memset(&cache_[0], 0, sizeof(cache_));
+#pragma GCC diagnostic pop
   }
 
   InnerPointerToCodeCacheEntry* GetCacheEntry(Address inner_pointer);
--- chromium-68.0.3440.106/v8/src/base/macros.h.gcc8	2018-08-08 21:13:19.000000000 +0200
+++ chromium-68.0.3440.106/v8/src/base/macros.h	2018-08-14 23:38:21.112816242 +0200
@@ -101,7 +101,9 @@
   static_assert(sizeof(Dest) == sizeof(Source),
                 "source and dest must be same size");
   Dest dest;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memcpy(&dest, &source, sizeof(dest));
+#pragma GCC diagnostic pop
   return dest;
 }
 
--- chromium-68.0.3440.106/v8/src/compiler/node-cache.cc.gcc8	2018-08-08 21:13:19.000000000 +0200
+++ chromium-68.0.3440.106/v8/src/compiler/node-cache.cc	2018-08-14 23:45:26.941120662 +0200
@@ -38,7 +38,9 @@
   size_ *= 4;
   size_t num_entries = size_ + kLinearProbe;
   entries_ = zone->NewArray<Entry>(num_entries);
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(entries_, 0, sizeof(Entry) * num_entries);
+#pragma GCC diagnostic pop
 
   // Insert the old entries into the new block.
   for (size_t i = 0; i < old_size; ++i) {
@@ -69,7 +71,9 @@
     size_t num_entries = kInitialSize + kLinearProbe;
     entries_ = zone->NewArray<Entry>(num_entries);
     size_ = kInitialSize;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memset(entries_, 0, sizeof(Entry) * num_entries);
+#pragma GCC diagnostic pop
     Entry* entry = &entries_[hash & (kInitialSize - 1)];
     entry->key_ = key;
     return &entry->value_;
--- chromium-68.0.3440.106/v8/src/compiler/simd-scalar-lowering.cc.gcc8	2018-08-08 21:13:19.000000000 +0200
+++ chromium-68.0.3440.106/v8/src/compiler/simd-scalar-lowering.cc	2018-08-14 23:47:52.217508370 +0200
@@ -38,7 +38,9 @@
   DCHECK_NOT_NULL(graph());
   DCHECK_NOT_NULL(graph()->end());
   replacements_ = zone()->NewArray<Replacement>(graph()->NodeCount());
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(replacements_, 0, sizeof(Replacement) * graph()->NodeCount());
+#pragma GCC diagnostic pop
 }
 
 void SimdScalarLowering::LowerGraph() {
--- chromium-68.0.3440.106/v8/src/log.cc.gcc8	2018-08-08 21:13:19.000000000 +0200
+++ chromium-68.0.3440.106/v8/src/log.cc	2018-08-14 23:55:16.938544439 +0200
@@ -668,7 +668,9 @@
                                   SharedFunctionInfo* shared, const char* name,
                                   int length) {
   JitCodeEvent event;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&event, 0, sizeof(event));
+#pragma GCC diagnostic pop
   event.type = JitCodeEvent::CODE_ADDED;
   event.code_start = reinterpret_cast<void*>(code->InstructionStart());
   event.code_type =
@@ -689,7 +691,9 @@
 void JitLogger::LogRecordedBuffer(const wasm::WasmCode* code, const char* name,
                                   int length) {
   JitCodeEvent event;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&event, 0, sizeof(event));
+#pragma GCC diagnostic pop
   event.type = JitCodeEvent::CODE_ADDED;
   event.code_type = JitCodeEvent::JIT_CODE;
   event.code_start = code->instructions().start();
@@ -726,7 +730,9 @@
     int position,
     JitCodeEvent::PositionType position_type) {
   JitCodeEvent event;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&event, 0, sizeof(event));
+#pragma GCC diagnostic pop
   event.type = JitCodeEvent::CODE_ADD_LINE_POS_INFO;
   event.user_data = jit_handler_data;
   event.line_info.offset = pc_offset;
@@ -740,7 +746,9 @@
 
 void* JitLogger::StartCodePosInfoEvent() {
   JitCodeEvent event;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&event, 0, sizeof(event));
+#pragma GCC diagnostic pop
   event.type = JitCodeEvent::CODE_START_LINE_INFO_RECORDING;
   event.isolate = reinterpret_cast<v8::Isolate*>(isolate_);
 
@@ -751,7 +759,9 @@
 void JitLogger::EndCodePosInfoEvent(Address start_address,
                                     void* jit_handler_data) {
   JitCodeEvent event;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&event, 0, sizeof(event));
+#pragma GCC diagnostic pop
   event.type = JitCodeEvent::CODE_END_LINE_INFO_RECORDING;
   event.code_start = reinterpret_cast<void*>(start_address);
   event.user_data = jit_handler_data;
--- chromium-68.0.3440.106/components/web_cache/browser/web_cache_manager.cc.gcc8	2018-08-08 21:10:52.000000000 +0200
+++ chromium-68.0.3440.106/components/web_cache/browser/web_cache_manager.cc	2018-08-16 12:02:36.324221013 +0200
@@ -80,7 +80,9 @@
   active_renderers_.insert(renderer_id);
 
   RendererInfo* stats = &(stats_[renderer_id]);
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(stats, 0, sizeof(*stats));
+#pragma GCC diagnostic pop
   stats->access = Time::Now();
 
   content::RenderProcessHost* host =
--- chromium-68.0.3440.106/content/browser/browser_plugin/browser_plugin_guest.cc.gcc8	2018-08-08 21:10:53.000000000 +0200
+++ chromium-68.0.3440.106/content/browser/browser_plugin/browser_plugin_guest.cc	2018-08-16 12:40:59.741240759 +0200
@@ -429,7 +429,9 @@
   gfx::Vector2d offset_from_embedder = frame_rect_.OffsetFromOrigin();
   if (event.GetType() == blink::WebInputEvent::kGestureScrollUpdate) {
     blink::WebGestureEvent resent_gesture_event;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memcpy(&resent_gesture_event, &event, sizeof(blink::WebGestureEvent));
+#pragma GCC diagnostic pop
     resent_gesture_event.SetPositionInWidget(
         resent_gesture_event.PositionInWidget() + offset_from_embedder);
     // Mark the resend source with the browser plugin's instance id, so the
@@ -441,7 +443,9 @@
     view->ProcessGestureEvent(resent_gesture_event, latency_info);
   } else if (event.GetType() == blink::WebInputEvent::kMouseWheel) {
     blink::WebMouseWheelEvent resent_wheel_event;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memcpy(&resent_wheel_event, &event, sizeof(blink::WebMouseWheelEvent));
+#pragma GCC diagnostic pop
     resent_wheel_event.SetPositionInWidget(
         resent_wheel_event.PositionInWidget().x + offset_from_embedder.x(),
         resent_wheel_event.PositionInWidget().y + offset_from_embedder.y());
--- chromium-68.0.3440.106/device/gamepad/public/cpp/gamepad_mojom_traits.cc.gcc8	2018-08-08 21:10:57.000000000 +0200
+++ chromium-68.0.3440.106/device/gamepad/public/cpp/gamepad_mojom_traits.cc	2018-08-16 14:55:08.981030117 +0200
@@ -12,7 +12,9 @@
 void StructTraits<
     device::mojom::GamepadQuaternionDataView,
     device::GamepadQuaternion>::SetToNull(device::GamepadQuaternion* out) {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(out, 0, sizeof(device::GamepadQuaternion));
+#pragma GCC diagnostic pop
   out->not_null = false;
 }
 
@@ -33,7 +35,9 @@
 void StructTraits<device::mojom::GamepadVectorDataView,
                   device::GamepadVector>::SetToNull(device::GamepadVector*
                                                         out) {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(out, 0, sizeof(device::GamepadVector));
+#pragma GCC diagnostic pop
   out->not_null = false;
 }
 
@@ -101,7 +105,9 @@
 void StructTraits<device::mojom::GamepadHapticActuatorDataView,
                   device::GamepadHapticActuator>::
     SetToNull(device::GamepadHapticActuator* out) {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(out, 0, sizeof(device::GamepadHapticActuator));
+#pragma GCC diagnostic pop
   out->not_null = false;
 }
 
@@ -119,7 +125,9 @@
 // static
 void StructTraits<device::mojom::GamepadPoseDataView,
                   device::GamepadPose>::SetToNull(device::GamepadPose* out) {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(out, 0, sizeof(device::GamepadPose));
+#pragma GCC diagnostic pop
   out->not_null = false;
 }
 
--- chromium-68.0.3440.106/device/gamepad/gamepad_pad_state_provider.cc.gcc8	2018-08-08 21:10:57.000000000 +0200
+++ chromium-68.0.3440.106/device/gamepad/gamepad_pad_state_provider.cc	2018-08-16 14:57:16.836715112 +0200
@@ -62,7 +62,9 @@
 }
 
 void GamepadPadStateProvider::ClearPadState(PadState& state) {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&state, 0, sizeof(PadState));
+#pragma GCC diagnostic pop
 }
 
 void GamepadPadStateProvider::InitializeDataFetcher(
@@ -77,7 +79,9 @@
   DCHECK(pad);
 
   if (!pad_state->data.connected) {
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memset(pad, 0, sizeof(Gamepad));
+#pragma GCC diagnostic pop
     return;
   }
 
--- chromium-68.0.3440.106/device/gamepad/gamepad_shared_buffer.cc.gcc8	2018-08-08 21:10:57.000000000 +0200
+++ chromium-68.0.3440.106/device/gamepad/gamepad_shared_buffer.cc	2018-08-16 15:12:56.372693313 +0200
@@ -16,7 +16,9 @@
   void* mem = shared_memory_mapping_.memory();
   DCHECK(mem);
   hardware_buffer_ = new (mem) GamepadHardwareBuffer();
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&(hardware_buffer_->data), 0, sizeof(Gamepads));
+#pragma GCC diagnostic pop
 }
 
 GamepadSharedBuffer::~GamepadSharedBuffer() = default;
--- chromium-68.0.3440.106/third_party/blink/renderer/platform/length.h.gcc8	2018-08-08 21:11:51.000000000 +0200
+++ chromium-68.0.3440.106/third_party/blink/renderer/platform/length.h	2018-08-16 21:04:12.500371375 +0200
@@ -102,7 +102,9 @@
       length.IncrementCalculatedRef();
     if (IsCalculated())
       DecrementCalculatedRef();
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memcpy(this, &length, sizeof(Length));
+#pragma GCC diagnostic pop
     return *this;
   }
 
--- chromium-68.0.3440.106/ppapi/proxy/gamepad_resource.cc.gcc8	2018-08-08 21:11:07.000000000 +0200
+++ chromium-68.0.3440.106/ppapi/proxy/gamepad_resource.cc	2018-08-16 21:14:14.496252776 +0200
@@ -60,7 +60,9 @@
   device::Gamepads read_into;
   do {
     version = buffer_->seqlock.ReadBegin();
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memcpy(&read_into, &buffer_->data, sizeof(read_into));
+#pragma GCC diagnostic pop
     ++contention_count;
     if (contention_count == kMaximumContentionCount)
       break;
--- chromium-68.0.3440.106/third_party/blink/renderer/modules/gamepad/gamepad_shared_memory_reader.cc.gcc8	2018-08-08 21:10:55.000000000 +0200
+++ chromium-68.0.3440.106/third_party/blink/renderer/modules/gamepad/gamepad_shared_memory_reader.cc	2018-08-16 22:01:05.038368945 +0200
@@ -87,7 +87,9 @@
   base::subtle::Atomic32 version;
   do {
     version = gamepad_hardware_buffer_->seqlock.ReadBegin();
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
     memcpy(&read_into, &gamepad_hardware_buffer_->data, sizeof(read_into));
+#pragma GCC diagnostic pop
     ++contention_count;
     if (contention_count == kMaximumContentionCount)
       break;
@@ -102,7 +104,9 @@
   }
 
   // New data was read successfully, copy it into the output buffer.
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memcpy(&gamepads, &read_into, sizeof(gamepads));
+#pragma GCC diagnostic pop
 
   if (!ever_interacted_with_) {
     // Clear the connected flag if the user hasn't interacted with any of the
--- chromium-68.0.3440.106/content/renderer/media/webrtc/rtc_video_encoder.cc.gcc8	2018-08-08 21:10:55.000000000 +0200
+++ chromium-68.0.3440.106/content/renderer/media/webrtc/rtc_video_encoder.cc	2018-08-16 22:35:12.295855869 +0200
@@ -769,7 +769,9 @@
     return;
 
   webrtc::RTPFragmentationHeader header;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&header, 0, sizeof(header));
+#pragma GCC diagnostic pop
   switch (video_codec_type_) {
     case webrtc::kVideoCodecVP8:
       // Generate a header describing a single fragment.
@@ -794,7 +796,9 @@
   }
 
   webrtc::CodecSpecificInfo info;
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&info, 0, sizeof(info));
+#pragma GCC diagnostic pop
   info.codecType = video_codec_type_;
   info.codec_name = ImplementationName();
   if (video_codec_type_ == webrtc::kVideoCodecVP8) {
--- chromium-68.0.3440.106/third_party/blink/renderer/core/css/css_selector_list.cc.gcc8	2018-08-08 21:11:49.000000000 +0200
+++ chromium-68.0.3440.106/third_party/blink/renderer/core/css/css_selector_list.cc	2018-08-16 22:38:46.625948903 +0200
@@ -262,8 +262,10 @@
       // Move item from the parser selector vector into selector_array_ without
       // invoking destructor (Ugh.)
       CSSSelector* current_selector = current->ReleaseSelector().release();
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
       memcpy(&list.selector_array_[array_index], current_selector,
              sizeof(CSSSelector));
+#pragma GCC diagnostic pop
       WTF::Partitions::FastFree(current_selector);
 
       current = current->TagHistory();
--- chromium-68.0.3440.106/content/renderer/pepper/plugin_module.cc.gcc8	2018-08-08 21:10:55.000000000 +0200
+++ chromium-68.0.3440.106/content/renderer/pepper/plugin_module.cc	2018-08-17 09:00:00.010744283 +0200
@@ -506,7 +506,9 @@
   if (!host_globals)
     host_globals = new HostGlobals;
 
+#pragma GCC diagnostic ignored "-Wclass-memaccess"
   memset(&entry_points_, 0, sizeof(entry_points_));
+#pragma GCC diagnostic pop
   pp_module_ = HostGlobals::Get()->AddModule(this);
   GetLivePluginSet()->insert(this);
 }
--- chromium-68.0.3440.106/mojo/public/c/system/message_pipe.h.gcc8	2018-08-08 21:11:05.000000000 +0200
+++ chromium-68.0.3440.106/mojo/public/c/system/message_pipe.h	2018-08-18 15:08:11.059119547 +0200
@@ -35,7 +35,6 @@
   // See |MojoCreateMessagePipeFlags|.
   MojoCreateMessagePipeFlags flags;
 };
-MOJO_STATIC_ASSERT(MOJO_ALIGNOF(int64_t) == 8, "int64_t has weird alignment");
 MOJO_STATIC_ASSERT(sizeof(MojoCreateMessagePipeOptions) == 8,
                    "MojoCreateMessagePipeOptions has wrong size");
 
--- chromium-68.0.3440.106/mojo/public/c/system/data_pipe.h.gcc8	2018-08-08 21:11:05.000000000 +0200
+++ chromium-68.0.3440.106/mojo/public/c/system/data_pipe.h	2018-08-18 15:13:42.028075568 +0200
@@ -40,7 +40,6 @@
   // system-dependent capacity of at least one element in size.
   uint32_t capacity_num_bytes;
 };
-MOJO_STATIC_ASSERT(MOJO_ALIGNOF(int64_t) == 8, "int64_t has weird alignment");
 MOJO_STATIC_ASSERT(sizeof(MojoCreateDataPipeOptions) == 16,
                    "MojoCreateDataPipeOptions has wrong size");
 
--- chromium-68.0.3440.106/mojo/public/c/system/buffer.h.gcc8	2018-08-08 21:11:05.000000000 +0200
+++ chromium-68.0.3440.106/mojo/public/c/system/buffer.h	2018-08-18 15:15:18.766308780 +0200
@@ -30,7 +30,6 @@
   // See |MojoCreateSharedBufferFlags|.
   MojoCreateSharedBufferFlags flags;
 };
-MOJO_STATIC_ASSERT(MOJO_ALIGNOF(int64_t) == 8, "int64_t has weird alignment");
 MOJO_STATIC_ASSERT(sizeof(MojoCreateSharedBufferOptions) == 8,
                    "MojoCreateSharedBufferOptions has wrong size");
 
--- chromium-68.0.3440.106/mojo/core/options_validation_unittest.cc.gcc8	2018-08-08 21:11:05.000000000 +0200
+++ chromium-68.0.3440.106/mojo/core/options_validation_unittest.cc	2018-08-18 15:16:30.947990424 +0200
@@ -18,7 +18,6 @@
 
 using TestOptionsFlags = uint32_t;
 
-static_assert(MOJO_ALIGNOF(int64_t) == 8, "int64_t has weird alignment");
 struct MOJO_ALIGNAS(8) TestOptions {
   uint32_t struct_size;
   TestOptionsFlags flags;
