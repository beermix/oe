diff --git a/base/allocator/BUILD.gn b/base/allocator/BUILD.gn
index 3aa14cd32e..d51e7c85b5 100644
--- a/base/allocator/BUILD.gn
+++ b/base/allocator/BUILD.gn
@@ -45,7 +45,7 @@ config("tcmalloc_flags") {
       "-Wno-unused-function",
 
       # tcmalloc uses COMPILE_ASSERT without static_assert but with typedefs.
-      "-Wno-unused-local-typedefs",
+      # "-Wno-unused-local-typedefs",
 
       # for magic2_ in debugallocation.cc (only built in Debug builds) typedefs.
       "-Wno-unused-private-field",
diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index c31d2d0f4c..5972c0cabe 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -1256,7 +1256,7 @@ config("default_warnings") {
 
       # -Wunused-local-typedefs is broken in gcc,
       # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63872
-      cflags += [ "-Wno-unused-local-typedefs" ]
+      # cflags += [ "-Wno-unused-local-typedefs" ]
 
       # Don't warn about "maybe" uninitialized. Clang doesn't include this
       # in -Wall but gcc does, and it gives false positives.
diff --git a/build/config/linux/atk/BUILD.gn b/build/config/linux/atk/BUILD.gn
index 16a3f8c51a..b9d9ae3753 100644
--- a/build/config/linux/atk/BUILD.gn
+++ b/build/config/linux/atk/BUILD.gn
@@ -40,7 +40,7 @@ config("atk") {
 
   cflags = [
     # glib uses the pre-c++11 typedef-as-static_assert hack.
-    "-Wno-unused-local-typedef",
+    # "-Wno-unused-local-typedef",
 
     # G_DEFINE_TYPE automatically generates a *get_instance_private
     # inline function after glib 2.37. That's unused. Prevent to
diff --git a/third_party/harfbuzz-ng/BUILD.gn b/third_party/harfbuzz-ng/BUILD.gn
index dcb74529d8..f36054439d 100644
--- a/third_party/harfbuzz-ng/BUILD.gn
+++ b/third_party/harfbuzz-ng/BUILD.gn
@@ -32,7 +32,7 @@ if (use_system_harfbuzz) {
         # Harfbuzz uses unused typedefs for its static asserts (and its
         # static asserts are strange enough that they can't be replaced
         # by static_assert).
-        "-Wno-unused-local-typedef",
+        # "-Wno-unused-local-typedef",
       ]
     }
     if (is_win) {
diff --git a/third_party/mesa/BUILD.gn b/third_party/mesa/BUILD.gn
index c36212b090..8299ddc7bc 100644
--- a/third_party/mesa/BUILD.gn
+++ b/third_party/mesa/BUILD.gn
@@ -136,7 +136,7 @@ config("mesa_internal_warnings") {
       "-Wno-mismatched-tags",  # Fixed upstream.
 
       # mesa's STATIC_ASSERT() macro expands to an ununused typedef.
-      "-Wno-unused-local-typedef",
+      # "-Wno-unused-local-typedef",
 
       # mesa's flex scanner code uses "register" a lot.
       "-Wno-deprecated-register",
diff --git a/third_party/yasm/BUILD.gn b/third_party/yasm/BUILD.gn
index 843c2b5a50..f8abddffc2 100644
--- a/third_party/yasm/BUILD.gn
+++ b/third_party/yasm/BUILD.gn
@@ -284,7 +284,7 @@ if (current_toolchain == host_toolchain) {
     if (is_clang) {
       cflags = [
         # reg3264type in x86expr.c is unused.
-        "-Wno-unused-local-typedef",
+        # "-Wno-unused-local-typedef",
       ]
     } else if (is_linux) {
       cflags = [
