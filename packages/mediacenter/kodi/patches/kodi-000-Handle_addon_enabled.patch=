diff --git a/tools/depends/target/libgpg-error/Makefile b/tools/depends/target/libgpg-error/Makefile
index 8aa52a56db..275a5b9624 100644
--- a/tools/depends/target/libgpg-error/Makefile
+++ b/tools/depends/target/libgpg-error/Makefile
@@ -3,7 +3,7 @@ DEPS= ../../Makefile.include Makefile
 
 # lib name, version
 LIBNAME=libgpg-error
-VERSION=1.27
+VERSION=1.20
 SOURCE=$(LIBNAME)-$(VERSION)
 ARCHIVE=$(SOURCE).tar.bz2
 
@@ -27,9 +27,16 @@ $(PLATFORM): $(TARBALLS_LOCATION)/$(ARCHIVE) $(DEPS)
 	cd $(PLATFORM); $(CONFIGURE)
 
 $(LIBDYLIB): $(PLATFORM)
+ifeq ($(OS),osx)
+	$(MAKE) -C $(PLATFORM)/src gen-posix-lock-obj
+	$(PLATFORM)/src/gen-posix-lock-obj > $(PLATFORM)/src/syscfg/tmp.h
+	mv $(PLATFORM)/src/syscfg/tmp.h $(PLATFORM)/src/syscfg/$$(awk 'NR==1 {print $$2}' $(PLATFORM)/src/syscfg/tmp.h)
+endif
 ifeq ($(OS),android)
 ifeq ($(CPU),arm64-v8a)
 	cp lock-obj-pub.aarch64-unknown-linux-android.h $(PLATFORM)/src/syscfg/lock-obj-pub.linux-android.h
+else
+	cp $(PLATFORM)/src/syscfg/lock-obj-pub.arm-unknown-linux-androideabi.h $(PLATFORM)/src/syscfg/lock-obj-pub.linux-android.h
 endif
 endif
 	$(MAKE) -C $(PLATFORM)
diff --git a/xbmc/addons/Addon.cpp b/xbmc/addons/Addon.cpp
index 2cfd7fbdf9..09b4b7d175 100644
--- a/xbmc/addons/Addon.cpp
+++ b/xbmc/addons/Addon.cpp
@@ -393,16 +393,6 @@ AddonVersion CAddon::GetDependencyVersion(const std::string &dependencyID) const
   return AddonVersion("0.0.0");
 }
 
-void OnEnabled(const AddonPtr& addon)
-{
-  addon->OnEnabled();
-}
-
-void OnDisabled(const AddonPtr& addon)
-{
-  addon->OnDisabled();
-}
-
 void OnPreInstall(const AddonPtr& addon)
 {
   //Fallback to the pre-install callback in the addon.
diff --git a/xbmc/addons/Addon.h b/xbmc/addons/Addon.h
index 95f3f23437..b877839848 100644
--- a/xbmc/addons/Addon.h
+++ b/xbmc/addons/Addon.h
@@ -36,12 +36,10 @@ namespace ADDON
 
   const char* const ORIGIN_SYSTEM = "b6a50484-93a0-4afb-a01c-8d17e059feda";
 
-void OnEnabled(const AddonPtr& addon);
-void OnDisabled(const AddonPtr& addon);
-void OnPreInstall(const AddonPtr& addon);
-void OnPostInstall(const AddonPtr& addon, bool update, bool modal);
-void OnPreUnInstall(const AddonPtr& addon);
-void OnPostUnInstall(const AddonPtr& addon);
+  void OnPreInstall(const AddonPtr& addon);
+  void OnPostInstall(const AddonPtr& addon, bool update, bool modal);
+  void OnPreUnInstall(const AddonPtr& addon);
+  void OnPostUnInstall(const AddonPtr& addon);
 
 class CAddon : public IAddon
 {
@@ -194,16 +192,6 @@ public:
   bool MeetsVersion(const AddonVersion &version) const override { return m_addonInfo.MeetsVersion(version); }
   bool ReloadSettings() override;
 
-  /*! \brief callback for when this add-on is disabled.
-   Use to perform any needed actions (e.g. stop a service)
-   */
-  void OnDisabled() override {};
-
-  /*! \brief callback for when this add-on is enabled.
-   Use to perform any needed actions (e.g. start a service)
-   */
-  void OnEnabled() override {};
-
   /*! \brief retrieve the running instance of an add-on if it persists while running.
    */
   AddonPtr GetRunningInstance() const override { return AddonPtr(); }
diff --git a/xbmc/addons/AddonManager.cpp b/xbmc/addons/AddonManager.cpp
index 277fd58f20..e015f0755e 100644
--- a/xbmc/addons/AddonManager.cpp
+++ b/xbmc/addons/AddonManager.cpp
@@ -836,7 +836,6 @@ bool CAddonMgr::DisableAddon(const std::string& id)
   AddonPtr addon;
   if (GetAddon(id, addon, ADDON_UNKNOWN, false) && addon != NULL)
   {
-    ADDON::OnDisabled(addon);
     CEventLog::GetInstance().Add(EventPtr(new CAddonManagementEvent(addon, 24141)));
   }
 
@@ -865,7 +864,6 @@ bool CAddonMgr::EnableSingle(const std::string& id)
   if (!m_database.DisableAddon(id, false))
     return false;
   m_disabled.erase(id);
-  ADDON::OnEnabled(addon);
 
   CEventLog::GetInstance().Add(EventPtr(new CAddonManagementEvent(addon, 24064)));
 
diff --git a/xbmc/addons/IAddon.h b/xbmc/addons/IAddon.h
index 2944dd769d..0926b296f4 100644
--- a/xbmc/addons/IAddon.h
+++ b/xbmc/addons/IAddon.h
@@ -89,8 +89,6 @@ namespace ADDON
     virtual AddonVersion GetDependencyVersion(const std::string &dependencyID) const =0;
     virtual bool MeetsVersion(const AddonVersion &version) const =0;
     virtual bool ReloadSettings() =0;
-    virtual void OnDisabled() =0;
-    virtual void OnEnabled() =0;
     virtual AddonPtr GetRunningInstance() const=0;
     virtual void OnPreInstall() =0;
     virtual void OnPostInstall(bool update, bool modal) =0;
diff --git a/xbmc/addons/PVRClient.cpp b/xbmc/addons/PVRClient.cpp
index 68c132ea06..579c525be7 100644
--- a/xbmc/addons/PVRClient.cpp
+++ b/xbmc/addons/PVRClient.cpp
@@ -69,18 +69,6 @@ CPVRClient::~CPVRClient(void)
   Destroy();
 }
 
-void CPVRClient::OnDisabled()
-{
-  CAddon::OnDisabled();
-  CServiceBroker::GetPVRManager().Clients()->UpdateAddons();
-}
-
-void CPVRClient::OnEnabled()
-{
-  CAddon::OnEnabled();
-  CServiceBroker::GetPVRManager().Clients()->UpdateAddons();
-}
-
 void CPVRClient::StopRunningInstance()
 {
   const ADDON::AddonPtr addon(GetRunningInstance());
diff --git a/xbmc/addons/PVRClient.h b/xbmc/addons/PVRClient.h
index 88e1141058..56252d58f5 100644
--- a/xbmc/addons/PVRClient.h
+++ b/xbmc/addons/PVRClient.h
@@ -211,8 +211,6 @@ namespace PVR
     explicit CPVRClient(ADDON::CAddonInfo addonInfo);
     ~CPVRClient(void) override;
 
-    void OnDisabled() override;
-    void OnEnabled() override;
     void OnPreInstall() override;
     void OnPostInstall(bool update, bool modal) override;
     void OnPreUnInstall() override;
diff --git a/xbmc/pvr/addons/PVRClients.cpp b/xbmc/pvr/addons/PVRClients.cpp
index 7a2e02d825..028738069b 100644
--- a/xbmc/pvr/addons/PVRClients.cpp
+++ b/xbmc/pvr/addons/PVRClients.cpp
@@ -57,6 +57,7 @@ CPVRClients::CPVRClients(void) :
 
 CPVRClients::~CPVRClients(void)
 {
+  CServiceBroker::GetAddonMgr().Events().Unsubscribe(this);
   CServiceBroker::GetAddonMgr().UnregisterAddonMgrCallback(ADDON_PVRDLL);
   Unload();
 }
@@ -64,7 +65,7 @@ CPVRClients::~CPVRClients(void)
 void CPVRClients::Start(void)
 {
   CServiceBroker::GetAddonMgr().RegisterAddonMgrCallback(ADDON_PVRDLL, this);
-
+  CServiceBroker::GetAddonMgr().Events().Subscribe(this, &CPVRClients::OnAddonEvent);
   UpdateAddons();
 }
 
@@ -1458,3 +1459,12 @@ void CPVRClients::OnPowerSavingDeactivated()
   for (auto &client : clients)
     client.second->OnPowerSavingDeactivated();
 }
+
+void CPVRClients::OnAddonEvent(const AddonEvent& event)
+{
+  if (typeid(event) == typeid(AddonEvents::Enabled) ||
+      typeid(event) == typeid(AddonEvents::Disabled))
+  {
+    UpdateAddons();
+  }
+}
diff --git a/xbmc/pvr/addons/PVRClients.h b/xbmc/pvr/addons/PVRClients.h
index 33c582b84e..6ad5713572 100644
--- a/xbmc/pvr/addons/PVRClients.h
+++ b/xbmc/pvr/addons/PVRClients.h
@@ -30,6 +30,11 @@
 #include "pvr/channels/PVRChannel.h"
 #include "pvr/recordings/PVRRecording.h"
 
+namespace ADDON
+{
+  struct AddonEvent;
+}
+
 namespace PVR
 {
   class CPVREpg;
@@ -706,6 +711,12 @@ namespace PVR
     void OnPowerSavingActivated();
     void OnPowerSavingDeactivated();
 
+    /*!
+     * @brief Handle addon events (enable, disable, ...).
+     * @param event The addon event.
+     */
+    void OnAddonEvent(const ADDON::AddonEvent& event);
+
   private:
     /*!
      * @brief Get the instance of the client.
