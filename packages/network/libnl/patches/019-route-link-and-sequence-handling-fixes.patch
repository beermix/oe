commit bb446bc1164ebc6056097a79a96b532845e268c8
Author: Thomas Haller <thaller@redhat.com>
Date:   Wed Apr 11 12:48:16 2018 +0200

    nl-msg: explicitly initialize nlmsg_seq and nlmsg_pid field in nlmsg_alloc_simple()

    This is no change in behavior, because the NL_AUTO_* macros are both
    zero.

commit dc61768ec6e392543113863517a74858a74212ab
Author: Thomas Haller <thaller@redhat.com>
Date:   Wed Apr 11 12:40:39 2018 +0200

    route/link: assert in rtnl_link_change() that the sequence number is set as expected

commit 4e2f5dfa6484a90d8c01f5d5f9c46dddab8d86e9
Author: Tuetuopay <tuetuopay@me.com>
Date:   Mon Apr 9 16:21:41 2018 +0200

    route/link: fix sequence number handling in rtnl_link_change()

    When rtnl_link_change() fails with -NLE_OPNOTSUPP, it retries
    with RTM_SETLINK operation. However, it also needs to re-adjust
    the sequence number. Otherwise, the second request might fail
    with NLE_SEQ_MISMATCH, although it actually succeeded.

    [thaller@redhat.com: changed commit message]

    https://github.com/thom311/libnl/issues/179
    https://github.com/thom311/libnl/pull/184

--- a/lib/msg.c
+++ b/lib/msg.c
@@ -350,6 +350,8 @@ struct nl_msg *nlmsg_alloc_simple(int nl
 	struct nlmsghdr nlh = {
 		.nlmsg_type = nlmsgtype,
 		.nlmsg_flags = flags,
+		.nlmsg_seq = NL_AUTO_SEQ,
+		.nlmsg_pid = NL_AUTO_PID,
 	};
 
 	msg = nlmsg_inherit(&nlh);
--- a/lib/route/link.c
+++ b/lib/route/link.c
@@ -1772,6 +1772,10 @@ errout:
  * @note The link name can only be changed if the link has been put
  *       in opertional down state. (~IF_UP)
  *
+ * @note On versions up to 3.4.0, \c NLE_SEQ_MISMATCH would be returned if the
+ *       kernel does not supports \c RTM_NEWLINK. It is advised to ignore the
+ *       error code if you cannot upgrade the library.
+ *
  * @return 0 on success or a negative error code.
  */
 int rtnl_link_change(struct nl_sock *sk, struct rtnl_link *orig,
@@ -1784,6 +1788,7 @@ int rtnl_link_change(struct nl_sock *sk,
 	if (err < 0)
 		return err;
 
+	BUG_ON(msg->nm_nlh->nlmsg_seq != NL_AUTO_SEQ);
 retry:
 	err = nl_send_auto_complete(sk, msg);
 	if (err < 0)
@@ -1792,6 +1797,7 @@ retry:
 	err = wait_for_ack(sk);
 	if (err == -NLE_OPNOTSUPP && msg->nm_nlh->nlmsg_type == RTM_NEWLINK) {
 		msg->nm_nlh->nlmsg_type = RTM_SETLINK;
+		msg->nm_nlh->nlmsg_seq = NL_AUTO_SEQ;
 		goto retry;
 	}
 
