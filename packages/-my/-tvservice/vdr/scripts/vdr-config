#!/bin/sh
################################################################################
#      This file is part of Alex@ELEC - http://www.alexelec.in.ua
#      Copyright (C) 2011-2016 Alexandr Zuyev (alex@alexelec.in.ua)
################################################################################

. /etc/profile
[ -f /storage/.config/vdr/vdr-plugins.conf ] && . /storage/.config/vdr/vdr-plugins.conf

LOCK_DIR="/var/lock"
SERVICE_DIR="/storage/.cache/services"
. $SERVICE_DIR/vdr.conf

[ -f "$SERVICE_DIR/locale.conf" ] && . $SERVICE_DIR/locale.conf
[ -z "$SYS_LOCALE" ] && SYS_LOCALE="ru_RU.UTF-8"

  VDR_ARGS="--lirc=/run/lirc/lircd"
  if [ "$VDR_DEBUG" == "1" ]; then
      VDR_ARGS="$VDR_ARGS --log=3"
  else
      VDR_ARGS="$VDR_ARGS --log=1"
  fi

  if [ -d "$VDR_VIDEO_DIR" ]; then
      VDR_ARGS="$VDR_ARGS --video=\'$VDR_VIDEO_DIR\'"
  fi

  # set video driver for softhddevice
  if [ "$GPUTYPE" = "INTEL" ]; then
      SOFTHD_VIDEO="va-api"
  else
      SOFTHD_VIDEO="vdpau"
  fi

  if [ -n "$SOFTHD_ARGS" ]; then
      VDR_ARGS="$VDR_ARGS -P'softhddevice -v $SOFTHD_VIDEO $SOFTHD_ARGS'"
  else
      VDR_ARGS="$VDR_ARGS -P'softhddevice -v $SOFTHD_VIDEO'"
  fi

  [ -z "$VDR_DVBAPI" ] && VDR_DVBAPI="1"
  [ "$VDR_DVBAPI" == "1" ] && VDR_ARGS="$VDR_ARGS -P'dvbapi -d'"
  [ "$VDR_IPTV" == "1" ] && VDR_ARGS="$VDR_ARGS -P 'iptv -d $VDR_IPTV_DEVICES'"
  [ "$VDR_SATIP" == "1" ] && VDR_ARGS="$VDR_ARGS -P satip"
  [ "$VDR_EPGSEARCH" == "1" ] && VDR_ARGS="$VDR_ARGS -P epgsearch"
  [ "$VDR_STREAMDEV_SERVER" == "1" ] && VDR_ARGS="$VDR_ARGS -P streamdev-server"
  [ "$VDR_STREAMDEV_CLIENT" == "1" ] && VDR_ARGS="$VDR_ARGS -P streamdev-client -P epgsync -P svdrpservice"
  [ "$VDR_CHSCAN" == "1" ] && VDR_ARGS="$VDR_ARGS -P channelscan"
  [ "$VDR_FEMON" == "1" ] && VDR_ARGS="$VDR_ARGS -P femon"
  [ "$VDR_SYSINFO" == "1" ] && VDR_ARGS="$VDR_ARGS -P systeminfo"
  [ "$VDR_SLEEP" == "1" ] && VDR_ARGS="$VDR_ARGS -P sleeptimer"
  [ -z "$VDR_PVR" ] && VDR_PVR="none"
  [ "$VDR_PVR" != "none" ] && VDR_ARGS="$VDR_ARGS -P $VDR_PVR"
  [ "$VDR_TVSCRAPER" == "1" ] && VDR_ARGS="$VDR_ARGS -P tvscraper"
  [ "$VDR_SKIN_NOPACITY" == "1" ] && VDR_ARGS="$VDR_ARGS -P skinnopacity"
  [ "$VDR_WEATHER" == "1" ] && VDR_ARGS="$VDR_ARGS -P weatherforecast"
  [ "$VDR_SKIN_DESIGNER" == "1" ] && VDR_ARGS="$VDR_ARGS -P skindesigner"
  [ "$VDR_TVGUIDENG" == "1" -a "$VDR_SKIN_DESIGNER" == "1" ] && VDR_ARGS="$VDR_ARGS -P tvguideng"
  [ "$VDR_ZAPHISTORY" == "1" ] && VDR_ARGS="$VDR_ARGS -P zaphistory"
  [ "$VDR_LCDPROC" == "1" ] && VDR_ARGS="$VDR_ARGS -P lcdproc"

  if [ "$VDR_LIVE" == "1" ]; then
      mkdir -p /storage/.cache/vdr/epgimages
      [ "$VDR_EPGSEARCH" != "1" ] && VDR_ARGS="$VDR_ARGS -P epgsearch"
      VDR_ARGS="$VDR_ARGS -P'live --ip=0.0.0.0 -e /storage/.cache/vdr/epgimages'"
      if [ ! -e /storage/.config/vdr/plugins/live/live.pem ] || [ ! -e /storage/.config/vdr/plugins/live/live-key.pem ]; then
          openssl req -new -x509 -nodes -days 9999 -batch -subj "/" -outform pem -out /storage/.config/vdr/plugins/live/live.pem -keyout /storage/.config/vdr/plugins/live/live-key.pem > /dev/null 2>&1
      fi
  fi

  [ -n "$VDR_PLUGINS" ] && VDR_ARGS="$VDR_ARGS $VDR_PLUGINS"

  if [ -f "$SERVICE_DIR/ttv.conf" -a "$VDR_IPTV" == "1" ]; then
      if systemctl is-active aceproxy.service &>/dev/null ; then
          . $SERVICE_DIR/ttv.conf
          [ -z "$VDR_TTV_DEL" ] && VDR_TTV_DEL=0
          [ -z "$VDR_TTV_NUM" ] && VDR_TTV_NUM=1000
          eval DEL=$VDR_TTV_DEL NUM=$VDR_TTV_NUM /usr/bin/scan-ttv VDR > /dev/null 2>&1
      fi
  fi

# wait for DVB
wait_for_dvb
load_firmware

# refresh rate 50hz
rm -f /tmp/resolution.conf
if [ "$VDR_50HZ" == "1" ]; then
  # connected Output
  DISP=$(xrandr |grep ' connected' | awk '{print $1}')
  # current resolution
  RES=$(xrandr --verbose | grep '*current' | awk '{print $1}')
  # current mode save
  MODE=$(xrandr --verbose | grep '*current' | awk '{print $2}' | sed 's/(//; s/)//')
  echo "MODE=\"$MODE\"" > /tmp/resolution.conf

  logger -t vdr "set display mode: $DISP $RES 50hz"
  xrandr --output $DISP --mode $RES --rate 50
fi

echo "SYS_LOCALE=\"$SYS_LOCALE\"" > /run/alexelec/vdr.conf
echo "VDR_ARGS=\"$VDR_ARGS\"" >> /run/alexelec/vdr.conf

clear_ram
exit 0
