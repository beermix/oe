commit d1b878ec9a4e6a92e2863a8929e9794dd12b13b9
Author: Tristan Gingold <gingold@adacore.com>
Date:   Thu Mar 2 10:35:22 2017 +0100

    Set version to 2.28, not a relase.
    
    bfd/
    2017-03-02  Tristan Gingold  <gingold@adacore.com>
    
    	* version.m4: Bump version to 2.28.0
    	* configure: Regenerate.
    
    binutils/
    2017-03-02  Tristan Gingold  <gingold@adacore.com>
    
    	* configure: Regenerate.
    
    gas/
    2017-03-02  Tristan Gingold  <gingold@adacore.com>
    
    	* configure: Regenerate.
    
    gprof/
    2017-03-02  Tristan Gingold  <gingold@adacore.com>
    
    	* configure: Regenerate.
    
    ld/
    2017-03-02  Tristan Gingold  <gingold@adacore.com>
    
    	* configure: Regenerate.
    
    opcodes/
    2017-03-02  Tristan Gingold  <gingold@adacore.com>
    
    	* configure: Regenerate.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 85c6a81..9809bcf 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,5 +1,14 @@
 2017-03-02  Tristan Gingold  <gingold@adacore.com>
 
+	* version.m4: Bump version to 2.28.0
+	* configure: Regenerate.
+
+2017-03-02  Tristan Gingold  <gingold@adacore.com>
+
+	* development.sh: Set development to true.
+
+2017-03-02  Tristan Gingold  <gingold@adacore.com>
+
 	* version.m4: Bump version to 2.28
 	* configure: Regenerate.
 
diff --git a/bfd/configure b/bfd/configure
index 9769387..f30bfab 100755
--- a/bfd/configure
+++ b/bfd/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for bfd 2.28.
+# Generated by GNU Autoconf 2.64 for bfd 2.28.0.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='bfd'
 PACKAGE_TARNAME='bfd'
-PACKAGE_VERSION='2.28'
-PACKAGE_STRING='bfd 2.28'
+PACKAGE_VERSION='2.28.0'
+PACKAGE_STRING='bfd 2.28.0'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1354,7 +1354,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures bfd 2.28 to adapt to many kinds of systems.
+\`configure' configures bfd 2.28.0 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1425,7 +1425,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of bfd 2.28:";;
+     short | recursive ) echo "Configuration of bfd 2.28.0:";;
    esac
   cat <<\_ACEOF
 
@@ -1546,7 +1546,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-bfd configure 2.28
+bfd configure 2.28.0
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -2188,7 +2188,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by bfd $as_me 2.28, which was
+It was created by bfd $as_me 2.28.0, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -3997,7 +3997,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='bfd'
- VERSION='2.28'
+ VERSION='2.28.0'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -16613,7 +16613,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by bfd $as_me 2.28, which was
+This file was extended by bfd $as_me 2.28.0, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -16677,7 +16677,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-bfd config.status 2.28
+bfd config.status 2.28.0
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
diff --git a/bfd/development.sh b/bfd/development.sh
index b001a88..cd31410 100644
--- a/bfd/development.sh
+++ b/bfd/development.sh
@@ -16,4 +16,4 @@
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
 # Controls whether to enable development-mode features by default.
-development=false
+development=true
diff --git a/bfd/version.m4 b/bfd/version.m4
index 0cfca2d..8bde21e 100644
--- a/bfd/version.m4
+++ b/bfd/version.m4
@@ -1 +1 @@
-m4_define([BFD_VERSION], [2.28])
+m4_define([BFD_VERSION], [2.28.0])
diff --git a/binutils/ChangeLog b/binutils/ChangeLog
index aa17468..f21867f 100644
--- a/binutils/ChangeLog
+++ b/binutils/ChangeLog
@@ -2,6 +2,10 @@
 
 	* configure: Regenerate.
 
+2017-03-02  Tristan Gingold  <gingold@adacore.com>
+
+	* configure: Regenerate.
+
 2017-01-18  Bernhard Rosenkranzer  <bero@lindev.ch>
 
 	PR 21059
diff --git a/binutils/configure b/binutils/configure
index baddf34..82119ef 100755
--- a/binutils/configure
+++ b/binutils/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for binutils 2.28.
+# Generated by GNU Autoconf 2.64 for binutils 2.28.0.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='binutils'
 PACKAGE_TARNAME='binutils'
-PACKAGE_VERSION='2.28'
-PACKAGE_STRING='binutils 2.28'
+PACKAGE_VERSION='2.28.0'
+PACKAGE_STRING='binutils 2.28.0'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1338,7 +1338,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures binutils 2.28 to adapt to many kinds of systems.
+\`configure' configures binutils 2.28.0 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1409,7 +1409,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of binutils 2.28:";;
+     short | recursive ) echo "Configuration of binutils 2.28.0:";;
    esac
   cat <<\_ACEOF
 
@@ -1530,7 +1530,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-binutils configure 2.28
+binutils configure 2.28.0
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -2172,7 +2172,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by binutils $as_me 2.28, which was
+It was created by binutils $as_me 2.28.0, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -3981,7 +3981,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='binutils'
- VERSION='2.28'
+ VERSION='2.28.0'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -15223,7 +15223,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by binutils $as_me 2.28, which was
+This file was extended by binutils $as_me 2.28.0, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -15287,7 +15287,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-binutils config.status 2.28
+binutils config.status 2.28.0
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
diff --git a/gas/ChangeLog b/gas/ChangeLog
index 8a586ad..fa9ecbe 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -2,6 +2,10 @@
 
 	* configure: Regenerate.
 
+2017-03-02  Tristan Gingold  <gingold@adacore.com>
+
+	* configure: Regenerate.
+
 2017-02-28  Alan Modra  <amodra@gmail.com>
 
 	* config/tc-nios2.h (TC_FORCE_RELOCATION_SUB_LOCAL): Define.
diff --git a/gas/configure b/gas/configure
index ce7091e..e574cb8 100755
--- a/gas/configure
+++ b/gas/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for gas 2.28.
+# Generated by GNU Autoconf 2.64 for gas 2.28.0.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='gas'
 PACKAGE_TARNAME='gas'
-PACKAGE_VERSION='2.28'
-PACKAGE_STRING='gas 2.28'
+PACKAGE_VERSION='2.28.0'
+PACKAGE_STRING='gas 2.28.0'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1330,7 +1330,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures gas 2.28 to adapt to many kinds of systems.
+\`configure' configures gas 2.28.0 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1401,7 +1401,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of gas 2.28:";;
+     short | recursive ) echo "Configuration of gas 2.28.0:";;
    esac
   cat <<\_ACEOF
 
@@ -1523,7 +1523,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-gas configure 2.28
+gas configure 2.28.0
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -1933,7 +1933,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by gas $as_me 2.28, which was
+It was created by gas $as_me 2.28.0, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -3742,7 +3742,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='gas'
- VERSION='2.28'
+ VERSION='2.28.0'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -15212,7 +15212,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by gas $as_me 2.28, which was
+This file was extended by gas $as_me 2.28.0, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -15276,7 +15276,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-gas config.status 2.28
+gas config.status 2.28.0
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
diff --git a/gprof/ChangeLog b/gprof/ChangeLog
index cc57e0d8..0c25d51 100644
--- a/gprof/ChangeLog
+++ b/gprof/ChangeLog
@@ -2,6 +2,10 @@
 
 	* configure: Regenerate.
 
+2017-03-02  Tristan Gingold  <gingold@adacore.com>
+
+	* configure: Regenerate.
+
 2017-01-02  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
diff --git a/gprof/configure b/gprof/configure
index 43e0dac..9e6b8f3 100755
--- a/gprof/configure
+++ b/gprof/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for gprof 2.28.
+# Generated by GNU Autoconf 2.64 for gprof 2.28.0.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='gprof'
 PACKAGE_TARNAME='gprof'
-PACKAGE_VERSION='2.28'
-PACKAGE_STRING='gprof 2.28'
+PACKAGE_VERSION='2.28.0'
+PACKAGE_STRING='gprof 2.28.0'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1302,7 +1302,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures gprof 2.28 to adapt to many kinds of systems.
+\`configure' configures gprof 2.28.0 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1373,7 +1373,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of gprof 2.28:";;
+     short | recursive ) echo "Configuration of gprof 2.28.0:";;
    esac
   cat <<\_ACEOF
 
@@ -1479,7 +1479,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-gprof configure 2.28
+gprof configure 2.28.0
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -1844,7 +1844,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by gprof $as_me 2.28, which was
+It was created by gprof $as_me 2.28.0, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -3653,7 +3653,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='gprof'
- VERSION='2.28'
+ VERSION='2.28.0'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -12787,7 +12787,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by gprof $as_me 2.28, which was
+This file was extended by gprof $as_me 2.28.0, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -12851,7 +12851,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-gprof config.status 2.28
+gprof config.status 2.28.0
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
diff --git a/ld/ChangeLog b/ld/ChangeLog
index ba7d1d4..fd3e232 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -2,6 +2,10 @@
 
 	* configure: Regenerate.
 
+2017-03-02  Tristan Gingold  <gingold@adacore.com>
+
+	* configure: Regenerate.
+
 2017-02-28  Alan Modra  <amodra@gmail.com>
 
 	* testsuite/ld-elf/merge.d: xfail for nios.
diff --git a/ld/configure b/ld/configure
index 36af969..a16c6db 100755
--- a/ld/configure
+++ b/ld/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for ld 2.28.
+# Generated by GNU Autoconf 2.64 for ld 2.28.0.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='ld'
 PACKAGE_TARNAME='ld'
-PACKAGE_VERSION='2.28'
-PACKAGE_STRING='ld 2.28'
+PACKAGE_VERSION='2.28.0'
+PACKAGE_STRING='ld 2.28.0'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1354,7 +1354,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures ld 2.28 to adapt to many kinds of systems.
+\`configure' configures ld 2.28.0 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1425,7 +1425,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of ld 2.28:";;
+     short | recursive ) echo "Configuration of ld 2.28.0:";;
    esac
   cat <<\_ACEOF
 
@@ -1550,7 +1550,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-ld configure 2.28
+ld configure 2.28.0
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -2259,7 +2259,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by ld $as_me 2.28, which was
+It was created by ld $as_me 2.28.0, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -4069,7 +4069,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='ld'
- VERSION='2.28'
+ VERSION='2.28.0'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -17813,7 +17813,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by ld $as_me 2.28, which was
+This file was extended by ld $as_me 2.28.0, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -17877,7 +17877,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-ld config.status 2.28
+ld config.status 2.28.0
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index 7f01e54..1ea126a 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -2,6 +2,10 @@
 
 	* configure: Regenerate.
 
+2017-03-02  Tristan Gingold  <gingold@adacore.com>
+
+	* configure: Regenerate.
+
 2017-02-14  Andrew Waterman  <andrew@sifive.com>
 
 	* riscv-opc.c (riscv_opcodes): Add sfence.vma instruction and
diff --git a/opcodes/configure b/opcodes/configure
index be87eb2..0b352a4 100755
--- a/opcodes/configure
+++ b/opcodes/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for opcodes 2.28.
+# Generated by GNU Autoconf 2.64 for opcodes 2.28.0.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='opcodes'
 PACKAGE_TARNAME='opcodes'
-PACKAGE_VERSION='2.28'
-PACKAGE_STRING='opcodes 2.28'
+PACKAGE_VERSION='2.28.0'
+PACKAGE_STRING='opcodes 2.28.0'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1322,7 +1322,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures opcodes 2.28 to adapt to many kinds of systems.
+\`configure' configures opcodes 2.28.0 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1393,7 +1393,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of opcodes 2.28:";;
+     short | recursive ) echo "Configuration of opcodes 2.28.0:";;
    esac
   cat <<\_ACEOF
 
@@ -1500,7 +1500,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-opcodes configure 2.28
+opcodes configure 2.28.0
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -1910,7 +1910,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by opcodes $as_me 2.28, which was
+It was created by opcodes $as_me 2.28.0, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -3719,7 +3719,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='opcodes'
- VERSION='2.28'
+ VERSION='2.28.0'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -13305,7 +13305,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by opcodes $as_me 2.28, which was
+This file was extended by opcodes $as_me 2.28.0, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -13369,7 +13369,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-opcodes config.status 2.28
+opcodes config.status 2.28.0
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 

commit e2aea2df745ca163d03833870d878f316a355bea
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri Mar 3 00:01:08 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index eda06e4..e73f953 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170302
+#define BFD_VERSION_DATE 20170303
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 6172d65c043dd4d7e47fccf045a23203934a4652
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat Mar 4 00:01:53 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index e73f953..f6ab467 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170303
+#define BFD_VERSION_DATE 20170304
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 1db230fe02cf46860fc5152db084e4ef987da4c0
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun Mar 5 00:01:17 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index f6ab467..949fe82 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170304
+#define BFD_VERSION_DATE 20170305
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 1409addf08f6c26005f6c170b42d905f0c6543ab
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon Mar 6 00:01:19 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 949fe82..2880244 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170305
+#define BFD_VERSION_DATE 20170306
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 40d57b19475996f69bdd483be0ad5ac1e1fe8ef9
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue Mar 7 00:01:28 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 2880244..31fdf99 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170306
+#define BFD_VERSION_DATE 20170307
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit dd41da822fabe03afa7ba869068c46de23290277
Author: Alan Modra <amodra@gmail.com>
Date:   Thu Mar 2 10:24:14 2017 +1030

    PowerPC VLE typo fix
    
    	* elf32-ppc.c (ppc_elf_vle_split16): Correct insn mask typo.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 9809bcf..459c405 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,9 @@
+2017-03-07  Alan Modra  <amodra@gmail.com>
+
+	Apply from master
+	2017-03-02  Alan Modra  <amodra@gmail.com>
+	* elf32-ppc.c (ppc_elf_vle_split16): Correct insn mask typo.
+
 2017-03-02  Tristan Gingold  <gingold@adacore.com>
 
 	* version.m4: Bump version to 2.28.0
diff --git a/bfd/elf32-ppc.c b/bfd/elf32-ppc.c
index 0f3eb68..10caa8a 100644
--- a/bfd/elf32-ppc.c
+++ b/bfd/elf32-ppc.c
@@ -4921,7 +4921,7 @@ ppc_elf_vle_split16 (bfd *input_bfd,
   unsigned int insn, opcode, top5;
 
   insn = bfd_get_32 (input_bfd, loc);
-  opcode = insn & 0xf300f800;
+  opcode = insn & 0xfc00f800;
   if (opcode == E_OR2I_INSN
       || opcode == E_AND2I_DOT_INSN
       || opcode == E_OR2IS_INSN

commit 433f02bf9926a90e6e457d0470319cab75c2e651
Author: Alan Modra <amodra@gmail.com>
Date:   Mon Mar 6 19:39:34 2017 +1030

    Don't decode powerpc insns with invalid fields
    
    Certain insns have restrictions on fields.  For example, the insn
    mentioned in the PR, lqarx, must specify an even general purpose
    register as its destination and that register cannot appear in
    either of the base or index reg fields.  This holds even when the RA0
    field is 0 (meaning a zero rather than r0).
    
    	PR 21124
    	* ppc-opc.c (extract_esync, extract_ls, extract_ral, extract_ram)
    	(extract_raq, extract_ras, extract_rbx): New functions.
    	(powerpc_operands): Use opposite corresponding insert function.
    	(Q_MASK): Define.
    	(powerpc_opcodes): Apply Q_MASK to all quad insns with even
    	register restriction.

diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index 1ea126a..3a19442 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,3 +1,15 @@
+2017-03-07  Alan Modra  <amodra@gmail.com>
+
+	Apply from master
+	2017-03-06  Alan Modra  <amodra@gmail.com>
+	PR 21124
+	* ppc-opc.c (extract_esync, extract_ls, extract_ral, extract_ram)
+	(extract_raq, extract_ras, extract_rbx): New functions.
+	(powerpc_operands): Use opposite corresponding insert function.
+	(Q_MASK): Define.
+	(powerpc_opcodes): Apply Q_MASK to all quad insns with even
+	register restriction.
+
 2017-03-02  Tristan Gingold  <gingold@adacore.com>
 
 	* configure: Regenerate.
diff --git a/opcodes/ppc-opc.c b/opcodes/ppc-opc.c
index 9ac779c..30fd789 100644
--- a/opcodes/ppc-opc.c
+++ b/opcodes/ppc-opc.c
@@ -54,6 +54,7 @@ static long extract_bo (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_boe (unsigned long, long, ppc_cpu_t, const char **);
 static long extract_boe (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_esync (unsigned long, long, ppc_cpu_t, const char **);
+static long extract_esync (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_dcmxs (unsigned long, long, ppc_cpu_t, const char **);
 static long extract_dcmxs (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_dxd (unsigned long, long, ppc_cpu_t, const char **);
@@ -65,6 +66,7 @@ static long extract_fxm (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_li20 (unsigned long, long, ppc_cpu_t, const char **);
 static long extract_li20 (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_ls (unsigned long, long, ppc_cpu_t, const char **);
+static long extract_ls (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_mbe (unsigned long, long, ppc_cpu_t, const char **);
 static long extract_mbe (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_mb6 (unsigned long, long, ppc_cpu_t, const char **);
@@ -76,12 +78,17 @@ static long extract_nsi (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_oimm (unsigned long, long, ppc_cpu_t, const char **);
 static long extract_oimm (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_ral (unsigned long, long, ppc_cpu_t, const char **);
+static long extract_ral (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_ram (unsigned long, long, ppc_cpu_t, const char **);
+static long extract_ram (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_raq (unsigned long, long, ppc_cpu_t, const char **);
+static long extract_raq (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_ras (unsigned long, long, ppc_cpu_t, const char **);
+static long extract_ras (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_rbs (unsigned long, long, ppc_cpu_t, const char **);
 static long extract_rbs (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_rbx (unsigned long, long, ppc_cpu_t, const char **);
+static long extract_rbx (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_rx (unsigned long, long, ppc_cpu_t, const char **);
 static long extract_rx (unsigned long, ppc_cpu_t, int *);
 static unsigned long insert_ry (unsigned long, long, ppc_cpu_t, const char **);
@@ -462,7 +469,7 @@ const struct powerpc_operand powerpc_operands[] =
   /* The LS or WC field in an X (sync or wait) form instruction.  */
 #define LS LIA + 1
 #define WC LS
-  { 0x3, 21, insert_ls, NULL, PPC_OPERAND_OPTIONAL },
+  { 0x3, 21, insert_ls, extract_ls, PPC_OPERAND_OPTIONAL },
 
   /* The ME field in an M form instruction.  */
 #define ME LS + 1
@@ -519,24 +526,24 @@ const struct powerpc_operand powerpc_operands[] =
      value restrictions.  */
 #define RAQ RA0 + 1
 #define RAX RAQ
-  { 0x1f, 16, insert_raq, NULL, PPC_OPERAND_GPR_0 },
+  { 0x1f, 16, insert_raq, extract_raq, PPC_OPERAND_GPR_0 },
 
   /* The RA field in a D or X form instruction which is an updating
      load, which means that the RA field may not be zero and may not
      equal the RT field.  */
 #define RAL RAQ + 1
-  { 0x1f, 16, insert_ral, NULL, PPC_OPERAND_GPR_0 },
+  { 0x1f, 16, insert_ral, extract_ral, PPC_OPERAND_GPR_0 },
 
   /* The RA field in an lmw instruction, which has special value
      restrictions.  */
 #define RAM RAL + 1
-  { 0x1f, 16, insert_ram, NULL, PPC_OPERAND_GPR_0 },
+  { 0x1f, 16, insert_ram, extract_ram, PPC_OPERAND_GPR_0 },
 
   /* The RA field in a D or X form instruction which is an updating
      store or an updating floating point load, which means that the RA
      field may not be zero.  */
 #define RAS RAM + 1
-  { 0x1f, 16, insert_ras, NULL, PPC_OPERAND_GPR_0 },
+  { 0x1f, 16, insert_ras, extract_ras, PPC_OPERAND_GPR_0 },
 
   /* The RA field of the tlbwe, dccci and iccci instructions,
      which are optional.  */
@@ -557,7 +564,7 @@ const struct powerpc_operand powerpc_operands[] =
   /* The RB field in an lswx instruction, which has special value
      restrictions.  */
 #define RBX RBS + 1
-  { 0x1f, 11, insert_rbx, NULL, PPC_OPERAND_GPR },
+  { 0x1f, 11, insert_rbx, extract_rbx, PPC_OPERAND_GPR },
 
   /* The RB field of the dccci and iccci instructions, which are optional.  */
 #define RBOPT RBX + 1
@@ -580,6 +587,7 @@ const struct powerpc_operand powerpc_operands[] =
      which have special value restrictions.  */
 #define RSQ RS + 1
 #define RTQ RSQ
+#define Q_MASK (1 << 21)
   { 0x1e, 21, NULL, NULL, PPC_OPERAND_GPR },
 
   /* The RS field of the tlbwe instruction, which is optional.  */
@@ -694,7 +702,7 @@ const struct powerpc_operand powerpc_operands[] =
 
   /* The ESYNC field in an X (sync) form instruction.  */
 #define ESYNC STRM + 1
-  { 0xf, 16, insert_esync, NULL, PPC_OPERAND_OPTIONAL },
+  { 0xf, 16, insert_esync, extract_esync, PPC_OPERAND_OPTIONAL },
 
   /* The SV field in a POWER SC form instruction.  */
 #define SV ESYNC + 1
@@ -1533,6 +1541,22 @@ insert_ls (unsigned long insn,
   return insn | ((value & 0x3) << 21);
 }
 
+static long
+extract_ls (unsigned long insn,
+	    ppc_cpu_t dialect,
+	    int *invalid)
+{
+  unsigned long lvalue = (insn >> 21) & 3;
+
+  if (((insn >> 1) & 0x3ff) == 598)
+    {
+      unsigned long max_lvalue = (dialect & PPC_OPCODE_POWER4) ? 2 : 1;
+      if (lvalue > max_lvalue)
+	*invalid = 1;
+    }
+  return lvalue;
+}
+
 /* The 4-bit E field in a sync instruction that accepts 2 operands.
    If ESYNC is non-zero, then the L field must be either 0 or 1 and
    the complement of ESYNC-bit2.  */
@@ -1560,6 +1584,27 @@ insert_esync (unsigned long insn,
   return insn | ((value & 0xf) << 16);
 }
 
+static long
+extract_esync (unsigned long insn,
+	       ppc_cpu_t dialect,
+	       int *invalid)
+{
+  unsigned long ls = (insn >> 21) & 0x3;
+  unsigned long lvalue = (insn >> 16) & 0xf;
+
+  if (lvalue == 0)
+    {
+      if (((dialect & PPC_OPCODE_E6500) != 0 && ls > 1)
+	  || ((dialect & PPC_OPCODE_POWER9) != 0 && ls > 2))
+	*invalid = 1;
+    }
+  else if ((ls & ~0x1)
+	   || (((lvalue >> 1) & 0x1) ^ ls) == 0)
+    *invalid = 1;
+
+  return lvalue;
+}
+
 /* The MB and ME fields in an M form instruction expressed as a single
    operand which is itself a bitmask.  The extraction function always
    marks it as invalid, since we never want to recognize an
@@ -1743,6 +1788,19 @@ insert_ral (unsigned long insn,
   return insn | ((value & 0x1f) << 16);
 }
 
+static long
+extract_ral (unsigned long insn,
+	     ppc_cpu_t dialect ATTRIBUTE_UNUSED,
+	     int *invalid)
+{
+  long rtvalue = (insn >> 21) & 0x1f;
+  long ravalue = (insn >> 16) & 0x1f;
+
+  if (rtvalue == ravalue || ravalue == 0)
+    *invalid = 1;
+  return ravalue;
+}
+
 /* The RA field in an lmw instruction, which has special value
    restrictions.  */
 
@@ -1757,6 +1815,19 @@ insert_ram (unsigned long insn,
   return insn | ((value & 0x1f) << 16);
 }
 
+static long
+extract_ram (unsigned long insn,
+	     ppc_cpu_t dialect ATTRIBUTE_UNUSED,
+	     int *invalid)
+{
+  unsigned long rtvalue = (insn >> 21) & 0x1f;
+  unsigned long ravalue = (insn >> 16) & 0x1f;
+
+  if (ravalue >= rtvalue)
+    *invalid = 1;
+  return ravalue;
+}
+
 /* The RA field in the DQ form lq or an lswx instruction, which have special
    value restrictions.  */
 
@@ -1773,6 +1844,19 @@ insert_raq (unsigned long insn,
   return insn | ((value & 0x1f) << 16);
 }
 
+static long
+extract_raq (unsigned long insn,
+	     ppc_cpu_t dialect ATTRIBUTE_UNUSED,
+	     int *invalid)
+{
+  unsigned long rtvalue = (insn >> 21) & 0x1f;
+  unsigned long ravalue = (insn >> 16) & 0x1f;
+
+  if (ravalue == rtvalue)
+    *invalid = 1;
+  return ravalue;
+}
+
 /* The RA field in a D or X form instruction which is an updating
    store or an updating floating point load, which means that the RA
    field may not be zero.  */
@@ -1788,6 +1872,18 @@ insert_ras (unsigned long insn,
   return insn | ((value & 0x1f) << 16);
 }
 
+static long
+extract_ras (unsigned long insn,
+	     ppc_cpu_t dialect ATTRIBUTE_UNUSED,
+	     int *invalid)
+{
+  unsigned long ravalue = (insn >> 16) & 0x1f;
+
+  if (ravalue == 0)
+    *invalid = 1;
+  return ravalue;
+}
+
 /* The RB field in an X form instruction when it must be the same as
    the RS field in the instruction.  This is used for extended
    mnemonics like mr.  This operand is marked FAKE.  The insertion
@@ -1829,6 +1925,19 @@ insert_rbx (unsigned long insn,
   return insn | ((value & 0x1f) << 11);
 }
 
+static long
+extract_rbx (unsigned long insn,
+	     ppc_cpu_t dialect ATTRIBUTE_UNUSED,
+	     int *invalid)
+{
+  unsigned long rtvalue = (insn >> 21) & 0x1f;
+  unsigned long rbvalue = (insn >> 11) & 0x1f;
+
+  if (rbvalue == rtvalue)
+    *invalid = 1;
+  return rbvalue;
+}
+
 /* The SCI8 field is made up of SCL and {U,N}I8 fields.  */
 static unsigned long
 insert_sci8 (unsigned long insn,
@@ -4974,7 +5083,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 
 {"stdux",	X(31,181),	X_MASK,	     PPC64,	0,		{RS, RAS, RB}},
 
-{"stqcx.",	XRC(31,182,1),	X_MASK,	     POWER8,	0,		{RSQ, RA0, RB}},
+{"stqcx.",	XRC(31,182,1), X_MASK|Q_MASK, POWER8,	0,		{RSQ, RA0, RB}},
 {"wchkall",	X(31,182),	X_MASK,	     PPCA2,	0,		{OBF}},
 
 {"stwux",	X(31,183),	X_MASK,	     PPCCOM,	0,		{RS, RAS, RB}},
@@ -5105,7 +5214,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 
 {"mfapidi",	X(31,275),	X_MASK,	     BOOKE,	E500|TITAN,	{RT, RA}},
 
-{"lqarx",	X(31,276),	XEH_MASK,    POWER8,	0,		{RTQ, RAX, RBX, EH}},
+{"lqarx",	X(31,276),  XEH_MASK|Q_MASK, POWER8,	0,		{RTQ, RAX, RBX, EH}},
 
 {"lscbx",	XRC(31,277,0),	X_MASK,	     M601,	0,		{RT, RA, RB}},
 {"lscbx.",	XRC(31,277,1),	X_MASK,	     M601,	0,		{RT, RA, RB}},
@@ -6052,7 +6161,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 
 {"lhbrx",	X(31,790),	X_MASK,	     COM,	0,		{RT, RA0, RB}},
 
-{"lfdpx",	X(31,791),	X_MASK,	     POWER6,	POWER7,		{FRTp, RA0, RB}},
+{"lfdpx",	X(31,791),    X_MASK|Q_MASK, POWER6,	POWER7,		{FRTp, RA0, RB}},
 {"lfqx",	X(31,791),	X_MASK,	     POWER2,	0,		{FRT, RA, RB}},
 
 {"sraw",	XRC(31,792,0),	X_MASK,	     PPCCOM,	0,		{RA, RS, RB}},
@@ -6167,7 +6276,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 
 {"sthbrx",	X(31,918),	X_MASK,	     COM,	0,		{RS, RA0, RB}},
 
-{"stfdpx",	X(31,919),	X_MASK,	     POWER6,	POWER7,		{FRSp, RA0, RB}},
+{"stfdpx",	X(31,919),    X_MASK|Q_MASK, POWER6,	POWER7,		{FRSp, RA0, RB}},
 {"stfqx",	X(31,919),	X_MASK,	     POWER2,	0,		{FRS, RA0, RB}},
 
 {"sraq",	XRC(31,920,0),	X_MASK,	     M601,	0,		{RA, RS, RB}},
@@ -6345,13 +6454,13 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 
 {"stfdu",	OP(55),		OP_MASK,     COM,	PPCEFS|PPCVLE,	{FRS, D, RAS}},
 
-{"lq",		OP(56),		OP_MASK,     POWER4,	PPC476|PPCVLE,	{RTQ, DQ, RAQ}},
+{"lq",		OP(56),	     OP_MASK|Q_MASK, POWER4,	PPC476|PPCVLE,	{RTQ, DQ, RAQ}},
 {"psq_l",	OP(56),		OP_MASK,     PPCPS,	PPCVLE,		{FRT,PSD,RA,PSW,PSQ}},
 {"lfq",		OP(56),		OP_MASK,     POWER2,	PPCVLE,		{FRT, D, RA0}},
 
 {"lxsd",	DSO(57,2),	DS_MASK,     PPCVSX3,	PPCVLE,		{VD, DS, RA0}},
 {"lxssp",	DSO(57,3),	DS_MASK,     PPCVSX3,	PPCVLE,		{VD, DS, RA0}},
-{"lfdp",	OP(57),		OP_MASK,     POWER6,	POWER7|PPCVLE,	{FRTp, DS, RA0}},
+{"lfdp",	OP(57),	     OP_MASK|Q_MASK, POWER6,	POWER7|PPCVLE,	{FRTp, DS, RA0}},
 {"psq_lu",	OP(57),		OP_MASK,     PPCPS,	PPCVLE,		{FRT,PSD,RA,PSW,PSQ}},
 {"lfqu",	OP(57),		OP_MASK,     POWER2,	PPCVLE,		{FRT, D, RA0}},
 
@@ -6676,21 +6785,21 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 {"stxv",	DQX(61,5),	DQX_MASK,    PPCVSX3,	PPCVLE,		{XSQ6, DQ, RA0}},
 {"stxsd",	DSO(61,2),	DS_MASK,     PPCVSX3,	PPCVLE,		{VS, DS, RA0}},
 {"stxssp",	DSO(61,3),	DS_MASK,     PPCVSX3,	PPCVLE,		{VS, DS, RA0}},
-{"stfdp",	OP(61),		OP_MASK,     POWER6,	POWER7|PPCVLE,	{FRSp, DS, RA0}},
+{"stfdp",	OP(61),	     OP_MASK|Q_MASK, POWER6,	POWER7|PPCVLE,	{FRSp, DS, RA0}},
 {"psq_stu",	OP(61),		OP_MASK,     PPCPS,	PPCVLE,		{FRS,PSD,RA,PSW,PSQ}},
 {"stfqu",	OP(61),		OP_MASK,     POWER2,	PPCVLE,		{FRS, D, RA}},
 
 {"std",		DSO(62,0),	DS_MASK,     PPC64,	PPCVLE,		{RS, DS, RA0}},
 {"stdu",	DSO(62,1),	DS_MASK,     PPC64,	PPCVLE,		{RS, DS, RAS}},
-{"stq",		DSO(62,2),	DS_MASK,     POWER4,	PPC476|PPCVLE,	{RSQ, DS, RA0}},
+{"stq",		DSO(62,2),   DS_MASK|Q_MASK, POWER4,	PPC476|PPCVLE,	{RSQ, DS, RA0}},
 
 {"fcmpu",	X(63,0),	XBF_MASK,    COM,	PPCEFS|PPCVLE,	{BF, FRA, FRB}},
 
-{"daddq",	XRC(63,2,0),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
-{"daddq.",	XRC(63,2,1),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
+{"daddq",	XRC(63,2,0),  X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
+{"daddq.",	XRC(63,2,1),  X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
 
-{"dquaq",	ZRC(63,3,0),	Z2_MASK,     POWER6,	PPCVLE,		{FRTp, FRAp, FRBp, RMC}},
-{"dquaq.",	ZRC(63,3,1),	Z2_MASK,     POWER6,	PPCVLE,		{FRTp, FRAp, FRBp, RMC}},
+{"dquaq",	ZRC(63,3,0), Z2_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRAp, FRBp, RMC}},
+{"dquaq.",	ZRC(63,3,1), Z2_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRAp, FRBp, RMC}},
 
 {"xsaddqp",	XRC(63,4,0),	X_MASK,	     PPCVSX3,	PPCVLE,		{VD, VA, VB}},
 {"xsaddqpo",	XRC(63,4,1),	X_MASK,	     PPCVSX3,	PPCVLE,		{VD, VA, VB}},
@@ -6772,11 +6881,11 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 
 {"fcmpo",	X(63,32),	XBF_MASK,    COM,	PPCEFS|PPCVLE,	{BF, FRA, FRB}},
 
-{"dmulq",	XRC(63,34,0),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
-{"dmulq.",	XRC(63,34,1),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
+{"dmulq",	XRC(63,34,0), X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
+{"dmulq.",	XRC(63,34,1), X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
 
-{"drrndq",	ZRC(63,35,0),	Z2_MASK,     POWER6,	PPCVLE,		{FRTp, FRA, FRBp, RMC}},
-{"drrndq.",	ZRC(63,35,1),	Z2_MASK,     POWER6,	PPCVLE,		{FRTp, FRA, FRBp, RMC}},
+{"drrndq",	ZRC(63,35,0), Z2_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRA, FRBp, RMC}},
+{"drrndq.",	ZRC(63,35,1), Z2_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRA, FRBp, RMC}},
 
 {"xsmulqp",	XRC(63,36,0),	X_MASK,	     PPCVSX3,	PPCVLE,		{VD, VA, VB}},
 {"xsmulqpo",	XRC(63,36,1),	X_MASK,	     PPCVSX3,	PPCVLE,		{VD, VA, VB}},
@@ -6791,11 +6900,11 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 
 {"mcrfs",      X(63,64), XRB_MASK|(3<<21)|(3<<16), COM,	PPCVLE,		{BF, BFA}},
 
-{"dscliq",	ZRC(63,66,0),	Z_MASK,	     POWER6,	PPCVLE,		{FRTp, FRAp, SH16}},
-{"dscliq.",	ZRC(63,66,1),	Z_MASK,	     POWER6,	PPCVLE,		{FRTp, FRAp, SH16}},
+{"dscliq",	ZRC(63,66,0), Z_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRAp, SH16}},
+{"dscliq.",	ZRC(63,66,1), Z_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRAp, SH16}},
 
-{"dquaiq",	ZRC(63,67,0),	Z2_MASK,     POWER6,	PPCVLE,		{TE, FRTp, FRBp, RMC}},
-{"dquaiq.",	ZRC(63,67,1),	Z2_MASK,     POWER6,	PPCVLE,		{TE, FRTp, FRBp, RMC}},
+{"dquaiq",	ZRC(63,67,0), Z2_MASK|Q_MASK, POWER6,	PPCVLE,		{TE, FRTp, FRBp, RMC}},
+{"dquaiq.",	ZRC(63,67,1), Z2_MASK|Q_MASK, POWER6,	PPCVLE,		{TE, FRTp, FRBp, RMC}},
 
 {"mtfsb0",	XRC(63,70,0),	XRARB_MASK,  COM,	PPCVLE,		{BT}},
 {"mtfsb0.",	XRC(63,70,1),	XRARB_MASK,  COM,	PPCVLE,		{BT}},
@@ -6803,11 +6912,11 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 {"fmr",		XRC(63,72,0),	XRA_MASK,    COM,	PPCEFS|PPCVLE,	{FRT, FRB}},
 {"fmr.",	XRC(63,72,1),	XRA_MASK,    COM,	PPCEFS|PPCVLE,	{FRT, FRB}},
 
-{"dscriq",	ZRC(63,98,0),	Z_MASK,	     POWER6,	PPCVLE,		{FRTp, FRAp, SH16}},
-{"dscriq.",	ZRC(63,98,1),	Z_MASK,	     POWER6,	PPCVLE,		{FRTp, FRAp, SH16}},
+{"dscriq",	ZRC(63,98,0), Z_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRAp, SH16}},
+{"dscriq.",	ZRC(63,98,1), Z_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRAp, SH16}},
 
-{"drintxq",	ZRC(63,99,0),	Z2_MASK,     POWER6,	PPCVLE,		{R, FRTp, FRBp, RMC}},
-{"drintxq.",	ZRC(63,99,1),	Z2_MASK,     POWER6,	PPCVLE,		{R, FRTp, FRBp, RMC}},
+{"drintxq",	ZRC(63,99,0), Z2_MASK|Q_MASK, POWER6,	PPCVLE,		{R, FRTp, FRBp, RMC}},
+{"drintxq.",	ZRC(63,99,1), Z2_MASK|Q_MASK, POWER6,	PPCVLE,		{R, FRTp, FRBp, RMC}},
 
 {"xscpsgnqp",	X(63,100),	X_MASK,	     PPCVSX3,	PPCVLE,		{VD, VA, VB}},
 
@@ -6839,11 +6948,11 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 {"dtstdcq",	Z(63,194),	Z_MASK,	     POWER6,	PPCVLE,		{BF, FRAp, DCM}},
 {"dtstdgq",	Z(63,226),	Z_MASK,	     POWER6,	PPCVLE,		{BF, FRAp, DGM}},
 
-{"drintnq",	ZRC(63,227,0),	Z2_MASK,     POWER6,	PPCVLE,		{R, FRTp, FRBp, RMC}},
-{"drintnq.",	ZRC(63,227,1),	Z2_MASK,     POWER6,	PPCVLE,		{R, FRTp, FRBp, RMC}},
+{"drintnq",	ZRC(63,227,0), Z2_MASK|Q_MASK, POWER6,	PPCVLE,		{R, FRTp, FRBp, RMC}},
+{"drintnq.",	ZRC(63,227,1), Z2_MASK|Q_MASK, POWER6,	PPCVLE,		{R, FRTp, FRBp, RMC}},
 
-{"dctqpq",	XRC(63,258,0),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRB}},
-{"dctqpq.",	XRC(63,258,1),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRB}},
+{"dctqpq",	XRC(63,258,0), X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRB}},
+{"dctqpq.",	XRC(63,258,1), X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRB}},
 
 {"fabs",	XRC(63,264,0),	XRA_MASK,    COM,	PPCEFS|PPCVLE,	{FRT, FRB}},
 {"fabs.",	XRC(63,264,1),	XRA_MASK,    COM,	PPCEFS|PPCVLE,	{FRT, FRB}},
@@ -6851,8 +6960,8 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 {"dctfixq",	XRC(63,290,0),	X_MASK,	     POWER6,	PPCVLE,		{FRT, FRBp}},
 {"dctfixq.",	XRC(63,290,1),	X_MASK,	     POWER6,	PPCVLE,		{FRT, FRBp}},
 
-{"ddedpdq",	XRC(63,322,0),	X_MASK,	     POWER6,	PPCVLE,		{SP, FRTp, FRBp}},
-{"ddedpdq.",	XRC(63,322,1),	X_MASK,	     POWER6,	PPCVLE,		{SP, FRTp, FRBp}},
+{"ddedpdq",	XRC(63,322,0), X_MASK|Q_MASK, POWER6,	PPCVLE,		{SP, FRTp, FRBp}},
+{"ddedpdq.",	XRC(63,322,1), X_MASK|Q_MASK, POWER6,	PPCVLE,		{SP, FRTp, FRBp}},
 
 {"dxexq",	XRC(63,354,0),	X_MASK,	     POWER6,	PPCVLE,		{FRT, FRBp}},
 {"dxexq.",	XRC(63,354,1),	X_MASK,	     POWER6,	PPCVLE,		{FRT, FRBp}},
@@ -6881,14 +6990,14 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 {"frim",	XRC(63,488,0),	XRA_MASK,    POWER5,	PPCVLE,		{FRT, FRB}},
 {"frim.",	XRC(63,488,1),	XRA_MASK,    POWER5,	PPCVLE,		{FRT, FRB}},
 
-{"dsubq",	XRC(63,514,0),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
-{"dsubq.",	XRC(63,514,1),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
+{"dsubq",	XRC(63,514,0), X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
+{"dsubq.",	XRC(63,514,1), X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
 
 {"xssubqp",	XRC(63,516,0),	X_MASK,	     PPCVSX3,	PPCVLE,		{VD, VA, VB}},
 {"xssubqpo",	XRC(63,516,1),	X_MASK,	     PPCVSX3,	PPCVLE,		{VD, VA, VB}},
 
-{"ddivq",	XRC(63,546,0),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
-{"ddivq.",	XRC(63,546,1),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
+{"ddivq",	XRC(63,546,0), X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
+{"ddivq.",	XRC(63,546,1), X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRAp, FRBp}},
 
 {"xsdivqp",	XRC(63,548,0),	X_MASK,	     PPCVSX3,	PPCVLE,		{VD, VA, VB}},
 {"xsdivqpo",	XRC(63,548,1),	X_MASK,	     PPCVSX3,	PPCVLE,		{VD, VA, VB}},
@@ -6917,11 +7026,11 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 {"mtfsf.",	XFL(63,711,1),	XFL_MASK, POWER6|PPCA2|PPC476, PPCVLE,	{FLM, FRB, XFL_L, W}},
 {"mtfsf.",	XFL(63,711,1),	XFL_MASK,    COM, POWER6|PPCA2|PPC476|PPCEFS|PPCVLE, {FLM, FRB}},
 
-{"drdpq",	XRC(63,770,0),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRBp}},
-{"drdpq.",	XRC(63,770,1),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRBp}},
+{"drdpq",	XRC(63,770,0), X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRBp}},
+{"drdpq.",	XRC(63,770,1), X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRBp}},
 
-{"dcffixq",	XRC(63,802,0),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRB}},
-{"dcffixq.",	XRC(63,802,1),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRB}},
+{"dcffixq",	XRC(63,802,0), X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRB}},
+{"dcffixq.",	XRC(63,802,1), X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRB}},
 
 {"xsabsqp",	XVA(63,804,0),	XVA_MASK,    PPCVSX3,	PPCVLE,		{VD, VB}},
 {"xsxexpqp",	XVA(63,804,2),	XVA_MASK,    PPCVSX3,	PPCVLE,		{VD, VB}},
@@ -6941,8 +7050,8 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 {"fctidz.",	XRC(63,815,1),	XRA_MASK,    PPC64,	PPCVLE,		{FRT, FRB}},
 {"fctidz.",	XRC(63,815,1),	XRA_MASK,    PPC476,	PPCVLE,		{FRT, FRB}},
 
-{"denbcdq",	XRC(63,834,0),	X_MASK,	     POWER6,	PPCVLE,		{S, FRTp, FRBp}},
-{"denbcdq.",	XRC(63,834,1),	X_MASK,	     POWER6,	PPCVLE,		{S, FRTp, FRBp}},
+{"denbcdq",	XRC(63,834,0), X_MASK|Q_MASK, POWER6,	PPCVLE,		{S, FRTp, FRBp}},
+{"denbcdq.",	XRC(63,834,1), X_MASK|Q_MASK, POWER6,	PPCVLE,		{S, FRTp, FRBp}},
 
 {"xscvqpuwz",	XVA(63,836,1),	XVA_MASK,    PPCVSX3,	PPCVLE,		{VD, VB}},
 {"xscvudqp",	XVA(63,836,2),	XVA_MASK,    PPCVSX3,	PPCVLE,		{VD, VB}},
@@ -6961,8 +7070,8 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 {"fcfid.",	XRC(63,846,1),	XRA_MASK,    PPC64,	PPCVLE,		{FRT, FRB}},
 {"fcfid.",	XRC(63,846,1),	XRA_MASK,    PPC476,	PPCVLE,		{FRT, FRB}},
 
-{"diexq",	XRC(63,866,0),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRA, FRBp}},
-{"diexq.",	XRC(63,866,1),	X_MASK,	     POWER6,	PPCVLE,		{FRTp, FRA, FRBp}},
+{"diexq",	XRC(63,866,0), X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRA, FRBp}},
+{"diexq.",	XRC(63,866,1), X_MASK|Q_MASK, POWER6,	PPCVLE,		{FRTp, FRA, FRBp}},
 
 {"xsiexpqp",	X(63,868),	X_MASK,	     PPCVSX3,	PPCVLE,		{VD, VA, VB}},
 

commit 0d69827324f704b75ac7e5c2b39219cdd15e790b
Author: Alan Modra <amodra@gmail.com>
Date:   Tue Mar 7 11:04:19 2017 +1030

    PowerPC64 abort due to dynamic relocs on hidden undefweak
    
    ppc64_elf_relocate_section lacked a check which meant that it emitted
    dynamic relocs against a hidden undefweak symbol for which no dynamic
    relocs had been allocated.
    
    	PR 21224
    	PR 20519
    	* elf64-ppc.c (ppc64_elf_relocate_section): Add missing
    	dyn_relocs check.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 459c405..17e7e3b 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,5 +1,12 @@
 2017-03-07  Alan Modra  <amodra@gmail.com>
 
+	PR 21224
+	PR 20519
+	* elf64-ppc.c (ppc64_elf_relocate_section): Add missing
+	dyn_relocs check.
+
+2017-03-07  Alan Modra  <amodra@gmail.com>
+
 	Apply from master
 	2017-03-02  Alan Modra  <amodra@gmail.com>
 	* elf32-ppc.c (ppc_elf_vle_split16): Correct insn mask typo.
diff --git a/bfd/elf64-ppc.c b/bfd/elf64-ppc.c
index e7d4792..3381647 100644
--- a/bfd/elf64-ppc.c
+++ b/bfd/elf64-ppc.c
@@ -14798,8 +14798,10 @@ ppc64_elf_relocate_section (bfd *output_bfd,
 	    break;
 
 	  if (bfd_link_pic (info)
-	      ? ((h != NULL && pc_dynrelocs (h))
-		 || must_be_dyn_reloc (info, r_type))
+	      ? ((h == NULL
+		  || h->dyn_relocs != NULL)
+		 && ((h != NULL && pc_dynrelocs (h))
+		     || must_be_dyn_reloc (info, r_type)))
 	      : (h != NULL
 		 ? h->dyn_relocs != NULL
 		 : ELF_ST_TYPE (sym->st_info) == STT_GNU_IFUNC))

commit 354199c7692c1bed53a2a15f0e4d531457e95f17
Author: Alan Modra <amodra@gmail.com>
Date:   Tue Mar 7 12:20:00 2017 +1030

    Fix ld uninitialized read of script ASSERT data structure
    
    lang_assignment_statement serves both assignments and asserts.
    
    	* ldlang.c (open_input_bfds): Check that lang_assignment_statement
    	is not an assert before referencing defsym.

diff --git a/ld/ChangeLog b/ld/ChangeLog
index fd3e232..f4fda0c 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,3 +1,8 @@
+2017-03-07  Alan Modra  <amodra@gmail.com>
+
+	* ldlang.c (open_input_bfds): Check that lang_assignment_statement
+	is not an assert before referencing defsym.
+
 2017-03-02  Tristan Gingold  <gingold@adacore.com>
 
 	* configure: Regenerate.
diff --git a/ld/ldlang.c b/ld/ldlang.c
index dafc348..54f160c 100644
--- a/ld/ldlang.c
+++ b/ld/ldlang.c
@@ -3377,7 +3377,8 @@ open_input_bfds (lang_statement_union_type *s, enum open_bfd_mode mode)
 #endif
 	  break;
 	case lang_assignment_statement_enum:
-	  if (s->assignment_statement.exp->assign.defsym)
+	  if (s->assignment_statement.exp->type.node_class != etree_assert
+	      && s->assignment_statement.exp->assign.defsym)
 	    /* This is from a --defsym on the command line.  */
 	    exp_fold_tree_no_dot (s->assignment_statement.exp);
 	  break;

commit 61becd4a8afcb64eb8f66e857e4fb64ca5f7476d
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed Mar 8 00:01:31 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 31fdf99..4d79b22 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170307
+#define BFD_VERSION_DATE 20170308
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 539a3a0e4f0411285b55c0d52c609cd5d20d4539
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Wed Mar 8 16:00:54 2017 -0600

    Add support for the new 'lnia' extended mnemonic.
    
    opcodes/
    	Apply from master.
    	2017-03-08  Peter Bergner  <bergner@vnet.ibm.com>
    	* ppc-opc.c (powerpc_opcodes) <lnia>: New extended mnemonic.
    
    gas/
    	Apply from master.
    	2017-03-08  Peter Bergner  <bergner@vnet.ibm.com>
    	* testsuite/gas/ppc/power9.d <lnia> New test.
    	* testsuite/gas/ppc/power9.s: Likewise.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index fa9ecbe..95b380a 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,10 @@
+2017-03-08  Peter Bergner  <bergner@vnet.ibm.com>
+
+	Apply from master.
+	2017-03-08  Peter Bergner  <bergner@vnet.ibm.com>
+	* testsuite/gas/ppc/power9.d <lnia> New test.
+	* testsuite/gas/ppc/power9.s: Likewise.
+
 2017-03-02  Tristan Gingold  <gingold@adacore.com>
 
 	* configure: Regenerate.
diff --git a/gas/testsuite/gas/ppc/power9.d b/gas/testsuite/gas/ppc/power9.d
index 9ba53d0..a67898f 100644
--- a/gas/testsuite/gas/ppc/power9.d
+++ b/gas/testsuite/gas/ppc/power9.d
@@ -312,8 +312,9 @@ Disassembly of section \.text:
 .*:	(f1 31 9d 6f|6f 9d 31 f1) 	xscvdphp vs41,vs51
 .*:	(f1 58 a7 6f|6f a7 58 f1) 	xvcvhpsp vs42,vs52
 .*:	(f1 79 af 6f|6f af 79 f1) 	xvcvsphp vs43,vs53
-.*:	(4c 60 00 04|04 00 60 4c) 	addpcis r3,0
-.*:	(4c 60 00 04|04 00 60 4c) 	addpcis r3,0
+.*:	(4c 60 00 04|04 00 60 4c) 	lnia    r3
+.*:	(4c 60 00 04|04 00 60 4c) 	lnia    r3
+.*:	(4c 60 00 04|04 00 60 4c) 	lnia    r3
 .*:	(4c 80 00 05|05 00 80 4c) 	addpcis r4,1
 .*:	(4c 80 00 05|05 00 80 4c) 	addpcis r4,1
 .*:	(4c bf ff c4|c4 ff bf 4c) 	addpcis r5,-2
diff --git a/gas/testsuite/gas/ppc/power9.s b/gas/testsuite/gas/ppc/power9.s
index 27f1122..4e3530f 100644
--- a/gas/testsuite/gas/ppc/power9.s
+++ b/gas/testsuite/gas/ppc/power9.s
@@ -303,6 +303,7 @@ power9:
 	xscvdphp    41,51
 	xvcvhpsp    42,52
 	xvcvsphp    43,53
+	lnia        3
 	addpcis     3,0
 	subpcis     3,0
 	addpcis     4,1
diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index 3a19442..0c0eb5a 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,3 +1,9 @@
+2017-03-08  Peter Bergner  <bergner@vnet.ibm.com>
+
+	Apply from master.
+	2017-03-08  Peter Bergner  <bergner@vnet.ibm.com>
+	* ppc-opc.c (powerpc_opcodes) <lnia>: New extended mnemonic.
+
 2017-03-07  Alan Modra  <amodra@gmail.com>
 
 	Apply from master
diff --git a/opcodes/ppc-opc.c b/opcodes/ppc-opc.c
index 30fd789..f7d1dcd 100644
--- a/opcodes/ppc-opc.c
+++ b/opcodes/ppc-opc.c
@@ -2552,6 +2552,8 @@ extract_vleil (unsigned long insn,
 /* An DX form instruction.  */
 #define DX(op, xop) (OP (op) | ((((unsigned long)(xop)) & 0x1f) << 1))
 #define DX_MASK DX (0x3f, 0x1f)
+/* An DX form instruction with the D bits specified.  */
+#define NODX_MASK (DX_MASK | 0x1fffc1)
 
 /* An EVSEL form instruction.  */
 #define EVSEL(op, xop) (OP (op) | (((unsigned long)(xop)) & 0xff) << 3)
@@ -4264,6 +4266,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {
 
 {"mcrf",     XL(19,0), XLBB_MASK|(3<<21)|(3<<16), COM,	PPCVLE,		{BF, BFA}},
 
+{"lnia",     DX(19,2),		NODX_MASK,   POWER9,	PPCVLE,		{RT}},
 {"addpcis",  DX(19,2),		DX_MASK,     POWER9,	PPCVLE,		{RT, DXD}},
 {"subpcis",  DX(19,2),		DX_MASK,     POWER9,	PPCVLE,		{RT, NDXD}},
 

commit 273d88e403fae6590741ff16b448aaff6a0ea3c7
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu Mar 9 00:01:25 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 4d79b22..0c31e85 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170308
+#define BFD_VERSION_DATE 20170309
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 9725c9b67cd0708d93a4f1273395bd18a96256a0
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Wed Mar 8 20:49:03 2017 -0600

    Update -maltivec and -mvsx options to only enable their oldest instructions.
    
    Currently, the -maltivec and -mvsx GAS options enable *all* of the altivec
    and vsx instructions respecitively that have ever been added.  This is in
    constract to GCC's -maltivec and -mvsx options, which only enable the oldest
    (ie, first) set of altivec and vsx instructions.  This patch changes GAS to
    mimic GCC's behaviour with respect to -maltivec and -mvsx and it solves a
    problem with trying to assemble the lxvx instruction which is different
    between POWER8 and POWER9.
    
    opcodes/
    	* ppc-dis.c (ppc_opts) <altivec>: Do not use PPC_OPCODE_ALTIVEC2;
    	<vsx>: Do not use PPC_OPCODE_VSX3;
    
    gas/
    	* testsuite/gas/ppc/altivec2.d (as): Use the -mpower8 option.
    	(objdump): Use the -Mpower8 option.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index 95b380a..e8df444 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,8 @@
+2017-03-08  Peter Bergner <bergner@vnet.ibm.com>
+
+	* testsuite/gas/ppc/altivec2.d (as): Use the -mpower8 option.
+	(objdump): Use the -Mpower8 option.
+
 2017-03-08  Peter Bergner  <bergner@vnet.ibm.com>
 
 	Apply from master.
diff --git a/gas/testsuite/gas/ppc/altivec2.d b/gas/testsuite/gas/ppc/altivec2.d
index fc10fb5..26f9afa 100644
--- a/gas/testsuite/gas/ppc/altivec2.d
+++ b/gas/testsuite/gas/ppc/altivec2.d
@@ -1,5 +1,5 @@
-#as: -maltivec
-#objdump: -dr -Maltivec
+#as: -mpower8
+#objdump: -dr -Mpower8
 #name: Altivec ISA 2.07 instructions
 
 .*
diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index 0c0eb5a..30b3aa8 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,5 +1,10 @@
 2017-03-08  Peter Bergner  <bergner@vnet.ibm.com>
 
+	* ppc-dis.c (ppc_opts) <altivec>: Do not use PPC_OPCODE_ALTIVEC2;
+	<vsx>: Do not use PPC_OPCODE_VSX3;
+
+2017-03-08  Peter Bergner  <bergner@vnet.ibm.com>
+
 	Apply from master.
 	2017-03-08  Peter Bergner  <bergner@vnet.ibm.com>
 	* ppc-opc.c (powerpc_opcodes) <lnia>: New extended mnemonic.
diff --git a/opcodes/ppc-dis.c b/opcodes/ppc-dis.c
index e0eff7a..38f7e55 100644
--- a/opcodes/ppc-dis.c
+++ b/opcodes/ppc-dis.c
@@ -93,7 +93,7 @@ struct ppc_mopt ppc_opts[] = {
 		| PPC_OPCODE_A2),
     0 },
   { "altivec", PPC_OPCODE_PPC,
-    PPC_OPCODE_ALTIVEC | PPC_OPCODE_ALTIVEC2 },
+    PPC_OPCODE_ALTIVEC },
   { "any",     0,
     PPC_OPCODE_ANY },
   { "booke",   PPC_OPCODE_PPC | PPC_OPCODE_BOOKE,
@@ -221,7 +221,7 @@ struct ppc_mopt ppc_opts[] = {
 		| PPC_OPCODE_E500),
     PPC_OPCODE_VLE },
   { "vsx",     PPC_OPCODE_PPC,
-    PPC_OPCODE_VSX | PPC_OPCODE_VSX3 },
+    PPC_OPCODE_VSX },
   { "htm",     PPC_OPCODE_PPC,
     PPC_OPCODE_HTM },
 };

commit 7a651495e66a48a8855b2a8972e440d9d88a4eef
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri Mar 10 00:01:18 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 0c31e85..a8f0457 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170309
+#define BFD_VERSION_DATE 20170310
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit b0417ba7023581ffe48f9e684538a4e88728a303
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat Mar 11 00:01:24 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index a8f0457..44dd878 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170310
+#define BFD_VERSION_DATE 20170311
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 7450693727582753fc5e6d9ce2e376b29d6a8430
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun Mar 12 00:01:21 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 44dd878..ec5c90f 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170311
+#define BFD_VERSION_DATE 20170312
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit c6250d739c80a479c803fb0bb37ed7ccc6e6bd67
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon Mar 13 00:01:13 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index ec5c90f..ffe25ea 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170312
+#define BFD_VERSION_DATE 20170313
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 2412f00f7dfe79f1604998cbe5d6811b24aab653
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue Mar 14 00:01:26 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index ffe25ea..1cd093a 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170313
+#define BFD_VERSION_DATE 20170314
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 057b63e0b32c02b6e52c818f622342215419c2ee
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed Mar 15 00:01:23 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 1cd093a..8e5f316 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170314
+#define BFD_VERSION_DATE 20170315
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 1d644a2d726240e1be2fe087da75f96f5d04cf93
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu Mar 16 00:01:30 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 8e5f316..b6e54d4 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170315
+#define BFD_VERSION_DATE 20170316
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit c5bc764118ee465a280f025a1a9b354a1d368b9a
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri Mar 17 00:01:24 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index b6e54d4..347d79b 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170316
+#define BFD_VERSION_DATE 20170317
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit eb9ac702a57c7739e25407d105221b3db771f263
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat Mar 18 00:01:34 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 347d79b..4c17189 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170317
+#define BFD_VERSION_DATE 20170318
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 479c574d4ad178b560a31fa319315fa8957e7579
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun Mar 19 00:01:20 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 4c17189..5e585c8 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170318
+#define BFD_VERSION_DATE 20170319
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 45c88081ae8d2585476f954660c8c8ae108e48d4
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon Mar 20 00:01:24 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 5e585c8..2c7fe17 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170319
+#define BFD_VERSION_DATE 20170320
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 5fb3ff4a5396d5ee708ee49a0b2e04f0f9d5a82a
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue Mar 21 00:01:09 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 2c7fe17..80e0c85 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170320
+#define BFD_VERSION_DATE 20170321
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit a7587e7c3d12b2dc15b2245f38c44d8233689167
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Tue Mar 21 14:24:50 2017 +0100

    S/390: Remove vx2 facility flag
    
    This patch removes the vx2 facility flag.  It will not be used by GCC
    and was a misnomer anyway.
    
    Committed to mainline and 2.28 branch.
    
    include/ChangeLog:
    
    2017-03-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
    	Backport from mainline
    	2017-03-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
    	* opcode/s390.h (S390_INSTR_FLAG_VX2): Remove.
    	(S390_INSTR_FLAG_FACILITY_MASK): Adjust value.
    
    gas/ChangeLog:
    
    2017-03-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
    	Backport from mainline
    	2017-03-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
    	* config/tc-s390.c (s390_parse_cpu): Remove S390_INSTR_FLAG_VX2
    	from cpu_table.  Remove vx2, and novx2 from cpu_flags.
    
    opcodes/ChangeLog:
    
    2017-03-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
    	Backport from mainline
    	2017-03-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
    	* s390-mkopc.c (main): Remove vx2 check.
    	* s390-opc.txt: Remove vx2 instruction flags.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index e8df444..d59472a 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,11 @@
+2017-03-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
+
+	Backport from mainline
+	2017-03-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
+
+	* config/tc-s390.c (s390_parse_cpu): Remove S390_INSTR_FLAG_VX2
+	from cpu_table.  Remove vx2, and novx2 from cpu_flags.
+
 2017-03-08  Peter Bergner <bergner@vnet.ibm.com>
 
 	* testsuite/gas/ppc/altivec2.d (as): Use the -mpower8 option.
diff --git a/gas/config/tc-s390.c b/gas/config/tc-s390.c
index 7c8087e..dccbe2c 100644
--- a/gas/config/tc-s390.c
+++ b/gas/config/tc-s390.c
@@ -291,7 +291,7 @@ s390_parse_cpu (const char *         arg,
     { STRING_COMMA_LEN ("z13"), STRING_COMMA_LEN ("arch11"),
       S390_INSTR_FLAG_HTM | S390_INSTR_FLAG_VX },
     { STRING_COMMA_LEN ("arch12"), STRING_COMMA_LEN (""),
-      S390_INSTR_FLAG_HTM | S390_INSTR_FLAG_VX | S390_INSTR_FLAG_VX2 }
+      S390_INSTR_FLAG_HTM | S390_INSTR_FLAG_VX }
   };
   static struct
   {
@@ -303,9 +303,7 @@ s390_parse_cpu (const char *         arg,
     { "htm",   S390_INSTR_FLAG_HTM, TRUE },
     { "nohtm", S390_INSTR_FLAG_HTM, FALSE },
     { "vx",    S390_INSTR_FLAG_VX, TRUE },
-    { "novx",  S390_INSTR_FLAG_VX, FALSE },
-    { "vx2",    S390_INSTR_FLAG_VX2, TRUE },
-    { "novx2",  S390_INSTR_FLAG_VX2, FALSE }
+    { "novx",  S390_INSTR_FLAG_VX, FALSE }
   };
   unsigned int icpu;
   char *ilp_bak;
diff --git a/include/ChangeLog b/include/ChangeLog
index af39f33..9dd5f75 100644
--- a/include/ChangeLog
+++ b/include/ChangeLog
@@ -1,3 +1,11 @@
+2017-03-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
+
+	Backport from mainline
+	2017-03-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
+
+	* opcode/s390.h (S390_INSTR_FLAG_VX2): Remove.
+	(S390_INSTR_FLAG_FACILITY_MASK): Adjust value.
+
 2017-02-28  Alan Modra  <amodra@gmail.com>
 
 	* elf/ppc64.h (R_PPC64_16DX_HA): New.  Expand fake reloc comment.
diff --git a/include/opcode/s390.h b/include/opcode/s390.h
index 7ce5616..2e07664 100644
--- a/include/opcode/s390.h
+++ b/include/opcode/s390.h
@@ -51,8 +51,7 @@ enum s390_opcode_cpu_val
 
 #define S390_INSTR_FLAG_HTM 0x2
 #define S390_INSTR_FLAG_VX 0x4
-#define S390_INSTR_FLAG_VX2 0x8
-#define S390_INSTR_FLAG_FACILITY_MASK 0xe
+#define S390_INSTR_FLAG_FACILITY_MASK 0x6
 
 /* The opcode table is an array of struct s390_opcode.  */
 
diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index 30b3aa8..bdc6266 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,3 +1,11 @@
+2017-03-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
+
+	Backport from mainline
+	2017-03-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
+
+	* s390-mkopc.c (main): Remove vx2 check.
+	* s390-opc.txt: Remove vx2 instruction flags.
+
 2017-03-08  Peter Bergner  <bergner@vnet.ibm.com>
 
 	* ppc-dis.c (ppc_opts) <altivec>: Do not use PPC_OPCODE_ALTIVEC2;
diff --git a/opcodes/s390-mkopc.c b/opcodes/s390-mkopc.c
index 8e0b332..68c55a9 100644
--- a/opcodes/s390-mkopc.c
+++ b/opcodes/s390-mkopc.c
@@ -419,10 +419,6 @@ main (void)
 		&& (str[2] == 0 || str[2] == ',')) {
 	      flag_bits |= S390_INSTR_FLAG_VX;
 	      str += 2;
-	    } else if (strncmp (str, "vx2", 3) == 0
-		&& (str[3] == 0 || str[3] == ',')) {
-	      flag_bits |= S390_INSTR_FLAG_VX2;
-	      str += 3;
 	    } else {
 	      fprintf (stderr, "Couldn't parse flags string %s\n",
 		       flags_string);
diff --git a/opcodes/s390-opc.txt b/opcodes/s390-opc.txt
index b381587..51a17f3 100644
--- a/opcodes/s390-opc.txt
+++ b/opcodes/s390-opc.txt
@@ -1685,146 +1685,146 @@ b93c ppno RRE_RR "perform pseudorandom number operation" z13 zarch
 # Vector Enhancements Facility 1
 
 e70000000085 vbperm VRR_VVV "vector bit permute" arch12 zarch
-e70000006004 vllezlf VRX_VRRD "vector load logical word element and zero - left aligned" arch12 zarch vx2
-e700000000b8 vmsl VRR_VVVUU0V "vector multiply sum logical" arch12 zarch vx2
-e700030000b8 vmslg VRR_VVVU0VB "vector multiply sum logical double word" arch12 zarch vx2
-e7000000006c vnx VRR_VVV "vector not exclusive or" arch12 zarch vx2
+e70000006004 vllezlf VRX_VRRD "vector load logical word element and zero - left aligned" arch12 zarch
+e700000000b8 vmsl VRR_VVVUU0V "vector multiply sum logical" arch12 zarch
+e700030000b8 vmslg VRR_VVVU0VB "vector multiply sum logical double word" arch12 zarch
+e7000000006c vnx VRR_VVV "vector not exclusive or" arch12 zarch
 e7000000006e vnn VRR_VVV "vector nand" arch12 zarch
-e7000000006f voc VRR_VVV "vector or with complement" arch12 zarch vx2
-e70000000050 vpopctb VRR_VV "vector population count byte" arch12 zarch vx2
-e70000001050 vpopcth VRR_VV "vector population count halfword" arch12 zarch vx2
-e70000002050 vpopctf VRR_VV "vector population count word" arch12 zarch vx2
-e70000003050 vpopctg VRR_VV "vector population count double word" arch12 zarch vx2
-e700000020e3 vfasb VRR_VVV "vector fp add short" arch12 zarch vx2
-e700000820e3 wfasb VRR_VVV "scalar vector fp add scalar short" arch12 zarch vx2
-e700000840e3 wfaxb VRR_VVV "scalar vector fp add scalar extended" arch12 zarch vx2
-e700000020cb wfcsb VRR_VV "scalar vector fp compare scalar short" arch12 zarch vx2
-e700000040cb wfcxb VRR_VV "scalar vector fp compare scalar extended" arch12 zarch vx2
-e700000020ca wfksb VRR_VV "scalar vector fp compare and signal scalar short" arch12 zarch vx2
-e700000040ca wfkxb VRR_VV "scalar vector fp compare and signal scalar extended" arch12 zarch vx2
+e7000000006f voc VRR_VVV "vector or with complement" arch12 zarch
+e70000000050 vpopctb VRR_VV "vector population count byte" arch12 zarch
+e70000001050 vpopcth VRR_VV "vector population count halfword" arch12 zarch
+e70000002050 vpopctf VRR_VV "vector population count word" arch12 zarch
+e70000003050 vpopctg VRR_VV "vector population count double word" arch12 zarch
+e700000020e3 vfasb VRR_VVV "vector fp add short" arch12 zarch
+e700000820e3 wfasb VRR_VVV "scalar vector fp add scalar short" arch12 zarch
+e700000840e3 wfaxb VRR_VVV "scalar vector fp add scalar extended" arch12 zarch
+e700000020cb wfcsb VRR_VV "scalar vector fp compare scalar short" arch12 zarch
+e700000040cb wfcxb VRR_VV "scalar vector fp compare scalar extended" arch12 zarch
+e700000020ca wfksb VRR_VV "scalar vector fp compare and signal scalar short" arch12 zarch
+e700000040ca wfkxb VRR_VV "scalar vector fp compare and signal scalar extended" arch12 zarch
 
-e700000020e8 vfcesb VRR_VVV "vector fp compare equal short" arch12 zarch vx2
-e700001020e8 vfcesbs VRR_VVV "vector fp compare equal short" arch12 zarch vx2
-e700000820e8 wfcesb VRR_VVV "scalar vector fp compare equal scalar short" arch12 zarch vx2
-e700001820e8 wfcesbs VRR_VVV "scalar fp compare equal scalar short" arch12 zarch vx2
-e700000840e8 wfcexb VRR_VVV "scalar vector fp compare equal scalar extended" arch12 zarch vx2
-e700001840e8 wfcexbs VRR_VVV "scalar vector fp compare equal scalar extended" arch12 zarch vx2
+e700000020e8 vfcesb VRR_VVV "vector fp compare equal short" arch12 zarch
+e700001020e8 vfcesbs VRR_VVV "vector fp compare equal short" arch12 zarch
+e700000820e8 wfcesb VRR_VVV "scalar vector fp compare equal scalar short" arch12 zarch
+e700001820e8 wfcesbs VRR_VVV "scalar fp compare equal scalar short" arch12 zarch
+e700000840e8 wfcexb VRR_VVV "scalar vector fp compare equal scalar extended" arch12 zarch
+e700001840e8 wfcexbs VRR_VVV "scalar vector fp compare equal scalar extended" arch12 zarch
 
-e700000420e8 vfkesb VRR_VVV "vector fp compare and signal equal short" arch12 zarch vx2
-e700001420e8 vfkesbs VRR_VVV "vector fp compare and signal equal short" arch12 zarch vx2
-e700000c20e8 wfkesb VRR_VVV "scalar vector fp compare and signal equal scalar short" arch12 zarch vx2
-e700001c20e8 wfkesbs VRR_VVV "scalar fp compare and signal equal scalar short" arch12 zarch vx2
+e700000420e8 vfkesb VRR_VVV "vector fp compare and signal equal short" arch12 zarch
+e700001420e8 vfkesbs VRR_VVV "vector fp compare and signal equal short" arch12 zarch
+e700000c20e8 wfkesb VRR_VVV "scalar vector fp compare and signal equal scalar short" arch12 zarch
+e700001c20e8 wfkesbs VRR_VVV "scalar fp compare and signal equal scalar short" arch12 zarch
 e700000430e8 vfkedb VRR_VVV "vector fp compare and signal equal long" arch12 zarch vx
 e700001430e8 vfkedbs VRR_VVV "vector fp compare and signal equal long" arch12 zarch vx
 e700000c30e8 wfkedb VRR_VVV "vector fp compare and signal equal long" arch12 zarch vx
 e700001c30e8 wfkedbs VRR_VVV "vector fp compare and signal equal long" arch12 zarch vx
-e700000c40e8 wfkexb VRR_VVV "scalar vector fp compare and signal equal scalar extended" arch12 zarch vx2
-e700001c40e8 wfkexbs VRR_VVV "scalar vector fp compare and signal equal scalar extended" arch12 zarch vx2
+e700000c40e8 wfkexb VRR_VVV "scalar vector fp compare and signal equal scalar extended" arch12 zarch
+e700001c40e8 wfkexbs VRR_VVV "scalar vector fp compare and signal equal scalar extended" arch12 zarch
 
-e700000020eb vfchsb VRR_VVV "vector fp compare high short" arch12 zarch vx2
-e700001020eb vfchsbs VRR_VVV "vector fp compare high short" arch12 zarch vx2
-e700000820eb wfchsb VRR_VVV "scalar vector fp compare high scalar short" arch12 zarch vx2
-e700001820eb wfchsbs VRR_VVV "scalar vector fp compare high scalar short" arch12 zarch vx2
-e700000840eb wfchxb VRR_VVV "scalar vector fp compare high scalar extended" arch12 zarch vx2
-e700001840eb wfchxbs VRR_VVV "scalar vector fp compare high scalar extended" arch12 zarch vx2
+e700000020eb vfchsb VRR_VVV "vector fp compare high short" arch12 zarch
+e700001020eb vfchsbs VRR_VVV "vector fp compare high short" arch12 zarch
+e700000820eb wfchsb VRR_VVV "scalar vector fp compare high scalar short" arch12 zarch
+e700001820eb wfchsbs VRR_VVV "scalar vector fp compare high scalar short" arch12 zarch
+e700000840eb wfchxb VRR_VVV "scalar vector fp compare high scalar extended" arch12 zarch
+e700001840eb wfchxbs VRR_VVV "scalar vector fp compare high scalar extended" arch12 zarch
 
-e700000420eb vfkhsb VRR_VVV "vector fp compare and signal high short" arch12 zarch vx2
-e700001420eb vfkhsbs VRR_VVV "vector fp compare and signal high short" arch12 zarch vx2
-e700000c20eb wfkhsb VRR_VVV "scalar vector fp compare and signal high scalar short" arch12 zarch vx2
-e700001c20eb wfkhsbs VRR_VVV "scalar vector fp compare and signal high scalar short" arch12 zarch vx2
+e700000420eb vfkhsb VRR_VVV "vector fp compare and signal high short" arch12 zarch
+e700001420eb vfkhsbs VRR_VVV "vector fp compare and signal high short" arch12 zarch
+e700000c20eb wfkhsb VRR_VVV "scalar vector fp compare and signal high scalar short" arch12 zarch
+e700001c20eb wfkhsbs VRR_VVV "scalar vector fp compare and signal high scalar short" arch12 zarch
 e700000430eb vfkhdb VRR_VVV "vector fp compare and signal high long" arch12 zarch vx
 e700001430eb vfkhdbs VRR_VVV "vector fp compare and signal high long" arch12 zarch vx
 e700000c30eb wfkhdb VRR_VVV "vector fp compare and signal high long" arch12 zarch vx
 e700001c30eb wfkhdbs VRR_VVV "vector fp compare and signal high long" arch12 zarch vx
-e700000c40eb wfkhxb VRR_VVV "scalar vector fp compare and signal high scalar extended" arch12 zarch vx2
-e700001c40eb wfkhxbs VRR_VVV "scalar vector fp compare and signal high scalar extended" arch12 zarch vx2
+e700000c40eb wfkhxb VRR_VVV "scalar vector fp compare and signal high scalar extended" arch12 zarch
+e700001c40eb wfkhxbs VRR_VVV "scalar vector fp compare and signal high scalar extended" arch12 zarch
 
-e700000020ea vfchesb VRR_VVV "vector fp compare high or equal short" arch12 zarch vx2
-e700001020ea vfchesbs VRR_VVV "vector fp compare high or equal short" arch12 zarch vx2
-e700000820ea wfchesb VRR_VVV "scalar vector fp compare high or equal scalar short" arch12 zarch vx2
-e700001820ea wfchesbs VRR_VVV "scalar vector fp compare high or equal scalar short" arch12 zarch vx2
-e700000840ea wfchexb VRR_VVV "scalar vector fp compare high or equal scalar extended" arch12 zarch vx2
-e700001840ea wfchexbs VRR_VVV "scalar vector fp compare high or equal scalar extended" arch12 zarch vx2
+e700000020ea vfchesb VRR_VVV "vector fp compare high or equal short" arch12 zarch
+e700001020ea vfchesbs VRR_VVV "vector fp compare high or equal short" arch12 zarch
+e700000820ea wfchesb VRR_VVV "scalar vector fp compare high or equal scalar short" arch12 zarch
+e700001820ea wfchesbs VRR_VVV "scalar vector fp compare high or equal scalar short" arch12 zarch
+e700000840ea wfchexb VRR_VVV "scalar vector fp compare high or equal scalar extended" arch12 zarch
+e700001840ea wfchexbs VRR_VVV "scalar vector fp compare high or equal scalar extended" arch12 zarch
 
-e700000420ea vfkhesb VRR_VVV "vector fp compare and signal high or equal short" arch12 zarch vx2
-e700001420ea vfkhesbs VRR_VVV "vector fp compare and signal high or equal short" arch12 zarch vx2
-e700000c20ea wfkhesb VRR_VVV "scalar vector fp compare and signal high or equal scalar short" arch12 zarch vx2
-e700001c20ea wfkhesbs VRR_VVV "scalar vector fp compare and signal high or equal scalar short" arch12 zarch vx2
+e700000420ea vfkhesb VRR_VVV "vector fp compare and signal high or equal short" arch12 zarch
+e700001420ea vfkhesbs VRR_VVV "vector fp compare and signal high or equal short" arch12 zarch
+e700000c20ea wfkhesb VRR_VVV "scalar vector fp compare and signal high or equal scalar short" arch12 zarch
+e700001c20ea wfkhesbs VRR_VVV "scalar vector fp compare and signal high or equal scalar short" arch12 zarch
 e700000430ea vfkhedb VRR_VVV "vector fp compare and signal high or equal long" arch12 zarch vx
 e700001430ea vfkhedbs VRR_VVV "vector fp compare and signal high or equal long" arch12 zarch vx
 e700000c30ea wfkhedb VRR_VVV "vector fp compare and signal high or equal long" arch12 zarch vx
 e700001c30ea wfkhedbs VRR_VVV "vector fp compare and signal high or equal long" arch12 zarch vx
-e700000c40ea wfkhexb VRR_VVV "scalar vector fp compare and signal high or equal scalar extended" arch12 zarch vx2
-e700001c40ea wfkhexbs VRR_VVV "scalar vector fp compare and signal high or equal scalar extended" arch12 zarch vx2
+e700000c40ea wfkhexb VRR_VVV "scalar vector fp compare and signal high or equal scalar extended" arch12 zarch
+e700001c40ea wfkhexbs VRR_VVV "scalar vector fp compare and signal high or equal scalar extended" arch12 zarch
 
-e700000020e5 vfdsb VRR_VVV "vector fp divide short" arch12 zarch vx2
-e700000820e5 wfdsb VRR_VVV "scalar vector fp divide scalar short" arch12 zarch vx2
-e700000840e5 wfdxb VRR_VVV "scalar vector fp divide scalar extended" arch12 zarch vx2
-e700000020c7 vfisb VRR_VV0UU "vector load fp integer short" arch12 zarch vx2
-e700000820c7 wfisb VRR_VV0UU8 "scalar vector load fp integer scalar short" arch12 zarch vx2
-e700000840c7 wfixb VRR_VV0UU8 "scalar vector load fp integer scalar extended" arch12 zarch vx2
-e700000000c4 vfll VRR_VV0UU2 "vector fp load lengthened" arch12 zarch vx2
-e700000020c4 vflls VRR_VV "vector fp load lengthened" arch12 zarch vx2
-e700000820c4 wflls VRR_VV "scalar vector fp load lengthened short" arch12 zarch vx2
-e700000830c4 wflld VRR_VV "scalar vector fp load lengthened long" arch12 zarch vx2
-e700000000c5 vflr VRR_VV0UUU "vector fp load rounded" arch12 zarch vx2
-e700000030c5 vflrd VRR_VV0UU "vector fp load rounded long" arch12 zarch vx2
-e700000830c5 wflrd VRR_VV0UU8 "scalar vector fp load rounded long" arch12 zarch vx2
-e700000840c5 wflrx VRR_VV0UU8 "scalar vector fp load rounded extended" arch12 zarch vx2
-e700000000ef vfmax VRR_VVV0UUU "vector fp maximum" arch12 zarch vx2
-e700000020ef vfmaxsb VRR_VVV0U0 "vector fp maximum short" arch12 zarch vx2
-e700000030ef vfmaxdb VRR_VVV0U0 "vector fp maximum long" arch12 zarch vx2
-e700000820ef wfmaxsb VRR_VVV0U0 "scalar fp maximum scalar short" arch12 zarch vx2
-e700000830ef wfmaxdb VRR_VVV0U0 "scalar fp maximum scalar long" arch12 zarch vx2
-e700000840ef wfmaxxb VRR_VVV0U0 "scalar fp maximum scalar extended" arch12 zarch vx2
-e700000000ee vfmin VRR_VVV0UUU "vector fp minimum" arch12 zarch vx2
-e700000020ee vfminsb VRR_VVV0U0 "vector fp minimum short" arch12 zarch vx2
-e700000030ee vfmindb VRR_VVV0U0 "vector fp minimum long" arch12 zarch vx2
-e700000820ee wfminsb VRR_VVV0U0 "scalar fp minimum scalar short" arch12 zarch vx2
-e700000830ee wfmindb VRR_VVV0U0 "scalar fp minimum scalar long" arch12 zarch vx2
-e700000840ee wfminxb VRR_VVV0U0 "scalar fp minimum scalar extended" arch12 zarch vx2
-e700000020e7 vfmsb VRR_VVV "vector fp multiply short" arch12 zarch vx2
-e700000820e7 wfmsb VRR_VVV "scalar vector fp multiply scalar short" arch12 zarch vx2
-e700000840e7 wfmxb VRR_VVV "scalar vector fp multiply scalar extended" arch12 zarch vx2
-e7000200008f vfmasb VRR_VVVV "vector fp multiply and add short" arch12 zarch vx2
-e7000208008f wfmasb VRR_VVVV "scalar vector fp multiply and add scalar short" arch12 zarch vx2
-e7000408008f wfmaxb VRR_VVVV "scalar vector fp multiply and add scalar extended" arch12 zarch vx2
-e7000200008e vfmssb VRR_VVVV "vector fp multiply and subtract short" arch12 zarch vx2
-e7000208008e wfmssb VRR_VVVV "scalar vector fp multiply and subtract scalar short" arch12 zarch vx2
-e7000408008e wfmsxb VRR_VVVV "scalar vector fp multiply and subtract scalar extended" arch12 zarch vx2
-e7000000009f vfnma VRR_VVVU0UV "vector fp negative multiply and add" arch12 zarch vx2
-e7000200009f vfnmasb VRR_VVVV "vector fp negative multiply and add short" arch12 zarch vx2
-e7000208009f wfnmasb VRR_VVVV "scalar vector fp negative multiply and add scalar short" arch12 zarch vx2
-e7000300009f vfnmadb VRR_VVVV "vector fp negative multiply and add long" arch12 zarch vx2
-e7000308009f wfnmadb VRR_VVVV "scalar vector fp negative multiply and add scalar long" arch12 zarch vx2
-e7000408009f wfnmaxb VRR_VVVV "scalar vector fp negative multiply and add scalar extended" arch12 zarch vx2
-e7000000009e vfnms VRR_VVVU0UV "vector fp negative multiply and subtract" arch12 zarch vx2
-e7000200009e vfnmssb VRR_VVVV "vector fp negative multiply and subtract short" arch12 zarch vx2
-e7000208009e wfnmssb VRR_VVVV "scalar vector fp negative multiply and subtract scalar short" arch12 zarch vx2
-e7000300009e vfnmsdb VRR_VVVV "vector fp negative multiply and subtract long" arch12 zarch vx2
-e7000308009e wfnmsdb VRR_VVVV "scalar vector fp negative multiply and subtract scalar long" arch12 zarch vx2
-e7000408009e wfnmsxb VRR_VVVV "scalar vector fp negative multiply and subtract scalar extended" arch12 zarch vx2
-e700000020cc vfpsosb VRR_VV0U2 "vector fp perform sign operation short" arch12 zarch vx2
-e700000820cc wfpsosb VRR_VV0U2 "scalar vector fp perform sign operation scalar short" arch12 zarch vx2
-e700000020cc vflcsb VRR_VV "vector fp perform sign operation short" arch12 zarch vx2
-e700000820cc wflcsb VRR_VV "scalar vector fp perform sign operation scalar short" arch12 zarch vx2
-e700001020cc vflnsb VRR_VV "vector fp perform sign operation short" arch12 zarch vx2
-e700001820cc wflnsb VRR_VV "scalar vector fp perform sign operation scalar short" arch12 zarch vx2
-e700002020cc vflpsb VRR_VV "vector fp perform sign operation short" arch12 zarch vx2
-e700002820cc wflpsb VRR_VV "scalar vector fp perform sign operation scalar short" arch12 zarch vx2
-e700000840cc wfpsoxb VRR_VV0U2 "scalar vector fp perform sign operation scalar extended" arch12 zarch vx2
-e700000840cc wflcxb VRR_VV "scalar vector fp perform sign operation scalar extended" arch12 zarch vx2
-e700001840cc wflnxb VRR_VV "scalar vector fp perform sign operation scalar extended" arch12 zarch vx2
-e700002840cc wflpxb VRR_VV "scalar vector fp perform sign operation scalar extended" arch12 zarch vx2
-e700000020ce vfsqsb VRR_VV "vector fp square root short" arch12 zarch vx2
-e700000820ce wfsqsb VRR_VV "scalar vector fp square root scalar short" arch12 zarch vx2
-e700000840ce wfsqxb VRR_VV "scalar vector fp square root scalar extended" arch12 zarch vx2
-e700000020e2 vfssb VRR_VVV "vector fp subtract short" arch12 zarch vx2
-e700000820e2 wfssb VRR_VVV "scalar vector fp subtract scalar short" arch12 zarch vx2
-e700000840e2 wfsxb VRR_VVV "scalar vector fp subtract scalar extended" arch12 zarch vx2
-e7000000204a vftcisb VRI_VVU2 "vector fp test data class immediate short" arch12 zarch vx2
-e7000008204a wftcisb VRI_VVU2 "scalar vector fp test data class immediate scalar short" arch12 zarch vx2
-e7000008404a wftcixb VRI_VVU2 "scalar vector fp test data class immediate scalar extended" arch12 zarch vx2
+e700000020e5 vfdsb VRR_VVV "vector fp divide short" arch12 zarch
+e700000820e5 wfdsb VRR_VVV "scalar vector fp divide scalar short" arch12 zarch
+e700000840e5 wfdxb VRR_VVV "scalar vector fp divide scalar extended" arch12 zarch
+e700000020c7 vfisb VRR_VV0UU "vector load fp integer short" arch12 zarch
+e700000820c7 wfisb VRR_VV0UU8 "scalar vector load fp integer scalar short" arch12 zarch
+e700000840c7 wfixb VRR_VV0UU8 "scalar vector load fp integer scalar extended" arch12 zarch
+e700000000c4 vfll VRR_VV0UU2 "vector fp load lengthened" arch12 zarch
+e700000020c4 vflls VRR_VV "vector fp load lengthened" arch12 zarch
+e700000820c4 wflls VRR_VV "scalar vector fp load lengthened short" arch12 zarch
+e700000830c4 wflld VRR_VV "scalar vector fp load lengthened long" arch12 zarch
+e700000000c5 vflr VRR_VV0UUU "vector fp load rounded" arch12 zarch
+e700000030c5 vflrd VRR_VV0UU "vector fp load rounded long" arch12 zarch
+e700000830c5 wflrd VRR_VV0UU8 "scalar vector fp load rounded long" arch12 zarch
+e700000840c5 wflrx VRR_VV0UU8 "scalar vector fp load rounded extended" arch12 zarch
+e700000000ef vfmax VRR_VVV0UUU "vector fp maximum" arch12 zarch
+e700000020ef vfmaxsb VRR_VVV0U0 "vector fp maximum short" arch12 zarch
+e700000030ef vfmaxdb VRR_VVV0U0 "vector fp maximum long" arch12 zarch
+e700000820ef wfmaxsb VRR_VVV0U0 "scalar fp maximum scalar short" arch12 zarch
+e700000830ef wfmaxdb VRR_VVV0U0 "scalar fp maximum scalar long" arch12 zarch
+e700000840ef wfmaxxb VRR_VVV0U0 "scalar fp maximum scalar extended" arch12 zarch
+e700000000ee vfmin VRR_VVV0UUU "vector fp minimum" arch12 zarch
+e700000020ee vfminsb VRR_VVV0U0 "vector fp minimum short" arch12 zarch
+e700000030ee vfmindb VRR_VVV0U0 "vector fp minimum long" arch12 zarch
+e700000820ee wfminsb VRR_VVV0U0 "scalar fp minimum scalar short" arch12 zarch
+e700000830ee wfmindb VRR_VVV0U0 "scalar fp minimum scalar long" arch12 zarch
+e700000840ee wfminxb VRR_VVV0U0 "scalar fp minimum scalar extended" arch12 zarch
+e700000020e7 vfmsb VRR_VVV "vector fp multiply short" arch12 zarch
+e700000820e7 wfmsb VRR_VVV "scalar vector fp multiply scalar short" arch12 zarch
+e700000840e7 wfmxb VRR_VVV "scalar vector fp multiply scalar extended" arch12 zarch
+e7000200008f vfmasb VRR_VVVV "vector fp multiply and add short" arch12 zarch
+e7000208008f wfmasb VRR_VVVV "scalar vector fp multiply and add scalar short" arch12 zarch
+e7000408008f wfmaxb VRR_VVVV "scalar vector fp multiply and add scalar extended" arch12 zarch
+e7000200008e vfmssb VRR_VVVV "vector fp multiply and subtract short" arch12 zarch
+e7000208008e wfmssb VRR_VVVV "scalar vector fp multiply and subtract scalar short" arch12 zarch
+e7000408008e wfmsxb VRR_VVVV "scalar vector fp multiply and subtract scalar extended" arch12 zarch
+e7000000009f vfnma VRR_VVVU0UV "vector fp negative multiply and add" arch12 zarch
+e7000200009f vfnmasb VRR_VVVV "vector fp negative multiply and add short" arch12 zarch
+e7000208009f wfnmasb VRR_VVVV "scalar vector fp negative multiply and add scalar short" arch12 zarch
+e7000300009f vfnmadb VRR_VVVV "vector fp negative multiply and add long" arch12 zarch
+e7000308009f wfnmadb VRR_VVVV "scalar vector fp negative multiply and add scalar long" arch12 zarch
+e7000408009f wfnmaxb VRR_VVVV "scalar vector fp negative multiply and add scalar extended" arch12 zarch
+e7000000009e vfnms VRR_VVVU0UV "vector fp negative multiply and subtract" arch12 zarch
+e7000200009e vfnmssb VRR_VVVV "vector fp negative multiply and subtract short" arch12 zarch
+e7000208009e wfnmssb VRR_VVVV "scalar vector fp negative multiply and subtract scalar short" arch12 zarch
+e7000300009e vfnmsdb VRR_VVVV "vector fp negative multiply and subtract long" arch12 zarch
+e7000308009e wfnmsdb VRR_VVVV "scalar vector fp negative multiply and subtract scalar long" arch12 zarch
+e7000408009e wfnmsxb VRR_VVVV "scalar vector fp negative multiply and subtract scalar extended" arch12 zarch
+e700000020cc vfpsosb VRR_VV0U2 "vector fp perform sign operation short" arch12 zarch
+e700000820cc wfpsosb VRR_VV0U2 "scalar vector fp perform sign operation scalar short" arch12 zarch
+e700000020cc vflcsb VRR_VV "vector fp perform sign operation short" arch12 zarch
+e700000820cc wflcsb VRR_VV "scalar vector fp perform sign operation scalar short" arch12 zarch
+e700001020cc vflnsb VRR_VV "vector fp perform sign operation short" arch12 zarch
+e700001820cc wflnsb VRR_VV "scalar vector fp perform sign operation scalar short" arch12 zarch
+e700002020cc vflpsb VRR_VV "vector fp perform sign operation short" arch12 zarch
+e700002820cc wflpsb VRR_VV "scalar vector fp perform sign operation scalar short" arch12 zarch
+e700000840cc wfpsoxb VRR_VV0U2 "scalar vector fp perform sign operation scalar extended" arch12 zarch
+e700000840cc wflcxb VRR_VV "scalar vector fp perform sign operation scalar extended" arch12 zarch
+e700001840cc wflnxb VRR_VV "scalar vector fp perform sign operation scalar extended" arch12 zarch
+e700002840cc wflpxb VRR_VV "scalar vector fp perform sign operation scalar extended" arch12 zarch
+e700000020ce vfsqsb VRR_VV "vector fp square root short" arch12 zarch
+e700000820ce wfsqsb VRR_VV "scalar vector fp square root scalar short" arch12 zarch
+e700000840ce wfsqxb VRR_VV "scalar vector fp square root scalar extended" arch12 zarch
+e700000020e2 vfssb VRR_VVV "vector fp subtract short" arch12 zarch
+e700000820e2 wfssb VRR_VVV "scalar vector fp subtract scalar short" arch12 zarch
+e700000840e2 wfsxb VRR_VVV "scalar vector fp subtract scalar extended" arch12 zarch
+e7000000204a vftcisb VRI_VVU2 "vector fp test data class immediate short" arch12 zarch
+e7000008204a wftcisb VRI_VVU2 "scalar vector fp test data class immediate scalar short" arch12 zarch
+e7000008404a wftcixb VRI_VVU2 "scalar vector fp test data class immediate scalar extended" arch12 zarch
 
 # Miscellaneous Instruction Extensions Facility 2
 
@@ -1843,28 +1843,28 @@ e30000000039 sgh RXY_RRRD "subtract halfword from 64 bit value" arch12 zarch
 
 # Vector packed decimal facility
 
-e60000000037 vlrlr VRS_RRDV "vector load rightmost with length" arch12 zarch vx2
-e60000000035 vlrl VSI_URDV "vector load rightmost with immediate length" arch12 zarch vx2
-e6000000003f vstrlr VRS_RRDV "vector store rightmost with length" arch12 zarch vx2
-e6000000003d vstrl VSI_URDV "vector store rightmost with immediate length" arch12 zarch vx2
-e60000000071 vap VRI_VVV0UU2 "vector add decimal" arch12 zarch vx2
-e60000000077 vcp VRR_0VV0U "vector compare decimal" arch12 zarch vx2
-e60000000050 vcvb VRR_RV0U "vector convert to binary 32 bit" arch12 zarch vx2
-e60000000052 vcvbg VRR_RV0U "vector convert to binary 64 bit" arch12 zarch vx2
-e60000000058 vcvd VRI_VR0UU "vector convert to decimal 32 bit" arch12 zarch vx2
-e6000000005a vcvdg VRI_VR0UU "vector convert to decimal 64 bit" arch12 zarch vx2
-e6000000007a vdp VRI_VVV0UU2 "vector divide decimal" arch12 zarch vx2
-e60000000049 vlip VRI_V0UU2 "vector load immediate decimal" arch12 zarch vx2
-e60000000078 vmp VRI_VVV0UU2 "vector multiply decimal" arch12 zarch vx2
-e60000000079 vmsp VRI_VVV0UU2 "vector multiply and shift decimal" arch12 zarch vx2
-e60000000034 vpkz VSI_URDV "vector pack zoned" arch12 zarch vx2
-e6000000005b vpsop VRI_VVUUU2 "vector perform sign operation decimal" arch12 zarch vx2
-e6000000007b vrp VRI_VVV0UU2 "vector remainder decimal" arch12 zarch vx2
-e6000000007e vsdp VRI_VVV0UU2 "vector shift and divide decimal" arch12 zarch vx2
-e60000000059 vsrp VRI_VVUUU2 "vector shift and round decimal" arch12 zarch vx2
-e60000000073 vsp VRI_VVV0UU2 "vector subtract decimal" arch12 zarch vx2
-e6000000005f vtp VRR_0V "vector test decimal" arch12 zarch vx2
-e6000000003c vupkz VSI_URDV "vector unpack zoned" arch12 zarch vx2
+e60000000037 vlrlr VRS_RRDV "vector load rightmost with length" arch12 zarch
+e60000000035 vlrl VSI_URDV "vector load rightmost with immediate length" arch12 zarch
+e6000000003f vstrlr VRS_RRDV "vector store rightmost with length" arch12 zarch
+e6000000003d vstrl VSI_URDV "vector store rightmost with immediate length" arch12 zarch
+e60000000071 vap VRI_VVV0UU2 "vector add decimal" arch12 zarch
+e60000000077 vcp VRR_0VV0U "vector compare decimal" arch12 zarch
+e60000000050 vcvb VRR_RV0U "vector convert to binary 32 bit" arch12 zarch
+e60000000052 vcvbg VRR_RV0U "vector convert to binary 64 bit" arch12 zarch
+e60000000058 vcvd VRI_VR0UU "vector convert to decimal 32 bit" arch12 zarch
+e6000000005a vcvdg VRI_VR0UU "vector convert to decimal 64 bit" arch12 zarch
+e6000000007a vdp VRI_VVV0UU2 "vector divide decimal" arch12 zarch
+e60000000049 vlip VRI_V0UU2 "vector load immediate decimal" arch12 zarch
+e60000000078 vmp VRI_VVV0UU2 "vector multiply decimal" arch12 zarch
+e60000000079 vmsp VRI_VVV0UU2 "vector multiply and shift decimal" arch12 zarch
+e60000000034 vpkz VSI_URDV "vector pack zoned" arch12 zarch
+e6000000005b vpsop VRI_VVUUU2 "vector perform sign operation decimal" arch12 zarch
+e6000000007b vrp VRI_VVV0UU2 "vector remainder decimal" arch12 zarch
+e6000000007e vsdp VRI_VVV0UU2 "vector shift and divide decimal" arch12 zarch
+e60000000059 vsrp VRI_VVUUU2 "vector shift and round decimal" arch12 zarch
+e60000000073 vsp VRI_VVV0UU2 "vector subtract decimal" arch12 zarch
+e6000000005f vtp VRR_0V "vector test decimal" arch12 zarch
+e6000000003c vupkz VSI_URDV "vector unpack zoned" arch12 zarch
 
 # Guarded storage facility
 

commit a7b47925683a22c9819c23cb18b99bd74014d066
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed Mar 22 00:01:25 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 80e0c85..3b637b5 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170321
+#define BFD_VERSION_DATE 20170322
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 389992870c6e04501df5260a1234f63f6b3baee4
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu Mar 23 00:01:32 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 3b637b5..95ee2d3 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170322
+#define BFD_VERSION_DATE 20170323
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit cef891bd665ce4bb911e00f7d1e00738dec138e8
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri Mar 24 00:01:24 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 95ee2d3..026d674 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170323
+#define BFD_VERSION_DATE 20170324
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit c9e7eae9262ae6940421b263b3b57fd154e51b2e
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat Mar 25 00:00:49 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 026d674..8e80e67 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170324
+#define BFD_VERSION_DATE 20170325
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 9370bf96791a8fef4655daea08a769224c855585
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun Mar 26 00:00:58 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 8e80e67..467a71f 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170325
+#define BFD_VERSION_DATE 20170326
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 1bf7595192c03ccdc104cb0d06a28955d94f2231
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon Mar 27 00:01:18 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 467a71f..e1d19d9 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170326
+#define BFD_VERSION_DATE 20170327
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 95afaad6b0419b5de31a7759c8c37485b7dd78ff
Author: Alan Modra <amodra@gmail.com>
Date:   Mon Mar 27 08:19:48 2017 +1030

    PR21303, objdump doesn't show e200z4 insns
    
    	PR 21303
    opcodes/
    	* ppc-dis.c (struct ppc_mopt): Comment.
    	(ppc_opts <e200z4>): Move PPC_OPCODE_VLE from .sticky to .cpu.
    gas/
    	* testsuite/gas/ppc/pr21303.d,
    	* testsuite/gas/ppc/pr21303.s: New test
    	* testsuite/gas/ppc/ppc.exp: Run it.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index d59472a..90a532d 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,10 @@
+2017-03-27  Alan Modra  <amodra@gmail.com>
+
+	PR 21303
+	* testsuite/gas/ppc/pr21303.d,
+	* testsuite/gas/ppc/pr21303.s: New test
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
 2017-03-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
 
 	Backport from mainline
diff --git a/gas/testsuite/gas/ppc/ppc.exp b/gas/testsuite/gas/ppc/ppc.exp
index 86db455..55367ad 100644
--- a/gas/testsuite/gas/ppc/ppc.exp
+++ b/gas/testsuite/gas/ppc/ppc.exp
@@ -50,6 +50,7 @@ if { [istarget powerpc*-*-*] } then {
 	run_dump_test "common"
 	run_dump_test "476"
 	run_dump_test "a2"
+	run_dump_test "pr21303"
 	if { ![istarget powerpc*le-*-*] } then {
 	    run_dump_test "vle"
 	    run_dump_test "vle-reloc"
diff --git a/gas/testsuite/gas/ppc/pr21303.d b/gas/testsuite/gas/ppc/pr21303.d
new file mode 100644
index 0000000..64761a4
--- /dev/null
+++ b/gas/testsuite/gas/ppc/pr21303.d
@@ -0,0 +1,12 @@
+#objdump: -d -Me200z4
+#as: -a32 -mbig -me200z4
+
+.*
+
+Disassembly of section \.text:
+
+0+ <\.text>:
+   0:	70 00 00 00 	e_li    r0,0
+   4:	7c 01 14 04 	lbdcbx  r0,r1,r2
+   8:	7c 01 14 44 	lhdcbx  r0,r1,r2
+   c:	7c 01 14 84 	lwdcbx  r0,r1,r2
diff --git a/gas/testsuite/gas/ppc/pr21303.s b/gas/testsuite/gas/ppc/pr21303.s
new file mode 100644
index 0000000..890ba94
--- /dev/null
+++ b/gas/testsuite/gas/ppc/pr21303.s
@@ -0,0 +1,5 @@
+ .text
+ e_li 0, 0
+ lbdcbx 0, 1, 2
+ lhdcbx 0, 1, 2
+ lwdcbx 0, 1, 2
diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index bdc6266..0d149f1 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,3 +1,9 @@
+2017-03-27  Alan Modra  <amodra@gmail.com>
+
+	PR 21303
+	* ppc-dis.c (struct ppc_mopt): Comment.
+	(ppc_opts <e200z4>): Move PPC_OPCODE_VLE from .sticky to .cpu.
+
 2017-03-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
 
 	Backport from mainline
diff --git a/opcodes/ppc-dis.c b/opcodes/ppc-dis.c
index 38f7e55..baa7388 100644
--- a/opcodes/ppc-dis.c
+++ b/opcodes/ppc-dis.c
@@ -45,8 +45,19 @@ struct dis_private
   (((struct dis_private *) ((INFO)->private_data))->dialect)
 
 struct ppc_mopt {
+  /* Option string, without -m or -M prefix.  */
   const char *opt;
+  /* CPU option flags.  */
   ppc_cpu_t cpu;
+  /* Flags that should stay on, even when combined with another cpu
+     option.  This should only be used for generic options like
+     "-many" or "-maltivec" where it is reasonable to add some
+     capability to another cpu selection.  The added flags are sticky
+     so that, for example, "-many -me500" and "-me500 -many" result in
+     the same assembler or disassembler behaviour.  Do not use
+     "sticky" for specific cpus, as this will prevent that cpu's flags
+     from overriding the defaults set in powerpc_init_dialect or a
+     prior -m option.  */
   ppc_cpu_t sticky;
 };
 
@@ -108,8 +119,8 @@ struct ppc_mopt ppc_opts[] = {
   { "e200z4",  (PPC_OPCODE_PPC | PPC_OPCODE_BOOKE| PPC_OPCODE_SPE
 		| PPC_OPCODE_ISEL | PPC_OPCODE_EFS | PPC_OPCODE_BRLOCK
 		| PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI
-		| PPC_OPCODE_E500 | PPC_OPCODE_E200Z4),
-    PPC_OPCODE_VLE },
+		| PPC_OPCODE_E500 | PPC_OPCODE_VLE | PPC_OPCODE_E200Z4),
+    0 },
   { "e300",    PPC_OPCODE_PPC | PPC_OPCODE_E300,
     0 },
   { "e500",    (PPC_OPCODE_PPC | PPC_OPCODE_BOOKE | PPC_OPCODE_SPE

commit ca6305f378d44a25a5b62c335a978de2c21ead3d
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue Mar 28 00:01:13 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index e1d19d9..5d8db56 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170327
+#define BFD_VERSION_DATE 20170328
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit abb013911f631559639906e2d163a3c3e1d94de8
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed Mar 29 00:01:05 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 5d8db56..36c851a 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170328
+#define BFD_VERSION_DATE 20170329
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit e02a1075c7f8af60f789d0fcf337aa9d8bca861b
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu Mar 30 00:01:33 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 36c851a..0474a20 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170329
+#define BFD_VERSION_DATE 20170330
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit c6f578b62090bbbf8458aa75fe1638a922e8d338
Author: Andrew Waterman <andrew@sifive.com>
Date:   Mon Mar 13 12:46:33 2017 -0700

    RISC-V: Fix [dis]assembly of srai/srli
    
    These were simple copy/paste errors from the compressed left shift
    pattern, which can't have a 0-register.

diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index 0d149f1..21ca15a 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,3 +1,10 @@
+2017-03-13  Andrew Waterman  <andrew@sifive.com>
+
+	* riscv-opc.c (riscv_opcodes) <srli/C>: Use match_opcode.
+	<srl> Likewise.
+	<srai> Likewise.
+	<sra> Likewise.
+
 2017-03-27  Alan Modra  <amodra@gmail.com>
 
 	PR 21303
diff --git a/opcodes/riscv-opc.c b/opcodes/riscv-opc.c
index 867a026..da33600 100644
--- a/opcodes/riscv-opc.c
+++ b/opcodes/riscv-opc.c
@@ -210,14 +210,14 @@ const struct riscv_opcode riscv_opcodes[] =
 {"sll",       "C",   "d,CU,C>",  MATCH_C_SLLI, MASK_C_SLLI, match_rd_nonzero, INSN_ALIAS },
 {"sll",       "I",   "d,s,t",   MATCH_SLL, MASK_SLL, match_opcode, 0 },
 {"sll",       "I",   "d,s,>",   MATCH_SLLI, MASK_SLLI, match_opcode, INSN_ALIAS },
-{"srli",      "C",   "Cs,Cw,C>",  MATCH_C_SRLI, MASK_C_SRLI, match_rd_nonzero, INSN_ALIAS },
+{"srli",      "C",   "Cs,Cw,C>",  MATCH_C_SRLI, MASK_C_SRLI, match_opcode, INSN_ALIAS },
 {"srli",      "I",   "d,s,>",   MATCH_SRLI, MASK_SRLI, match_opcode, 0 },
-{"srl",       "C",   "Cs,Cw,C>",  MATCH_C_SRLI, MASK_C_SRLI, match_rd_nonzero, INSN_ALIAS },
+{"srl",       "C",   "Cs,Cw,C>",  MATCH_C_SRLI, MASK_C_SRLI, match_opcode, INSN_ALIAS },
 {"srl",       "I",   "d,s,t",   MATCH_SRL, MASK_SRL, match_opcode, 0 },
 {"srl",       "I",   "d,s,>",   MATCH_SRLI, MASK_SRLI, match_opcode, INSN_ALIAS },
-{"srai",      "C",   "Cs,Cw,C>",  MATCH_C_SRAI, MASK_C_SRAI, match_rd_nonzero, INSN_ALIAS },
+{"srai",      "C",   "Cs,Cw,C>",  MATCH_C_SRAI, MASK_C_SRAI, match_opcode, INSN_ALIAS },
 {"srai",      "I",   "d,s,>",   MATCH_SRAI, MASK_SRAI, match_opcode, 0 },
-{"sra",       "C",   "Cs,Cw,C>",  MATCH_C_SRAI, MASK_C_SRAI, match_rd_nonzero, INSN_ALIAS },
+{"sra",       "C",   "Cs,Cw,C>",  MATCH_C_SRAI, MASK_C_SRAI, match_opcode, INSN_ALIAS },
 {"sra",       "I",   "d,s,t",   MATCH_SRA, MASK_SRA, match_opcode, 0 },
 {"sra",       "I",   "d,s,>",   MATCH_SRAI, MASK_SRAI, match_opcode, INSN_ALIAS },
 {"sub",       "C",   "Cs,Cw,Ct",  MATCH_C_SUB, MASK_C_SUB, match_opcode, INSN_ALIAS },

commit 5fa45e35a3f36846b2f5a20f921d06705d66854f
Author: Kuan-Lin Chen <rufus@andestech.com>
Date:   Thu Feb 2 15:27:18 2017 +0800

    RISC-V: Fix the offset of CFA relocation.
    
    gas/ChangeLog:
    
    2017-03-02  Kuan-Lin Chen  <rufus@andestech.com>
    
            * config/tc-riscv.c (md_apply_fix): Compute the correct offsets
            for CFA relocations.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index 90a532d..50a7303 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,8 @@
+2017-03-02  Kuan-Lin Chen  <rufus@andestech.com>
+
+	* config/tc-riscv.c (md_apply_fix): Compute the correct offsets
+	for CFA relocations.
+
 2017-03-27  Alan Modra  <amodra@gmail.com>
 
 	PR 21303
diff --git a/gas/config/tc-riscv.c b/gas/config/tc-riscv.c
index ec5b0bb..c79f313 100644
--- a/gas/config/tc-riscv.c
+++ b/gas/config/tc-riscv.c
@@ -1837,6 +1837,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)
   unsigned int subtype;
   bfd_byte *buf = (bfd_byte *) (fixP->fx_frag->fr_literal + fixP->fx_where);
   bfd_boolean relaxable = FALSE;
+  offsetT loc;
 
   /* Remember value for tc_gen_reloc.  */
   fixP->fx_addnumber = *valP;
@@ -1922,30 +1923,31 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)
 
 	    case BFD_RELOC_RISCV_CFA:
 	      /* Load the byte to get the subtype.  */
-	      subtype = bfd_get_8 (NULL, &fixP->fx_frag->fr_literal[fixP->fx_where]);
+	      subtype = bfd_get_8 (NULL, &((fragS *) (fixP->fx_frag->fr_opcode))->fr_literal[fixP->fx_where]);
+	      loc = fixP->fx_frag->fr_fix - (subtype & 7);
 	      switch (subtype)
 		{
 		case DW_CFA_advance_loc1:
-		  fixP->fx_where++;
-		  fixP->fx_next->fx_where++;
+		  fixP->fx_where = loc + 1;
+		  fixP->fx_next->fx_where = loc + 1;
 		  fixP->fx_r_type = BFD_RELOC_RISCV_SET8;
 		  fixP->fx_next->fx_r_type = BFD_RELOC_RISCV_SUB8;
 		  break;
 
 		case DW_CFA_advance_loc2:
 		  fixP->fx_size = 2;
-		  fixP->fx_where++;
 		  fixP->fx_next->fx_size = 2;
-		  fixP->fx_next->fx_where++;
+		  fixP->fx_where = loc + 1;
+		  fixP->fx_next->fx_where = loc + 1;
 		  fixP->fx_r_type = BFD_RELOC_RISCV_SET16;
 		  fixP->fx_next->fx_r_type = BFD_RELOC_RISCV_SUB16;
 		  break;
 
 		case DW_CFA_advance_loc4:
 		  fixP->fx_size = 4;
-		  fixP->fx_where++;
 		  fixP->fx_next->fx_size = 4;
-		  fixP->fx_next->fx_where++;
+		  fixP->fx_where = loc;
+		  fixP->fx_next->fx_where = loc;
 		  fixP->fx_r_type = BFD_RELOC_RISCV_SET32;
 		  fixP->fx_next->fx_r_type = BFD_RELOC_RISCV_SUB32;
 		  break;
@@ -2069,7 +2071,6 @@ riscv_pre_output_hook (void)
 	  {
 	    if (frag->fr_type == rs_cfa)
 	      {
-		fragS *loc4_frag;
 		expressionS exp;
 
 		symbolS *add_symbol = frag->fr_symbol->sy_value.X_add_symbol;
@@ -2080,8 +2081,7 @@ riscv_pre_output_hook (void)
 		exp.X_add_number = 0;
 		exp.X_op_symbol = op_symbol;
 
-		loc4_frag = (fragS *) frag->fr_opcode;
-		fix_new_exp (loc4_frag, (int) frag->fr_offset, 1, &exp, 0,
+		fix_new_exp (frag, (int) frag->fr_offset, 1, &exp, 0,
 			     BFD_RELOC_RISCV_CFA);
 	      }
 	  }

commit 4fc0b698948d38d317913bd9c9452648b304710d
Author: Kuan-Lin Chen <rufus@andestech.com>
Date:   Fri Feb 10 14:58:52 2017 +0800

    RISC-V: Fix DW_CFA_advance_loc relocation.
    
    gas/ChangeLog:
    
    2017-03-02  Kuan-Lin Chen  <rufus@andestech.com>
    
            * config/tc-riscv.c (md_apply_fix): Set fx_frag and
            fx_next->fx_frag for CFA_advance_loc relocations.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index 50a7303..465ad9f 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,5 +1,10 @@
 2017-03-02  Kuan-Lin Chen  <rufus@andestech.com>
 
+	* config/tc-riscv.c (md_apply_fix): Set fx_frag and
+	fx_next->fx_frag for CFA_advance_loc relocations.
+
+2017-03-02  Kuan-Lin Chen  <rufus@andestech.com>
+
 	* config/tc-riscv.c (md_apply_fix): Compute the correct offsets
 	for CFA relocations.
 
diff --git a/gas/config/tc-riscv.c b/gas/config/tc-riscv.c
index c79f313..4d28042 100644
--- a/gas/config/tc-riscv.c
+++ b/gas/config/tc-riscv.c
@@ -1956,6 +1956,8 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)
 		  if (subtype < 0x80 && (subtype & 0x40))
 		    {
 		      /* DW_CFA_advance_loc */
+		      fixP->fx_frag = (fragS *) fixP->fx_frag->fr_opcode;
+		      fixP->fx_next->fx_frag = fixP->fx_frag;
 		      fixP->fx_r_type = BFD_RELOC_RISCV_SET6;
 		      fixP->fx_next->fx_r_type = BFD_RELOC_RISCV_SUB6;
 		    }

commit 055955206e6669310f7e76eb62eef8a9b33a55f5
Author: Kuan-Lin Chen <rufus@andestech.com>
Date:   Thu Mar 2 14:54:32 2017 +0800

    RISC-V: Define DWARF2_USE_FIXED_ADVANCE_PC.
    
    gas/ChangeLog
    
    2017-03-02  Kuan-Lin Chen  <rufus@andestech.com>
    
            * config/tc-riscv.h (HWARD2_USE_FIXED_ADVANCE_PC): New define.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index 465ad9f..26f5f25 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,5 +1,9 @@
 2017-03-02  Kuan-Lin Chen  <rufus@andestech.com>
 
+	* config/tc-riscv.h (HWARD2_USE_FIXED_ADVANCE_PC): New define.
+
+2017-03-02  Kuan-Lin Chen  <rufus@andestech.com>
+
 	* config/tc-riscv.c (md_apply_fix): Set fx_frag and
 	fx_next->fx_frag for CFA_advance_loc relocations.
 
diff --git a/gas/config/tc-riscv.h b/gas/config/tc-riscv.h
index ae8d60e..e92b387 100644
--- a/gas/config/tc-riscv.h
+++ b/gas/config/tc-riscv.h
@@ -112,4 +112,7 @@ extern int tc_riscv_regname_to_dw2regnum (char *);
 #define elf_tc_final_processing riscv_elf_final_processing
 extern void riscv_elf_final_processing (void);
 
+/* Adjust debug_line after relaxation.  */
+#define DWARF2_USE_FIXED_ADVANCE_PC 1
+
 #endif /* TC_RISCV */

commit 01174b8167028669286a9e94b0a6cd22ce53ac69
Author: Kito Cheng <kito.cheng@gmail.com>
Date:   Tue Mar 7 19:56:40 2017 +0800

    RISC-V: Fix assembler for c.addi, rd can be x0
    
    opcodes/ChangeLog:
    
    2017-03-14  Kito Cheng  <kito.cheng@gmail.com>
    
    	* riscv-opc.c (riscv_opcodes) <c.addi>: Use match_opcode.

diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index 21ca15a..1b5c600 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,3 +1,7 @@
+2017-03-14  Kito Cheng  <kito.cheng@gmail.com>
+
+	* riscv-opc.c (riscv_opcodes) <c.addi>: Use match_opcode.
+
 2017-03-13  Andrew Waterman  <andrew@sifive.com>
 
 	* riscv-opc.c (riscv_opcodes) <srli/C>: Use match_opcode.
diff --git a/opcodes/riscv-opc.c b/opcodes/riscv-opc.c
index da33600..edbf2f6 100644
--- a/opcodes/riscv-opc.c
+++ b/opcodes/riscv-opc.c
@@ -565,7 +565,7 @@ const struct riscv_opcode riscv_opcodes[] =
 {"c.li",      "C",   "d,Cj",  MATCH_C_LI, MASK_C_LI, match_rd_nonzero, 0 },
 {"c.addi4spn","C",   "Ct,Cc,CK", MATCH_C_ADDI4SPN, MASK_C_ADDI4SPN, match_opcode, 0 },
 {"c.addi16sp","C",   "Cc,CL", MATCH_C_ADDI16SP, MASK_C_ADDI16SP, match_opcode, 0 },
-{"c.addi",    "C",   "d,Cj",  MATCH_C_ADDI, MASK_C_ADDI, match_rd_nonzero, 0 },
+{"c.addi",    "C",   "d,Cj",  MATCH_C_ADDI, MASK_C_ADDI, match_opcode, 0 },
 {"c.add",     "C",   "d,CV",  MATCH_C_ADD, MASK_C_ADD, match_c_add, 0 },
 {"c.sub",     "C",   "Cs,Ct",  MATCH_C_SUB, MASK_C_SUB, match_opcode, 0 },
 {"c.and",     "C",   "Cs,Ct",  MATCH_C_AND, MASK_C_AND, match_opcode, 0 },

commit 84c7e072406343e28efad492a0f709028867e67c
Author: Kito Cheng <kito.cheng@gmail.com>
Date:   Tue Mar 7 18:15:02 2017 +0800

    RISC-V: Fix assembler for c.li, c.andi and c.addiw
    
     - They can accept 0 in imm field
    
     2017-03-14  Kito Cheng  <kito.cheng@gmail.com>
    
           * riscv-opc.c (riscv_opcodes> <c.li>: Use the 'o' immediate encoding.
           <c.andi>: Likewise.
           <c.addiw> Likewise.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index 26f5f25..ddcbdff 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,9 @@
+2017-03-14  Kito Cheng  <kito.cheng@gmail.com>
+
+	* config/tc-riscv.c (validate_riscv_insn): Add 'o' RVC immediate
+	encoding format, which can accept 0-valued immediates.
+	(riscv_ip): Likewise.
+
 2017-03-02  Kuan-Lin Chen  <rufus@andestech.com>
 
 	* config/tc-riscv.h (HWARD2_USE_FIXED_ADVANCE_PC): New define.
diff --git a/gas/config/tc-riscv.c b/gas/config/tc-riscv.c
index 4d28042..429ba2b 100644
--- a/gas/config/tc-riscv.c
+++ b/gas/config/tc-riscv.c
@@ -500,6 +500,7 @@ validate_riscv_insn (const struct riscv_opcode *opc)
 	  case 'c': break; /* RS1, constrained to equal sp */
 	  case 'i': used_bits |= ENCODE_RVC_SIMM3(-1U); break;
 	  case 'j': used_bits |= ENCODE_RVC_IMM (-1U); break;
+	  case 'o': used_bits |= ENCODE_RVC_IMM (-1U); break;
 	  case 'k': used_bits |= ENCODE_RVC_LW_IMM (-1U); break;
 	  case 'l': used_bits |= ENCODE_RVC_LD_IMM (-1U); break;
 	  case 'm': used_bits |= ENCODE_RVC_LWSP_IMM (-1U); break;
@@ -1321,6 +1322,13 @@ rvc_imm_done:
 		  ip->insn_opcode |=
 		    ENCODE_RVC_LDSP_IMM (imm_expr->X_add_number);
 		  goto rvc_imm_done;
+		case 'o':
+		  if (my_getSmallExpression (imm_expr, imm_reloc, s, p)
+		      || imm_expr->X_op != O_constant
+		      || !VALID_RVC_IMM (imm_expr->X_add_number))
+		    break;
+		  ip->insn_opcode |= ENCODE_RVC_IMM (imm_expr->X_add_number);
+		  goto rvc_imm_done;
 		case 'K':
 		  if (my_getSmallExpression (imm_expr, imm_reloc, s, p)
 		      || imm_expr->X_op != O_constant
diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index 1b5c600..0517fd9 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,5 +1,11 @@
 2017-03-14  Kito Cheng  <kito.cheng@gmail.com>
 
+	* riscv-opc.c (riscv_opcodes> <c.li>: Use the 'o' immediate encoding.
+	<c.andi>: Likewise.
+	<c.addiw> Likewise.
+
+2017-03-14  Kito Cheng  <kito.cheng@gmail.com>
+
 	* riscv-opc.c (riscv_opcodes) <c.addi>: Use match_opcode.
 
 2017-03-13  Andrew Waterman  <andrew@sifive.com>
diff --git a/opcodes/riscv-opc.c b/opcodes/riscv-opc.c
index edbf2f6..2b18a1e 100644
--- a/opcodes/riscv-opc.c
+++ b/opcodes/riscv-opc.c
@@ -562,7 +562,7 @@ const struct riscv_opcode riscv_opcodes[] =
 {"c.nop",     "C",   "",  MATCH_C_ADDI, 0xffff, match_opcode, 0 },
 {"c.mv",      "C",   "d,CV",  MATCH_C_MV, MASK_C_MV, match_c_add, 0 },
 {"c.lui",     "C",   "d,Cu",  MATCH_C_LUI, MASK_C_LUI, match_c_lui, 0 },
-{"c.li",      "C",   "d,Cj",  MATCH_C_LI, MASK_C_LI, match_rd_nonzero, 0 },
+{"c.li",      "C",   "d,Co",  MATCH_C_LI, MASK_C_LI, match_rd_nonzero, 0 },
 {"c.addi4spn","C",   "Ct,Cc,CK", MATCH_C_ADDI4SPN, MASK_C_ADDI4SPN, match_opcode, 0 },
 {"c.addi16sp","C",   "Cc,CL", MATCH_C_ADDI16SP, MASK_C_ADDI16SP, match_opcode, 0 },
 {"c.addi",    "C",   "d,Cj",  MATCH_C_ADDI, MASK_C_ADDI, match_opcode, 0 },
@@ -574,8 +574,8 @@ const struct riscv_opcode riscv_opcodes[] =
 {"c.slli",    "C",   "d,C>",  MATCH_C_SLLI, MASK_C_SLLI, match_rd_nonzero, 0 },
 {"c.srli",    "C",   "Cs,C>",  MATCH_C_SRLI, MASK_C_SRLI, match_opcode, 0 },
 {"c.srai",    "C",   "Cs,C>",  MATCH_C_SRAI, MASK_C_SRAI, match_opcode, 0 },
-{"c.andi",    "C",   "Cs,Cj",  MATCH_C_ANDI, MASK_C_ANDI, match_opcode, 0 },
-{"c.addiw",   "64C", "d,Cj",  MATCH_C_ADDIW, MASK_C_ADDIW, match_rd_nonzero, 0 },
+{"c.andi",    "C",   "Cs,Co",  MATCH_C_ANDI, MASK_C_ANDI, match_opcode, 0 },
+{"c.addiw",   "64C", "d,Co",  MATCH_C_ADDIW, MASK_C_ADDIW, match_rd_nonzero, 0 },
 {"c.addw",    "64C", "Cs,Ct",  MATCH_C_ADDW, MASK_C_ADDW, match_opcode, 0 },
 {"c.subw",    "64C", "Cs,Ct",  MATCH_C_SUBW, MASK_C_SUBW, match_opcode, 0 },
 {"c.ldsp",    "64C", "d,Cn(Cc)",  MATCH_C_LDSP, MASK_C_LDSP, match_rd_nonzero, 0 },

commit 49dfd6d9347ada18f5b21d7a9d24b43b77ed80b7
Author: Palmer Dabbelt <palmer@dabbelt.com>
Date:   Tue Mar 21 08:36:44 2017 -0700

    Sanitize RISC-V GAS help text, documentation
    
    It looks like I missed the GAS help text when going through all the
    documentation last time, so it printed some of the old-format (never
    upstream) arguments.  I fixed this, and when I went to check doc/ I
    noticed it was missing the '-fpic'/'-fno-pic' options.
    
    2017-03-21  Palmer Dabbbelt  <palmer@dabbelt.com>
    
            * config/tc-riscv.c (md_show_usage): Remove defuct -m32, -m64,
            -msoft-float, -mhard-float, -mno-rvc, and -mrvc options; and don't
            print an invalid default ISA string.
            * doc/c-riscv.texi (OPTIONS): Add -fpic and -fno-pic options.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index ddcbdff..904e0b9 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,10 @@
+2017-03-21  Palmer Dabbbelt  <palmer@dabbelt.com>
+
+	* config/tc-riscv.c (md_show_usage): Remove defuct -m32, -m64,
+	-msoft-float, -mhard-float, -mno-rvc, and -mrvc options; and don't
+	print an invalid default ISA string.
+	* doc/c-riscv.texi (OPTIONS): Add -fpic and -fno-pic options.
+
 2017-03-14  Kito Cheng  <kito.cheng@gmail.com>
 
 	* config/tc-riscv.c (validate_riscv_insn): Add 'o' RVC immediate
diff --git a/gas/config/tc-riscv.c b/gas/config/tc-riscv.c
index 429ba2b..649c3e8 100644
--- a/gas/config/tc-riscv.c
+++ b/gas/config/tc-riscv.c
@@ -2465,15 +2465,10 @@ md_show_usage (FILE *stream)
 {
   fprintf (stream, _("\
 RISC-V options:\n\
-  -m32           assemble RV32 code\n\
-  -m64           assemble RV64 code (default)\n\
   -fpic          generate position-independent code\n\
   -fno-pic       don't generate position-independent code (default)\n\
-  -msoft-float   don't use F registers for floating-point values\n\
-  -mhard-float   use F registers for floating-point values (default)\n\
-  -mno-rvc       disable the C extension for compressed instructions (default)\n\
-  -mrvc          enable the C extension for compressed instructions\n\
-  -march=ISA     set the RISC-V architecture, RV64IMAFD by default\n\
+  -march=ISA     set the RISC-V architecture\n\
+  -mabi=ABI      set the RISC-V ABI\n\
 "));
 }
 
diff --git a/gas/doc/c-riscv.texi b/gas/doc/c-riscv.texi
index 0fa1b58..2efba4b 100644
--- a/gas/doc/c-riscv.texi
+++ b/gas/doc/c-riscv.texi
@@ -26,6 +26,14 @@ The following table lists all availiable RISC-V specific options
 @c man begin OPTIONS
 @table @gcctabopt
 
+@cindex @samp{-fpic} option, RISC-V
+@item -fpic
+Generate position-independent code
+
+@cindex @samp{-fno-pic} option, RISC-V
+@item -fno-pic
+Don't generate position-independent code (default)
+
 @cindex @samp{-march=ISA} option, RISC-V
 @item -march=ISA
 Select the base isa, as specified by ISA.  For example -march=rv32ima.

commit 97661edba4ead78aae10c732dbce29a1dd9c8bd4
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri Mar 31 00:01:22 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 0474a20..db90564 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170330
+#define BFD_VERSION_DATE 20170331
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit c03c15126f22c5855daf1574bf2e26169aa998fd
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat Apr 1 00:01:21 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index db90564..be5eee1 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170331
+#define BFD_VERSION_DATE 20170401
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 1106a02b4112a4db4d2fe28e19c49a6bf33a4f95
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun Apr 2 00:01:14 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index be5eee1..88c4a51 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170401
+#define BFD_VERSION_DATE 20170402
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit b2272cc6b0dffbd96c8997260f68ad2b2057fe83
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon Apr 3 00:01:27 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 88c4a51..d297480 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170402
+#define BFD_VERSION_DATE 20170403
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit e7294f7f33835ebe754f8518c02d8983aa4dc641
Author: Andrew Waterman <andrew@sifive.com>
Date:   Wed Mar 22 02:09:56 2017 -0700

    Add physical memory protection CSRs
    
    2017-03-27  Andrew Waterman  <andrew@sifive.com>
    
           * opcode/riscv-opc.h (CSR_PMPCFG0): New define.
           (CSR_PMPCFG1): Likewise.
           (CSR_PMPCFG2): Likewise.
           (CSR_PMPCFG3): Likewise.
           (CSR_PMPADDR0): Likewise.
           (CSR_PMPADDR1): Likewise.
           (CSR_PMPADDR2): Likewise.
           (CSR_PMPADDR3): Likewise.
           (CSR_PMPADDR4): Likewise.
           (CSR_PMPADDR5): Likewise.
           (CSR_PMPADDR6): Likewise.
           (CSR_PMPADDR7): Likewise.
           (CSR_PMPADDR8): Likewise.
           (CSR_PMPADDR9): Likewise.
           (CSR_PMPADDR10): Likewise.
           (CSR_PMPADDR11): Likewise.
           (CSR_PMPADDR12): Likewise.
           (CSR_PMPADDR13): Likewise.
           (CSR_PMPADDR14): Likewise.
           (CSR_PMPADDR15): Likewise.
           (pmpcfg0): Declare register.
           (pmpcfg1): Likewise.
           (pmpcfg2): Likewise.
           (pmpcfg3): Likewise.
           (pmpaddr0): Likewise.
           (pmpaddr1): Likewise.
           (pmpaddr2): Likewise.
           (pmpaddr3): Likewise.
           (pmpaddr4): Likewise.
           (pmpaddr5): Likewise.
           (pmpaddr6): Likewise.
           (pmpaddr7): Likewise.
           (pmpaddr8): Likewise.
           (pmpaddr9): Likewise.
           (pmpaddr10): Likewise.
           (pmpaddr11): Likewise.
           (pmpaddr12): Likewise.
           (pmpaddr13): Likewise.
           (pmpaddr14): Likewise.
           (pmpaddr15): Likewise.

diff --git a/include/ChangeLog b/include/ChangeLog
index 9dd5f75..5995c3b 100644
--- a/include/ChangeLog
+++ b/include/ChangeLog
@@ -1,3 +1,46 @@
+2017-03-27  Andrew Waterman  <andrew@sifive.com>
+
+	* opcode/riscv-opc.h (CSR_PMPCFG0): New define.
+	(CSR_PMPCFG1): Likewise.
+	(CSR_PMPCFG2): Likewise.
+	(CSR_PMPCFG3): Likewise.
+	(CSR_PMPADDR0): Likewise.
+	(CSR_PMPADDR1): Likewise.
+	(CSR_PMPADDR2): Likewise.
+	(CSR_PMPADDR3): Likewise.
+	(CSR_PMPADDR4): Likewise.
+	(CSR_PMPADDR5): Likewise.
+	(CSR_PMPADDR6): Likewise.
+	(CSR_PMPADDR7): Likewise.
+	(CSR_PMPADDR8): Likewise.
+	(CSR_PMPADDR9): Likewise.
+	(CSR_PMPADDR10): Likewise.
+	(CSR_PMPADDR11): Likewise.
+	(CSR_PMPADDR12): Likewise.
+	(CSR_PMPADDR13): Likewise.
+	(CSR_PMPADDR14): Likewise.
+	(CSR_PMPADDR15): Likewise.
+	(pmpcfg0): Declare register.
+	(pmpcfg1): Likewise.
+	(pmpcfg2): Likewise.
+	(pmpcfg3): Likewise.
+	(pmpaddr0): Likewise.
+	(pmpaddr1): Likewise.
+	(pmpaddr2): Likewise.
+	(pmpaddr3): Likewise.
+	(pmpaddr4): Likewise.
+	(pmpaddr5): Likewise.
+	(pmpaddr6): Likewise.
+	(pmpaddr7): Likewise.
+	(pmpaddr8): Likewise.
+	(pmpaddr9): Likewise.
+	(pmpaddr10): Likewise.
+	(pmpaddr11): Likewise.
+	(pmpaddr12): Likewise.
+	(pmpaddr13): Likewise.
+	(pmpaddr14): Likewise.
+	(pmpaddr15): Likewise.
+
 2017-03-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
 
 	Backport from mainline
diff --git a/include/opcode/riscv-opc.h b/include/opcode/riscv-opc.h
index 9269c6b..f80037b 100644
--- a/include/opcode/riscv-opc.h
+++ b/include/opcode/riscv-opc.h
@@ -556,6 +556,26 @@
 #define CSR_MCAUSE 0x342
 #define CSR_MBADADDR 0x343
 #define CSR_MIP 0x344
+#define CSR_PMPCFG0 0x3a0
+#define CSR_PMPCFG1 0x3a1
+#define CSR_PMPCFG2 0x3a2
+#define CSR_PMPCFG3 0x3a3
+#define CSR_PMPADDR0 0x3b0
+#define CSR_PMPADDR1 0x3b1
+#define CSR_PMPADDR2 0x3b2
+#define CSR_PMPADDR3 0x3b3
+#define CSR_PMPADDR4 0x3b4
+#define CSR_PMPADDR5 0x3b5
+#define CSR_PMPADDR6 0x3b6
+#define CSR_PMPADDR7 0x3b7
+#define CSR_PMPADDR8 0x3b8
+#define CSR_PMPADDR9 0x3b9
+#define CSR_PMPADDR10 0x3ba
+#define CSR_PMPADDR11 0x3bb
+#define CSR_PMPADDR12 0x3bc
+#define CSR_PMPADDR13 0x3bd
+#define CSR_PMPADDR14 0x3be
+#define CSR_PMPADDR15 0x3bf
 #define CSR_TSELECT 0x7a0
 #define CSR_TDATA1 0x7a1
 #define CSR_TDATA2 0x7a2
@@ -1014,6 +1034,26 @@ DECLARE_CSR(mepc, CSR_MEPC)
 DECLARE_CSR(mcause, CSR_MCAUSE)
 DECLARE_CSR(mbadaddr, CSR_MBADADDR)
 DECLARE_CSR(mip, CSR_MIP)
+DECLARE_CSR(pmpcfg0, CSR_PMPCFG0)
+DECLARE_CSR(pmpcfg1, CSR_PMPCFG1)
+DECLARE_CSR(pmpcfg2, CSR_PMPCFG2)
+DECLARE_CSR(pmpcfg3, CSR_PMPCFG3)
+DECLARE_CSR(pmpaddr0, CSR_PMPADDR0)
+DECLARE_CSR(pmpaddr1, CSR_PMPADDR1)
+DECLARE_CSR(pmpaddr2, CSR_PMPADDR2)
+DECLARE_CSR(pmpaddr3, CSR_PMPADDR3)
+DECLARE_CSR(pmpaddr4, CSR_PMPADDR4)
+DECLARE_CSR(pmpaddr5, CSR_PMPADDR5)
+DECLARE_CSR(pmpaddr6, CSR_PMPADDR6)
+DECLARE_CSR(pmpaddr7, CSR_PMPADDR7)
+DECLARE_CSR(pmpaddr8, CSR_PMPADDR8)
+DECLARE_CSR(pmpaddr9, CSR_PMPADDR9)
+DECLARE_CSR(pmpaddr10, CSR_PMPADDR10)
+DECLARE_CSR(pmpaddr11, CSR_PMPADDR11)
+DECLARE_CSR(pmpaddr12, CSR_PMPADDR12)
+DECLARE_CSR(pmpaddr13, CSR_PMPADDR13)
+DECLARE_CSR(pmpaddr14, CSR_PMPADDR14)
+DECLARE_CSR(pmpaddr15, CSR_PMPADDR15)
 DECLARE_CSR(tselect, CSR_TSELECT)
 DECLARE_CSR(tdata1, CSR_TDATA1)
 DECLARE_CSR(tdata2, CSR_TDATA2)

commit bf757f6f646e2b2f86a4a616705721f28c0c2059
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue Apr 4 00:01:21 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index d297480..f2fdff0 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170403
+#define BFD_VERSION_DATE 20170404
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit e101f93030828e5d743ef7f13fb101dc018515a3
Author: Palmer Dabbelt <palmer@dabbelt.com>
Date:   Wed Mar 29 16:05:40 2017 -0700

    Allow ISA subsets to be disabled
    
    Without this patch, passing "-march=rv64ic -march=rv64i" results in
    you getting a "RV64IC" toolchain, which isn't expected.
    
    gas/ChangeLog:
    
    2017-03-30  Palmer Dabbelt  <palmer@dabbelt.com>
    
           * config/tc-riscv.c (riscv_clear_subsets): New function.
           (riscv_add_subset): Call riscv_clear_subsets and riscv_set_rvc to
           clear RVC when it's been previously set.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index 904e0b9..795c7dc 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,9 @@
+2017-03-30  Palmer Dabbelt  <palmer@dabbelt.com>
+
+	* config/tc-riscv.c (riscv_clear_subsets): New function.
+	(riscv_add_subset): Call riscv_clear_subsets and riscv_set_rvc to
+	clear RVC when it's been previously set.
+
 2017-03-21  Palmer Dabbbelt  <palmer@dabbelt.com>
 
 	* config/tc-riscv.c (md_show_usage): Remove defuct -m32, -m64,
diff --git a/gas/config/tc-riscv.c b/gas/config/tc-riscv.c
index 649c3e8..6490b1a 100644
--- a/gas/config/tc-riscv.c
+++ b/gas/config/tc-riscv.c
@@ -121,6 +121,18 @@ riscv_subset_supports (const char *feature)
 }
 
 static void
+riscv_clear_subsets (void)
+{
+  while (riscv_subsets != NULL)
+    {
+      struct riscv_subset *next = riscv_subsets->next;
+      free (riscv_subsets->name);
+      free (riscv_subsets);
+      riscv_subsets = next;
+    }
+}
+
+static void
 riscv_add_subset (const char *subset)
 {
   struct riscv_subset *s = xmalloc (sizeof *s);
@@ -139,6 +151,8 @@ riscv_set_arch (const char *s)
   const char *extension = NULL;
   const char *p = s;
 
+  riscv_clear_subsets();
+
   if (strncmp (p, "rv32", 4) == 0)
     {
       xlen = 32;
@@ -1802,6 +1816,7 @@ riscv_after_parse_args (void)
     riscv_set_arch (xlen == 64 ? "rv64g" : "rv32g");
 
   /* Add the RVC extension, regardless of -march, to support .option rvc.  */
+  riscv_set_rvc (FALSE);
   if (riscv_subset_supports ("c"))
     riscv_set_rvc (TRUE);
   else

commit bb580b80d725957409456677088504a95f26933d
Author: Palmer Dabbelt <palmer@dabbelt.com>
Date:   Mon Apr 3 09:03:57 2017 -0700

    RISC-V: Avoid a const warning
    
    2017-04-03  Palmer Dabbelt  <palmer@dabbelt.com>
    
           * config/tc-riscv.c (riscv_clear_subsets): Cast argument to free to
           avoid const warnings.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index 795c7dc..d6ab8a1 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,8 @@
+2017-04-03  Palmer Dabbelt  <palmer@dabbelt.com>
+
+	* config/tc-riscv.c (riscv_clear_subsets): Cast argument to free to
+	avoid const warnings.
+
 2017-03-30  Palmer Dabbelt  <palmer@dabbelt.com>
 
 	* config/tc-riscv.c (riscv_clear_subsets): New function.
diff --git a/gas/config/tc-riscv.c b/gas/config/tc-riscv.c
index 6490b1a..88457c6 100644
--- a/gas/config/tc-riscv.c
+++ b/gas/config/tc-riscv.c
@@ -126,7 +126,7 @@ riscv_clear_subsets (void)
   while (riscv_subsets != NULL)
     {
       struct riscv_subset *next = riscv_subsets->next;
-      free (riscv_subsets->name);
+      free ((void *) riscv_subsets->name);
       free (riscv_subsets);
       riscv_subsets = next;
     }

commit f59956f90589f595dd0c3b612513932ff3f79441
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed Apr 5 00:01:13 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index f2fdff0..eaf3894 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170404
+#define BFD_VERSION_DATE 20170405
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit beefa9cd657b7187659ba455b704b4be3c28ab17
Author: Maciej W. Rozycki <macro@imgtec.com>
Date:   Mon Mar 27 12:39:07 2017 +0100

    PR ld/21233: Avoid sweeping forced-undefined symbols in section GC
    
    Complement commit 902e9fc76a0e ("PR ld/20828: Move symbol version
    processing ahead of GC symbol sweep"), commit b531344c34b0 ("PR
    ld/20828: Reorder the symbol sweep stage of section GC") and commit
    81ff47b3a546 ("PR ld/20828: Fix linker script symbols wrongly forced
    local with section GC"), and prevent symbols forcibly entered in the
    output file with the use of the `--undefined=' or `--require-defined='
    linker command line options or the EXTERN linker script command from
    being swept in section garbage collection and consequently recorded in
    the dynamic symbol table as local entries.  This happens in certain
    circumstances, where a symbol reference also exists in one of the static
    input files, however only in a section which is garbage-collected and
    does not make it to the output file, and the symbol is defined in a
    dynamic object present in the link.
    
    For example with the `i386-linux' target and the `pr21233.s' and
    `pr21233-l.s' sources, and the `pr21233.ld' linker script included with
    this change we get:
    
    $ as -o pr21233-l.o pr21233-l.s
    $ ld -shared -T pr21233.ld -o libpr21233.so pr21233-l.o
    $ as -o pr21233.o pr21233.s
    $ ld --gc-sections -e foo --require-defined=bar -T pr21233.ld -o pr21233 pr21233.o libpr21233.so
    $ readelf --dyn-syms pr21233
    
    Symbol table '.dynsym' contains 2 entries:
       Num:    Value  Size Type    Bind   Vis      Ndx Name
         0: 00000000     0 NOTYPE  LOCAL  DEFAULT  UND
         1: 00000000     0 OBJECT  LOCAL  DEFAULT  UND bar
    $
    
    which makes the run-time `bar' dependency of the `pr21233' executable
    different from its corresponding link-time dependency, i.e. the presence
    of `libpr21233.so' and its `bar' symbol is required at the link time,
    however at the run time a copy of `libpr21233.so' without `bar' will do.
    Similarly with `--undefined=' and EXTERN which do not actually require
    the reference to the symbol requested to be satisfied with a definition
    at the link time, however once the definition has been pulled at the
    link time, so it should at the dynamic load time.
    
    Additionally with the `mips-linux' target we get:
    
    $ ld --gc-sections -e foo --require-defined=bar -T pr21233.ld -o pr21233 pr21233.o libpr21233.so
    ld: BFD (GNU Binutils) 2.28.51.20170324 assertion fail .../bfd/elfxx-mips.c:3861
    $
    
    as the target is not prepared to handle such a local dynamic symbol.
    
    With this change in effect we get:
    
    $ readelf --dyn-syms pr21233
    
    Symbol table '.dynsym' contains 2 entries:
       Num:    Value  Size Type    Bind   Vis      Ndx Name
         0: 00000000     0 NOTYPE  LOCAL  DEFAULT  UND
         1: 00000000     0 OBJECT  GLOBAL DEFAULT  UND bar
    $
    
    instead, for both targets.
    
    	ld/
    	PR ld/21233
    	* ldlang.c (insert_undefined): Set `mark' for ELF symbols.
    
    (backported from commit 80070c0d3491347f11283c5791b9dd040fedbd4f)

diff --git a/ld/ChangeLog b/ld/ChangeLog
index f4fda0c..1f7b92d 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,3 +1,8 @@
+2017-04-04  Maciej W. Rozycki  <macro@imgtec.com>
+
+	PR ld/21233
+	* ldlang.c (insert_undefined): Set `mark' for ELF symbols.
+
 2017-03-07  Alan Modra  <amodra@gmail.com>
 
 	* ldlang.c (open_input_bfds): Check that lang_assignment_statement
diff --git a/ld/ldlang.c b/ld/ldlang.c
index 54f160c..a8ff0a4 100644
--- a/ld/ldlang.c
+++ b/ld/ldlang.c
@@ -3432,6 +3432,8 @@ insert_undefined (const char *name)
     {
       h->type = bfd_link_hash_undefined;
       h->u.undef.abfd = NULL;
+      if (is_elf_hash_table (link_info.hash))
+	((struct elf_link_hash_entry *) h)->mark = 1;
       bfd_link_add_undef (link_info.hash, h);
     }
 }

commit 7a71cbc75f362f32016f8ebb4c9d70aeefb56ea1
Author: Maciej W. Rozycki <macro@imgtec.com>
Date:   Wed Apr 5 16:43:16 2017 +0100

    ld/ChangeLog: Correct last entry's date

diff --git a/ld/ChangeLog b/ld/ChangeLog
index 1f7b92d..a3a8903 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,4 +1,4 @@
-2017-04-04  Maciej W. Rozycki  <macro@imgtec.com>
+2017-04-05  Maciej W. Rozycki  <macro@imgtec.com>
 
 	PR ld/21233
 	* ldlang.c (insert_undefined): Set `mark' for ELF symbols.

commit f3d7cf2a4850aebda6717ca7f03f5deb9932a7c5
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu Apr 6 00:01:34 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index eaf3894..5befa31 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170405
+#define BFD_VERSION_DATE 20170406
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 2a5482a6ce4e5df4a16073c7bc2f53f80a8094e2
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri Apr 7 00:01:26 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 5befa31..eb7f8d8 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170406
+#define BFD_VERSION_DATE 20170407
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 4cdbe3e38453715ff1edfdae66da326044c2fe15
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat Apr 8 00:01:17 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index eb7f8d8..8c00ecf 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170407
+#define BFD_VERSION_DATE 20170408
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 58f15cf4ab0b9acf669232572c3e076fa529bafc
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun Apr 9 00:01:17 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 8c00ecf..bde2e34 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170408
+#define BFD_VERSION_DATE 20170409
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit ed3c25489f564d2741ffc11485e8ba555a232bfb
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon Apr 10 00:01:16 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index bde2e34..a3df986 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170409
+#define BFD_VERSION_DATE 20170410
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 5a0ac7ba3c5277b3ab04f55de23bccb7614a9e59
Author: H.J. Lu <hjl.tools@gmail.com>
Date:   Fri Apr 7 07:40:14 2017 -0700

    ELF: Check ELF_COMMON_DEF_P for common symbols
    
    Since common symbols that are turned into definitions don't have the
    DEF_REGULAR flag set, we need to check ELF_COMMON_DEF_P for common
    symbols.
    
    bfd/
    
    	PR ld/19579
    	PR ld/21306
    	* elf32-s390.c (elf_s390_finish_dynamic_symbol): Check
    	ELF_COMMON_DEF_P for common symbols.
    	* elf64-s390.c (elf_s390_finish_dynamic_symbol): Likewise.
    	* elf64-x86-64.c (elf_x86_64_relocate_section): Likewise.
    	* elflink.c (_bfd_elf_merge_symbol): Revert commits
    	202ac193bbbecc96a4978d1ac3d17148253f9b01 and
    	07492f668d2173da7a2bda3707ff0985e0f460b6.
    
    ld/
    
    	PR ld/19579
    	PR ld/21306
    	* testsuite/ld-elf/pr19579a.c (main): Updated.
    
    (cherry picked from commit 8170f7693bc0a9442c0aa280197925db92d48ca6)

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 17e7e3b..03cc6f9 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,15 @@
+2017-04-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/19579
+	PR ld/21306
+	* elf32-s390.c (elf_s390_finish_dynamic_symbol): Check
+	ELF_COMMON_DEF_P for common symbols.
+	* elf64-s390.c (elf_s390_finish_dynamic_symbol): Likewise.
+	* elf64-x86-64.c (elf_x86_64_relocate_section): Likewise.
+	* elflink.c (_bfd_elf_merge_symbol): Revert commits
+	202ac193bbbecc96a4978d1ac3d17148253f9b01 and
+	07492f668d2173da7a2bda3707ff0985e0f460b6.
+
 2017-03-07  Alan Modra  <amodra@gmail.com>
 
 	PR 21224
diff --git a/bfd/elf32-s390.c b/bfd/elf32-s390.c
index fd1bc13..ddb6f5b 100644
--- a/bfd/elf32-s390.c
+++ b/bfd/elf32-s390.c
@@ -3785,7 +3785,7 @@ elf_s390_finish_dynamic_symbol (bfd *output_bfd,
 	     RELATIVE reloc.  The entry in the global offset table
 	     will already have been initialized in the
 	     relocate_section function.  */
-	  if (!h->def_regular)
+	  if (!(h->def_regular || ELF_COMMON_DEF_P (h)))
 	    return FALSE;
 	  BFD_ASSERT((h->got.offset & 1) != 0);
 	  rela.r_info = ELF32_R_INFO (0, R_390_RELATIVE);
diff --git a/bfd/elf64-s390.c b/bfd/elf64-s390.c
index b5fd05f..fbbf8d6 100644
--- a/bfd/elf64-s390.c
+++ b/bfd/elf64-s390.c
@@ -3582,7 +3582,7 @@ elf_s390_finish_dynamic_symbol (bfd *output_bfd,
 	     RELATIVE reloc.  The entry in the global offset table
 	     will already have been initialized in the
 	     relocate_section function.  */
-	  if (!h->def_regular)
+	  if (!(h->def_regular || ELF_COMMON_DEF_P (h)))
 	    return FALSE;
 	  BFD_ASSERT((h->got.offset & 1) != 0);
 	  rela.r_info = ELF64_R_INFO (0, R_390_RELATIVE);
diff --git a/bfd/elf64-x86-64.c b/bfd/elf64-x86-64.c
index e0e6c16..e363eaf 100644
--- a/bfd/elf64-x86-64.c
+++ b/bfd/elf64-x86-64.c
@@ -4926,7 +4926,8 @@ do_ifunc_pointer:
 		{
 		  /* Symbol is referenced locally.  Make sure it is
 		     defined locally or for a branch.  */
-		  fail = !h->def_regular && !branch;
+		  fail = (!(h->def_regular || ELF_COMMON_DEF_P (h))
+			  && !branch);
 		}
 	      else if (!(bfd_link_pie (info)
 			 && (h->needs_copy || eh->needs_copy)))
diff --git a/bfd/elflink.c b/bfd/elflink.c
index 69b66f2..46d57e5 100644
--- a/bfd/elflink.c
+++ b/bfd/elflink.c
@@ -1543,16 +1543,13 @@ _bfd_elf_merge_symbol (bfd *abfd,
      represent variables; this can cause confusion in principle, but
      any such confusion would seem to indicate an erroneous program or
      shared library.  We also permit a common symbol in a regular
-     object to override a weak symbol in a shared object.  A common
-     symbol in executable also overrides a symbol in a shared object.  */
+     object to override a weak symbol in a shared object.  */
 
   if (newdyn
       && newdef
       && (olddef
 	  || (h->root.type == bfd_link_hash_common
-	      && (newweak
-		  || newfunc
-		  || (!olddyn && bfd_link_executable (info))))))
+	      && (newweak || newfunc))))
     {
       *override = TRUE;
       newdef = FALSE;
diff --git a/ld/ChangeLog b/ld/ChangeLog
index a3a8903..5b93acf 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,3 +1,9 @@
+2017-04-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/19579
+	PR ld/21306
+	* testsuite/ld-elf/pr19579a.c (main): Updated.
+
 2017-04-05  Maciej W. Rozycki  <macro@imgtec.com>
 
 	PR ld/21233
diff --git a/ld/testsuite/ld-elf/pr19579a.c b/ld/testsuite/ld-elf/pr19579a.c
index e4a6eb1..69d0f35 100644
--- a/ld/testsuite/ld-elf/pr19579a.c
+++ b/ld/testsuite/ld-elf/pr19579a.c
@@ -9,7 +9,7 @@ extern int *bar_p (void);
 int
 main ()
 {
-  if (foo[0] == 0 && foo == foo_p () && bar[0] == 0 && bar == bar_p ())
+  if (foo[0] == 0 && foo == foo_p () && bar[0] == -1 && bar == bar_p ())
     printf ("PASS\n");
   return 0;
 }

commit 0edae620e38b8daaee112bdab6662634dc880cf1
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue Apr 11 00:01:15 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index a3df986..975c44b 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170410
+#define BFD_VERSION_DATE 20170411
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 19c4de79028b34cfaef08563e8992059f7eb6da7
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed Apr 12 00:01:21 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 975c44b..2eb3723 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170411
+#define BFD_VERSION_DATE 20170412
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 70f702dbceadaf4d5985e15b7b61d9bc70486ffb
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu Apr 13 00:01:34 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 2eb3723..ee36aa9 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170412
+#define BFD_VERSION_DATE 20170413
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 5076abd635a5e7f17f23aaedfe10b50666f38b67
Author: Alan Modra <amodra@gmail.com>
Date:   Thu Apr 13 10:44:20 2017 +0930

    Missing _bfd_error_handler args
    
    	* elf32-arm.c (arm_type_of_stub): Supply missing args to "long
    	branch veneers" error.  Fix double space and format message.
    	* elf32-avr.c (avr_add_stub): Do not pass NULL as %B arg.
    	* elf64-ppc.c (tocsave_find): Supply missing %B arg.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 03cc6f9..b3f89d7 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,10 @@
+2017-04-13  Alan Modra  <amodra@gmail.com>
+
+	* elf32-arm.c (arm_type_of_stub): Supply missing args to "long
+	branch veneers" error.  Fix double space and format message.
+	* elf32-avr.c (avr_add_stub): Do not pass NULL as %B arg.
+	* elf64-ppc.c (tocsave_find): Supply missing %B arg.
+
 2017-04-10  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/19579
diff --git a/bfd/elf32-arm.c b/bfd/elf32-arm.c
index 0a78595..e04caef 100644
--- a/bfd/elf32-arm.c
+++ b/bfd/elf32-arm.c
@@ -4024,10 +4024,12 @@ arm_type_of_stub (struct bfd_link_info *info,
 	      if (!thumb_only)
 		{
 		  if (input_sec->flags & SEC_ELF_PURECODE)
-		    _bfd_error_handler (_("\
-%B(%A): warning: long branch  veneers used in section with SHF_ARM_PURECODE section \
-attribute is only supported for M-profile targets that implement the movw instruction."),
-					input_sec);
+		    _bfd_error_handler
+		      (_("%B(%A): warning: long branch veneers used in"
+			 " section with SHF_ARM_PURECODE section"
+			 " attribute is only supported for M-profile"
+			 " targets that implement the movw instruction."),
+		       input_bfd, input_sec);
 
 		  stub_type = (bfd_link_pic (info) | globals->pic_veneer)
 		    /* PIC stubs.  */
@@ -4056,10 +4058,12 @@ attribute is only supported for M-profile targets that implement the movw instru
 		  else
 		    {
 		      if (input_sec->flags & SEC_ELF_PURECODE)
-			_bfd_error_handler (_("\
-%B(%A): warning: long branch  veneers used in section with SHF_ARM_PURECODE section \
-attribute is only supported for M-profile targets that implement the movw instruction."),
-					    input_sec);
+			_bfd_error_handler
+			  (_("%B(%A): warning: long branch veneers used in"
+			     " section with SHF_ARM_PURECODE section"
+			     " attribute is only supported for M-profile"
+			     " targets that implement the movw instruction."),
+			   input_bfd, input_sec);
 
 		      stub_type = (bfd_link_pic (info) | globals->pic_veneer)
 			/* PIC stub.  */
@@ -4073,13 +4077,12 @@ attribute is only supported for M-profile targets that implement the movw instru
 	  else
 	    {
 	      if (input_sec->flags & SEC_ELF_PURECODE)
-		_bfd_error_handler (_("%B(%s): warning: long branch "
-				      " veneers used in section with "
-				      "SHF_ARM_PURECODE section "
-				      "attribute is only supported"
-				      " for M-profile targets that "
-				      "implement the movw "
-				      "instruction."));
+		_bfd_error_handler
+		  (_("%B(%A): warning: long branch veneers used in"
+		     " section with SHF_ARM_PURECODE section"
+		     " attribute is only supported" " for M-profile"
+		     " targets that implement the movw instruction."),
+		   input_bfd, input_sec);
 
 	      /* Thumb to arm.  */
 	      if (sym_sec != NULL
@@ -4126,13 +4129,12 @@ attribute is only supported for M-profile targets that implement the movw instru
 	   || r_type == R_ARM_TLS_CALL)
     {
       if (input_sec->flags & SEC_ELF_PURECODE)
-	_bfd_error_handler (_("%B(%s): warning: long branch "
-			      " veneers used in section with "
-			      "SHF_ARM_PURECODE section "
-			      "attribute is only supported"
-			      " for M-profile targets that "
-			      "implement the movw "
-			      "instruction."));
+	_bfd_error_handler
+	  (_("%B(%A): warning: long branch veneers used in"
+	     " section with SHF_ARM_PURECODE section"
+	     " attribute is only supported for M-profile"
+	     " targets that implement the movw instruction."),
+	   input_bfd, input_sec);
       if (branch_type == ST_BRANCH_TO_THUMB)
 	{
 	  /* Arm to thumb.  */
diff --git a/bfd/elf32-avr.c b/bfd/elf32-avr.c
index 56b143d..0f6c188 100644
--- a/bfd/elf32-avr.c
+++ b/bfd/elf32-avr.c
@@ -3284,8 +3284,7 @@ avr_add_stub (const char *stub_name,
   if (hsh == NULL)
     {
       /* xgettext:c-format */
-      _bfd_error_handler (_("%B: cannot create stub entry %s"),
-			  NULL, stub_name);
+      _bfd_error_handler (_("cannot create stub entry %s"), stub_name);
       return NULL;
     }
 
diff --git a/bfd/elf64-ppc.c b/bfd/elf64-ppc.c
index 3381647..765bc6b 100644
--- a/bfd/elf64-ppc.c
+++ b/bfd/elf64-ppc.c
@@ -7627,7 +7627,7 @@ tocsave_find (struct ppc_link_hash_table *htab,
   if (ent.sec == NULL || ent.sec->output_section == NULL)
     {
       _bfd_error_handler
-	(_("%B: undefined symbol on R_PPC64_TOCSAVE relocation"));
+	(_("%B: undefined symbol on R_PPC64_TOCSAVE relocation"), ibfd);
       return NULL;
     }
 

commit 6089d6360965adeac51e2830b663a243b399ce97
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri Apr 14 00:01:35 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index ee36aa9..9eecbef 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170413
+#define BFD_VERSION_DATE 20170414
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 261b21db3314dbac121fd3b4b6abeb39010bf192
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat Apr 15 00:01:16 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 9eecbef..03edbc0 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170414
+#define BFD_VERSION_DATE 20170415
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit f33b1378b97fac38eb691a2c7e41cbcbe1c52338
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun Apr 16 00:01:14 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 03edbc0..e097c21 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170415
+#define BFD_VERSION_DATE 20170416
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 2d5dd7f4a370ad2de2d29aa2fa5795eb8178e6fa
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon Apr 17 00:01:23 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index e097c21..a2ac8ce 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170416
+#define BFD_VERSION_DATE 20170417
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit f3fea2d4abd99f18acc4df1ed8d07b763a0240bf
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue Apr 18 00:01:26 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index a2ac8ce..075bcd7 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170417
+#define BFD_VERSION_DATE 20170418
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit ed5fd10e9d56c0d9197432c3445eeb469e205e52
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed Apr 19 00:01:27 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 075bcd7..c29bd1e 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170418
+#define BFD_VERSION_DATE 20170419
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit f85ae672d555af5543bcda6dce71ff6d7e687b50
Author: Hans-Peter Nilsson <hp@bitrange.com>
Date:   Wed Apr 19 15:27:31 2017 +0200

    Fix for PR ld/16044: elf32-cris.c h->plt.refcount inconsistency
    
    Backport (cherry-pick) from master.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index b3f89d7..386b480 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,12 @@
+2017-03-28  Hans-Peter Nilsson  <hp@axis.com>
+
+	PR ld/16044
+	* elf32-cris.c (elf_cris_adjust_gotplt_to_got): Adjust BFD_ASSERT
+	to handle a local symbol with a hash-symbol-entry; without PLT.
+	Add BFD_ASSERT for an incidental case with GOT entry present.
+	(cris_elf_check_relocs): Increment PLT refcount only if the symbol
+	isn't forced-or-set local.
+
 2017-04-13  Alan Modra  <amodra@gmail.com>
 
 	* elf32-arm.c (arm_type_of_stub): Supply missing args to "long
diff --git a/bfd/elf32-cris.c b/bfd/elf32-cris.c
index 97b8cc3..d4bbceb 100644
--- a/bfd/elf32-cris.c
+++ b/bfd/elf32-cris.c
@@ -2714,8 +2714,9 @@ elf_cris_adjust_gotplt_to_got (struct elf_cris_link_hash_entry *h, void * p)
   struct bfd_link_info *info = (struct bfd_link_info *) p;
 
   /* A GOTPLT reloc, when activated, is supposed to be included into
-     the PLT refcount.  */
+     the PLT refcount, when the symbol isn't set-or-forced local.  */
   BFD_ASSERT (h->gotplt_refcount == 0
+	      || h->root.plt.refcount == -1
 	      || h->gotplt_refcount <= h->root.plt.refcount);
 
   /* If nobody wanted a GOTPLT with this symbol, we're done.  */
@@ -2741,6 +2742,7 @@ elf_cris_adjust_gotplt_to_got (struct elf_cris_link_hash_entry *h, void * p)
       srelgot = elf_hash_table (info)->srelgot;
 
       /* Put accurate refcounts there.  */
+      BFD_ASSERT (h->root.got.refcount >= 0);
       h->root.got.refcount += h->gotplt_refcount;
       h->reg_got_refcount = h->gotplt_refcount;
 
@@ -3476,7 +3478,10 @@ cris_elf_check_relocs (bfd *abfd,
 	    continue;
 
 	  h->needs_plt = 1;
-	  h->plt.refcount++;
+
+	  /* If the symbol is forced local, the refcount is unavailable.  */
+	  if (h->plt.refcount != -1)
+	    h->plt.refcount++;
 	  break;
 
 	case R_CRIS_8:
diff --git a/ld/ChangeLog b/ld/ChangeLog
index 5b93acf..6e0b987 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,3 +1,9 @@
+2017-03-28  Hans-Peter Nilsson  <hp@axis.com>
+
+	PR ld/16044
+	* testsuite/ld-cris/pr16044.d, testsuite/ld-cris/dso-1c.s,
+	testsuite/ld-cris/dso-2b.s, testsuite/ld-cris/dso-4.s: New test.
+
 2017-04-10  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/19579
diff --git a/ld/testsuite/ld-cris/dso-1c.s b/ld/testsuite/ld-cris/dso-1c.s
new file mode 100644
index 0000000..92ad4ee
--- /dev/null
+++ b/ld/testsuite/ld-cris/dso-1c.s
@@ -0,0 +1,2 @@
+	.include "dso-1.s"
+	.hidden dsofn
diff --git a/ld/testsuite/ld-cris/dso-2b.s b/ld/testsuite/ld-cris/dso-2b.s
new file mode 100644
index 0000000..f1fbf14
--- /dev/null
+++ b/ld/testsuite/ld-cris/dso-2b.s
@@ -0,0 +1,2 @@
+	.include "dso-2.s"
+	.hidden dsofn
diff --git a/ld/testsuite/ld-cris/dso-4.s b/ld/testsuite/ld-cris/dso-4.s
new file mode 100644
index 0000000..767a0d8
--- /dev/null
+++ b/ld/testsuite/ld-cris/dso-4.s
@@ -0,0 +1,6 @@
+	.text
+	.global	export_2
+	.type	export_2,@function
+export_2:
+	.hidden dsofn
+	move.d dsofn:GOTOFF,$r4
diff --git a/ld/testsuite/ld-cris/pr16044.d b/ld/testsuite/ld-cris/pr16044.d
new file mode 100644
index 0000000..e5d373d
--- /dev/null
+++ b/ld/testsuite/ld-cris/pr16044.d
@@ -0,0 +1,43 @@
+#source: dso-4.s
+#source: dso-2b.s
+#source: dso-1c.s
+#as: --pic --no-underscore --em=criself -I$srcdir/$subdir
+#ld: --shared -m crislinux
+#readelf: -s -r
+
+# PR 16044 is about a (compile-time-non-local) hidden function symbol,
+# entered as an undef reference with a R_CRIS_32_PLT_GOTREL relocation
+# referring to a hidden symbol, later defined.  Here, we invalidly
+# incremented the h->plt.refcount (from -1) as part of that relocation
+# processing.  There are some PLTGOT relocations.  As there are no
+# circumstances requiring a PLT entry for this symbol, its PLT entry
+# can be eliminated and the PLTGOT relocations can be made to a static
+# element in the GOT, relocated with the absolute-to-relative
+# R_CRIS_RELATIVE relocation without symbol lookup.  As part of
+# eliminating unneeded PLT entries (and PLTGOT to "static" GOT
+# elimination), a later pass noticed the inconsistency through an
+# assert.
+#
+# The key points in this dump that may need future adjustments are the
+# single dynamic relocation, that the dsofn symbol it points to, is
+# local, its absence from the dynamic symbol table and that the
+# relocation and symbol values match.
+
+Relocation section '\.rela\.dyn' at offset 0x[0-9a-f]+ contains 1 entries:
+ Offset[ 	]+Info[ 	]+Type[ 	]+Sym\.Value  Sym\. Name \+ Addend
+[0-9a-f]+  0+[0-9a-f]+ R_CRIS_RELATIVE[ 	]+184
+
+Symbol table '\.dynsym' contains 7 entries:
+ +Num: +Value +Size +Type +Bind +Vis +Ndx +Name
+ +0: 0+ +0 +NOTYPE +LOCAL +DEFAULT +UND 
+ +1: [0-9a-f]+ +0 +SECTION +LOCAL +DEFAULT +5 
+ +2: [0-9a-f]+ +0 +FUNC +GLOBAL +DEFAULT +5 export_1
+ +3: [0-9a-f]+ +0 +NOTYPE +GLOBAL +DEFAULT +7 __bss_start
+ +4: [0-9a-f]+ +0 +NOTYPE +GLOBAL +DEFAULT +7 _edata
+ +5: [0-9a-f]+ +0 +NOTYPE +GLOBAL +DEFAULT +7 _end
+ +6: [0-9a-f]+ +0 +FUNC +GLOBAL +DEFAULT +5 export_2
+
+Symbol table '\.symtab' contains [0-9]+ entries:
+#...
+ +[0-9]+: 0+184  +2 FUNC + LOCAL + DEFAULT + 5 dsofn
+#...

commit d81c51aaf459b03bd27fa8c40d44a6e7317712c0
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu Apr 20 00:01:51 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index c29bd1e..469ceb8 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170419
+#define BFD_VERSION_DATE 20170420
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit ce80015e75f31f8ecd94fc31bb4aefcfddbbde01
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri Apr 21 00:01:12 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 469ceb8..671a6cb0 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170420
+#define BFD_VERSION_DATE 20170421
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 9f98c43929e8fc3de4612bf1013f6704c687182f
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat Apr 22 00:01:26 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 671a6cb0..429e0d5 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170421
+#define BFD_VERSION_DATE 20170422
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 60f36aaf20a07debcd769617ed7afb14cfe67b7f
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun Apr 23 00:01:20 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 429e0d5..87a7f06 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170422
+#define BFD_VERSION_DATE 20170423
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 67410ae9784ac744951a2b51dd05c214e2428e55
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon Apr 24 00:01:24 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 87a7f06..2aa73fb 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170423
+#define BFD_VERSION_DATE 20170424
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit cff08d0aa476af2142f60ebf78412b0b7ba61eb3
Author: H.J. Lu <hjl.tools@gmail.com>
Date:   Mon Apr 24 09:37:10 2017 -0700

    i386: Set ELF_MAXPAGESIZE to 0x1000 for VxWorks
    
    commit a27e437177412e5b52999723f3c5d5d0d37b9087
    Author: Roland McGrath <roland@gnu.org>
    Date:   Thu Jul 28 22:35:15 2011 +0000
    
        BFD vector for elf32-i386-nacl:
    
    changed ELF_MAXPAGESIZE to 0x10000 for VxWorks.  This patch fixes it
    and updated testsuite/ld-i386/vxworks2.sd to add space for program
    headers.
    
    bfd/
    
    	PR ld/21425
    	* elf32-i386.c (ELF_MAXPAGESIZE): Set to 0x1000 for VxWorks.
    
    ld/
    
    	PR ld/20815
    	* testsuite/ld-i386/vxworks2.sd: Add space for program headers.
    
    (cherry picked from commit 1587442d37ee4266e54d59bfdc783574f0587aff)

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 386b480..0087563 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,8 @@
+2017-04-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/21425
+	* elf32-i386.c (ELF_MAXPAGESIZE): Set to 0x1000 for VxWorks.
+
 2017-03-28  Hans-Peter Nilsson  <hp@axis.com>
 
 	PR ld/16044
diff --git a/bfd/elf32-i386.c b/bfd/elf32-i386.c
index 24beba3..f570253 100644
--- a/bfd/elf32-i386.c
+++ b/bfd/elf32-i386.c
@@ -6576,6 +6576,8 @@ elf32_i386_nacl_elf_object_p (bfd *abfd)
 #undef	TARGET_LITTLE_NAME
 #define TARGET_LITTLE_NAME		"elf32-i386-vxworks"
 #undef	ELF_OSABI
+#undef	ELF_MAXPAGESIZE
+#define ELF_MAXPAGESIZE			0x1000
 #undef	elf_backend_plt_alignment
 #define elf_backend_plt_alignment	4
 
diff --git a/ld/ChangeLog b/ld/ChangeLog
index 6e0b987..682ac6c 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,3 +1,8 @@
+2017-04-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/20815
+	* testsuite/ld-i386/vxworks2.sd: Add space for program headers.
+
 2017-03-28  Hans-Peter Nilsson  <hp@axis.com>
 
 	PR ld/16044
diff --git a/ld/testsuite/ld-i386/vxworks2.sd b/ld/testsuite/ld-i386/vxworks2.sd
index 5ff87d3..4f56f2a 100644
--- a/ld/testsuite/ld-i386/vxworks2.sd
+++ b/ld/testsuite/ld-i386/vxworks2.sd
@@ -6,7 +6,7 @@ Program Headers:
   Type .*
   PHDR .*
 #...
-  LOAD .* 0x00080000 0x00080000 .* R E 0x1000
+  LOAD .* 0x0007f000 0x0007f000 .* R E 0x1000
   LOAD .* 0x00081000 0x00081000 .* RW  0x1000
   DYNAMIC .*
 

commit f0f7ae2530736fe788cba7aeb3fb1ae5ed7737aa
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue Apr 25 00:01:25 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 2aa73fb..c19bfc9 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170424
+#define BFD_VERSION_DATE 20170425
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 24943deb8fe21ee6fefc92c88df3b3ee92622ec6
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed Apr 26 00:01:20 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index c19bfc9..44299d4 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170425
+#define BFD_VERSION_DATE 20170426
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 2e1b086f4e20861f912d5f3b9b34180881b7273b
Author: Maciej W. Rozycki <macro@imgtec.com>
Date:   Wed Apr 26 22:18:13 2017 +0100

    ELF/BFD: Limit `_bfd_elf_link_renumber_dynsyms' call in section GC
    
    Consistently call `_bfd_elf_link_renumber_dynsyms' only if linking a
    dynamic binary, complementing code in `bfd_elf_size_dynsym_hash_dynstr'
    and commit ccabcbe51e85 ("New attempt at fixing MIPS --gc-sections et
    al."), <https://sourceware.org/ml/binutils/2005-08/msg00258.html>.
    
    	bfd/
    	* elflink.c (elf_gc_sweep): Only call
    	`_bfd_elf_link_renumber_dynsyms' if dynamic sections have been
    	created.
    
    (backported from commit c46cec3a8cfe02fbe0f6c67ba53abc5369c5c659)

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 0087563..5bcd30b 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,9 @@
+2017-04-26  Maciej W. Rozycki  <macro@imgtec.com>
+
+	* elflink.c (elf_gc_sweep): Only call
+	`_bfd_elf_link_renumber_dynsyms' if dynamic sections have been
+	created.
+
 2017-04-24  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/21425
diff --git a/bfd/elflink.c b/bfd/elflink.c
index 46d57e5..1c3e1b0 100644
--- a/bfd/elflink.c
+++ b/bfd/elflink.c
@@ -12983,7 +12983,8 @@ elf_gc_sweep (bfd *abfd, struct bfd_link_info *info)
   elf_link_hash_traverse (elf_hash_table (info), elf_gc_sweep_symbol,
 			  &sweep_info);
 
-  _bfd_elf_link_renumber_dynsyms (abfd, info, &section_sym_count);
+  if (elf_hash_table (info)->dynamic_sections_created)
+    _bfd_elf_link_renumber_dynsyms (abfd, info, &section_sym_count);
   return TRUE;
 }
 

commit 1be438fd16d8a42e2a09d7b932da27c0e36094b6
Author: Maciej W. Rozycki <macro@imgtec.com>
Date:   Wed Apr 26 22:23:44 2017 +0100

    PR ld/21334: Always call `_bfd_elf_link_renumber_dynsyms' if required
    
    Complement commit e17b0c351f0b ("MIPS/BFD: Respect the ELF gABI dynamic
    symbol table sort requirement") and correct an inconsistency in dynamic
    symbol accounting data causing an assertion failure in the MIPS backend:
    
    ld: BFD (GNU Binutils) 2.28.51.20170330 assertion fail
    ../../binutils-gdb/bfd/elfxx-mips.c:3860
    
    in the course of making a GOT entry in a static binary to satisfy a GOT
    relocation present in input, due to the local dynamic symbol count not
    having been established.
    
    To do so let backends request `_bfd_elf_link_renumber_dynsyms' to be
    always called, rather than where a dynamic binary is linked only, and
    then make this request in the MIPS backend.
    
    	bfd/
    	PR ld/21334
    	* elf-bfd.h (elf_backend_data): Add `always_renumber_dynsyms'
    	member.
    	* elfxx-target.h [!elf_backend_always_renumber_dynsyms]
    	(elf_backend_always_renumber_dynsyms): Define.
    	(elfNN_bed): Initialize `always_renumber_dynsyms' member.
    	* elfxx-mips.h (elf_backend_always_renumber_dynsyms): Define.
    	* elflink.c (bfd_elf_size_dynsym_hash_dynstr): Also call
    	`_bfd_elf_link_renumber_dynsyms' if the backend has requested
    	it.
    	(elf_gc_sweep): Likewise.
    
    (backported from commit 23ec1e32b1ab714649a7c25e49b5d721fe3bd3db)

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 5bcd30b..76f7b82 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,5 +1,19 @@
 2017-04-26  Maciej W. Rozycki  <macro@imgtec.com>
 
+	PR ld/21334
+	* elf-bfd.h (elf_backend_data): Add `always_renumber_dynsyms'
+	member.
+	* elfxx-target.h [!elf_backend_always_renumber_dynsyms]
+	(elf_backend_always_renumber_dynsyms): Define.
+	(elfNN_bed): Initialize `always_renumber_dynsyms' member.
+	* elfxx-mips.h (elf_backend_always_renumber_dynsyms): Define.
+	* elflink.c (bfd_elf_size_dynsym_hash_dynstr): Also call
+	`_bfd_elf_link_renumber_dynsyms' if the backend has requested
+	it.
+	(elf_gc_sweep): Likewise.
+
+2017-04-26  Maciej W. Rozycki  <macro@imgtec.com>
+
 	* elflink.c (elf_gc_sweep): Only call
 	`_bfd_elf_link_renumber_dynsyms' if dynamic sections have been
 	created.
diff --git a/bfd/elf-bfd.h b/bfd/elf-bfd.h
index 5de9ab6..dc4bd87 100644
--- a/bfd/elf-bfd.h
+++ b/bfd/elf-bfd.h
@@ -1478,6 +1478,10 @@ struct elf_backend_data
   /* Address of protected data defined in the shared library may be
      external, i.e., due to copy relocation.   */
   unsigned extern_protected_data : 1;
+
+  /* True if `_bfd_elf_link_renumber_dynsyms' must be called even for
+     static binaries.  */
+  unsigned always_renumber_dynsyms : 1;
 };
 
 /* Information about reloc sections associated with a bfd_elf_section_data
diff --git a/bfd/elflink.c b/bfd/elflink.c
index 1c3e1b0..cd03a13 100644
--- a/bfd/elflink.c
+++ b/bfd/elflink.c
@@ -6707,6 +6707,8 @@ bfd_boolean
 bfd_elf_size_dynsym_hash_dynstr (bfd *output_bfd, struct bfd_link_info *info)
 {
   const struct elf_backend_data *bed;
+  unsigned long section_sym_count;
+  bfd_size_type dynsymcount;
 
   if (!is_elf_hash_table (info->hash))
     return TRUE;
@@ -6714,24 +6716,30 @@ bfd_elf_size_dynsym_hash_dynstr (bfd *output_bfd, struct bfd_link_info *info)
   bed = get_elf_backend_data (output_bfd);
   (*bed->elf_backend_init_index_section) (output_bfd, info);
 
+  /* Assign dynsym indices.  In a shared library we generate a section
+     symbol for each output section, which come first.  Next come all
+     of the back-end allocated local dynamic syms, followed by the rest
+     of the global symbols.
+
+     This is usually not needed for static binaries, however backends
+     can request to always do it, e.g. the MIPS backend uses dynamic
+     symbol counts to lay out GOT, which will be produced in the
+     presence of GOT relocations even in static binaries (holding fixed
+     data in that case, to satisfy those relocations).  */
+
+  if (elf_hash_table (info)->dynamic_sections_created
+      || bed->always_renumber_dynsyms)
+    dynsymcount = _bfd_elf_link_renumber_dynsyms (output_bfd, info,
+						  &section_sym_count);
+
   if (elf_hash_table (info)->dynamic_sections_created)
     {
       bfd *dynobj;
       asection *s;
-      bfd_size_type dynsymcount;
-      unsigned long section_sym_count;
       unsigned int dtagcount;
 
       dynobj = elf_hash_table (info)->dynobj;
 
-      /* Assign dynsym indicies.  In a shared library we generate a
-	 section symbol for each output section, which come first.
-	 Next come all of the back-end allocated local dynamic syms,
-	 followed by the rest of the global symbols.  */
-
-      dynsymcount = _bfd_elf_link_renumber_dynsyms (output_bfd, info,
-						    &section_sym_count);
-
       /* Work out the size of the symbol version section.  */
       s = bfd_get_linker_section (dynobj, ".gnu.version");
       BFD_ASSERT (s != NULL);
@@ -12983,7 +12991,11 @@ elf_gc_sweep (bfd *abfd, struct bfd_link_info *info)
   elf_link_hash_traverse (elf_hash_table (info), elf_gc_sweep_symbol,
 			  &sweep_info);
 
-  if (elf_hash_table (info)->dynamic_sections_created)
+  /* We need to reassign dynsym indices now that symbols may have
+     been removed.  See the call in `bfd_elf_size_dynsym_hash_dynstr'
+     for the details of the conditions used here.  */
+  if (elf_hash_table (info)->dynamic_sections_created
+      || bed->always_renumber_dynsyms)
     _bfd_elf_link_renumber_dynsyms (abfd, info, &section_sym_count);
   return TRUE;
 }
diff --git a/bfd/elfxx-mips.h b/bfd/elfxx-mips.h
index fa5b5d2..274129b 100644
--- a/bfd/elfxx-mips.h
+++ b/bfd/elfxx-mips.h
@@ -196,3 +196,4 @@ literal_reloc_p (int r_type)
 #define elf_backend_post_process_headers _bfd_mips_post_process_headers
 #define elf_backend_compact_eh_encoding _bfd_mips_elf_compact_eh_encoding
 #define elf_backend_cant_unwind_opcode _bfd_mips_elf_cant_unwind_opcode
+#define elf_backend_always_renumber_dynsyms TRUE
diff --git a/bfd/elfxx-target.h b/bfd/elfxx-target.h
index d063fb7..d07600c 100644
--- a/bfd/elfxx-target.h
+++ b/bfd/elfxx-target.h
@@ -126,6 +126,9 @@
 #ifndef elf_backend_extern_protected_data
 #define elf_backend_extern_protected_data 0
 #endif
+#ifndef elf_backend_always_renumber_dynsyms
+#define elf_backend_always_renumber_dynsyms FALSE
+#endif
 #ifndef elf_backend_stack_align
 #define elf_backend_stack_align 16
 #endif
@@ -866,7 +869,8 @@ static struct elf_backend_data elfNN_bed =
   elf_backend_no_page_alias,
   elf_backend_default_execstack,
   elf_backend_caches_rawsize,
-  elf_backend_extern_protected_data
+  elf_backend_extern_protected_data,
+  elf_backend_always_renumber_dynsyms
 };
 
 /* Forward declaration for use when initialising alternative_target field.  */

commit a729e895cc0e7d649531273197d36605d6a603c2
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu Apr 27 00:01:46 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 44299d4..31b9be4 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170426
+#define BFD_VERSION_DATE 20170427
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 4842c0084d046e8f1610080b3eade725a12fafda
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri Apr 28 00:01:22 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 31b9be4..7f3cbe3 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170427
+#define BFD_VERSION_DATE 20170428
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 266951318a65bbf1a0660e73411c78fc6c419797
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat Apr 29 00:01:24 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 7f3cbe3..a5c3e29 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170428
+#define BFD_VERSION_DATE 20170429
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit a2326b75887864b22cf414ca045656d1f8355e73
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun Apr 30 00:01:19 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index a5c3e29..729b3fb 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170429
+#define BFD_VERSION_DATE 20170430
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 4772c076bb98afd03b531b7cfc700120714c0395
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon May 1 00:01:22 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 729b3fb..b3f9a83 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170430
+#define BFD_VERSION_DATE 20170501
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit ed41fefa0b7048a1d4a8c6e8efd54799dc1561ae
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue May 2 00:01:18 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index b3f9a83..e3e6b14 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170501
+#define BFD_VERSION_DATE 20170502
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 9b9c62dffc8344a8a78ec5a9faeec29bdd57b66a
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed May 3 00:01:25 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index e3e6b14..b12ebf7 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170502
+#define BFD_VERSION_DATE 20170503
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 28ce8afed7cedad355ae9a99e32d199dd40078a2
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu May 4 00:01:52 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index b12ebf7..7d7b694 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170503
+#define BFD_VERSION_DATE 20170504
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 1f55e6e48a8afa5cb03e79cbfa0579e816e92f3f
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri May 5 00:01:24 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 7d7b694..c5783f9 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170504
+#define BFD_VERSION_DATE 20170505
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit fdb5d6c940137f95f5f2820b1a6b24c726676205
Author: Kuan-Lin Chen <rufus@andestech.com>
Date:   Tue Jan 17 09:46:28 2017 +0800

    RISC-V/bfd: Hook elf_backend_object_p to set the mach type.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 76f7b82..0ba4d25 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,7 @@
+2017-01-17  Kuan-Lin Chen  <kuanlinchentw@gmail.com>
+
+	* elfnn-riscv.c (riscv_elf_object_p): New function.
+
 2017-04-26  Maciej W. Rozycki  <macro@imgtec.com>
 
 	PR ld/21334
diff --git a/bfd/elfnn-riscv.c b/bfd/elfnn-riscv.c
index ff25ebd..d1e62d0 100644
--- a/bfd/elfnn-riscv.c
+++ b/bfd/elfnn-riscv.c
@@ -3205,6 +3205,19 @@ riscv_elf_grok_psinfo (bfd *abfd, Elf_Internal_Note *note)
   return TRUE;
 }
 
+/* Set the right mach type.  */
+static bfd_boolean
+riscv_elf_object_p (bfd *abfd)
+{
+  /* There are only two mach types in RISCV currently.  */
+  if (strcmp (abfd->xvec->name, "elf32-littleriscv") == 0)
+    bfd_default_set_arch_mach (abfd, bfd_arch_riscv, bfd_mach_riscv32);
+  else
+    bfd_default_set_arch_mach (abfd, bfd_arch_riscv, bfd_mach_riscv64);
+
+  return TRUE;
+}
+
 
 #define TARGET_LITTLE_SYM		riscv_elfNN_vec
 #define TARGET_LITTLE_NAME		"elfNN-littleriscv"
@@ -3230,6 +3243,7 @@ riscv_elf_grok_psinfo (bfd *abfd, Elf_Internal_Note *note)
 #define elf_backend_plt_sym_val		     riscv_elf_plt_sym_val
 #define elf_backend_grok_prstatus            riscv_elf_grok_prstatus
 #define elf_backend_grok_psinfo              riscv_elf_grok_psinfo
+#define elf_backend_object_p                 riscv_elf_object_p
 #define elf_info_to_howto_rel		     NULL
 #define elf_info_to_howto		     riscv_info_to_howto_rela
 #define bfd_elfNN_bfd_relax_section	     _bfd_riscv_relax_section

commit 8dbb8a19092116218730e2b1c2fbd8a70ea0e299
Author: Palmer Dabbelt <palmer@dabbelt.com>
Date:   Mon Apr 3 10:08:29 2017 -0700

    RISC-V: Resurrect GP-relative disassembly hints
    
    We missed a "_gp" when changing the GP symbol.  To make sure that
    doesn't happen again, we now use the same definition everywhere (thanks,
    Nick).
    
    include/ChangeLog:
    
    2017-04-03  Palmer Dabbelt  <palmer@dabbelt.com>
    
            * elf/riscv.h (RISCV_GP_SYMBOL): New define.
    
    bfd/ChangeLog:
    
    2017-04-03  Palmer Dabbelt  <palmer@dabbelt.com>
    
            * elfnn-riscv.c (GP_NAME): Delete.
            (riscv_global_pointer_value): Change GP_NAME to RISCV_GP_SYMBOL.
            (_bfd_riscv_relax_lui): Likewise.
    
    opcodes/ChangeLog:
    
    2017-04-03  Palmer Dabbelt  <palmer@dabbelt.com>
    
            * riscv-dis.c (riscv_disassemble_insn): Change "_gp" to
            RISCV_GP_SYMBOL.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 0ba4d25..bbca873 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,9 @@
+2017-04-03  Palmer Dabbelt  <palmer@dabbelt.com>
+
+	* elfnn-riscv.c (GP_NAME): Delete.
+	(riscv_global_pointer_value): Change GP_NAME to RISCV_GP_SYMBOL.
+	(_bfd_riscv_relax_lui): Likewise.
+
 2017-01-17  Kuan-Lin Chen  <kuanlinchentw@gmail.com>
 
 	* elfnn-riscv.c (riscv_elf_object_p): New function.
diff --git a/bfd/elfnn-riscv.c b/bfd/elfnn-riscv.c
index d1e62d0..3c04507 100644
--- a/bfd/elfnn-riscv.c
+++ b/bfd/elfnn-riscv.c
@@ -52,10 +52,6 @@
 #define ELF_MAXPAGESIZE			0x1000
 #define ELF_COMMONPAGESIZE		0x1000
 
-/* The global pointer's symbol name.  */
-
-#define GP_NAME "__global_pointer$"
-
 /* The RISC-V linker needs to keep track of the number of relocs that it
    decides to copy as dynamic relocs in check_relocs for each symbol.
    This is so that it can later discard them if they are found to be
@@ -1467,7 +1463,7 @@ riscv_global_pointer_value (struct bfd_link_info *info)
 {
   struct bfd_link_hash_entry *h;
 
-  h = bfd_link_hash_lookup (info->hash, GP_NAME, FALSE, FALSE, TRUE);
+  h = bfd_link_hash_lookup (info->hash, RISCV_GP_SYMBOL, FALSE, FALSE, TRUE);
   if (h == NULL || h->type != bfd_link_hash_defined)
     return 0;
 
@@ -2818,7 +2814,8 @@ _bfd_riscv_relax_lui (bfd *abfd,
       /* If gp and the symbol are in the same output section, then
 	 consider only that section's alignment.  */
       struct bfd_link_hash_entry *h =
-	bfd_link_hash_lookup (link_info->hash, GP_NAME, FALSE, FALSE, TRUE);
+	bfd_link_hash_lookup (link_info->hash, RISCV_GP_SYMBOL, FALSE, FALSE,
+			      TRUE);
       if (h->u.def.section->output_section == sym_sec->output_section)
 	max_alignment = (bfd_vma) 1 << sym_sec->output_section->alignment_power;
     }
diff --git a/include/ChangeLog b/include/ChangeLog
index 5995c3b..dddecfb 100644
--- a/include/ChangeLog
+++ b/include/ChangeLog
@@ -1,3 +1,7 @@
+2017-04-03  Palmer Dabbelt  <palmer@dabbelt.com>
+
+	* elf/riscv.h (RISCV_GP_SYMBOL): New define.
+
 2017-03-27  Andrew Waterman  <andrew@sifive.com>
 
 	* opcode/riscv-opc.h (CSR_PMPCFG0): New define.
diff --git a/include/elf/riscv.h b/include/elf/riscv.h
index 526bc11..daa4463 100644
--- a/include/elf/riscv.h
+++ b/include/elf/riscv.h
@@ -109,4 +109,7 @@ END_RELOC_NUMBERS (R_RISCV_max)
 /* File uses the quad-float ABI.  */
 #define EF_RISCV_FLOAT_ABI_QUAD 0x0006
 
+/* The name of the global pointer symbol.  */
+#define RISCV_GP_SYMBOL "__global_pointer$"
+
 #endif /* _ELF_RISCV_H */
diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index 0517fd9..2a5410a 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,3 +1,8 @@
+2017-04-03  Palmer Dabbelt  <palmer@dabbelt.com>
+
+	* riscv-dis.c (riscv_disassemble_insn): Change "_gp" to
+	RISCV_GP_SYMBOL.
+
 2017-03-14  Kito Cheng  <kito.cheng@gmail.com>
 
 	* riscv-opc.c (riscv_opcodes> <c.li>: Use the 'o' immediate encoding.
diff --git a/opcodes/riscv-dis.c b/opcodes/riscv-dis.c
index 070c96e..bdc961c 100644
--- a/opcodes/riscv-dis.c
+++ b/opcodes/riscv-dis.c
@@ -383,7 +383,7 @@ riscv_disassemble_insn (bfd_vma memaddr, insn_t word, disassemble_info *info)
 	pd->hi_addr[i] = -1;
 
       for (i = 0; i < info->symtab_size; i++)
-	if (strcmp (bfd_asymbol_name (info->symtab[i]), "_gp") == 0)
+	if (strcmp (bfd_asymbol_name (info->symtab[i]), RISCV_GP_SYMBOL) == 0)
 	  pd->gp = bfd_asymbol_value (info->symtab[i]);
     }
   else

commit b3b0532691d3010b7b754724399d74d0c884138c
Author: Palmer Dabbelt <palmer@dabbelt.com>
Date:   Mon May 1 10:26:32 2017 -0700

    RISC-V: Allow 32-bit BFD to handle 64-bit objects
    
    We've been telling people that the riscv32-* and riscv64-* toolchains
    are exactly the same, but it turns out we were lying: the riscv32-* BFD
    doesn't handle 64-bit objects.  This fixes that difference, so the ports
    are actually the same.
    
    bfd/ChangeLog
    
    2017-05-01  Palmer Dabbelt  <palmer@dabbelt.com>
    
            * config.bfd (riscv32-*): Enable rv64.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index bbca873..a51642b 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,7 @@
+2017-05-01  Palmer Dabbelt  <palmer@dabbelt.com>
+
+	* config.bfd (riscv32-*): Enable rv64.
+
 2017-04-03  Palmer Dabbelt  <palmer@dabbelt.com>
 
 	* elfnn-riscv.c (GP_NAME): Delete.
diff --git a/bfd/config.bfd b/bfd/config.bfd
index 1b28016..c031216 100644
--- a/bfd/config.bfd
+++ b/bfd/config.bfd
@@ -1439,10 +1439,9 @@ case "${targ}" in
 #ifdef BFD64
   riscv32-*-*)
     targ_defvec=riscv_elf32_vec
-    targ_selvecs="riscv_elf32_vec"
+    targ_selvecs="riscv_elf32_vec riscv_elf64_vec"
     want64=true
     ;;
-
   riscv64-*-*)
     targ_defvec=riscv_elf64_vec
     targ_selvecs="riscv_elf32_vec riscv_elf64_vec"

commit 1e46401a6a0a1aab4865fd5e0d775c09d75215ca
Author: Michael Clark <michaeljclark@mac.com>
Date:   Thu Apr 27 16:08:46 2017 +1200

    RISC-V: Change CALL macro to use ra as the temporary address register
    
    e.g.
    
        1:  auipc ra, %pcrel_hi(symbol)
            jalr  ra, %pcrel_lo(1b)(ra)
    
    The use of ra instead of t1 for address construction provides an
    opportunity for a microarchitecture to elide the write of the
    destination address, and instead read the target address as an
    immediate spread across the fused auipc+jalr pair. The link
    register ra in the jalr overwrites the target address temporary.

diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index 2a5410a..5dfe166 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,3 +1,8 @@
+2017-05-01  Michael Clark  <michaeljclark@mac.com>
+
+	* riscv-opc.c (riscv_opcodes) <call>: Use RA not T1 as a temporary
+	register.
+
 2017-04-03  Palmer Dabbelt  <palmer@dabbelt.com>
 
 	* riscv-dis.c (riscv_disassemble_insn): Change "_gp" to
diff --git a/opcodes/riscv-opc.c b/opcodes/riscv-opc.c
index 2b18a1e..8343198 100644
--- a/opcodes/riscv-opc.c
+++ b/opcodes/riscv-opc.c
@@ -147,7 +147,7 @@ const struct riscv_opcode riscv_opcodes[] =
 {"jal",       "32C", "Ca",  MATCH_C_JAL, MASK_C_JAL, match_opcode, INSN_ALIAS },
 {"jal",       "I",   "a",  MATCH_JAL | (X_RA << OP_SH_RD), MASK_JAL | MASK_RD, match_opcode, INSN_ALIAS },
 {"call",      "I",   "d,c", (X_T1 << OP_SH_RS1), (int) M_CALL,  match_never, INSN_MACRO },
-{"call",      "I",   "c", (X_T1 << OP_SH_RS1) | (X_RA << OP_SH_RD), (int) M_CALL,  match_never, INSN_MACRO },
+{"call",      "I",   "c", (X_RA << OP_SH_RS1) | (X_RA << OP_SH_RD), (int) M_CALL,  match_never, INSN_MACRO },
 {"tail",      "I",   "c", (X_T1 << OP_SH_RS1), (int) M_CALL,  match_never, INSN_MACRO },
 {"jump",      "I",   "c,s", 0, (int) M_CALL,  match_never, INSN_MACRO },
 {"nop",       "C",   "",  MATCH_C_ADDI, 0xffff, match_opcode, INSN_ALIAS },

commit 09e514a92b6bb7c910051a7fafc9fded8a687848
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat May 6 00:01:39 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index c5783f9..5e32eb6 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170505
+#define BFD_VERSION_DATE 20170506
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 6c4f65a99ebe7669ac795ae08e34ae980671c684
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun May 7 00:01:34 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 5e32eb6..53986ead 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170506
+#define BFD_VERSION_DATE 20170507
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 8fe36e6e247e12706c37f53f049f2ec5a1865349
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon May 8 00:01:42 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 53986ead..94e2edd 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170507
+#define BFD_VERSION_DATE 20170508
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit ca28be8e0c18b02677c7530898ae0555207553c2
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue May 9 00:01:25 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 94e2edd..c0a0804 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170508
+#define BFD_VERSION_DATE 20170509
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit de33d5aed37edb1f2467adab7c2402aef36045b4
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed May 10 00:01:38 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index c0a0804..a03012f 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170509
+#define BFD_VERSION_DATE 20170510
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit b46d4a3dca4e0b2d3907fa6cf609a65a6315c159
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu May 11 00:01:36 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index a03012f..319bc20 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170510
+#define BFD_VERSION_DATE 20170511
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit e568fc190ac96d6ab427d018613361e03e4bd22b
Author: Senthil Kumar Selvaraj <senthil_kumar.selvaraj@atmel.com>
Date:   Mon Apr 24 15:17:14 2017 +0530

    Fix PR21404 - assertion fail when calculating symbol size
    
    Fix a host of problems related to adjustment of
    symbol values and sizes when relaxing for avr.
    
    1. Adjust symbol size first before adjusting symbol
    value. Otherwise, a symbol whose value just got adjusted to the
    relaxed address also ends up getting resized. See pr21404-1.s.
    
    2. Reduce symbol sizes only if their span is below an
    alignment boundary. Otherwise, the size gets decremented once when the
    actual instruction is relaxed and padding bytes are added, and again
    when the padding bytes are deleted (if padding ends up being unnecessary).
    pr21404-2.s addresses that, and this bug is really the root cause of PR21404.
    
    3. Adjust all symbol values before an alignment boundary.
    Previous code did not adjust symbol values if they fell in the
    would-be padded area, resulting in incorrect symbol values in some
    cases (see pr21404-3.s).
    
    4. Increase symbol sizes if alignment directives require so.
    As pr21404-4.s shows
    .global nonzero_sym
    L1:
        jmp  L1
    nonzero_sym:
        nop
        nop
        .p2align 2
    .size nonzero_sym, .-nonzero_sym
    
    The two nops satisfy the 4 byte alignment at assembly time and
    therefore the size of nonzero_sym is 4. Relaxation shortens
    the 4 byte jmp to a 2 byte rjmp, and to satisfy 4 byte alignment
    the code places 2 extra padding bytes after the nops, increasing
    nonzero_sym's size by 2. This wasn't handled before.
    
    If the assembly code does not have any align directives, then the
    boundary is the section size, and symbol values and sizes == boundary
    should also get adjusted. To handle that case, add a did_pad variable
    and use that to determine whether it should use < boundary or <= boundary.
    
    Also get rid of reloc_toaddr, which is now redundant.  toaddr is now not
    adjusted to handle the above case - the newly added
    did_pad variable does the job.
    
    pr21404-{5,6,7,8} are the same testcases written for local symbols, as
    the code handles them slightly differently.
    
    bfd/ChangeLog
    2017-05-01  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>
    
    	PR ld/21404
    	* elf32-avr.c (avr_should_move_sym): New function.
    	(avr_should_reduce_sym_size): Likewise.
    	(avr_should_increase_sym_size): Likewise.
    	(elf32_avr_relax_delete_bytes): Adjust symbol values
    	and sizes by calling new functions.
    
    ld/ChangeLog
    2017-04-28  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>
    
    	PR ld/21404
    	* testsuite/ld-avr/pr21404-1.d: New test.
    	* testsuite/ld-avr/pr21404-1.s: New test.
    	* testsuite/ld-avr/pr21404-2.d: New test.
    	* testsuite/ld-avr/pr21404-2.s: New test.
    	* testsuite/ld-avr/pr21404-3.d: New test.
    	* testsuite/ld-avr/pr21404-3.s: New test.
    	* testsuite/ld-avr/pr21404-4.d: New test.
    	* testsuite/ld-avr/pr21404-4.s: New test.
    	* testsuite/ld-avr/pr21404-5.d: New test.
    	* testsuite/ld-avr/pr21404-5.s: New test.
    	* testsuite/ld-avr/pr21404-6.d: New test.
    	* testsuite/ld-avr/pr21404-6.s: New test.
    	* testsuite/ld-avr/pr21404-7.d: New test.
    	* testsuite/ld-avr/pr21404-7.s: New test.
    	* testsuite/ld-avr/pr21404-8.d: New test.
    	* testsuite/ld-avr/pr21404-8.s: New test.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index a51642b..903c645 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,12 @@
+2017-05-01  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>
+
+	PR ld/21404
+	* elf32-avr.c (avr_should_move_sym): New function.
+	(avr_should_reduce_sym_size): Likewise.
+	(avr_should_increase_sym_size): Likewise.
+	(elf32_avr_relax_delete_bytes): Adjust symbol values
+	and sizes by calling new functions.
+
 2017-05-01  Palmer Dabbelt  <palmer@dabbelt.com>
 
 	* config.bfd (riscv32-*): Enable rv64.
diff --git a/bfd/elf32-avr.c b/bfd/elf32-avr.c
index 0f6c188..f140aa7 100644
--- a/bfd/elf32-avr.c
+++ b/bfd/elf32-avr.c
@@ -1854,6 +1854,40 @@ elf32_avr_adjust_reloc_if_spans_insn (bfd *abfd,
     }
 }
 
+static bfd_boolean
+avr_should_move_sym (symvalue symval,
+                     bfd_vma start,
+                     bfd_vma end,
+                     bfd_boolean did_pad)
+{
+  bfd_boolean sym_within_boundary =
+          did_pad ? symval < end : symval <= end;
+  return (symval > start && sym_within_boundary);
+}
+
+static bfd_boolean
+avr_should_reduce_sym_size (symvalue symval,
+                            symvalue symend,
+                            bfd_vma start,
+                            bfd_vma end,
+                            bfd_boolean did_pad)
+{
+  bfd_boolean sym_end_within_boundary =
+          did_pad ? symend < end : symend <= end;
+  return (symval <= start && symend > start && sym_end_within_boundary);
+}
+
+static bfd_boolean
+avr_should_increase_sym_size (symvalue symval,
+                              symvalue symend,
+                              bfd_vma start,
+                              bfd_vma end,
+                              bfd_boolean did_pad)
+{
+  return avr_should_move_sym (symval, start, end, did_pad)
+          && symend >= end && did_pad;
+}
+
 /* Delete some bytes from a section while changing the size of an instruction.
    The parameter "addr" denotes the section-relative offset pointing just
    behind the shrinked instruction. "addr+count" point at the first
@@ -1875,13 +1909,14 @@ elf32_avr_relax_delete_bytes (bfd *abfd,
   Elf_Internal_Rela *irel, *irelend;
   Elf_Internal_Sym *isym;
   Elf_Internal_Sym *isymbuf = NULL;
-  bfd_vma toaddr, reloc_toaddr;
+  bfd_vma toaddr;
   struct elf_link_hash_entry **sym_hashes;
   struct elf_link_hash_entry **end_hashes;
   unsigned int symcount;
   struct avr_relax_info *relax_info;
   struct avr_property_record *prop_record = NULL;
   bfd_boolean did_shrink = FALSE;
+  bfd_boolean did_pad = FALSE;
 
   symtab_hdr = &elf_tdata (abfd)->symtab_hdr;
   sec_shndx = _bfd_elf_section_from_bfd_section (abfd, sec);
@@ -1912,17 +1947,6 @@ elf32_avr_relax_delete_bytes (bfd *abfd,
         }
     }
 
-  /* We need to look at all relocs with offsets less than toaddr. prop
-     records handling adjusts toaddr downwards to avoid moving syms at the
-     address of the property record, but all relocs with offsets between addr
-     and the current value of toaddr need to have their offsets adjusted.
-     Assume addr = 0, toaddr = 4 and count = 2. After prop records handling,
-     toaddr becomes 2, but relocs with offsets 2 and 3 still need to be
-     adjusted (to 0 and 1 respectively), as the first 2 bytes are now gone.
-     So record the current value of toaddr here, and use it when adjusting
-     reloc offsets. */
-  reloc_toaddr = toaddr;
-
   irel = elf_section_data (sec)->relocs;
   irelend = irel + sec->reloc_count;
 
@@ -1962,10 +1986,7 @@ elf32_avr_relax_delete_bytes (bfd *abfd,
          to remember we didn't delete anything i.e. don't set did_shrink,
          so that we don't corrupt reloc offsets or symbol values.*/
       memset (contents + toaddr - count, fill, count);
-
-      /* Adjust the TOADDR to avoid moving symbols located at the address
-         of the property record, which has not moved.  */
-      toaddr -= count;
+      did_pad = TRUE;
     }
 
   if (!did_shrink)
@@ -1981,7 +2002,7 @@ elf32_avr_relax_delete_bytes (bfd *abfd,
 
       /* Get the new reloc address.  */
       if ((irel->r_offset > addr
-           && irel->r_offset < reloc_toaddr))
+           && irel->r_offset < toaddr))
         {
           if (debug_relax)
             printf ("Relocation at address 0x%x needs to be moved.\n"
@@ -2059,7 +2080,7 @@ elf32_avr_relax_delete_bytes (bfd *abfd,
                  {
                    /* If there is an alignment boundary, we only need to
                       adjust addends that end up below the boundary. */
-                   bfd_vma shrink_boundary = (reloc_toaddr
+                   bfd_vma shrink_boundary = (toaddr
                                               + sec->output_section->vma
                                               + sec->output_offset);
 
@@ -2102,12 +2123,10 @@ elf32_avr_relax_delete_bytes (bfd *abfd,
 	{
 	  if (isym->st_shndx == sec_shndx)
             {
-	      if (isym->st_value > addr
-                  && isym->st_value <= toaddr)
-                isym->st_value -= count;
-
-              if (isym->st_value <= addr
-                  && isym->st_value + isym->st_size > addr)
+              symvalue symval = isym->st_value;
+              symvalue symend = symval + isym->st_size;
+              if (avr_should_reduce_sym_size (symval, symend,
+                                      addr, toaddr, did_pad))
                 {
                   /* If this assert fires then we have a symbol that ends
                      part way through an instruction.  Does that make
@@ -2115,6 +2134,12 @@ elf32_avr_relax_delete_bytes (bfd *abfd,
                   BFD_ASSERT (isym->st_value + isym->st_size >= addr + count);
                   isym->st_size -= count;
                 }
+              else if (avr_should_increase_sym_size (symval, symend,
+                                      addr, toaddr, did_pad))
+                isym->st_size += count;
+
+              if (avr_should_move_sym (symval, addr, toaddr, did_pad))
+                isym->st_value -= count;
             }
 	}
     }
@@ -2131,20 +2156,24 @@ elf32_avr_relax_delete_bytes (bfd *abfd,
            || sym_hash->root.type == bfd_link_hash_defweak)
           && sym_hash->root.u.def.section == sec)
         {
-          if (sym_hash->root.u.def.value > addr
-              && sym_hash->root.u.def.value <= toaddr)
-            sym_hash->root.u.def.value -= count;
+          symvalue symval = sym_hash->root.u.def.value;
+          symvalue symend = symval + sym_hash->size;
 
-          if (sym_hash->root.u.def.value <= addr
-              && (sym_hash->root.u.def.value + sym_hash->size > addr))
+          if (avr_should_reduce_sym_size (symval, symend,
+                                  addr, toaddr, did_pad))
             {
               /* If this assert fires then we have a symbol that ends
                  part way through an instruction.  Does that make
                  sense?  */
-              BFD_ASSERT (sym_hash->root.u.def.value + sym_hash->size
-                          >= addr + count);
+              BFD_ASSERT (symend >= addr + count);
               sym_hash->size -= count;
             }
+          else if (avr_should_increase_sym_size (symval, symend,
+                                  addr, toaddr, did_pad))
+              sym_hash->size += count;
+
+          if (avr_should_move_sym (symval, addr, toaddr, did_pad))
+            sym_hash->root.u.def.value -= count;
         }
     }
 
diff --git a/ld/ChangeLog b/ld/ChangeLog
index 682ac6c..7d4faad 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,3 +1,23 @@
+2017-04-28  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>
+
+	PR ld/21404
+	* testsuite/ld-avr/pr21404-1.d: New test.
+	* testsuite/ld-avr/pr21404-1.s: New test.
+	* testsuite/ld-avr/pr21404-2.d: New test.
+	* testsuite/ld-avr/pr21404-2.s: New test.
+	* testsuite/ld-avr/pr21404-3.d: New test.
+	* testsuite/ld-avr/pr21404-3.s: New test.
+	* testsuite/ld-avr/pr21404-4.d: New test.
+	* testsuite/ld-avr/pr21404-4.s: New test.
+	* testsuite/ld-avr/pr21404-5.d: New test.
+	* testsuite/ld-avr/pr21404-5.s: New test.
+	* testsuite/ld-avr/pr21404-6.d: New test.
+	* testsuite/ld-avr/pr21404-6.s: New test.
+	* testsuite/ld-avr/pr21404-7.d: New test.
+	* testsuite/ld-avr/pr21404-7.s: New test.
+	* testsuite/ld-avr/pr21404-8.d: New test.
+	* testsuite/ld-avr/pr21404-8.s: New test.
+
 2017-04-24  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/20815
diff --git a/ld/testsuite/ld-avr/pr21404-1.d b/ld/testsuite/ld-avr/pr21404-1.d
new file mode 100644
index 0000000..fc7103f
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-1.d
@@ -0,0 +1,12 @@
+#name: AVR symbol size adjustment with non zero symbol value
+#as: -mmcu=avrxmega2 -mlink-relax
+#ld:  -mavrxmega2 --relax
+#source: pr21404-1.s
+#nm: -n -S
+#target: avr-*-*
+
+#...
+00000000 00000004 T main
+#...
+00000002 00000002 T nonzero_sym
+#...
diff --git a/ld/testsuite/ld-avr/pr21404-1.s b/ld/testsuite/ld-avr/pr21404-1.s
new file mode 100644
index 0000000..66ddb7d
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-1.s
@@ -0,0 +1,11 @@
+    .file "pr21404-1.s"
+.section	.text,"ax",@progbits
+.global nonzero_sym
+.global main
+main:
+L1:
+    jmp  L1
+nonzero_sym:
+    nop
+.size main, .-main
+.size nonzero_sym, .-nonzero_sym
diff --git a/ld/testsuite/ld-avr/pr21404-2.d b/ld/testsuite/ld-avr/pr21404-2.d
new file mode 100644
index 0000000..e85735c
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-2.d
@@ -0,0 +1,16 @@
+#name: AVR symbol size adjustment across alignment boundary
+#as: -mmcu=avrxmega2 -mlink-relax
+#ld:  -mavrxmega2 --relax
+#source: pr21404-2.s
+#nm: -n -S
+#target: avr-*-*
+
+#...
+00000000 00000006 T main
+00000000 00000004 T size_after_align
+00000000 00000004 T size_before_align
+#...
+00000002 00000002 T nonzero_sym_after_align
+00000002 00000004 T nonzero_sym_after_end
+00000002 00000002 T nonzero_sym_before_align
+#...
diff --git a/ld/testsuite/ld-avr/pr21404-2.s b/ld/testsuite/ld-avr/pr21404-2.s
new file mode 100644
index 0000000..e1da1ae
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-2.s
@@ -0,0 +1,25 @@
+    .file "pr21404.s"
+.section	.text,"ax",@progbits
+.global size_before_align
+.global size_after_align
+.global main
+.global nonzero_sym_before_align
+.global nonzero_sym_after_align
+.global nonzero_sym_after_end
+main:
+size_before_align:
+size_after_align:
+L1:
+    jmp  L1
+nonzero_sym_before_align:
+nonzero_sym_after_align:
+nonzero_sym_after_end:
+    jmp  L1
+.size size_before_align, .-size_before_align
+.size nonzero_sym_before_align, .-nonzero_sym_before_align
+    .p2align 1
+.size size_after_align, .-size_after_align
+.size nonzero_sym_after_align, .-nonzero_sym_after_align
+.word L1
+.size main, .-main
+.size nonzero_sym_after_end, .-nonzero_sym_after_end
diff --git a/ld/testsuite/ld-avr/pr21404-3.d b/ld/testsuite/ld-avr/pr21404-3.d
new file mode 100644
index 0000000..145b48f
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-3.d
@@ -0,0 +1,10 @@
+#name: AVR symbol value adjustment with non zero symbol value
+#as: -mmcu=avrxmega2 -mlink-relax
+#ld:  -mavrxmega2 --relax
+#source: pr21404-3.s
+#nm: -n -S
+#target: avr-*-*
+
+#...
+00000006 T nonzero_sym
+#...
diff --git a/ld/testsuite/ld-avr/pr21404-3.s b/ld/testsuite/ld-avr/pr21404-3.s
new file mode 100644
index 0000000..d62ecd9
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-3.s
@@ -0,0 +1,10 @@
+    .file "pr21404-3.s"
+.section	.text,"ax",@progbits
+.global nonzero_sym
+L1:
+    jmp  L1
+    jmp  L1
+    jmp L1
+    .p2align 1
+nonzero_sym:
+    jmp L1
diff --git a/ld/testsuite/ld-avr/pr21404-4.d b/ld/testsuite/ld-avr/pr21404-4.d
new file mode 100644
index 0000000..b80dfcf
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-4.d
@@ -0,0 +1,10 @@
+#name: AVR symbol size increase for alignment
+#as: -mmcu=avrxmega2 -mlink-relax
+#ld:  -mavrxmega2 --relax
+#source: pr21404-4.s
+#nm: -n -S
+#target: avr-*-*
+
+#...
+00000002 00000006 T nonzero_sym
+#...
diff --git a/ld/testsuite/ld-avr/pr21404-4.s b/ld/testsuite/ld-avr/pr21404-4.s
new file mode 100644
index 0000000..3e957bb
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-4.s
@@ -0,0 +1,10 @@
+    .file "pr21404-4.s"
+.section	.text,"ax",@progbits
+.global nonzero_sym
+L1:
+    jmp  L1
+nonzero_sym:
+    nop
+    nop
+    .p2align 2
+.size nonzero_sym, .-nonzero_sym
diff --git a/ld/testsuite/ld-avr/pr21404-5.d b/ld/testsuite/ld-avr/pr21404-5.d
new file mode 100644
index 0000000..519c50f
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-5.d
@@ -0,0 +1,11 @@
+#name: AVR local symbol size adjustment with non zero symbol value
+#as: -mmcu=avrxmega2 -mlink-relax
+#ld:  -mavrxmega2 --relax
+#source: pr21404-5.s
+#nm: -n -S
+#target: avr-*-*
+
+#...
+00000000 00000004 t _main
+00000002 00000002 t _nonzero_sym
+#...
diff --git a/ld/testsuite/ld-avr/pr21404-5.s b/ld/testsuite/ld-avr/pr21404-5.s
new file mode 100644
index 0000000..ccf2394
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-5.s
@@ -0,0 +1,9 @@
+    .file "pr21404-1.s"
+.section	.text,"ax",@progbits
+_main:
+L1:
+    jmp  L1
+_nonzero_sym:
+    nop
+.size _main, .-_main
+.size _nonzero_sym, .-_nonzero_sym
diff --git a/ld/testsuite/ld-avr/pr21404-6.d b/ld/testsuite/ld-avr/pr21404-6.d
new file mode 100644
index 0000000..784fc7c
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-6.d
@@ -0,0 +1,16 @@
+#name: AVR local symbol size adjustment across alignment boundary
+#as: -mmcu=avrxmega2 -mlink-relax
+#ld:  -mavrxmega2 --relax
+#source: pr21404-6.s
+#nm: -n -S
+#target: avr-*-*
+
+#...
+00000000 00000006 t main
+00000000 00000004 t size_after_align
+00000000 00000004 t size_before_align
+#...
+00000002 00000002 t nonzero_sym_after_align
+00000002 00000004 t nonzero_sym_after_end
+00000002 00000002 t nonzero_sym_before_align
+#...
diff --git a/ld/testsuite/ld-avr/pr21404-6.s b/ld/testsuite/ld-avr/pr21404-6.s
new file mode 100644
index 0000000..36f2301
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-6.s
@@ -0,0 +1,19 @@
+    .file "pr21404-6.s"
+.section	.text,"ax",@progbits
+main:
+size_before_align:
+size_after_align:
+L1:
+    jmp  L1
+nonzero_sym_before_align:
+nonzero_sym_after_align:
+nonzero_sym_after_end:
+    jmp  L1
+.size size_before_align, .-size_before_align
+.size nonzero_sym_before_align, .-nonzero_sym_before_align
+    .p2align 1
+.size size_after_align, .-size_after_align
+.size nonzero_sym_after_align, .-nonzero_sym_after_align
+.word L1
+.size main, .-main
+.size nonzero_sym_after_end, .-nonzero_sym_after_end
diff --git a/ld/testsuite/ld-avr/pr21404-7.d b/ld/testsuite/ld-avr/pr21404-7.d
new file mode 100644
index 0000000..1360acb
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-7.d
@@ -0,0 +1,10 @@
+#name: AVR local symbol value adjustment with non zero symbol value
+#as: -mmcu=avrxmega2 -mlink-relax
+#ld:  -mavrxmega2 --relax
+#source: pr21404-7.s
+#nm: -n -S
+#target: avr-*-*
+
+#...
+00000006 t nonzero_sym
+#...
diff --git a/ld/testsuite/ld-avr/pr21404-7.s b/ld/testsuite/ld-avr/pr21404-7.s
new file mode 100644
index 0000000..b7e4e35
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-7.s
@@ -0,0 +1,9 @@
+    .file "pr21404-7.s"
+.section	.text,"ax",@progbits
+L1:
+    jmp  L1
+    jmp  L1
+    jmp L1
+    .p2align 1
+nonzero_sym:
+    jmp L1
diff --git a/ld/testsuite/ld-avr/pr21404-8.d b/ld/testsuite/ld-avr/pr21404-8.d
new file mode 100644
index 0000000..d70ba8f
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-8.d
@@ -0,0 +1,10 @@
+#name: AVR local symbol size increase for alignment
+#as: -mmcu=avrxmega2 -mlink-relax
+#ld:  -mavrxmega2 --relax
+#source: pr21404-8.s
+#nm: -n -S
+#target: avr-*-*
+
+#...
+00000002 00000006 t nonzero_sym
+#...
diff --git a/ld/testsuite/ld-avr/pr21404-8.s b/ld/testsuite/ld-avr/pr21404-8.s
new file mode 100644
index 0000000..6b00df5
--- /dev/null
+++ b/ld/testsuite/ld-avr/pr21404-8.s
@@ -0,0 +1,9 @@
+    .file "pr21404-8.s"
+.section	.text,"ax",@progbits
+L1:
+    jmp  L1
+nonzero_sym:
+    nop
+    nop
+    .p2align 2
+.size nonzero_sym, .-nonzero_sym

commit c591afad5754291169d0642dd15ae8a7bc61be51
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri May 12 00:01:47 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 319bc20..35c30f1 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170511
+#define BFD_VERSION_DATE 20170512
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit f686917beeb2c79539b234c9ddf77d5fd925918d
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat May 13 00:01:35 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 35c30f1..e4dac3c 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170512
+#define BFD_VERSION_DATE 20170513
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 2346a98c797e69d0d10b7935ac8d8772365f2ca2
Author: James Clarke <jrtc27@jrtc27.com>
Date:   Sat May 13 08:01:15 2017 -0700

    Fix assertion failure relaxing TLS for position-independent executables.
    
    gold/
    	PR gold/21444
    	* gold.cc (Target_sparc::Relocate::relocate_tls): Local
    	variables are final for position-independent executables. This
    	has to be consistent with Target_sparc::Scan::local otherwise
    	they will disagree as to whether local-exec is used.

diff --git a/gold/ChangeLog b/gold/ChangeLog
index d598386..eaf30d3 100644
--- a/gold/ChangeLog
+++ b/gold/ChangeLog
@@ -1,3 +1,11 @@
+2017-05-13  James Clarke  <jrtc27@jrtc27.com>
+
+	PR gold/21444
+	* gold.cc (Target_sparc::Relocate::relocate_tls): Local
+	variables are final for position-independent executables. This
+	has to be consistent with Target_sparc::Scan::local otherwise
+	they will disagree as to whether local-exec is used.
+
 2017-02-22  Alan Modra  <amodra@gmail.com>
 
 	* powerpc.cc (Target_powerpc::make_iplt_section): Check that
diff --git a/gold/sparc.cc b/gold/sparc.cc
index a9cb93a..54c7c33 100644
--- a/gold/sparc.cc
+++ b/gold/sparc.cc
@@ -3730,7 +3730,7 @@ Target_sparc<size, big_endian>::Relocate::relocate_tls(
 
   const bool is_final =
     (gsym == NULL
-     ? !parameters->options().output_is_position_independent()
+     ? !parameters->options().shared()
      : gsym->final_value_is_known());
   const tls::Tls_optimization optimized_type
       = optimize_tls_reloc(is_final, r_type);

commit d24da5a42c7135a3f5a1a5cd380fe70c18710adc
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun May 14 00:01:13 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index e4dac3c..aa08d9c 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170513
+#define BFD_VERSION_DATE 20170514
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 712d3abc81a109da47b2a7382adaf5c6af78371e
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon May 15 00:01:20 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index aa08d9c..16e423c 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170514
+#define BFD_VERSION_DATE 20170515
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 6d3ac5cd91d3363745b2b5686535c2558c234d1c
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue May 16 00:01:33 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 16e423c..6d24233 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170515
+#define BFD_VERSION_DATE 20170516
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 7c0a8295cef06004d55ed1e5f9c625a670da6246
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed May 17 00:01:33 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 6d24233..fd900bb 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170516
+#define BFD_VERSION_DATE 20170517
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 1663acb165d6f3f17a21750e1b1140005d5a25f0
Author: Alan Modra <amodra@gmail.com>
Date:   Thu May 18 09:07:26 2017 +0930

    Fix compile time warning about pointer comparison.
    
    	PR 21034
    	* stabs.c (parse_stab_members): Fix thinko checking for g++
    	version 1 stabs information.

diff --git a/binutils/ChangeLog b/binutils/ChangeLog
index f21867f..431822a 100644
--- a/binutils/ChangeLog
+++ b/binutils/ChangeLog
@@ -1,3 +1,11 @@
+2017-05-18  Alan Modra  <amodra@gmail.com>
+
+	Apply from master
+	2017-01-10  Nick Clifton  <nickc@redhat.com>
+	PR 21034
+	* stabs.c (parse_stab_members): Fix thinko checking for g++
+	version 1 stabs information.
+
 2017-03-02  Tristan Gingold  <gingold@adacore.com>
 
 	* configure: Regenerate.
diff --git a/binutils/stabs.c b/binutils/stabs.c
index f5c5d2d..d3fc4af 100644
--- a/binutils/stabs.c
+++ b/binutils/stabs.c
@@ -2702,7 +2702,7 @@ parse_stab_members (void *dhandle, struct stab_handle *info,
 	      ++*pp;
 	      voffset &= 0x7fffffff;
 
-	      if (**pp == ';' || *pp == '\0')
+	      if (**pp == ';' || **pp == '\0')
 		{
 		  /* Must be g++ version 1.  */
 		  context = DEBUG_TYPE_NULL;

commit 1a94bb85e273197fb609b79cc2e3705287c86966
Author: Alan Modra <amodra@gmail.com>
Date:   Thu May 18 09:08:55 2017 +0930

    PowerPC: incorrect library search order
    
    First, need to match against just the CPU name, not the whole triplet.
    Otherwise, the test picks up "*le-*" pattern from x86_64-apple-darwin
    triplet.
    
    Second, it should be testing for $target, not $host. Host may be
    little endian by default, and the sysroot directory layout shouldn't
    depend on whether it is built on LE or BE machine.
    
    	* emulparams/elf32ppccommon.sh (LIBPATH_SUFFIX): Set from target
    	cpu, not host.

diff --git a/ld/ChangeLog b/ld/ChangeLog
index 7d4faad..40a8052 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,3 +1,10 @@
+2017-05-18  Alan Modra  <amodra@gmail.com>
+
+	Apply from master
+	2017-03-13  Alexey Neyman  <stilor@att.net>
+	* emulparams/elf32ppccommon.sh (LIBPATH_SUFFIX): Set from target
+	cpu, not host.
+
 2017-04-28  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>
 
 	PR ld/21404
diff --git a/ld/emulparams/elf32ppccommon.sh b/ld/emulparams/elf32ppccommon.sh
index 1f54ef8..d00cf68 100644
--- a/ld/emulparams/elf32ppccommon.sh
+++ b/ld/emulparams/elf32ppccommon.sh
@@ -44,11 +44,11 @@ fi
 
 # Look for 64 bit target libraries in /lib64, /usr/lib64 etc., first.
 # Similarly, look for 32 bit libraries in /lib32, /usr/lib32 etc.
-case "$host":"$EMULATION_NAME" in
-  *le-*:*64lppc*) LIBPATH_SUFFIX=64 ;;
-  *le-*:*32lppc*) LIBPATH_SUFFIX=32 ;;
-  *le-*:*64*) LIBPATH_SUFFIX=64be ;;
-  *le-*:*32*) LIBPATH_SUFFIX=32be ;;
+case `echo "$target" | sed -e 's/-.*//'`:"$EMULATION_NAME" in
+  *le:*64lppc*) LIBPATH_SUFFIX=64 ;;
+  *le:*32lppc*) LIBPATH_SUFFIX=32 ;;
+  *le:*64*) LIBPATH_SUFFIX=64be ;;
+  *le:*32*) LIBPATH_SUFFIX=32be ;;
   *:*64lppc*) LIBPATH_SUFFIX=64le ;;
   *:*32lppc*) LIBPATH_SUFFIX=32le ;;
   *:*64*) LIBPATH_SUFFIX=64 ;;

commit 71ddc2784cd426778acfbe069b11088269a56f20
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu May 18 00:02:12 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index fd900bb..e28fdd0 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170517
+#define BFD_VERSION_DATE 20170518
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 832376c94dbfac50f92956f304dd828e4fb4caa0
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri May 19 00:01:25 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index e28fdd0..5871ce2 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170518
+#define BFD_VERSION_DATE 20170519
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit c44a536bebdf479b6f33d972f9abd123f1b13aba
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat May 20 00:01:31 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 5871ce2..829dc7a 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170519
+#define BFD_VERSION_DATE 20170520
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 1e484106234a12e9a1d8e57a449982f4afd13440
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun May 21 00:01:19 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 829dc7a..10ba349 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170520
+#define BFD_VERSION_DATE 20170521
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 90c544221832c65c10f3b7faffe3d912c6f63898
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon May 22 00:01:23 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 10ba349..4f3a479 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170521
+#define BFD_VERSION_DATE 20170522
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 13f778db5d9e369f0c2391184cc99affcdc1d17f
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue May 23 00:01:30 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 4f3a479..4f67aad 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170522
+#define BFD_VERSION_DATE 20170523
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 84272cf6407cf029e3329ca1ef4717c5376133db
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed May 24 00:01:32 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 4f67aad..e8c13d4 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170523
+#define BFD_VERSION_DATE 20170524
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit eac59e8c3ca2243455a9e634d4e354f1b4d73c14
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu May 25 00:01:48 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index e8c13d4..e260713 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170524
+#define BFD_VERSION_DATE 20170525
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 19d9d9030aa0abc9e9953986ada28b0204fec163
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri May 26 00:01:52 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index e260713..41efe74 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170525
+#define BFD_VERSION_DATE 20170526
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit d4323ac7a6d366c6cebd13f1fc32ec805de510bb
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat May 27 00:01:28 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 41efe74..8cbaf67 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170526
+#define BFD_VERSION_DATE 20170527
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 4a3843fb1c6ee0b12433e5352e615bbfbc67b40e
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun May 28 00:01:24 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 8cbaf67..83aa67f 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170527
+#define BFD_VERSION_DATE 20170528
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 57dc4c9cfe5d5b548804ea29a1135edf57ce0c9f
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon May 29 00:01:34 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 83aa67f..fcf8cab 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170528
+#define BFD_VERSION_DATE 20170529
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 1dad3b5c74f8fa681f86266e4c66e06dc0d5aaaa
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue May 30 00:01:14 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index fcf8cab..439c219 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170529
+#define BFD_VERSION_DATE 20170530
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 9603ba647040685d4d8519266ef077209acec6d5
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed May 31 00:01:44 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 439c219..2f6bdbf 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170530
+#define BFD_VERSION_DATE 20170531
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 9461c0a1d921953f76af5610bb763b4d34ec084a
Author: Alan Modra <amodra@gmail.com>
Date:   Wed May 31 18:10:01 2017 +0930

    PowerPC64 ld help quoting
    
    	* emultempl/ppc64elf.em (plt-static-chain help): Fix quoting.

diff --git a/ld/ChangeLog b/ld/ChangeLog
index 40a8052..c3bdcba 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,3 +1,7 @@
+2017-05-31  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/ppc64elf.em (plt-static-chain help): Fix quoting.
+
 2017-05-18  Alan Modra  <amodra@gmail.com>
 
 	Apply from master
diff --git a/ld/emultempl/ppc64elf.em b/ld/emultempl/ppc64elf.em
index 9e5f240..f1d5274 100644
--- a/ld/emultempl/ppc64elf.em
+++ b/ld/emultempl/ppc64elf.em
@@ -742,10 +742,10 @@ PARSE_AND_LIST_OPTIONS=${PARSE_AND_LIST_OPTIONS}'
                                 choose suitable defaults.\n"
 		   ));
   fprintf (file, _("\
-  --plt-static-chain          PLT call stubs should load r11.${DEFAULT_PLT_STATIC_CHAIN- (default)}\n"
+  --plt-static-chain          PLT call stubs should load r11.'${DEFAULT_PLT_STATIC_CHAIN- (default)}'\n"
 		   ));
   fprintf (file, _("\
-  --no-plt-static-chain       PLT call stubs should not load r11.${DEFAULT_PLT_STATIC_CHAIN+ (default)}\n"
+  --no-plt-static-chain       PLT call stubs should not load r11.'${DEFAULT_PLT_STATIC_CHAIN+ (default)}'\n"
 		   ));
   fprintf (file, _("\
   --plt-thread-safe           PLT call stubs with load-load barrier.\n"

commit 93a1c456a82fa51fd85b0640eab20eff17d928ff
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu Jun 1 00:01:43 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 2f6bdbf..09a78a6 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170531
+#define BFD_VERSION_DATE 20170601
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 9561fa481c546c759eada93c1404626fa0d5b91c
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri Jun 2 00:01:28 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 09a78a6..2d278ad 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170601
+#define BFD_VERSION_DATE 20170602
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 95ac14985ad46e61b8444603adec772d7241d7f0
Author: H.J. Lu <hjl.tools@gmail.com>
Date:   Fri Jun 2 14:49:37 2017 -0700

    x86: Remove linker option: -z prefix-nop
    
    Since it is incorrect to convert
    
    	bnd call *foo@GOTPCREL(%rip)
    
    to
    
    	bnd nop
    	call foo
    
    this patch removes the "-z prefix-nop" option from x86 linker.
    
    	* emulparams/call_nop.sh: Remove -z prefix-nop.
    	* ld.texinfo: Likewise.
    	* testsuite/ld-i386/call3c.d: Check for linker error.
    	* testsuite/ld-x86-64/call1c.d: Likewise.
    
    (cherry picked from commit 4a4a4a27ba5c731044d3d3594545e6f06b0ec0e5)

diff --git a/ld/ChangeLog b/ld/ChangeLog
index c3bdcba..5a9544e 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,3 +1,10 @@
+2017-06-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* emulparams/call_nop.sh: Remove -z prefix-nop.
+	* ld.texinfo: Likewise.
+	* testsuite/ld-i386/call3c.d: Check for linker error.
+	* testsuite/ld-x86-64/call1c.d: Likewise.
+
 2017-05-31  Alan Modra  <amodra@gmail.com>
 
 	* emultempl/ppc64elf.em (plt-static-chain help): Fix quoting.
diff --git a/ld/emulparams/call_nop.sh b/ld/emulparams/call_nop.sh
index fee4a81..d45806c 100644
--- a/ld/emulparams/call_nop.sh
+++ b/ld/emulparams/call_nop.sh
@@ -10,11 +10,6 @@ PARSE_AND_LIST_ARGS_CASE_Z_CALL_NOP='
 	      link_info.call_nop_as_suffix = FALSE;
 	      link_info.call_nop_byte = 0x67;
 	    }
-	  else if (strcmp (optarg + 9, "prefix-nop") == 0)
-	    {
-	      link_info.call_nop_as_suffix = FALSE;
-	      link_info.call_nop_byte = 0x90;
-	    }
 	  else if (strcmp (optarg + 9, "suffix-nop") == 0)
 	    {
 	      link_info.call_nop_as_suffix = TRUE;
diff --git a/ld/ld.texinfo b/ld/ld.texinfo
index d393acd..4b5046a 100644
--- a/ld/ld.texinfo
+++ b/ld/ld.texinfo
@@ -1219,14 +1219,12 @@ relocation overflow check if there will be no dynamic relocation
 overflow at run-time.  Supported for x86_64.
 
 @item call-nop=prefix-addr
-@itemx call-nop=prefix-nop
 @itemx call-nop=suffix-nop
 @itemx call-nop=prefix-@var{byte}
 @itemx call-nop=suffix-@var{byte}
 Specify the 1-byte @code{NOP} padding when transforming indirect call
 to a locally defined function, foo, via its GOT slot.
 @option{call-nop=prefix-addr} generates @code{0x67 call foo}.
-@option{call-nop=prefix-nop} generates @code{0x90 call foo}.
 @option{call-nop=suffix-nop} generates @code{call foo 0x90}.
 @option{call-nop=prefix-@var{byte}} generates @code{@var{byte} call foo}.
 @option{call-nop=suffix-@var{byte}} generates @code{call foo @var{byte}}.
diff --git a/ld/testsuite/ld-i386/call3c.d b/ld/testsuite/ld-i386/call3c.d
index 0fdbee4..f869dcc 100644
--- a/ld/testsuite/ld-i386/call3c.d
+++ b/ld/testsuite/ld-i386/call3c.d
@@ -1,14 +1,4 @@
 #source: call3.s
 #as: --32 -mrelax-relocations=yes
 #ld: -melf_i386 -z call-nop=prefix-nop
-#objdump: -dw
-
-.*: +file format .*
-
-
-Disassembly of section .text:
-
-#...
-[ 	]*[a-f0-9]+:	90                   	nop
-[ 	]*[a-f0-9]+:	e8 ([0-9a-f]{2} ){4} *	call +[a-f0-9]+ <foo>
-#pass
+#error: invalid number for -z call-nop=prefix-: nop
diff --git a/ld/testsuite/ld-x86-64/call1c.d b/ld/testsuite/ld-x86-64/call1c.d
index 7fe8056..70933da 100644
--- a/ld/testsuite/ld-x86-64/call1c.d
+++ b/ld/testsuite/ld-x86-64/call1c.d
@@ -1,14 +1,4 @@
 #source: call1.s
 #as: --64 -mrelax-relocations=yes
 #ld: -melf_x86_64 -z call-nop=prefix-nop
-#objdump: -dw
-
-.*: +file format .*
-
-
-Disassembly of section .text:
-
-#...
-[ 	]*[a-f0-9]+:	90                   	nop
-[ 	]*[a-f0-9]+:	e8 ([0-9a-f]{2} ){4} *	callq +[a-f0-9]+ <foo>
-#pass
+#error: invalid number for -z call-nop=prefix-: nop

commit dedd9610daccc07a2e774a169359a6662f651fc4
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat Jun 3 00:01:20 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 2d278ad..a48c176 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170602
+#define BFD_VERSION_DATE 20170603
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 73400258df93eb445c8beb5d14d711433658ddcd
Author: Alan Modra <amodra@gmail.com>
Date:   Sat Jun 3 13:07:21 2017 +0930

    PR21503, Gold doesn't create linker stub symbols on ppc64
    
    	PR 21503
    	* options.h: Add --emit-stub-syms option.
    	* powerpc.cc (object_id): New.
    	(Powerpc_relobj): Add uniq_ and accessor.  Sort variables for
    	better packing.
    	(Powerpc_dynobj): Sort variables for better packing.
    	(Target_powerpc::define_local): New function.
    	(Target_powerpc::group_sections): Pass stub table size to
    	Stub_table constructor.
    	(Target_powerpc::do_relax): Define stub and glink symbols.
    	(Stub_table): Add uniq_ variable, and id param to constructor.
    	(Stub_table::Plt_stub_ent): Add indx_ variable.
    	(Stub_table::Branch_stub_entries): Move typedef earlier.
    	(Stub_table::branch_stub_size): Replace "to" parameter with a
    	Branch_stub_entries iterator.
    	(Stub_table::add_long_branch_entry): Adjust to suit.
    	(Stub_table::add_plt_call_entry): Set indx_.
    	(Stub_table::define_stub_syms): New function.

diff --git a/gold/ChangeLog b/gold/ChangeLog
index eaf30d3..f6a0836 100644
--- a/gold/ChangeLog
+++ b/gold/ChangeLog
@@ -1,3 +1,26 @@
+2017-06-03  Alan Modra  <amodra@gmail.com>
+
+	Apply from master
+	2017-05-23  Alan Modra  <amodra@gmail.com>
+	PR 21503
+	* options.h: Add --emit-stub-syms option.
+	* powerpc.cc (object_id): New.
+	(Powerpc_relobj): Add uniq_ and accessor.  Sort variables for
+	better packing.
+	(Powerpc_dynobj): Sort variables for better packing.
+	(Target_powerpc::define_local): New function.
+	(Target_powerpc::group_sections): Pass stub table size to
+	Stub_table constructor.
+	(Target_powerpc::do_relax): Define stub and glink symbols.
+	(Stub_table): Add uniq_ variable, and id param to constructor.
+	(Stub_table::Plt_stub_ent): Add indx_ variable.
+	(Stub_table::Branch_stub_entries): Move typedef earlier.
+	(Stub_table::branch_stub_size): Replace "to" parameter with a
+	Branch_stub_entries iterator.
+	(Stub_table::add_long_branch_entry): Adjust to suit.
+	(Stub_table::add_plt_call_entry): Set indx_.
+	(Stub_table::define_stub_syms): New function.
+
 2017-05-13  James Clarke  <jrtc27@jrtc27.com>
 
 	PR gold/21444
diff --git a/gold/options.h b/gold/options.h
index a8b1d46..202d4b0 100644
--- a/gold/options.h
+++ b/gold/options.h
@@ -814,6 +814,10 @@ class General_options
 
   // e
 
+  DEFINE_bool(emit_stub_syms, options::TWO_DASHES, '\0', true,
+	      N_("(PowerPC only) Label linker stubs with a symbol"),
+	      N_("(PowerPC only) Do not label linker stubs with a symbol"));
+
   DEFINE_string(entry, options::TWO_DASHES, 'e', NULL,
 		N_("Set program start address"), N_("ADDRESS"));
 
diff --git a/gold/powerpc.cc b/gold/powerpc.cc
index 1477a10..1f2bc9e 100644
--- a/gold/powerpc.cc
+++ b/gold/powerpc.cc
@@ -81,6 +81,9 @@ struct Stub_table_owner
 inline bool
 is_branch_reloc(unsigned int r_type);
 
+// Counter incremented on every Powerpc_relobj constructed.
+static uint32_t object_id = 0;
+
 template<int size, bool big_endian>
 class Powerpc_relobj : public Sized_relobj_file<size, big_endian>
 {
@@ -92,10 +95,10 @@ public:
   Powerpc_relobj(const std::string& name, Input_file* input_file, off_t offset,
 		 const typename elfcpp::Ehdr<size, big_endian>& ehdr)
     : Sized_relobj_file<size, big_endian>(name, input_file, offset, ehdr),
-      special_(0), relatoc_(0), toc_(0), no_toc_opt_(),
-      has_small_toc_reloc_(false), opd_valid_(false), opd_ent_(),
-      access_from_map_(), has14_(), stub_table_index_(),
-      e_flags_(ehdr.get_e_flags()), st_other_()
+      uniq_(object_id++), special_(0), relatoc_(0), toc_(0),
+      has_small_toc_reloc_(false), opd_valid_(false),
+      e_flags_(ehdr.get_e_flags()), no_toc_opt_(), opd_ent_(),
+      access_from_map_(), has14_(), stub_table_index_(), st_other_()
   {
     this->set_abiversion(0);
   }
@@ -357,6 +360,10 @@ public:
     this->stub_table_index_.clear();
   }
 
+  uint32_t
+  uniq() const
+  { return this->uniq_; }
+
   int
   abiversion() const
   { return this->e_flags_ & elfcpp::EF_PPC64_ABI; }
@@ -396,6 +403,9 @@ private:
   opd_ent_ndx(size_t off) const
   { return off >> 4;}
 
+  // Per object unique identifier
+  uint32_t uniq_;
+
   // For 32-bit the .got2 section shdnx, for 64-bit the .opd section shndx.
   unsigned int special_;
 
@@ -403,10 +413,6 @@ private:
   unsigned int relatoc_;
   unsigned int toc_;
 
-  // For 64-bit, an array with one entry per 64-bit word in the .toc
-  // section, set if accesses using that word cannot be optimised.
-  std::vector<bool> no_toc_opt_;
-
   // For 64-bit, whether this object uses small model relocs to access
   // the toc.
   bool has_small_toc_reloc_;
@@ -418,6 +424,13 @@ private:
   // access_from_map_.
   bool opd_valid_;
 
+  // Header e_flags
+  elfcpp::Elf_Word e_flags_;
+
+  // For 64-bit, an array with one entry per 64-bit word in the .toc
+  // section, set if accesses using that word cannot be optimised.
+  std::vector<bool> no_toc_opt_;
+
   // The first 8-byte word of an OPD entry gives the address of the
   // entry point of the function.  Relocatable object files have a
   // relocation on this word.  The following vector records the
@@ -435,9 +448,6 @@ private:
   // The stub table to use for a given input section.
   std::vector<unsigned int> stub_table_index_;
 
-  // Header e_flags
-  elfcpp::Elf_Word e_flags_;
-
   // ELF st_other field for local symbols.
   std::vector<unsigned char> st_other_;
 };
@@ -451,7 +461,7 @@ public:
   Powerpc_dynobj(const std::string& name, Input_file* input_file, off_t offset,
 		 const typename elfcpp::Ehdr<size, big_endian>& ehdr)
     : Sized_dynobj<size, big_endian>(name, input_file, offset, ehdr),
-      opd_shndx_(0), opd_ent_(), e_flags_(ehdr.get_e_flags())
+      opd_shndx_(0), e_flags_(ehdr.get_e_flags()), opd_ent_()
   {
     this->set_abiversion(0);
   }
@@ -548,14 +558,14 @@ private:
   unsigned int opd_shndx_;
   Address opd_address_;
 
+  // Header e_flags
+  elfcpp::Elf_Word e_flags_;
+
   // The first 8-byte word of an OPD entry gives the address of the
   // entry point of the function.  Records the section and offset
   // corresponding to the address.  Note that in dynamic objects,
   // offset is *not* relative to the section.
   std::vector<Opd_ent> opd_ent_;
-
-  // Header e_flags
-  elfcpp::Elf_Word e_flags_;
 };
 
 // Powerpc_copy_relocs class.  Needed to peek at dynamic relocs the
@@ -935,6 +945,23 @@ class Target_powerpc : public Sized_target<size, big_endian>
       }
   }
 
+  // Wrapper used after relax to define a local symbol in output data,
+  // from the end if value < 0.
+  void
+  define_local(Symbol_table* symtab, const char* name,
+	       Output_data* od, Address value, unsigned int symsize)
+  {
+    Symbol* sym
+      = symtab->define_in_output_data(name, NULL, Symbol_table::PREDEFINED,
+				      od, value, symsize, elfcpp::STT_NOTYPE,
+				      elfcpp::STB_LOCAL, elfcpp::STV_HIDDEN, 0,
+				      static_cast<Signed_address>(value) < 0,
+				      false);
+    // We are creating this symbol late, so need to fix up things
+    // done early in Layout::finalize.
+    sym->set_dynsym_index(-1U);
+  }
+
   bool
   plt_thread_safe() const
   { return this->plt_thread_safe_; }
@@ -2836,7 +2863,8 @@ Target_powerpc<size, big_endian>::group_sections(Layout* layout,
       if ((*t)->owner->is_input_section())
 	stub_table = new Stub_table<size, big_endian>(this,
 						      (*t)->output_section,
-						      (*t)->owner);
+						      (*t)->owner,
+						      this->stub_tables_.size());
       else if ((*t)->owner->is_relaxed_input_section())
 	stub_table = static_cast<Stub_table<size, big_endian>*>(
 			(*t)->owner->relaxed_input_section());
@@ -3232,6 +3260,36 @@ Target_powerpc<size, big_endian>::do_relax(int pass,
 	}
       this->brlt_section_->finalize_brlt_sizes();
     }
+
+  if (!again
+      && (parameters->options().user_set_emit_stub_syms()
+	  ? parameters->options().emit_stub_syms()
+	  : (size == 64
+	     || parameters->options().output_is_position_independent()
+	     || parameters->options().emit_relocs())))
+    {
+      for (typename Stub_tables::iterator p = this->stub_tables_.begin();
+	   p != this->stub_tables_.end();
+	   ++p)
+	(*p)->define_stub_syms(symtab);
+
+      if (this->glink_ != NULL)
+	{
+	  int stub_size = this->glink_->pltresolve_size;
+	  Address value = -stub_size;
+	  if (size == 64)
+	    {
+	      value = 8;
+	      stub_size -= 8;
+	    }
+	  this->define_local(symtab, "__glink_PLTresolve",
+			     this->glink_, value, stub_size);
+
+	  if (size != 64)
+	    this->define_local(symtab, "__glink", this->glink_, 0, 0);
+	}
+    }
+
   return again;
 }
 
@@ -3857,7 +3915,8 @@ class Stub_table : public Output_relaxed_input_section
 
   Stub_table(Target_powerpc<size, big_endian>* targ,
 	     Output_section* output_section,
-	     const Output_section::Input_section* owner)
+	     const Output_section::Input_section* owner,
+	     uint32_t id)
     : Output_relaxed_input_section(owner->relobj(), owner->shndx(),
 				   owner->relobj()
 				   ->section_addralign(owner->shndx())),
@@ -3865,7 +3924,7 @@ class Stub_table : public Output_relaxed_input_section
       orig_data_size_(owner->current_data_size()),
       plt_size_(0), last_plt_size_(0),
       branch_size_(0), last_branch_size_(0), min_size_threshold_(0),
-      eh_frame_added_(false), need_save_res_(false)
+      eh_frame_added_(false), need_save_res_(false), uniq_(id)
   {
     this->set_output_section(output_section);
 
@@ -3986,9 +4045,13 @@ class Stub_table : public Output_relaxed_input_section
   plt_size() const
   { return this->plt_size_; }
 
-  void set_min_size_threshold(Address min_size)
+  void
+  set_min_size_threshold(Address min_size)
   { this->min_size_threshold_ = min_size; }
 
+  void
+  define_stub_syms(Symbol_table*);
+
   bool
   size_update()
   {
@@ -4058,6 +4121,10 @@ class Stub_table : public Output_relaxed_input_section
   class Plt_stub_ent_hash;
   typedef Unordered_map<Plt_stub_ent, unsigned int,
 			Plt_stub_ent_hash> Plt_stub_entries;
+  class Branch_stub_ent;
+  class Branch_stub_ent_hash;
+  typedef Unordered_map<Branch_stub_ent, unsigned int,
+			Branch_stub_ent_hash> Branch_stub_entries;
 
   // Alignment of stub section.
   unsigned int
@@ -4126,11 +4193,10 @@ class Stub_table : public Output_relaxed_input_section
 
   // Return long branch stub size.
   unsigned int
-  branch_stub_size(Address to)
+  branch_stub_size(typename Branch_stub_entries::const_iterator p)
   {
-    Address loc
-      = this->stub_address() + this->last_plt_size_ + this->branch_size_;
-    if (to - loc + (1 << 25) < 2 << 25)
+    Address loc = this->stub_address() + this->last_plt_size_ + p->second;
+    if (p->first.dest_ - loc + (1 << 25) < 2 << 25)
       return 4;
     if (size == 64 || !parameters->options().output_is_position_independent())
       return 16;
@@ -4196,6 +4262,7 @@ class Stub_table : public Output_relaxed_input_section
     const Sized_relobj_file<size, big_endian>* object_;
     typename elfcpp::Elf_types<size>::Elf_Addr addend_;
     unsigned int locsym_;
+    unsigned int indx_;
   };
 
   class Plt_stub_ent_hash
@@ -4246,8 +4313,6 @@ class Stub_table : public Output_relaxed_input_section
   // Map sym/object/addend to stub offset.
   Plt_stub_entries plt_call_stubs_;
   // Map destination address to stub offset.
-  typedef Unordered_map<Branch_stub_ent, unsigned int,
-			Branch_stub_ent_hash> Branch_stub_entries;
   Branch_stub_entries long_branch_stubs_;
   // size of input section
   section_size_type orig_data_size_;
@@ -4265,6 +4330,8 @@ class Stub_table : public Output_relaxed_input_section
   // Set if this stub group needs a copy of out-of-line register
   // save/restore functions.
   bool need_save_res_;
+  // Per stub table unique identifier.
+  uint32_t uniq_;
 };
 
 // Add a plt call stub, if we do not already have one for this
@@ -4281,6 +4348,7 @@ Stub_table<size, big_endian>::add_plt_call_entry(
 {
   Plt_stub_ent ent(object, gsym, r_type, addend);
   unsigned int off = this->plt_size_;
+  ent.indx_ = this->plt_call_stubs_.size();
   std::pair<typename Plt_stub_entries::iterator, bool> p
     = this->plt_call_stubs_.insert(std::make_pair(ent, off));
   if (p.second)
@@ -4299,6 +4367,7 @@ Stub_table<size, big_endian>::add_plt_call_entry(
 {
   Plt_stub_ent ent(object, locsym_index, r_type, addend);
   unsigned int off = this->plt_size_;
+  ent.indx_ = this->plt_call_stubs_.size();
   std::pair<typename Plt_stub_entries::iterator, bool> p
     = this->plt_call_stubs_.insert(std::make_pair(ent, off));
   if (p.second)
@@ -4368,13 +4437,15 @@ Stub_table<size, big_endian>::add_long_branch_entry(
 {
   Branch_stub_ent ent(object, to, save_res);
   Address off = this->branch_size_;
-  if (this->long_branch_stubs_.insert(std::make_pair(ent, off)).second)
+  std::pair<typename Branch_stub_entries::iterator, bool> p
+    = this->long_branch_stubs_.insert(std::make_pair(ent, off));
+  if (p.second)
     {
       if (save_res)
 	this->need_save_res_ = true;
       else
 	{
-	  unsigned int stub_size = this->branch_stub_size(to);
+	  unsigned int stub_size = this->branch_stub_size(p.first);
 	  this->branch_size_ = off + stub_size;
 	  if (size == 64 && stub_size != 4)
 	    this->targ_->add_branch_lookup_table(to);
@@ -4555,6 +4626,73 @@ Output_data_glink<size, big_endian>::set_final_data_size()
   this->set_data_size(total);
 }
 
+// Define symbols on stubs, identifying the stub.
+
+template<int size, bool big_endian>
+void
+Stub_table<size, big_endian>::define_stub_syms(Symbol_table* symtab)
+{
+  if (!this->plt_call_stubs_.empty())
+    {
+      // The key for the plt call stub hash table includes addresses,
+      // therefore traversal order depends on those addresses, which
+      // can change between runs if gold is a PIE.  Unfortunately the
+      // output .symtab ordering depends on the order in which symbols
+      // are added to the linker symtab.  We want reproducible output
+      // so must sort the call stub symbols.
+      typedef typename Plt_stub_entries::const_iterator plt_iter;
+      std::vector<plt_iter> sorted;
+      sorted.resize(this->plt_call_stubs_.size());
+
+      for (plt_iter cs = this->plt_call_stubs_.begin();
+	   cs != this->plt_call_stubs_.end();
+	   ++cs)
+	sorted[cs->first.indx_] = cs;
+
+      for (unsigned int i = 0; i < this->plt_call_stubs_.size(); ++i)
+	{
+	  plt_iter cs = sorted[i];
+	  char add[10];
+	  add[0] = 0;
+	  if (cs->first.addend_ != 0)
+	    sprintf(add, "+%x", static_cast<uint32_t>(cs->first.addend_));
+	  char localname[18];
+	  const char *symname;
+	  if (cs->first.sym_ == NULL)
+	    {
+	      const Powerpc_relobj<size, big_endian>* ppcobj = static_cast
+		<const Powerpc_relobj<size, big_endian>*>(cs->first.object_);
+	      sprintf(localname, "%x:%x", ppcobj->uniq(), cs->first.locsym_);
+	      symname = localname;
+	    }
+	  else
+	    symname = cs->first.sym_->name();
+	  char* name = new char[8 + 10 + strlen(symname) + strlen(add) + 1];
+	  sprintf(name, "%08x.plt_call.%s%s", this->uniq_, symname, add);
+	  Address value = this->stub_address() - this->address() + cs->second;
+	  unsigned int stub_size = this->plt_call_size(cs);
+	  this->targ_->define_local(symtab, name, this, value, stub_size);
+	}
+    }
+
+  typedef typename Branch_stub_entries::const_iterator branch_iter;
+  for (branch_iter bs = this->long_branch_stubs_.begin();
+       bs != this->long_branch_stubs_.end();
+       ++bs)
+    {
+      if (bs->first.save_res_)
+	continue;
+
+      char* name = new char[8 + 13 + 16 + 1];
+      sprintf(name, "%08x.long_branch.%llx", this->uniq_,
+	      static_cast<unsigned long long>(bs->first.dest_));
+      Address value = (this->stub_address() - this->address()
+		       + this->plt_size_ + bs->second);
+      unsigned int stub_size = this->branch_stub_size(bs);
+      this->targ_->define_local(symtab, name, this, value, stub_size);
+    }
+}
+
 // Write out plt and long branch stub code.
 
 template<int size, bool big_endian>

commit 1735f7e93574d98b7486203a24482afaca265539
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun Jun 4 00:01:26 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index a48c176..a553e95 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170603
+#define BFD_VERSION_DATE 20170604
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 8b7508dd3093c5380b8532c922476a9a395cd647
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon Jun 5 00:01:43 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index a553e95..ab5fe6e 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170604
+#define BFD_VERSION_DATE 20170605
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit dfa8a3425800c868052808d4237a2c6f80e5b204
Author: Alan Modra <amodra@gmail.com>
Date:   Mon Jun 5 11:02:42 2017 +0930

    PR21529, internal error in linker.c
    
    	PR 21529
    	* linker.c (_bfd_generic_link_output_symbols): Handle BSF_GNU_UNIQUE.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 903c645..50fbe3a 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,8 @@
+2017-06-05  Alan Modra  <amodra@gmail.com>
+
+	PR 21529
+	* linker.c (_bfd_generic_link_output_symbols): Handle BSF_GNU_UNIQUE.
+
 2017-05-01  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>
 
 	PR ld/21404
diff --git a/bfd/linker.c b/bfd/linker.c
index 12c9fb0..c3ec4fe 100644
--- a/bfd/linker.c
+++ b/bfd/linker.c
@@ -2091,7 +2091,7 @@ _bfd_generic_link_output_symbols (bfd *output_bfd,
 	      && bfd_hash_lookup (info->keep_hash, bfd_asymbol_name (sym),
 				  FALSE, FALSE) == NULL))
 	output = FALSE;
-      else if ((sym->flags & (BSF_GLOBAL | BSF_WEAK)) != 0)
+      else if ((sym->flags & (BSF_GLOBAL | BSF_WEAK | BSF_GNU_UNIQUE)) != 0)
 	{
 	  /* If this symbol is marked as occurring now, rather
 	     than at the end, output it now.  This is used for

commit 33e0dd9d23eb93c8d55751677b93654680acca71
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue Jun 6 00:01:18 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index ab5fe6e..0eca185 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170605
+#define BFD_VERSION_DATE 20170606
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit baa9aa3153b506532a2ab780e2a231db96bd0df2
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed Jun 7 00:01:29 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 0eca185..0dba969 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170606
+#define BFD_VERSION_DATE 20170607
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 1898f468867e1f997a0cc10ad61647a3b623c4b7
Author: Casey Smith <clegg89@gmail.com>
Date:   Wed Jun 7 13:52:58 2017 +0100

    Import a fix from upstream that allows the ARM ADR pseudo-instruction to work when generating a SUB instruction.
    
    	2017-05-30  Casey Smith  <clegg89@gmail.com>
    
    	PR ld/21523
    	* elf32-arm.c (elf32_arm_final_link_relocate): Install an absolute
    	value when processing the R_ARM_THM_ALU_PREL_11_0 reloc.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 50fbe3a..5c02f54 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,13 @@
+2017-06-07  Nick Clifton  <nickc@redhat.com>
+
+	Import this fix from upstream:
+
+	2017-05-30  Casey Smith  <clegg89@gmail.com>
+
+	PR ld/21523
+	* elf32-arm.c (elf32_arm_final_link_relocate): Install an absolute
+	value when processing the R_ARM_THM_ALU_PREL_11_0 reloc.
+
 2017-06-05  Alan Modra  <amodra@gmail.com>
 
 	PR 21529
diff --git a/bfd/elf32-arm.c b/bfd/elf32-arm.c
index e04caef..cc8fd15 100644
--- a/bfd/elf32-arm.c
+++ b/bfd/elf32-arm.c
@@ -10505,7 +10505,9 @@ elf32_arm_final_link_relocate (reloc_howto_type *           howto,
 			  + input_section->output_offset
 			  + rel->r_offset);
 
-	value = relocation;
+	/* PR 21523: Use an absolute value.  The user of this reloc will
+	   have already selected an ADD or SUB insn appropriately.  */
+	value = abs (relocation);
 
 	if (value >= 0x1000)
 	  return bfd_reloc_overflow;

commit 2ddebb321648ac61357e8bbd721a0ca586d3194e
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu Jun 8 00:01:37 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 0dba969..f7e67fa 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170607
+#define BFD_VERSION_DATE 20170608
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit cb44d42ce6ef0c7a4eed7e2a3c272ac102166850
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri Jun 9 00:01:27 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index f7e67fa..5348c5c 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170608
+#define BFD_VERSION_DATE 20170609
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 5c0c631f229f4cef66189990e110050dc1318a0c
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat Jun 10 00:01:23 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 5348c5c..c7935a1 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170609
+#define BFD_VERSION_DATE 20170610
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 9fb3446aa355415660078a4e0b9cbacb1d994fed
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun Jun 11 00:01:24 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index c7935a1..df2a645 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170610
+#define BFD_VERSION_DATE 20170611
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit b0e406c78792c984feb591a863de3c562adb8f88
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon Jun 12 00:01:21 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index df2a645..aa256da 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170611
+#define BFD_VERSION_DATE 20170612
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit b62ca49ade19e2dd92bc4efbb0ff43da7a5fd85e
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue Jun 13 00:01:30 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index aa256da..c3df723 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170612
+#define BFD_VERSION_DATE 20170613
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit fcc15c89c356c73c94581dd524d0b9ca596014b1
Author: James Clarke <jrtc27@jrtc27.com>
Date:   Tue Jun 13 15:55:02 2017 +0100

    Fix handling of relocations against common symbols on AArch64.
    
    	PR ld/19579
    	* elfnn-aarch64.c (elfNN_aarch64_finish_dynamic_symbol): Check
    	ELF_COMMON_DEF_P for common symbols.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 5c02f54..7d74169 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,13 @@
+2017-06-13  Nick Clifton  <nickc@redhat.com>
+
+	Import this fix from the mainline sources:
+
+	2017-06-06  James Clarke  <jrtc27@jrtc27.com>
+
+	PR ld/19579
+	* elfnn-aarch64.c (elfNN_aarch64_finish_dynamic_symbol): Check
+	ELF_COMMON_DEF_P for common symbols.
+
 2017-06-07  Nick Clifton  <nickc@redhat.com>
 
 	Import this fix from upstream:
diff --git a/bfd/elfnn-aarch64.c b/bfd/elfnn-aarch64.c
index d632b3c..a92c0f3 100644
--- a/bfd/elfnn-aarch64.c
+++ b/bfd/elfnn-aarch64.c
@@ -8903,7 +8903,7 @@ elfNN_aarch64_finish_dynamic_symbol (bfd *output_bfd,
 	}
       else if (bfd_link_pic (info) && SYMBOL_REFERENCES_LOCAL (info, h))
 	{
-	  if (!h->def_regular)
+	  if (!(h->def_regular || ELF_COMMON_DEF_P (h)))
 	    return FALSE;
 
 	  BFD_ASSERT ((h->got.offset & 1) != 0);

commit d526b35dd2b860696935e2d922dec2d39a370386
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed Jun 14 00:01:22 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index c3df723..0801fd6 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170613
+#define BFD_VERSION_DATE 20170614
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit fbb27afdd16f68a85676477303b40ff90b8e6a6a
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu Jun 15 00:01:52 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 0801fd6..fad9e9a 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170614
+#define BFD_VERSION_DATE 20170615
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 6e02d4424b1e7d676b006a947692c5446ccf1cc2
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri Jun 16 00:01:48 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index fad9e9a..8521828 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170615
+#define BFD_VERSION_DATE 20170616
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 091ea8d2bf9de4fbd21859cf53c5a36e30833dd5
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat Jun 17 00:01:32 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 8521828..ebafe29 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170616
+#define BFD_VERSION_DATE 20170617
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 663f9d133d70467bf82422153b2c3d5ed529b416
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun Jun 18 00:01:26 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index ebafe29..e584dfe 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170617
+#define BFD_VERSION_DATE 20170618
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 335ce44a78f6f8873dfbf3a34b49518404988f3a
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon Jun 19 00:01:25 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index e584dfe..8480365 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170618
+#define BFD_VERSION_DATE 20170619
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit ab75d0a72d23ed076ba67df47b0d3832ed784ae3
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue Jun 20 00:01:25 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 8480365..52bc503 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170619
+#define BFD_VERSION_DATE 20170620
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 467f950b4bb12bd96e4e210389f550575340a288
Author: Nick Clifton <nickc@redhat.com>
Date:   Wed Mar 15 09:19:42 2017 +0000

    Fix building riscv targets with gcc v6.3.1
    
    	* config/tc-riscv.c (riscv_pre_output_hook): Fix compile time
    	warning about discarding a const qualifier.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index d6ab8a1..a05355a 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,10 @@
+2017-06-05  Alan Modra  <amodra@gmail.com>
+
+	Apply from master
+	2017-03-15  Nick Clifton  <nickc@redhat.com>
+	* config/tc-riscv.c (riscv_pre_output_hook): Fix compile time
+	warning about discarding a const qualifier.
+
 2017-04-03  Palmer Dabbelt  <palmer@dabbelt.com>
 
 	* config/tc-riscv.c (riscv_clear_subsets): Cast argument to free to
diff --git a/gas/config/tc-riscv.c b/gas/config/tc-riscv.c
index 88457c6..fb9a3ed 100644
--- a/gas/config/tc-riscv.c
+++ b/gas/config/tc-riscv.c
@@ -2090,7 +2090,7 @@ riscv_pre_output_hook (void)
   for (s = stdoutput->sections; s; s = s->next)
     for (frch = seg_info (s)->frchainP; frch; frch = frch->frch_next)
       {
-	const fragS *frag;
+	fragS *frag;
 
 	for (frag = frch->frch_root; frag; frag = frag->fr_next)
 	  {

commit a3e00a8704fee31d815aeb5983a881eed490969e
Author: James Clarke <jrtc27@jrtc27.com>
Date:   Tue Jun 20 18:01:52 2017 +0930

    [GOLD] Avoid duplicate PLT stub symbols on ppc32
    
    If two objects are compiled with -fPIC or -fPIE and call the same
    function, two different PLT entries are created, one for each object,
    but the same stub symbol name is used for both.
    
    	* powerpc.cc (Stub_table::define_stub_syms): Always include object's
    	uniq_ value.

diff --git a/gold/ChangeLog b/gold/ChangeLog
index f6a0836..98adcbb 100644
--- a/gold/ChangeLog
+++ b/gold/ChangeLog
@@ -1,3 +1,8 @@
+2017-06-20  James Clarke  <jrtc27@jrtc27.com>
+
+	* powerpc.cc (Stub_table::define_stub_syms): Always include object's
+	uniq_ value.
+
 2017-06-03  Alan Modra  <amodra@gmail.com>
 
 	Apply from master
diff --git a/gold/powerpc.cc b/gold/powerpc.cc
index 1f2bc9e..a448efb 100644
--- a/gold/powerpc.cc
+++ b/gold/powerpc.cc
@@ -4656,19 +4656,25 @@ Stub_table<size, big_endian>::define_stub_syms(Symbol_table* symtab)
 	  add[0] = 0;
 	  if (cs->first.addend_ != 0)
 	    sprintf(add, "+%x", static_cast<uint32_t>(cs->first.addend_));
-	  char localname[18];
-	  const char *symname;
-	  if (cs->first.sym_ == NULL)
+	  char obj[10];
+	  obj[0] = 0;
+	  if (cs->first.object_)
 	    {
 	      const Powerpc_relobj<size, big_endian>* ppcobj = static_cast
 		<const Powerpc_relobj<size, big_endian>*>(cs->first.object_);
-	      sprintf(localname, "%x:%x", ppcobj->uniq(), cs->first.locsym_);
+	      sprintf(obj, "%x:", ppcobj->uniq());
+	    }
+	  char localname[9];
+	  const char *symname;
+	  if (cs->first.sym_ == NULL)
+	    {
+	      sprintf(localname, "%x", cs->first.locsym_);
 	      symname = localname;
 	    }
 	  else
 	    symname = cs->first.sym_->name();
-	  char* name = new char[8 + 10 + strlen(symname) + strlen(add) + 1];
-	  sprintf(name, "%08x.plt_call.%s%s", this->uniq_, symname, add);
+	  char* name = new char[8 + 10 + strlen(obj) + strlen(symname) + strlen(add) + 1];
+	  sprintf(name, "%08x.plt_call.%s%s%s", this->uniq_, obj, symname, add);
 	  Address value = this->stub_address() - this->address() + cs->second;
 	  unsigned int stub_size = this->plt_call_size(cs);
 	  this->targ_->define_local(symtab, name, this, value, stub_size);

commit 01106f569a3acb935447a2a7b3ee7f6866c7ea6c
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Tue Jun 20 11:21:49 2017 +0100

    Make import libraries relocatable objects
    
    For ELF targets --out-implib currently generates an executable file
    (e_type is ET_EXEC) despite the file being expected to be linked against
    some other object file to make an executable later. It seems therefore
    more sensible to make the import library a relocatable object file
    (e_type set to ET_REL).
    
    Incidentally, as dicted by requirement 8 of
    "ARM v8-M Security Extensions: Requirements on Development Tools"
    (document ARM-ECM-0359818) version 1.0, import libraries generated when
    using --cmse-implib *must* be relocatable object file so this commit
    also adds an assert there in case the type of ELF import library is
    changed again in the future.
    
    2017-06-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
    	Backport from mainline
    	2017-05-08  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
    bfd/
    	* elflink.c (elf_output_implib): Remove executable flag from import
    	library bfd.
    	* elf32-arm.c (elf32_arm_filter_implib_symbols): Assert that the import
    	library is a relocatable object file.
    
    gas/
    	* testsuite/ld-arm/arm-elf.exp
    	(Secure gateway import library generation): Check e_type field
    	of import library and executable produced.
    	* testsuite/ld-arm/cmse-implib.type: Expectations for e_type field.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 7d74169..cae30e6 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,13 @@
+2017-06-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	Backport from mainline
+	2017-05-08  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* elflink.c (elf_output_implib): Remove executable flag from import
+	library bfd.
+	* elf32-arm.c (elf32_arm_filter_implib_symbols): Assert that the import
+	library is a relocatable object file.
+
 2017-06-13  Nick Clifton  <nickc@redhat.com>
 
 	Import this fix from the mainline sources:
diff --git a/bfd/elf32-arm.c b/bfd/elf32-arm.c
index cc8fd15..90286a8 100644
--- a/bfd/elf32-arm.c
+++ b/bfd/elf32-arm.c
@@ -17500,6 +17500,10 @@ elf32_arm_filter_implib_symbols (bfd *abfd ATTRIBUTE_UNUSED,
 {
   struct elf32_arm_link_hash_table *globals = elf32_arm_hash_table (info);
 
+  /* Requirement 8 of "ARM v8-M Security Extensions: Requirements on
+     Development Tools" (ARM-ECM-0359818) mandates Secure Gateway import
+     library to be a relocatable object file.  */
+  BFD_ASSERT (!(bfd_get_file_flags (info->out_implib_bfd) & EXEC_P));
   if (globals->cmse_implib)
     return elf32_arm_filter_cmse_symbols (abfd, info, syms, symcount);
   else
diff --git a/bfd/elflink.c b/bfd/elflink.c
index cd03a13..f82bd82 100644
--- a/bfd/elflink.c
+++ b/bfd/elflink.c
@@ -11146,10 +11146,11 @@ elf_output_implib (bfd *abfd, struct bfd_link_info *info)
   if (!bfd_set_format (implib_bfd, bfd_object))
     return FALSE;
 
+  /* Use flag from executable but make it a relocatable object.  */
   flags = bfd_get_file_flags (abfd);
   flags &= ~HAS_RELOC;
   if (!bfd_set_start_address (implib_bfd, 0)
-      || !bfd_set_file_flags (implib_bfd, flags))
+      || !bfd_set_file_flags (implib_bfd, flags & ~EXEC_P))
     return FALSE;
 
   /* Copy architecture of output file to import library file.  */
diff --git a/gas/ChangeLog b/gas/ChangeLog
index a05355a..e752375 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,13 @@
+2017-06-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	Backport from mainline
+	2017-05-08  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* testsuite/ld-arm/arm-elf.exp
+	(Secure gateway import library generation): Check e_type field
+	of import library and executable produced.
+	* testsuite/ld-arm/cmse-implib.type: Expectations for e_type field.
+
 2017-06-05  Alan Modra  <amodra@gmail.com>
 
 	Apply from master
diff --git a/ld/testsuite/ld-arm/arm-elf.exp b/ld/testsuite/ld-arm/arm-elf.exp
index 1a4d262..2e19332 100644
--- a/ld/testsuite/ld-arm/arm-elf.exp
+++ b/ld/testsuite/ld-arm/arm-elf.exp
@@ -685,7 +685,8 @@ set armeabitests_nonacl {
      "--section-start .gnu.sgstubs=0x20000 --out-implib=tmpdir/cmse-implib.lib --cmse-implib" ""
      "-march=armv8-m.base -mthumb --defsym VER=1"
      {cmse-implib.s}
-     {{readelf {-s tmpdir/cmse-implib.lib} cmse-implib.rd}}
+     {{readelf {-s tmpdir/cmse-implib.lib} cmse-implib.rd}
+      {readelf {-h tmpdir/cmse-implib.lib} cmse-implib.type}}
      "cmse-implib"}
     {"Input secure gateway import library"
      "--section-start .gnu.sgstubs=0x20000 --out-implib=tmpdir/cmse-new-implib.lib --in-implib=tmpdir/cmse-implib.lib --cmse-implib" ""
diff --git a/ld/testsuite/ld-arm/cmse-implib.type b/ld/testsuite/ld-arm/cmse-implib.type
new file mode 100644
index 0000000..7bb3bcc
--- /dev/null
+++ b/ld/testsuite/ld-arm/cmse-implib.type
@@ -0,0 +1,9 @@
+#...
+File: tmpdir/cmse-implib.lib
+#...
+[[:space:]]+Type:[[:space:]]+REL \(Relocatable file\)
+#...
+File: tmpdir/cmse-implib
+#...
+[[:space:]]+Type:[[:space:]]+EXEC \(Executable file\)
+#...

commit c0a558756bcf42dc2554aa778b84bf6e13232819
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Tue Jun 20 11:28:15 2017 +0100

    [ARM] Fix expansion of ldr pseudo instruction
    
    The LDR rX, =cst pseudo-instruction suffers from two issues for loading
    integer constants in Thumb mode:
    
    - movs is used if the constant and register can be encoded using that
      instruction which leads to unexpected behavior due to its flag-setting
      behavior
    - mov.w, movw and mvn are used for r13 (sp) and r15 (pc) but these
      encoding are marked as UNPREDICTABLE
    
    This patch fixes those issues and update testing accordingly.
    
    2017-06-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
    	Backport from mainline
    	2017-04-24  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
    gas/
    	* config/tc-arm.c (move_or_literal_pool): Remove code generating MOVS.
    	Forbid MOV.W and MOVW if destination is SP or PC.
    	* testsuite/gas/arm/thumb2_ldr_immediate_highregs_armv6t2.s: Explain
    	expectation of LDR not generating a MOVS for low registers and small
    	constants.  Add tests of MOVW generation.
    	* testsuite/gas/arm/thumb2_ldr_immediate_highregs_armv6t2.d: Update
    	expected disassembly.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index e752375..93f7c63 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,6 +1,19 @@
 2017-06-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>
 
 	Backport from mainline
+	2017-04-24  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* config/tc-arm.c (move_or_literal_pool): Remove code generating MOVS.
+	Forbid MOV.W and MOVW if destination is SP or PC.
+	* testsuite/gas/arm/thumb2_ldr_immediate_highregs_armv6t2.s: Explain
+	expectation of LDR not generating a MOVS for low registers and small
+	constants.  Add tests of MOVW generation.
+	* testsuite/gas/arm/thumb2_ldr_immediate_highregs_armv6t2.d: Update
+	expected disassembly.
+
+2017-06-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	Backport from mainline
 	2017-05-08  Thomas Preud'homme  <thomas.preudhomme@arm.com>
 
 	* testsuite/ld-arm/arm-elf.exp
diff --git a/gas/config/tc-arm.c b/gas/config/tc-arm.c
index 60bda51..0820b96 100644
--- a/gas/config/tc-arm.c
+++ b/gas/config/tc-arm.c
@@ -7955,17 +7955,13 @@ move_or_literal_pool (int i, enum lit_type t, bfd_boolean mode_3)
 	{
 	  if (thumb_p)
 	    {
-	      /* This can be encoded only for a low register.  */
-	      if ((v & ~0xFF) == 0 && (inst.operands[i].reg < 8))
-		{
-		  /* This can be done with a mov(1) instruction.  */
-		  inst.instruction = T_OPCODE_MOV_I8 | (inst.operands[i].reg << 8);
-		  inst.instruction |= v;
-		  return TRUE;
-		}
+	      /* LDR should not use lead in a flag-setting instruction being
+		 chosen so we do not check whether movs can be used.  */
 
-	      if (ARM_CPU_HAS_FEATURE (cpu_variant, arm_ext_v6t2)
+	      if ((ARM_CPU_HAS_FEATURE (cpu_variant, arm_ext_v6t2)
 		  || ARM_CPU_HAS_FEATURE (cpu_variant, arm_ext_v6t2_v8m))
+		  && inst.operands[i].reg != 13
+		  && inst.operands[i].reg != 15)
 		{
 		  /* Check if on thumb2 it can be done with a mov.w, mvn or
 		     movw instruction.  */
diff --git a/gas/testsuite/gas/arm/thumb2_ldr_immediate_highregs_armv6t2.d b/gas/testsuite/gas/arm/thumb2_ldr_immediate_highregs_armv6t2.d
index 55b5f17..7afc135 100644
--- a/gas/testsuite/gas/arm/thumb2_ldr_immediate_highregs_armv6t2.d
+++ b/gas/testsuite/gas/arm/thumb2_ldr_immediate_highregs_armv6t2.d
@@ -6,19 +6,23 @@
 .*: +file format .*arm.*
 
 Disassembly of section \.text:
-0[0-9a-f]+ <[^>]+> 2000[[:space:]]+movs[[:space:]]+r0, #0.*
-0[0-9a-f]+ <[^>]+> 2108[[:space:]]+movs[[:space:]]+r1, #8.*
-0[0-9a-f]+ <[^>]+> 2251[[:space:]]+movs[[:space:]]+r2, #81.*
-0[0-9a-f]+ <[^>]+> 231f[[:space:]]+movs[[:space:]]+r3, #31.*
-0[0-9a-f]+ <[^>]+> 242f[[:space:]]+movs[[:space:]]+r4, #47.*
-0[0-9a-f]+ <[^>]+> 253f[[:space:]]+movs[[:space:]]+r5, #63.*
-0[0-9a-f]+ <[^>]+> 2680[[:space:]]+movs[[:space:]]+r6, #128.*
-0[0-9a-f]+ <[^>]+> 27ff[[:space:]]+movs[[:space:]]+r7, #255.*
+0[0-9a-f]+ <[^>]+> f04f 0000[[:space:]]+mov\.w[[:space:]]+r0, #0.*
+0[0-9a-f]+ <[^>]+> f04f 0108[[:space:]]+mov\.w[[:space:]]+r1, #8.*
+0[0-9a-f]+ <[^>]+> f04f 0251[[:space:]]+mov\.w[[:space:]]+r2, #81.*
+0[0-9a-f]+ <[^>]+> f04f 031f[[:space:]]+mov\.w[[:space:]]+r3, #31.*
+0[0-9a-f]+ <[^>]+> f04f 042f[[:space:]]+mov\.w[[:space:]]+r4, #47.*
+0[0-9a-f]+ <[^>]+> f04f 053f[[:space:]]+mov\.w[[:space:]]+r5, #63.*
+0[0-9a-f]+ <[^>]+> f04f 0680[[:space:]]+mov\.w[[:space:]]+r6, #128.*
+0[0-9a-f]+ <[^>]+> f04f 07ff[[:space:]]+mov\.w[[:space:]]+r7, #255.*
 0[0-9a-f]+ <[^>]+> f04f 0800[[:space:]]+mov\.w[[:space:]]+r8, #0.*
 0[0-9a-f]+ <[^>]+> f04f 0908[[:space:]]+mov\.w[[:space:]]+r9, #8.*
 0[0-9a-f]+ <[^>]+> f04f 0a51[[:space:]]+mov\.w[[:space:]]+sl, #81.*
 0[0-9a-f]+ <[^>]+> f04f 0b1f[[:space:]]+mov\.w[[:space:]]+fp, #31.*
 0[0-9a-f]+ <[^>]+> f04f 0c2f[[:space:]]+mov\.w[[:space:]]+ip, #47.*
-0[0-9a-f]+ <[^>]+> f04f 0d3f[[:space:]]+mov\.w[[:space:]]+sp, #63.*
 0[0-9a-f]+ <[^>]+> f04f 0e80[[:space:]]+mov\.w[[:space:]]+lr, #128.*
-0[0-9a-f]+ <[^>]+> f04f 0fff[[:space:]]+mov\.w[[:space:]]+pc, #255.*
+0[0-9a-f]+ <[^>]+> f64f 78ff[[:space:]]+movw[[:space:]]+r8, #65535.*
+0[0-9a-f]+ <[^>]+> f24f 09f0[[:space:]]+movw[[:space:]]+r9, #61680.*
+0[0-9a-f]+ <[^>]+> f8df d004[[:space:]]+ldr\.w[[:space:]]+sp, \[pc, #4\].*
+0[0-9a-f]+ <[^>]+> f8df f004[[:space:]]+ldr\.w[[:space:]]+pc, \[pc, #4\].*
+0[0-9a-f]+ <[^>]+> 0000003f[[:space:]]+.word[[:space:]]+0x0000003f.*
+0[0-9a-f]+ <[^>]+> 000000ff[[:space:]]+.word[[:space:]]+0x000000ff.*
diff --git a/gas/testsuite/gas/arm/thumb2_ldr_immediate_highregs_armv6t2.s b/gas/testsuite/gas/arm/thumb2_ldr_immediate_highregs_armv6t2.s
index d225410..b473857 100644
--- a/gas/testsuite/gas/arm/thumb2_ldr_immediate_highregs_armv6t2.s
+++ b/gas/testsuite/gas/arm/thumb2_ldr_immediate_highregs_armv6t2.s
@@ -2,8 +2,8 @@
 	.syntax unified
 	.thumb_func
 thumb2_ldr:
-	# These can be encoded into movs since constant is small
-	# And register can be encoded in 3 bits
+	# These must be encoded into mov.w despite constant and register being
+	# small enough as ldr should not generate a flag-setting instruction.
 	ldr r0,=0x00
 	ldr r1,=0x08
 	ldr r2,=0x51
@@ -12,13 +12,19 @@ thumb2_ldr:
 	ldr r5,=0x3F
 	ldr r6,=0x80
 	ldr r7,=0xFF
-	# These shall be encoded into mov.w
-	# Since register cannot be encoded in 3 bits
+	# These shall be encoded into mov.w since register cannot be encoded in
+	# 3 bits
 	ldr r8,=0x00
 	ldr r9,=0x08
 	ldr r10,=0x51
 	ldr r11,=0x1F
 	ldr r12,=0x2F
-	ldr r13,=0x3F
 	ldr r14,=0x80
+	# These shall be encoded into movw since immediate cannot be encoded
+	# with mov.w
+	ldr r8,=0xFFFF
+	ldr r9,=0xF0F0
+	# These should be encoded as ldr since mov immediate is unpredictable
+	# for sp and pc
+	ldr r13,=0x3F
 	ldr r15,=0xFF

commit 3406c79335ef6fdffe46bae736afb4746f53866d
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed Jun 21 00:01:27 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 52bc503..a65567d 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170620
+#define BFD_VERSION_DATE 20170621
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit bf4b4662b33e136b27b7e9020f6b45de85d90494
Author: Eric Christopher <echristo@gmail.com>
Date:   Mon May 15 15:59:52 2017 -0700

    2017-06-21  Eric Christopher  <echristo@gmail.com>
    
            Apply from master
            2017-05-15  Eric Christopher <echristo@gmail.com>
    
            * layout.cc (Layout::segment_precedes): Add a case for testing
            pointer equality when determining which segment precedes
            another.

diff --git a/gold/ChangeLog b/gold/ChangeLog
index 98adcbb..4323d78 100644
--- a/gold/ChangeLog
+++ b/gold/ChangeLog
@@ -1,3 +1,12 @@
+2017-06-21  Eric Christopher  <echristo@gmail.com>
+
+	Apply from master
+	2017-05-15  Eric Christopher <echristo@gmail.com>
+
+        * layout.cc (Layout::segment_precedes): Add a case for testing
+        pointer equality when determining which segment precedes
+        another.
+
 2017-06-20  James Clarke  <jrtc27@jrtc27.com>
 
 	* powerpc.cc (Stub_table::define_stub_syms): Always include object's
diff --git a/gold/layout.cc b/gold/layout.cc
index 07a3590..bb13d71 100644
--- a/gold/layout.cc
+++ b/gold/layout.cc
@@ -3300,6 +3300,11 @@ bool
 Layout::segment_precedes(const Output_segment* seg1,
 			 const Output_segment* seg2)
 {
+  // In order to produce a stable ordering if we're called with the same pointer
+  // return false.
+  if (seg1 == seg2)
+    return false;
+
   elfcpp::Elf_Word type1 = seg1->type();
   elfcpp::Elf_Word type2 = seg2->type();
 

commit af417045260d4eee267e2252ceff7b012f5157b8
Author: Eric Christopher <echristo@gmail.com>
Date:   Wed Jun 7 17:49:35 2017 -0700

    2017-06-21  Eric Christopher  <echristo@gmail.com>
    
            Apply from master
           	2017-06-07  Eric Christopher  <echristo@gmail.com>
    
            * aarch64.cc (maybe_apply_stub): Add debug logging for looking
            up stubs to undefined symbols and early return rather than
            fail to look them up.
            (scan_reloc_for_stub): Add debug logging for no stub creation
            for undefined symbols.

diff --git a/gold/ChangeLog b/gold/ChangeLog
index 4323d78..ba8223c 100644
--- a/gold/ChangeLog
+++ b/gold/ChangeLog
@@ -1,6 +1,17 @@
 2017-06-21  Eric Christopher  <echristo@gmail.com>
 
 	Apply from master
+        2017-06-07  Eric Christopher  <echristo@gmail.com>
+
+	* aarch64.cc (maybe_apply_stub): Add debug logging for looking
+	up stubs to undefined symbols and early return rather than
+	fail to look them up.
+	(scan_reloc_for_stub): Add debug logging for no stub creation
+	for undefined symbols.
+
+2017-06-21  Eric Christopher  <echristo@gmail.com>
+
+	Apply from master
 	2017-05-15  Eric Christopher <echristo@gmail.com>
 
         * layout.cc (Layout::segment_precedes): Add a case for testing
diff --git a/gold/aarch64.cc b/gold/aarch64.cc
index b207dcd..52339bb 100644
--- a/gold/aarch64.cc
+++ b/gold/aarch64.cc
@@ -3739,8 +3739,13 @@ Target_aarch64<size, big_endian>::scan_reloc_for_stub(
 	  psymval = &symval;
 	}
       else if (gsym->is_undefined())
-	// There is no need to generate a stub symbol is undefined.
-	return;
+	{
+	  // There is no need to generate a stub symbol is undefined.
+          gold_debug(DEBUG_TARGET,
+                     "stub: not creating a stub for undefined symbol %s in file %s",
+                     gsym->name(), aarch64_relobj->name().c_str());
+          return;
+	}
     }
 
   // Get the symbol value.
@@ -5398,6 +5403,15 @@ maybe_apply_stub(unsigned int r_type,
 
   const The_aarch64_relobj* aarch64_relobj =
       static_cast<const The_aarch64_relobj*>(object);
+  // We don't create stubs for undefined symbols so don't look for one.
+  if (gsym && gsym->is_undefined())
+    {
+      gold_debug(DEBUG_TARGET,
+		 "stub: looking for a stub for undefined symbol %s in file %s",
+		 gsym->name(), aarch64_relobj->name().c_str());
+      return false;
+    }
+
   The_stub_table* stub_table = aarch64_relobj->stub_table(relinfo->data_shndx);
   gold_assert(stub_table != NULL);
 

commit 785bf16bde29835cbe22c845bb3df5d94151125e
Author: Eric Christopher <echristo@gmail.com>
Date:   Thu Jun 15 18:46:17 2017 -0700

    2017-06-21  Eric Christopher  <echristo@gmail.com>
    
    	Apply from master
           	2017-06-15  Eric Christopher  <echristo@gmail.com>
    
            * aarch64.cc: Fix a few typos and grammar-os.

diff --git a/gold/ChangeLog b/gold/ChangeLog
index ba8223c..3a2b3f3 100644
--- a/gold/ChangeLog
+++ b/gold/ChangeLog
@@ -1,6 +1,13 @@
 2017-06-21  Eric Christopher  <echristo@gmail.com>
 
 	Apply from master
+        2017-06-15  Eric Christopher  <echristo@gmail.com>
+
+	* aarch64.cc: Fix a few typos and grammar-os.
+
+2017-06-21  Eric Christopher  <echristo@gmail.com>
+
+	Apply from master
         2017-06-07  Eric Christopher  <echristo@gmail.com>
 
 	* aarch64.cc (maybe_apply_stub): Add debug logging for looking
diff --git a/gold/aarch64.cc b/gold/aarch64.cc
index 52339bb..9d4ea50 100644
--- a/gold/aarch64.cc
+++ b/gold/aarch64.cc
@@ -920,7 +920,7 @@ private:
 
 // Erratum stub class. An erratum stub differs from a reloc stub in that for
 // each erratum occurrence, we generate an erratum stub. We never share erratum
-// stubs, whereas for reloc stubs, different branches insns share a single reloc
+// stubs, whereas for reloc stubs, different branch insns share a single reloc
 // stub as long as the branch targets are the same. (More to the point, reloc
 // stubs can be shared because they're used to reach a specific target, whereas
 // erratum stubs branch back to the original control flow.)
@@ -3740,7 +3740,8 @@ Target_aarch64<size, big_endian>::scan_reloc_for_stub(
 	}
       else if (gsym->is_undefined())
 	{
-	  // There is no need to generate a stub symbol is undefined.
+          // There is no need to generate a stub symbol if the original symbol
+          // is undefined.
           gold_debug(DEBUG_TARGET,
                      "stub: not creating a stub for undefined symbol %s in file %s",
                      gsym->name(), aarch64_relobj->name().c_str());
@@ -7702,8 +7703,8 @@ Target_aarch64<size, big_endian>::Relocate::tls_ld_to_le(
     {
       // Ideally we should give up gd_to_le relaxation and do gd access.
       // However the gd_to_le relaxation decision has been made early
-      // in the scan stage, where we did not allocate any GOT entry for
-      // this symbol. Therefore we have to exit and report error now.
+      // in the scan stage, where we did not allocate a GOT entry for
+      // this symbol. Therefore we have to exit and report an error now.
       gold_error(_("unexpected reloc insn sequence while relaxing "
 		   "tls gd to le for reloc %u."), r_type);
       return aarch64_reloc_funcs::STATUS_BAD_RELOC;

commit b12fcc6e5ac25c21e01429455fe44b042123b5e5
Author: Eric Christopher <echristo@gmail.com>
Date:   Tue Jun 20 16:18:58 2017 -0700

    2017-06-21  Eric Christopher  <echristo@gmail.com>
    
            Apply from master
           	2017-06-20  Eric Christopher  <echristo@gmail.com>
    
            * aarch64.cc (scan_reloc_for_stub): Use plt_address_for_global to
            calculate the symbol value.
            (scan_reloc_section_for_stubs): Allow stubs to be created for
            section symbols.
            (maybe_apply_stub): Handle creating stubs for weak symbols to
            match the code in scan_reloc_for_stub.

diff --git a/gold/ChangeLog b/gold/ChangeLog
index 3a2b3f3..4c65d4d 100644
--- a/gold/ChangeLog
+++ b/gold/ChangeLog
@@ -1,6 +1,18 @@
 2017-06-21  Eric Christopher  <echristo@gmail.com>
 
 	Apply from master
+        2017-06-20  Eric Christopher  <echristo@gmail.com>
+
+	* aarch64.cc (scan_reloc_for_stub): Use plt_address_for_global to
+	calculate the symbol value.
+	(scan_reloc_section_for_stubs): Allow stubs to be created for
+	section symbols.
+	(maybe_apply_stub): Handle creating stubs for weak symbols to
+	match the code in scan_reloc_for_stub.
+
+2017-06-21  Eric Christopher  <echristo@gmail.com>
+
+	Apply from master
         2017-06-15  Eric Christopher  <echristo@gmail.com>
 
 	* aarch64.cc: Fix a few typos and grammar-os.
diff --git a/gold/aarch64.cc b/gold/aarch64.cc
index 9d4ea50..9d8815a 100644
--- a/gold/aarch64.cc
+++ b/gold/aarch64.cc
@@ -3734,8 +3734,7 @@ Target_aarch64<size, big_endian>::scan_reloc_for_stub(
       if (gsym->use_plt_offset(arp->reference_flags()))
 	{
 	  // This uses a PLT, change the symbol value.
-	  symval.set_output_value(this->plt_section()->address()
-				  + gsym->plt_offset());
+	  symval.set_output_value(this->plt_address_for_global(gsym));
 	  psymval = &symval;
 	}
       else if (gsym->is_undefined())
@@ -3968,11 +3967,6 @@ Target_aarch64<size, big_endian>::scan_reloc_section_for_stubs(
 	  psymval = &symval2;
 	}
 
-      // If symbol is a section symbol, we don't know the actual type of
-      // destination.  Give up.
-      if (psymval->is_section_symbol())
-	continue;
-
       this->scan_reloc_for_stub(relinfo, r_type, sym, r_sym, psymval,
 				addend, view_address + offset);
     }  // End of iterating relocs in a section
@@ -5404,8 +5398,14 @@ maybe_apply_stub(unsigned int r_type,
 
   const The_aarch64_relobj* aarch64_relobj =
       static_cast<const The_aarch64_relobj*>(object);
-  // We don't create stubs for undefined symbols so don't look for one.
-  if (gsym && gsym->is_undefined())
+  const AArch64_reloc_property* arp =
+    aarch64_reloc_property_table->get_reloc_property(r_type);
+  gold_assert(arp != NULL);
+
+  // We don't create stubs for undefined symbols, but do for weak.
+  if (gsym
+      && !gsym->use_plt_offset(arp->reference_flags())
+      && gsym->is_undefined())
     {
       gold_debug(DEBUG_TARGET,
 		 "stub: looking for a stub for undefined symbol %s in file %s",
@@ -5424,9 +5424,6 @@ maybe_apply_stub(unsigned int r_type,
   Address new_branch_target = stub_table->address() + stub->offset();
   typename elfcpp::Swap<size, big_endian>::Valtype branch_offset =
       new_branch_target - address;
-  const AArch64_reloc_property* arp =
-      aarch64_reloc_property_table->get_reloc_property(r_type);
-  gold_assert(arp != NULL);
   typename This::Status status = This::template
       rela_general<32>(view, branch_offset, 0, arp);
   if (status != This::STATUS_OKAY)

commit 3ea5aedfeb6938921c65201ec1488020445b7aea
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu Jun 22 00:02:04 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index a65567d..3d837a1 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170621
+#define BFD_VERSION_DATE 20170622
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 8e92292ba6f0a7b19abd08c83d25e2a6aa03fcf5
Author: Eric Christopher <echristo@gmail.com>
Date:   Thu Jun 22 11:06:40 2017 -0700

    2017-06-22  Eric Christopher  <echristo@gmail.com>
    
            Backport from mainline
            2017-06-22 Eric	Christopher <echristo@gmail.com>
    
            * elf32-arm.c (elf32_arm_final_link_relocate): Use labs rather than
            abs to fix a truncation warning.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index cae30e6..085e9c4 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,11 @@
+2017-06-22  Eric Christopher  <echristo@gmail.com>
+
+	Backport from mainline
+	2017-06-22 Eric Christopher <echristo@gmail.com>
+
+        * elf32-arm.c (elf32_arm_final_link_relocate): Use labs rather than
+        abs to fix a truncation warning.
+
 2017-06-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>
 
 	Backport from mainline
diff --git a/bfd/elf32-arm.c b/bfd/elf32-arm.c
index 90286a8..9f956d3 100644
--- a/bfd/elf32-arm.c
+++ b/bfd/elf32-arm.c
@@ -10507,7 +10507,7 @@ elf32_arm_final_link_relocate (reloc_howto_type *           howto,
 
 	/* PR 21523: Use an absolute value.  The user of this reloc will
 	   have already selected an ADD or SUB insn appropriately.  */
-	value = abs (relocation);
+	value = labs (relocation);
 
 	if (value >= 0x1000)
 	  return bfd_reloc_overflow;

commit 906b1423b3ed1b0b5b71a9f42cebd377fc6d5e72
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri Jun 23 00:01:27 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 3d837a1..9edc53a 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170622
+#define BFD_VERSION_DATE 20170623
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit a05a5b3df8ea0738ab0725f1cfaaa164aa2042b8
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat Jun 24 00:01:35 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 9edc53a..05deced 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170623
+#define BFD_VERSION_DATE 20170624
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit d4e45942e74aee985ed90451b6296864083d8659
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun Jun 25 00:01:23 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 05deced..81200e5 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170624
+#define BFD_VERSION_DATE 20170625
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 28cc7c0f83193abd45cac70ffce04040552fd28e
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon Jun 26 00:01:32 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 81200e5..30db890 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170625
+#define BFD_VERSION_DATE 20170626
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 7ea1464297eadebe62aae92ad9bebb33f92c2454
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue Jun 27 00:01:55 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 30db890..043408f 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170626
+#define BFD_VERSION_DATE 20170627
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit c7866368a0c92d8ab681f4ca63c90cff74860e5b
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed Jun 28 00:01:34 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 043408f..6ce04bd 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170627
+#define BFD_VERSION_DATE 20170628
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 3ccdd498f56e14a7d3f654718686a33aa86bf24d
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu Jun 29 00:01:46 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 6ce04bd..db524fc 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170628
+#define BFD_VERSION_DATE 20170629
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 8a353d8ca8ce0ee669a4279d43bedcf9cd115c46
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Fri Jun 30 00:01:23 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index db524fc..4fb4b42 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170629
+#define BFD_VERSION_DATE 20170630
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 58825d5deb8e5cfa6b7fe80f1c14dbb59128319e
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sat Jul 1 00:01:31 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 4fb4b42..81d9ab3 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170630
+#define BFD_VERSION_DATE 20170701
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit b575f3766af2ca5b9fadf98f2096a6d5b7219c62
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Sun Jul 2 00:01:34 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index 81d9ab3..e291e34 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170701
+#define BFD_VERSION_DATE 20170702
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 1846c30c1e1711f354d5e84911573f531e92b66c
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Mon Jul 3 00:01:28 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index e291e34..b300343 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170702
+#define BFD_VERSION_DATE 20170703
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 6bf7691309d5f0425d725c1e2d4c05d16a103ba5
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Tue Jul 4 00:01:31 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index b300343..cf1444c 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170703
+#define BFD_VERSION_DATE 20170704
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit b65df329c2286197e02c3755f238af7af75a94f4
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Tue Jul 4 13:43:33 2017 +0100

    Fix ChangeLog entry
    
    Backport of 046734ff424bc5a4c1b6a69630d5bb31aa67165c in
    01106f569a3acb935447a2a7b3ee7f6866c7ea6c added the ld ChangeLog entry
    to the gas ChangeLog file. This commit fixes it.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index 93f7c63..046883f 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -11,16 +11,6 @@
 	* testsuite/gas/arm/thumb2_ldr_immediate_highregs_armv6t2.d: Update
 	expected disassembly.
 
-2017-06-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>
-
-	Backport from mainline
-	2017-05-08  Thomas Preud'homme  <thomas.preudhomme@arm.com>
-
-	* testsuite/ld-arm/arm-elf.exp
-	(Secure gateway import library generation): Check e_type field
-	of import library and executable produced.
-	* testsuite/ld-arm/cmse-implib.type: Expectations for e_type field.
-
 2017-06-05  Alan Modra  <amodra@gmail.com>
 
 	Apply from master
diff --git a/ld/ChangeLog b/ld/ChangeLog
index 5a9544e..8458f13 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,3 +1,13 @@
+2017-06-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	Backport from mainline
+	2017-05-08  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* testsuite/ld-arm/arm-elf.exp
+	(Secure gateway import library generation): Check e_type field
+	of import library and executable produced.
+	* testsuite/ld-arm/cmse-implib.type: Expectations for e_type field.
+
 2017-06-02  H.J. Lu  <hongjiu.lu@intel.com>
 
 	* emulparams/call_nop.sh: Remove -z prefix-nop.

commit e8149ebc7c89cbda276b7c64cdaad88514cac9ae
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Wed Jul 5 00:01:21 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index cf1444c..ec89203 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170704
+#define BFD_VERSION_DATE 20170705
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit 3e5f4497f7fcfaa6f4e0188c3f12318d192b2dff
Author: Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>
Date:   Tue Jul 4 16:18:47 2017 +0100

    [Patch ARM] Support MVFR2 VFP Coprocessor register for ARMv8-A
    
    This patch adds support mvfr2 control registers for armv8-a as
    this was missed from the original port to armv8-a (documented
    at G6.2.109 in (Issue B.a) of the ARM-ARM. This was discovered
    by an internal user of the GNU toolchain.
    
    I'd like to backport this to the binutils 2.28 and binutils 2.29
    release branch if possible (with suitable testing and basically
    checking removing the armv8-r parts).
    
    regards Ramana
    
    2017-07-04  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
    
            * gas/config/tc-arm.c (arm_regs): Add MVFR2.
            (do_vmrs): Constraint for MVFR2 and armv8.
            (do_vmsr): Likewise.
            * gas/testsuite/gas/arm/armv8-a+fp.d: Update.
            * gas/testsuite/gas/arm/armv8-a+fp.s: Likewise.
            * gas/testsuite/gas/arm/vfp-bad.s: Likewise.
            * gas/testsuite/gas/arm/vfp-bad.l: Likewise.
            * opcodes/arm-dis.c: Support MVFR2 in disassembly
            with vmrs and vmsr.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index 046883f..a89a5f5 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,15 @@
+2017-04-05  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
+
+	Backport from mainline
+	2017-04-04  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
+	* config/tc-arm.c (arm_regs): Add MVFR2.
+        (do_vmrs): Constraint for MVFR2 and armv8.
+        (do_vmsr): Likewise.
+        * testsuite/gas/arm/armv8-a+fp.d: Update.
+        * testsuite/gas/arm/armv8-a+fp.s: Likewise.
+        * testsuite/gas/arm/vfp-bad.s: Likewise.
+        * testsuite/gas/arm/vfp-bad.l: Likewise.
+
 2017-06-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>
 
 	Backport from mainline
diff --git a/gas/config/tc-arm.c b/gas/config/tc-arm.c
index 0820b96..be85927 100644
--- a/gas/config/tc-arm.c
+++ b/gas/config/tc-arm.c
@@ -9108,6 +9108,11 @@ do_vmrs (void)
       return;
     }
 
+  /* MVFR2 is only valid at ARMv8-A.  */
+  if (inst.operands[1].reg == 5)
+    constraint (!ARM_CPU_HAS_FEATURE (cpu_variant, fpu_vfp_ext_armv8),
+		_(BAD_FPU));
+
   /* APSR_ sets isvec. All other refs to PC are illegal.  */
   if (!inst.operands[0].isvec && Rt == REG_PC)
     {
@@ -9134,6 +9139,11 @@ do_vmsr (void)
       return;
     }
 
+  /* MVFR2 is only valid for ARMv8-A.  */
+  if (inst.operands[0].reg == 5)
+    constraint (!ARM_CPU_HAS_FEATURE (cpu_variant, fpu_vfp_ext_armv8),
+		_(BAD_FPU));
+
   /* If we get through parsing the register name, we just insert the number
      generated into the instruction without further validation.  */
   inst.instruction |= (inst.operands[0].reg << 16);
@@ -18795,6 +18805,7 @@ static const struct reg_entry reg_names[] =
   REGDEF(FPINST,9,VFC), REGDEF(FPINST2,10,VFC),
   REGDEF(mvfr0,7,VFC), REGDEF(mvfr1,6,VFC),
   REGDEF(MVFR0,7,VFC), REGDEF(MVFR1,6,VFC),
+  REGDEF(mvfr2,5,VFC), REGDEF(MVFR2,5,VFC),
 
   /* Maverick DSP coprocessor registers.  */
   REGSET(mvf,MVF),  REGSET(mvd,MVD),  REGSET(mvfx,MVFX),  REGSET(mvdx,MVDX),
diff --git a/gas/testsuite/gas/arm/armv8-a+fp.d b/gas/testsuite/gas/arm/armv8-a+fp.d
index f77e742..5a2c95a 100644
--- a/gas/testsuite/gas/arm/armv8-a+fp.d
+++ b/gas/testsuite/gas/arm/armv8-a+fp.d
@@ -113,3 +113,7 @@ Disassembly of section .text:
 0[0-9a-f]+ <[^>]+> eef2 0b60 	vcvtb.f64.f16	d16, s1
 0[0-9a-f]+ <[^>]+> eeb2 fbcf 	vcvtt.f64.f16	d15, s30
 0[0-9a-f]+ <[^>]+> eef2 fb6f 	vcvtb.f64.f16	d31, s31
+0[0-9a-f]+ <[^>]+> eef5 9a10 	vmrs	r9, mvfr2
+0[0-9a-f]+ <[^>]+> eee5 7a10 	vmsr	mvfr2, r7
+0[0-9a-f]+ <[^>]+> eef5 4a10 	vmrs	r4, mvfr2
+0[0-9a-f]+ <[^>]+> eee5 5a10 	vmsr	mvfr2, r5
\ No newline at end of file
diff --git a/gas/testsuite/gas/arm/armv8-a+fp.s b/gas/testsuite/gas/arm/armv8-a+fp.s
index f7a5473..b98aab7 100644
--- a/gas/testsuite/gas/arm/armv8-a+fp.s
+++ b/gas/testsuite/gas/arm/armv8-a+fp.s
@@ -114,3 +114,8 @@
 	vcvtb.f64.f16	d16, s1
 	vcvtt.f64.f16	d15, s30
 	vcvtb.f64.f16	d31, s31
+	vmrs		r9, MVFR2
+	vmsr		MVFR2, r7
+	vmrs		r4, mvfr2
+	vmsr		mvfr2, r5
+
diff --git a/gas/testsuite/gas/arm/vfp-bad.l b/gas/testsuite/gas/arm/vfp-bad.l
index 7726e63..a1479f4 100644
--- a/gas/testsuite/gas/arm/vfp-bad.l
+++ b/gas/testsuite/gas/arm/vfp-bad.l
@@ -7,3 +7,5 @@
 [^:]*:9: Error: instruction does not support writeback -- `fldd d0,\[r0,#-8\]!'
 [^:]*:10: Error: instruction does not support writeback -- `flds s0,\[r0\],#8'
 [^:]*:11: Error: instruction does not support writeback -- `flds s0,\[r0,#-8\]!'
+[^:]*:12: Error: selected FPU does not support instruction -- `vmrs r0,MVFR2'
+[^:]*:13: Error: selected FPU does not support instruction -- `vmsr MVFR2,r2'
diff --git a/gas/testsuite/gas/arm/vfp-bad.s b/gas/testsuite/gas/arm/vfp-bad.s
index ac44371..1a446fe 100644
--- a/gas/testsuite/gas/arm/vfp-bad.s
+++ b/gas/testsuite/gas/arm/vfp-bad.s
@@ -9,3 +9,5 @@ entry:
 	fldd	d0, [r0, #-8]!
 	flds	s0, [r0], #8
 	flds	s0, [r0, #-8]!
+	vmrs	r0, MVFR2
+	vmsr	MVFR2, r2
diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index 5dfe166..dc6c635 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,3 +1,9 @@
+2017-07-05  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
+
+	Backport from mainline
+	2017-07-04  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
+	* arm-dis.c: Support MVFR2 in disassembly with vmrs and vmsr.
+
 2017-05-01  Michael Clark  <michaeljclark@mac.com>
 
 	* riscv-opc.c (riscv_opcodes) <call>: Use RA not T1 as a temporary
diff --git a/opcodes/arm-dis.c b/opcodes/arm-dis.c
index 167c668..eeeea58 100644
--- a/opcodes/arm-dis.c
+++ b/opcodes/arm-dis.c
@@ -506,6 +506,8 @@ static const struct opcode32 coprocessor_opcodes[] =
     0x0ee60a10, 0x0fff0fff, "vmsr%c\tmvfr1, %12-15r"},
   {ARM_FEATURE_COPROC (FPU_VFP_EXT_V1xD),
     0x0ee70a10, 0x0fff0fff, "vmsr%c\tmvfr0, %12-15r"},
+  {ARM_FEATURE_COPROC (FPU_VFP_EXT_ARMV8),
+    0x0ee50a10, 0x0fff0fff, "vmsr%c\tmvfr2, %12-15r"},
   {ARM_FEATURE_COPROC (FPU_VFP_EXT_V1xD),
     0x0ee80a10, 0x0fff0fff, "vmsr%c\tfpexc, %12-15r"},
   {ARM_FEATURE_COPROC (FPU_VFP_EXT_V1xD),
@@ -518,6 +520,8 @@ static const struct opcode32 coprocessor_opcodes[] =
     0x0ef1fa10, 0x0fffffff, "vmrs%c\tAPSR_nzcv, fpscr"},
   {ARM_FEATURE_COPROC (FPU_VFP_EXT_V1xD),
     0x0ef10a10, 0x0fff0fff, "vmrs%c\t%12-15r, fpscr"},
+  {ARM_FEATURE_COPROC (FPU_VFP_EXT_ARMV8),
+    0x0ef50a10, 0x0fff0fff, "vmrs%c\t%12-15r, mvfr2"},
   {ARM_FEATURE_COPROC (FPU_VFP_EXT_V1xD),
     0x0ef60a10, 0x0fff0fff, "vmrs%c\t%12-15r, mvfr1"},
   {ARM_FEATURE_COPROC (FPU_VFP_EXT_V1xD),

commit 83550a4ca6d7406e4f6426fc134722db453c0f8c
Author: GDB Administrator <gdbadmin@sourceware.org>
Date:   Thu Jul 6 00:01:48 2017 +0000

    Automatic date update in version.in

diff --git a/bfd/version.h b/bfd/version.h
index ec89203..8e8f0bf 100644
--- a/bfd/version.h
+++ b/bfd/version.h
@@ -1,4 +1,4 @@
-#define BFD_VERSION_DATE 20170705
+#define BFD_VERSION_DATE 20170706
 #define BFD_VERSION @bfd_version@
 #define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@

commit e70c0b5f07daf63474e805f8d0a45152fcd60468
Author: Han Shen <shenhan@google.com>
Date:   Mon Jul 10 15:23:05 2017 -0700

    Fixing for PR gold/21491 - Errata workaround can produce broken images.
    
    The problem is caused by the fact that gold is relocating the stubs
    for an entire output section when it processes the relocations for a
    particular input section that happened to be designated as the stub
    table "owner". The Relocate_task for that input section may or may not
    run before the Relocate_task for another input section that contains
    the code that needs the erratum fix, but doesn't "own" the stub
    table. If it runs before (or might even race with) that other task, it
    ends up with a copy of the unrelocated original instruction.
    
    In other words - when calling fix_errata() from
    do_relocate_sections(), gold is going through the list of errata stubs
    that are associated only with that object. This routine updates the
    stored original instruction and replaces it in the output view with a
    branch to the stub. Later, as gold is going through the object file's
    input sections, it then checks for stub tables "owned" by each input
    section, and writes out all the stubs from that stub table, regardless
    of what object file each stub is associated with.
    
    Fixed by relocating the erratum stub only after the corresponding
    errata spot is fixed. That is to have fix_errata() call
    Stub_table::relocate_erratum_stub() for each stub.
    
    gold/ChangeLog
    2017-07-06  Han Shen  <shenhan@google.com>
    
    	PR gold/21491
    
    	* aarch64.cc (Erratum_stub::invalidate_erratum_stub): New method.
    	(Erratum_stub::is_invalidated_erratum_stub): New method.
    	(Stub_table::relocate_reloc_stub): Renamed from "relocate_stub".
    	(Stub_table::relocate_reloc_stubs): Renamed from "relocate_stubs".
    	(Stub_table::relocate_erratum_stub): New method.
    	(AArch64_relobj::fix_errata_and_relocate_erratum_stubs): Renamed from
    	"fix_errata".
    	(Target_aarch64::relocate_reloc_stub): Renamed from "relocate_stub".

diff --git a/gold/ChangeLog b/gold/ChangeLog
index 4c65d4d..d27713d 100644
--- a/gold/ChangeLog
+++ b/gold/ChangeLog
@@ -1,3 +1,15 @@
+2017-07-06  Han Shen  <shenhan@google.com>
+
+	PR gold/21491
+	* aarch64.cc (Erratum_stub::invalidate_erratum_stub): New method.
+	(Erratum_stub::is_invalidated_erratum_stub): New method.
+	(Stub_table::relocate_reloc_stub): Renamed from "relocate_stub".
+	(Stub_table::relocate_reloc_stubs): Renamed from "relocate_stubs".
+	(Stub_table::relocate_erratum_stub): New method.
+	(AArch64_relobj::fix_errata_and_relocate_erratum_stubs): Renamed from
+	"fix_errata".
+	(Target_aarch64::relocate_reloc_stub): Renamed from "relocate_stub".
+
 2017-06-21  Eric Christopher  <echristo@gmail.com>
 
 	Apply from master
diff --git a/gold/aarch64.cc b/gold/aarch64.cc
index 9d8815a..a37076b 100644
--- a/gold/aarch64.cc
+++ b/gold/aarch64.cc
@@ -1039,6 +1039,17 @@ public:
     return this->sh_offset_ < k.sh_offset_;
   }
 
+  void
+  invalidate_erratum_stub()
+  {
+     gold_assert(this->relobj_ != NULL);
+     this->relobj_ = NULL;
+  }
+
+  bool
+  is_invalidated_erratum_stub()
+  { return this->relobj_ == NULL; }
+
 protected:
   virtual void
   do_write(unsigned char*, section_size_type);
@@ -1336,7 +1347,8 @@ Reloc_stub<size, big_endian>::stub_type_for_reloc(
   return ST_LONG_BRANCH_ABS;
 }
 
-// A class to hold stubs for the ARM target.
+// A class to hold stubs for the ARM target. This contains 2 different types of
+// stubs - reloc stubs and erratum stubs.
 
 template<int size, bool big_endian>
 class Stub_table : public Output_data
@@ -1428,14 +1440,18 @@ class Stub_table : public Output_data
     return (p != this->reloc_stubs_.end()) ? p->second : NULL;
   }
 
-  // Relocate stubs in this stub table.
+  // Relocate reloc stubs in this stub table. This does not relocate erratum stubs.
   void
-  relocate_stubs(const The_relocate_info*,
-		 The_target_aarch64*,
-		 Output_section*,
-		 unsigned char*,
-		 AArch64_address,
-		 section_size_type);
+  relocate_reloc_stubs(const The_relocate_info*,
+                       The_target_aarch64*,
+                       Output_section*,
+                       unsigned char*,
+                       AArch64_address,
+                       section_size_type);
+
+  // Relocate an erratum stub.
+  void
+  relocate_erratum_stub(The_erratum_stub*, unsigned char*);
 
   // Update data size at the end of a relaxation pass.  Return true if data size
   // is different from that of the previous relaxation pass.
@@ -1475,15 +1491,15 @@ class Stub_table : public Output_data
   { this->set_data_size(this->current_data_size()); }
 
  private:
-  // Relocate one stub.
+  // Relocate one reloc stub.
   void
-  relocate_stub(The_reloc_stub*,
-		const The_relocate_info*,
-		The_target_aarch64*,
-		Output_section*,
-		unsigned char*,
-		AArch64_address,
-		section_size_type);
+  relocate_reloc_stub(The_reloc_stub*,
+                      const The_relocate_info*,
+                      The_target_aarch64*,
+                      Output_section*,
+                      unsigned char*,
+                      AArch64_address,
+                      section_size_type);
 
  private:
   // Owner of this stub table.
@@ -1583,76 +1599,85 @@ Stub_table<size, big_endian>::add_reloc_stub(
 }
 
 
-// Relocate all stubs in this stub table.
+// Relocate an erratum stub.
 
 template<int size, bool big_endian>
 void
 Stub_table<size, big_endian>::
-relocate_stubs(const The_relocate_info* relinfo,
-	       The_target_aarch64* target_aarch64,
-	       Output_section* output_section,
-	       unsigned char* view,
-	       AArch64_address address,
-	       section_size_type view_size)
+relocate_erratum_stub(The_erratum_stub* estub,
+                      unsigned char* view)
 {
-  // "view_size" is the total size of the stub_table.
-  gold_assert(address == this->address() &&
-	      view_size == static_cast<section_size_type>(this->data_size()));
-  for(Reloc_stub_map_const_iter p = this->reloc_stubs_.begin();
-      p != this->reloc_stubs_.end(); ++p)
-    relocate_stub(p->second, relinfo, target_aarch64, output_section,
-		  view, address, view_size);
-
   // Just for convenience.
   const int BPI = AArch64_insn_utilities<big_endian>::BYTES_PER_INSN;
 
-  // Now 'relocate' erratum stubs.
-  for(Erratum_stub_set_iter i = this->erratum_stubs_.begin();
-      i != this->erratum_stubs_.end(); ++i)
+  gold_assert(!estub->is_invalidated_erratum_stub());
+  AArch64_address stub_address = this->erratum_stub_address(estub);
+  // The address of "b" in the stub that is to be "relocated".
+  AArch64_address stub_b_insn_address;
+  // Branch offset that is to be filled in "b" insn.
+  int b_offset = 0;
+  switch (estub->type())
     {
-      AArch64_address stub_address = this->erratum_stub_address(*i);
-      // The address of "b" in the stub that is to be "relocated".
-      AArch64_address stub_b_insn_address;
-      // Branch offset that is to be filled in "b" insn.
-      int b_offset = 0;
-      switch ((*i)->type())
-	{
-	case ST_E_843419:
-	case ST_E_835769:
-	  // The 1st insn of the erratum could be a relocation spot,
-	  // in this case we need to fix it with
-	  // "(*i)->erratum_insn()".
-	  elfcpp::Swap<32, big_endian>::writeval(
-	      view + (stub_address - this->address()),
-	      (*i)->erratum_insn());
-	  // For the erratum, the 2nd insn is a b-insn to be patched
-	  // (relocated).
-	  stub_b_insn_address = stub_address + 1 * BPI;
-	  b_offset = (*i)->destination_address() - stub_b_insn_address;
-	  AArch64_relocate_functions<size, big_endian>::construct_b(
-	      view + (stub_b_insn_address - this->address()),
-	      ((unsigned int)(b_offset)) & 0xfffffff);
-	  break;
-	default:
-	  gold_unreachable();
-	  break;
-	}
+    case ST_E_843419:
+    case ST_E_835769:
+      // The 1st insn of the erratum could be a relocation spot,
+      // in this case we need to fix it with
+      // "(*i)->erratum_insn()".
+      elfcpp::Swap<32, big_endian>::writeval(
+          view + (stub_address - this->address()),
+          estub->erratum_insn());
+      // For the erratum, the 2nd insn is a b-insn to be patched
+      // (relocated).
+      stub_b_insn_address = stub_address + 1 * BPI;
+      b_offset = estub->destination_address() - stub_b_insn_address;
+      AArch64_relocate_functions<size, big_endian>::construct_b(
+          view + (stub_b_insn_address - this->address()),
+          ((unsigned int)(b_offset)) & 0xfffffff);
+      break;
+    default:
+      gold_unreachable();
+      break;
     }
+  estub->invalidate_erratum_stub();
 }
 
 
-// Relocate one stub.  This is a helper for Stub_table::relocate_stubs().
+// Relocate only reloc stubs in this stub table. This does not relocate erratum
+// stubs.
 
 template<int size, bool big_endian>
 void
 Stub_table<size, big_endian>::
-relocate_stub(The_reloc_stub* stub,
-	      const The_relocate_info* relinfo,
-	      The_target_aarch64* target_aarch64,
-	      Output_section* output_section,
-	      unsigned char* view,
-	      AArch64_address address,
-	      section_size_type view_size)
+relocate_reloc_stubs(const The_relocate_info* relinfo,
+                     The_target_aarch64* target_aarch64,
+                     Output_section* output_section,
+                     unsigned char* view,
+                     AArch64_address address,
+                     section_size_type view_size)
+{
+  // "view_size" is the total size of the stub_table.
+  gold_assert(address == this->address() &&
+	      view_size == static_cast<section_size_type>(this->data_size()));
+  for(Reloc_stub_map_const_iter p = this->reloc_stubs_.begin();
+      p != this->reloc_stubs_.end(); ++p)
+    relocate_reloc_stub(p->second, relinfo, target_aarch64, output_section,
+                        view, address, view_size);
+}
+
+
+// Relocate one reloc stub. This is a helper for
+// Stub_table::relocate_reloc_stubs().
+
+template<int size, bool big_endian>
+void
+Stub_table<size, big_endian>::
+relocate_reloc_stub(The_reloc_stub* stub,
+                    const The_relocate_info* relinfo,
+                    The_target_aarch64* target_aarch64,
+                    Output_section* output_section,
+                    unsigned char* view,
+                    AArch64_address address,
+                    section_size_type view_size)
 {
   // "offset" is the offset from the beginning of the stub_table.
   section_size_type offset = stub->offset();
@@ -1660,8 +1685,8 @@ relocate_stub(The_reloc_stub* stub,
   // "view_size" is the total size of the stub_table.
   gold_assert(offset + stub_size <= view_size);
 
-  target_aarch64->relocate_stub(stub, relinfo, output_section,
-				view + offset, address + offset, view_size);
+  target_aarch64->relocate_reloc_stub(stub, relinfo, output_section,
+                                      view + offset, address + offset, view_size);
 }
 
 
@@ -1818,9 +1843,11 @@ class AArch64_relobj : public Sized_relobj_file<size, big_endian>
 			 Stringpool_template<char>*);
 
  private:
-  // Fix all errata in the object.
+  // Fix all errata in the object, and for each erratum, relocate corresponding
+  // erratum stub.
   void
-  fix_errata(typename Sized_relobj_file<size, big_endian>::Views* pviews);
+  fix_errata_and_relocate_erratum_stubs(
+      typename Sized_relobj_file<size, big_endian>::Views* pviews);
 
   // Try to fix erratum 843419 in an optimized way. Return true if patch is
   // applied.
@@ -1932,11 +1959,12 @@ AArch64_relobj<size, big_endian>::do_count_local_symbols(
 }
 
 
-// Fix all errata in the object.
+// Fix all errata in the object and for each erratum, we relocate the
+// corresponding erratum stub (by calling Stub_table::relocate_erratum_stub).
 
 template<int size, bool big_endian>
 void
-AArch64_relobj<size, big_endian>::fix_errata(
+AArch64_relobj<size, big_endian>::fix_errata_and_relocate_erratum_stubs(
     typename Sized_relobj_file<size, big_endian>::Views* pviews)
 {
   typedef typename elfcpp::Swap<32,big_endian>::Valtype Insntype;
@@ -1977,6 +2005,17 @@ AArch64_relobj<size, big_endian>::fix_errata(
 	      AArch64_relocate_functions<size, big_endian>::construct_b(
 		pview.view + stub->sh_offset(), b_offset & 0xfffffff);
 	    }
+
+          // Erratum fix is done (or skipped), continue to relocate erratum
+          // stub. Note, when erratum fix is skipped (either because we
+          // proactively change the code sequence or the code sequence is
+          // changed by relaxation, etc), we can still safely relocate the
+          // erratum stub, ignoring the fact the erratum could never be
+          // executed.
+          stub_table->relocate_erratum_stub(
+              stub, pview.view + (stub_table->address() - pview.address));
+
+          // Next erratum stub.
 	  ++p;
 	}
     }
@@ -2052,16 +2091,19 @@ AArch64_relobj<size, big_endian>::do_relocate_sections(
   if (parameters->options().relocatable())
     return;
 
+  // This part only relocates erratum stubs that belong to input sections of this
+  // object file.
   if (parameters->options().fix_cortex_a53_843419()
       || parameters->options().fix_cortex_a53_835769())
-    this->fix_errata(pviews);
+    this->fix_errata_and_relocate_erratum_stubs(pviews);
 
   Relocate_info<size, big_endian> relinfo;
   relinfo.symtab = symtab;
   relinfo.layout = layout;
   relinfo.object = this;
 
-  // Relocate stub tables.
+  // This part relocates all reloc stubs that are contained in stub_tables of
+  // this object file.
   unsigned int shnum = this->shnum();
   The_target_aarch64* target = The_target_aarch64::current_target();
 
@@ -2090,8 +2132,8 @@ AArch64_relobj<size, big_endian>::do_relocate_sections(
 	  unsigned char* view = view_struct.view + offset;
 	  AArch64_address address = stub_table->address();
 	  section_size_type view_size = stub_table->data_size();
-	  stub_table->relocate_stubs(&relinfo, target, os, view, address,
-				     view_size);
+	  stub_table->relocate_reloc_stubs(&relinfo, target, os, view, address,
+					   view_size);
 	}
     }
 }
@@ -2982,11 +3024,11 @@ class Target_aarch64 : public Sized_target<size, big_endian>
       Address view_address,
       section_size_type);
 
-  // Relocate a single stub.
+  // Relocate a single reloc stub.
   void
-  relocate_stub(The_reloc_stub*, const Relocate_info<size, big_endian>*,
-		Output_section*, unsigned char*, Address,
-		section_size_type);
+  relocate_reloc_stub(The_reloc_stub*, const Relocate_info<size, big_endian>*,
+                      Output_section*, unsigned char*, Address,
+                      section_size_type);
 
   // Get the default AArch64 target.
   static This*
@@ -4001,16 +4043,16 @@ Target_aarch64<size, big_endian>::scan_section_for_stubs(
 }
 
 
-// Relocate a single stub.
+// Relocate a single reloc stub.
 
 template<int size, bool big_endian>
 void Target_aarch64<size, big_endian>::
-relocate_stub(The_reloc_stub* stub,
-	      const The_relocate_info*,
-	      Output_section*,
-	      unsigned char* view,
-	      Address address,
-	      section_size_type)
+relocate_reloc_stub(The_reloc_stub* stub,
+                    const The_relocate_info*,
+                    Output_section*,
+                    unsigned char* view,
+                    Address address,
+                    section_size_type)
 {
   typedef AArch64_relocate_functions<size, big_endian> The_reloc_functions;
   typedef typename The_reloc_functions::Status The_reloc_functions_status;

commit ee11594c8548d89090a9d80141ab6cf4f3c231b6
Author: Jiong Wang <jiong.wang@arm.com>
Date:   Thu May 25 10:40:07 2017 +0100

    [Patch, ARM] Relax the restrictions on REG_SP under Thumb mode on ARMv8-A
    
    	Backport from mainline
    	2017-06-06  Jiong Wang  <jiong.wang@arm.com>
    	* config/tc-arm.c (reject_bad_reg): Allow REG_SP on ARMv8-A.
    	(parse_operands): Allow REG_SP for OP_oRRnpcsp and OP_RRnpcsp on
    	ARMv8-A.
    	(do_co_reg): Allow REG_SP for Rd on ARMv8-A.
    	(do_t_add_sub): Likewise.
    	(do_t_mov_cmp): Likewise.
    	(do_t_tb): Likewise.
    	* testsuite/gas/arm/ld-sp-warn.l: Delete the warning on REG_SP as Rt for
    	ldrsb.
    	* testsuite/gas/arm/sp-pc-validations-bad-t-v8a.d: New test.
    	* testsuite/gas/arm/sp-pc-validations-bad-t-v8a.l: New test.
    	* testsuite/gas/arm/sp-pc-validations-bad-t.d: Specifies -march=armv7-a.
    	* testsuite/gas/arm/sp-pc-validations-bad-t.s: Remove ".arch armv7-a".
    	* testsuite/gas/arm/sp-usage-thumb2-relax-on-v7.d: New test.
    	* testsuite/gas/arm/sp-usage-thumb2-relax-on-v7.l: New test.
    	* testsuite/gas/arm/sp-usage-thumb2-relax-on-v8.d: New test.
    	* testsuite/gas/arm/sp-usage-thumb2-relax.s: New test.
    	* testsuite/gas/arm/strex-bad-t.d: Specifies -march=armv7-a.

diff --git a/gas/ChangeLog b/gas/ChangeLog
index a89a5f5..5d212d9 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,26 @@
+2017-07-23  Jiong Wang  <jiong.wang@arm.com>
+
+	Backport from mainline
+	2017-06-06  Jiong Wang  <jiong.wang@arm.com>
+	* config/tc-arm.c (reject_bad_reg): Allow REG_SP on ARMv8-A.
+	(parse_operands): Allow REG_SP for OP_oRRnpcsp and OP_RRnpcsp on
+	ARMv8-A.
+	(do_co_reg): Allow REG_SP for Rd on ARMv8-A.
+	(do_t_add_sub): Likewise.
+	(do_t_mov_cmp): Likewise.
+	(do_t_tb): Likewise.
+	* testsuite/gas/arm/ld-sp-warn.l: Delete the warning on REG_SP as Rt for
+	ldrsb.
+	* testsuite/gas/arm/sp-pc-validations-bad-t-v8a.d: New test.
+	* testsuite/gas/arm/sp-pc-validations-bad-t-v8a.l: New test.
+	* testsuite/gas/arm/sp-pc-validations-bad-t.d: Specifies -march=armv7-a.
+	* testsuite/gas/arm/sp-pc-validations-bad-t.s: Remove ".arch armv7-a".
+	* testsuite/gas/arm/sp-usage-thumb2-relax-on-v7.d: New test.
+	* testsuite/gas/arm/sp-usage-thumb2-relax-on-v7.l: New test.
+	* testsuite/gas/arm/sp-usage-thumb2-relax-on-v8.d: New test.
+	* testsuite/gas/arm/sp-usage-thumb2-relax.s: New test.
+	* testsuite/gas/arm/strex-bad-t.d: Specifies -march=armv7-a.
+
 2017-04-05  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
 
 	Backport from mainline
diff --git a/gas/config/tc-arm.c b/gas/config/tc-arm.c
index be85927..3d3ca51 100644
--- a/gas/config/tc-arm.c
+++ b/gas/config/tc-arm.c
@@ -7185,8 +7185,14 @@ parse_operands (char *str, const unsigned int *pattern, bfd_boolean thumb)
 	    {
 	      if (inst.operands[i].reg == REG_PC)
 		inst.error = BAD_PC;
-	      else if (inst.operands[i].reg == REG_SP)
-		inst.error = BAD_SP;
+	      else if (inst.operands[i].reg == REG_SP
+		       /* The restriction on Rd/Rt/Rt2 on Thumb mode has been
+			  relaxed since ARMv8-A.  */
+		       && !ARM_CPU_HAS_FEATURE (cpu_variant, arm_ext_v8))
+		{
+		  gas_assert (thumb);
+		  inst.error = BAD_SP;
+		}
 	    }
 	  break;
 
@@ -7284,14 +7290,23 @@ parse_operands (char *str, const unsigned int *pattern, bfd_boolean thumb)
 
 /* Reject "bad registers" for Thumb-2 instructions.  Many Thumb-2
    instructions are unpredictable if these registers are used.  This
-   is the BadReg predicate in ARM's Thumb-2 documentation.  */
-#define reject_bad_reg(reg)				\
-  do							\
-   if (reg == REG_SP || reg == REG_PC)			\
-     {							\
-       inst.error = (reg == REG_SP) ? BAD_SP : BAD_PC;	\
-       return;						\
-     }							\
+   is the BadReg predicate in ARM's Thumb-2 documentation.
+
+   Before ARMv8-A, REG_PC and REG_SP were not allowed in quite a few
+   places, while the restriction on REG_SP was relaxed since ARMv8-A.  */
+#define reject_bad_reg(reg)					\
+  do								\
+   if (reg == REG_PC)						\
+     {								\
+       inst.error = BAD_PC;					\
+       return;							\
+     }								\
+   else if (reg == REG_SP					\
+	    && !ARM_CPU_HAS_FEATURE (cpu_variant, arm_ext_v8))	\
+     {								\
+       inst.error = BAD_SP;					\
+       return;							\
+     }								\
   while (0)
 
 /* If REG is R13 (the stack pointer), warn that its use is
@@ -8643,7 +8658,7 @@ do_co_reg (void)
 	  || inst.instruction == 0xfe000010)
 	/* MCR, MCR2  */
 	reject_bad_reg (Rd);
-      else
+      else if (!ARM_CPU_HAS_FEATURE (cpu_variant, arm_ext_v8))
 	/* MRC, MRC2  */
 	constraint (Rd == REG_SP, BAD_SP);
     }
@@ -10523,7 +10538,8 @@ do_t_add_sub (void)
 	{
 	  int add;
 
-	  constraint (Rd == REG_SP && Rs != REG_SP, BAD_SP);
+	  if (!ARM_CPU_HAS_FEATURE (cpu_variant, arm_ext_v8))
+	    constraint (Rd == REG_SP && Rs != REG_SP, BAD_SP);
 
 	  add = (inst.instruction == T_MNEM_add
 		 || inst.instruction == T_MNEM_adds);
@@ -10647,7 +10663,8 @@ do_t_add_sub (void)
 	    }
 
 	  constraint (Rd == REG_PC, BAD_PC);
-	  constraint (Rd == REG_SP && Rs != REG_SP, BAD_SP);
+	  if (!ARM_CPU_HAS_FEATURE (cpu_variant, arm_ext_v8))
+	    constraint (Rd == REG_SP && Rs != REG_SP, BAD_SP);
 	  constraint (Rs == REG_PC, BAD_PC);
 	  reject_bad_reg (Rn);
 
@@ -11895,7 +11912,8 @@ do_t_mov_cmp (void)
 		  /* This is mov.w.  */
 		  constraint (Rn == REG_PC, BAD_PC);
 		  constraint (Rm == REG_PC, BAD_PC);
-		  constraint (Rn == REG_SP && Rm == REG_SP, BAD_SP);
+		  if (!ARM_CPU_HAS_FEATURE (cpu_variant, arm_ext_v8))
+		    constraint (Rn == REG_SP && Rm == REG_SP, BAD_SP);
 		}
 	    }
 	  else
@@ -13116,7 +13134,8 @@ do_t_tb (void)
   Rn = inst.operands[0].reg;
   Rm = inst.operands[0].imm;
 
-  constraint (Rn == REG_SP, BAD_SP);
+  if (!ARM_CPU_HAS_FEATURE (cpu_variant, arm_ext_v8))
+    constraint (Rn == REG_SP, BAD_SP);
   reject_bad_reg (Rm);
 
   constraint (!half && inst.operands[0].shifted,
diff --git a/gas/testsuite/gas/arm/ld-sp-warn.l b/gas/testsuite/gas/arm/ld-sp-warn.l
index 48ac57f..6093f30 100644
--- a/gas/testsuite/gas/arm/ld-sp-warn.l
+++ b/gas/testsuite/gas/arm/ld-sp-warn.l
@@ -2,4 +2,3 @@
 [^:]*:3: Warning: This instruction may be unpredictable if executed on M-profile cores with interrupts enabled.
 [^:]*:4: Warning: This instruction may be unpredictable if executed on M-profile cores with interrupts enabled.
 [^:]*:7: Error: Thumb does not support register indexing with writeback -- `ldr r1,\[r0,r1\]!'
-[^:]*:8: Error: r13 not allowed here -- `ldrsb sp,\[r2,#16\]!'
diff --git a/gas/testsuite/gas/arm/sp-pc-validations-bad-t-v8a.d b/gas/testsuite/gas/arm/sp-pc-validations-bad-t-v8a.d
new file mode 100644
index 0000000..c5996fb
--- /dev/null
+++ b/gas/testsuite/gas/arm/sp-pc-validations-bad-t-v8a.d
@@ -0,0 +1,4 @@
+# as: -march=armv8-a
+# name: Invalid SP and PC operands test - THUMB (v8a)
+# source: sp-pc-validations-bad-t.s
+# error-output: sp-pc-validations-bad-t-v8a.l
diff --git a/gas/testsuite/gas/arm/sp-pc-validations-bad-t-v8a.l b/gas/testsuite/gas/arm/sp-pc-validations-bad-t-v8a.l
new file mode 100644
index 0000000..0da4701
--- /dev/null
+++ b/gas/testsuite/gas/arm/sp-pc-validations-bad-t-v8a.l
@@ -0,0 +1,192 @@
+[^:]*: Assembler messages:
+[^:]*:27: IT blocks containing 16-bit Thumb instructions of the following class are deprecated in ARMv8: Short branches, Undefined, SVC, LDM/STM
+[^:]*:27: IT blocks containing more than one conditional instruction are deprecated in ARMv8
+[^:]*:27: Error: branch must be last instruction in IT block -- `ldreq r15,\[r0\]'
+[^:]*:28: IT blocks containing 16-bit Thumb instructions of the following class are deprecated in ARMv8: Short branches, Undefined, SVC, LDM/STM
+[^:]*:28: IT blocks containing more than one conditional instruction are deprecated in ARMv8
+[^:]*:28: Error: branch must be last instruction in IT block -- `ldreq r15,\[r0,#0\]'
+[^:]*:29: IT blocks containing 16-bit Thumb instructions of the following class are deprecated in ARMv8: Short branches, Undefined, SVC, LDM/STM
+[^:]*:29: IT blocks containing more than one conditional instruction are deprecated in ARMv8
+[^:]*:29: Error: branch must be last instruction in IT block -- `ldreq r15,\[sp\]'
+[^:]*:30: IT blocks containing 16-bit Thumb instructions of the following class are deprecated in ARMv8: Short branches, Undefined, SVC, LDM/STM
+[^:]*:30: IT blocks containing more than one conditional instruction are deprecated in ARMv8
+[^:]*:30: Error: branch must be last instruction in IT block -- `ldreq r15,\[sp,#0\]'
+[^:]*:31: IT blocks containing 16-bit Thumb instructions of the following class are deprecated in ARMv8: Short branches, Undefined, SVC, LDM/STM
+[^:]*:31: IT blocks containing more than one conditional instruction are deprecated in ARMv8
+[^:]*:31: Error: branch must be last instruction in IT block -- `ldreq.w r15,\[r0\]'
+[^:]*:32: IT blocks containing 16-bit Thumb instructions of the following class are deprecated in ARMv8: Short branches, Undefined, SVC, LDM/STM
+[^:]*:32: IT blocks containing more than one conditional instruction are deprecated in ARMv8
+[^:]*:32: Error: branch must be last instruction in IT block -- `ldreq.w r15,\[r0,#0\]'
+[^:]*:33: IT blocks containing 16-bit Thumb instructions of the following class are deprecated in ARMv8: Short branches, Undefined, SVC, LDM/STM
+[^:]*:33: IT blocks containing more than one conditional instruction are deprecated in ARMv8
+[^:]*:33: Error: branch must be last instruction in IT block -- `ldreq r15,\[r0,#-4\]'
+[^:]*:34: IT blocks containing 16-bit Thumb instructions of the following class are deprecated in ARMv8: Short branches, Undefined, SVC, LDM/STM
+[^:]*:34: IT blocks containing more than one conditional instruction are deprecated in ARMv8
+[^:]*:34: Error: branch must be last instruction in IT block -- `ldreq r15,\[r0\],#4'
+[^:]*:35: IT blocks containing 16-bit Thumb instructions of the following class are deprecated in ARMv8: Short branches, Undefined, SVC, LDM/STM
+[^:]*:35: IT blocks containing more than one conditional instruction are deprecated in ARMv8
+[^:]*:35: Error: branch must be last instruction in IT block -- `ldreq r15,\[r0,#0\]!'
+[^:]*:38: IT blocks containing 16-bit Thumb instructions of the following class are deprecated in ARMv8: Short branches, Undefined, SVC, LDM/STM
+[^:]*:38: IT blocks containing more than one conditional instruction are deprecated in ARMv8
+[^:]*:38: Error: branch must be last instruction in IT block -- `ldreq r15,label'
+[^:]*:39: IT blocks containing 16-bit Thumb instructions of the following class are deprecated in ARMv8: Short branches, Undefined, SVC, LDM/STM
+[^:]*:39: IT blocks containing more than one conditional instruction are deprecated in ARMv8
+[^:]*:39: Error: branch must be last instruction in IT block -- `ldreq.w r15,label'
+[^:]*:40: IT blocks containing 16-bit Thumb instructions of the following class are deprecated in ARMv8: Short branches, Undefined, SVC, LDM/STM
+[^:]*:40: IT blocks containing more than one conditional instruction are deprecated in ARMv8
+[^:]*:40: Error: branch must be last instruction in IT block -- `ldreq.w r15,\[pc,#-0\]'
+[^:]*:43: IT blocks containing 16-bit Thumb instructions of the following class are deprecated in ARMv8: Short branches, Undefined, SVC, LDM/STM
+[^:]*:43: IT blocks containing more than one conditional instruction are deprecated in ARMv8
+[^:]*:43: Error: branch must be last instruction in IT block -- `ldreq r15,\[r0,r1\]'
+[^:]*:44: IT blocks containing 16-bit Thumb instructions of the following class are deprecated in ARMv8: Short branches, Undefined, SVC, LDM/STM
+[^:]*:44: IT blocks containing more than one conditional instruction are deprecated in ARMv8
+[^:]*:44: Error: branch must be last instruction in IT block -- `ldreq.w r15,\[r0,r1\]'
+[^:]*:45: IT blocks containing 16-bit Thumb instructions of the following class are deprecated in ARMv8: Short branches, Undefined, SVC, LDM/STM
+[^:]*:45: IT blocks containing more than one conditional instruction are deprecated in ARMv8
+[^:]*:45: Error: branch must be last instruction in IT block -- `ldreq.w r15,\[r0,r1,LSL#2\]'
+[^:]*:48: Error: r15 not allowed here -- `ldrb pc,\[r0,#4\]'
+[^:]*:51: Error: r15 not allowed here -- `ldrb.w pc,\[r0,#4\]'
+[^:]*:52: Error: r15 not allowed here -- `ldrb pc,\[r0,#-4\]'
+[^:]*:54: Error: r15 not allowed here -- `ldrb pc,\[r0\],#4'
+[^:]*:56: Error: r15 not allowed here -- `ldrb pc,\[r0,#4\]!'
+[^:]*:60: Error: r15 not allowed here -- `ldrb pc,label'
+[^:]*:61: Error: r15 not allowed here -- `ldrb pc,\[PC,#-0\]'
+[^:]*:66: Error: r15 not allowed here -- `ldrb pc,\[r0,r1\]'
+[^:]*:67: Error: cannot use register index with PC-relative addressing -- `ldrb r0,\[pc,r1\]'
+[^:]*:68: Error: r15 not allowed here -- `ldrb r0,\[r1,pc\]'
+[^:]*:69: Error: r15 not allowed here -- `ldrb.w pc,\[r0,r1,LSL#1\]'
+[^:]*:71: Error: r15 not allowed here -- `ldrb.w r2,\[r0,pc,LSL#2\]'
+[^:]*:75: Error: r15 not allowed here -- `ldrbt pc,\[r0,#4\]'
+[^:]*:79: Error: r15 not allowed here -- `ldrd pc,r0,\[r1\]'
+[^:]*:81: Error: r12 not allowed here -- `ldrd r12,\[r1\]'
+[^:]*:82: Error: r14 not allowed here -- `ldrd r14,\[r1\]'
+[^:]*:83: Error: r15 not allowed here -- `ldrd r0,pc,\[r1\]'
+[^:]*:85: Error: r15 not allowed here -- `ldrd pc,r0,\[r1\],#4'
+[^:]*:87: Error: r15 not allowed here -- `ldrd r0,pc,\[r1\],#4'
+[^:]*:89: Error: r12 not allowed here -- `ldrd r12,\[r1\],#4'
+[^:]*:90: Error: r14 not allowed here -- `ldrd r14,\[r1\],#4'
+[^:]*:91: Error: r15 not allowed here -- `ldrd pc,r0,\[r1,#4\]!'
+[^:]*:93: Error: r15 not allowed here -- `ldrd r0,pc,\[r1,#4\]!'
+[^:]*:95: Error: r12 not allowed here -- `ldrd r12,\[r1,#4\]!'
+[^:]*:96: Error: r14 not allowed here -- `ldrd r14,\[r1,#4\]!'
+[^:]*:99: Error: r15 not allowed here -- `ldrd pc,r0,label'
+[^:]*:101: Error: r15 not allowed here -- `ldrd r0,pc,label'
+[^:]*:103: Error: r15 not allowed here -- `ldrd pc,r0,\[pc,#-0\]'
+[^:]*:105: Error: r15 not allowed here -- `ldrd r0,pc,\[pc,#-0\]'
+[^:]*:111: Error: r15 not allowed here -- `ldrex pc,\[r0\]'
+[^:]*:113: Error: r15 not allowed here -- `ldrex r0,\[pc\]'
+[^:]*:114: Error: r15 not allowed here -- `ldrexb pc,\[r0\]'
+[^:]*:116: Error: r15 not allowed here -- `ldrexb r0,\[pc\]'
+[^:]*:117: Error: r15 not allowed here -- `ldrexd pc,r0,\[r1\]'
+[^:]*:119: Error: r15 not allowed here -- `ldrexd r0,pc,\[r1\]'
+[^:]*:121: Error: r15 not allowed here -- `ldrexd r0,r1,\[pc\]'
+[^:]*:122: Error: r15 not allowed here -- `ldrexh pc,\[r0\]'
+[^:]*:124: Error: r15 not allowed here -- `ldrexh r0,\[pc\]'
+[^:]*:127: Error: r15 not allowed here -- `ldrh pc,\[r0\]'
+[^:]*:128: Error: r15 not allowed here -- `ldrh pc,\[r0,#4\]'
+[^:]*:131: Error: r15 not allowed here -- `ldrh.w pc,\[r0\]'
+[^:]*:132: Error: r15 not allowed here -- `ldrh.w pc,\[r0,#4\]'
+[^:]*:135: Error: r15 not allowed here -- `ldrh pc,\[r0,#-3\]'
+[^:]*:137: Error: r15 not allowed here -- `ldrh pc,\[r0\],#4'
+[^:]*:139: Error: r15 not allowed here -- `ldrh pc,\[r0,#4\]!'
+[^:]*:143: Error: r15 not allowed here -- `ldrh pc,label'
+[^:]*:144: Error: r15 not allowed here -- `ldrh pc,\[pc,#-0\]'
+[^:]*:149: Error: r15 not allowed here -- `ldrh pc,\[r0,r1\]'
+[^:]*:150: Error: cannot use register index with PC-relative addressing -- `ldrh r0,\[pc,r1\]'
+[^:]*:151: Error: r15 not allowed here -- `ldrh r0,\[r1,pc\]'
+[^:]*:152: Error: r15 not allowed here -- `ldrh.w pc,\[r0,r1,LSL#1\]'
+[^:]*:154: Error: r15 not allowed here -- `ldrh.w r2,\[r0,pc,LSL#1\]'
+[^:]*:158: Error: r15 not allowed here -- `ldrht pc,\[r0,#4\]'
+[^:]*:162: Error: r15 not allowed here -- `ldrsb pc,\[r0,#4\]'
+[^:]*:165: Error: r15 not allowed here -- `ldrsb pc,\[r0,#-4\]'
+[^:]*:167: Error: r15 not allowed here -- `ldrsb pc,\[r0\],#4'
+[^:]*:169: Error: r15 not allowed here -- `ldrsb pc,\[r0,#4\]!'
+[^:]*:173: Error: r15 not allowed here -- `ldrsb pc,label'
+[^:]*:174: Error: r15 not allowed here -- `ldrsb pc,\[pc,#-0\]'
+[^:]*:179: Error: r15 not allowed here -- `ldrsb pc,\[r0,r1\]'
+[^:]*:180: Error: cannot use register index with PC-relative addressing -- `ldrsb r0,\[pc,r1\]'
+[^:]*:181: Error: r15 not allowed here -- `ldrsb r0,\[r1,pc\]'
+[^:]*:182: Error: r15 not allowed here -- `ldrsb.w pc,\[r0,r1,LSL#2\]'
+[^:]*:185: Error: r15 not allowed here -- `ldrsb.w r2,\[r0,pc,LSL#2\]'
+[^:]*:190: Error: r15 not allowed here -- `ldrsbt pc,\[r0,#4\]'
+[^:]*:195: Error: r15 not allowed here -- `ldrsh pc,\[r0,#4\]'
+[^:]*:197: Error: r15 not allowed here -- `ldrsh pc,\[r0,#-4\]'
+[^:]*:198: Error: r15 not allowed here -- `ldrsh pc,\[r0\],#4'
+[^:]*:199: Error: r15 not allowed here -- `ldrsh pc,\[r0,#4\]!'
+[^:]*:205: Error: r15 not allowed here -- `ldrsh pc,label'
+[^:]*:210: Error: r15 not allowed here -- `ldrsh pc,\[r0,r1\]'
+[^:]*:211: Error: cannot use register index with PC-relative addressing -- `ldrsh r0,\[pc,r1\]'
+[^:]*:212: Error: r15 not allowed here -- `ldrsh r0,\[r1,pc\]'
+[^:]*:214: Error: r15 not allowed here -- `ldrsh.w pc,\[r0,r1,LSL#3\]'
+[^:]*:217: Error: r15 not allowed here -- `ldrsh.w r0,\[r1,pc,LSL#3\]'
+[^:]*:221: Error: r15 not allowed here -- `ldrsht pc,\[r0,#4\]'
+[^:]*:226: Error: r15 not allowed here -- `ldrt pc,\[r0,#4\]'
+[^:]*:232: Error: r15 not allowed here -- `str pc,\[r0,#4\]'
+[^:]*:233: Error: cannot use register index with PC-relative addressing -- `str.w r0,\[pc,#4\]'
+[^:]*:234: Error: cannot use register index with PC-relative addressing -- `str r0,\[pc,#-4\]'
+[^:]*:235: Error: cannot use post-indexing with PC-relative addressing -- `str r0,\[pc\],#4'
+[^:]*:236: Error: cannot use writeback with PC-relative addressing -- `str r0,\[pc,#4\]!'
+[^:]*:239: Error: cannot use register index with PC-relative addressing -- `str.w r0,\[pc,r1\]'
+[^:]*:240: Error: cannot use register index with PC-relative addressing -- `str.w r0,\[pc,r1,LSL#2\]'
+[^:]*:246: Error: cannot use register index with PC-relative addressing -- `strb.w r0,\[pc,#4\]'
+[^:]*:247: Error: r15 not allowed here -- `strb.w pc,\[r0,#4\]'
+[^:]*:249: Error: cannot use register index with PC-relative addressing -- `strb r0,\[pc,#-4\]'
+[^:]*:250: Error: cannot use post-indexing with PC-relative addressing -- `strb r0,\[pc\],#4'
+[^:]*:251: Error: cannot use writeback with PC-relative addressing -- `strb r0,\[pc,#4\]!'
+[^:]*:252: Error: r15 not allowed here -- `strb pc,\[r0,#-4\]'
+[^:]*:253: Error: r15 not allowed here -- `strb pc,\[r0\],#4'
+[^:]*:254: Error: r15 not allowed here -- `strb pc,\[r0,#4\]!'
+[^:]*:260: Error: cannot use register index with PC-relative addressing -- `strb.w r0,\[pc,r1\]'
+[^:]*:261: Error: cannot use register index with PC-relative addressing -- `strb.w r0,\[pc,r1,LSL#2\]'
+[^:]*:262: Error: r15 not allowed here -- `strb.w pc,\[r0,r1\]'
+[^:]*:263: Error: r15 not allowed here -- `strb.w pc,\[r0,r1,LSL#2\]'
+[^:]*:266: Error: r15 not allowed here -- `strb.w r0,\[r1,pc\]'
+[^:]*:267: Error: r15 not allowed here -- `strb.w r0,\[r1,pc,LSL#2\]'
+[^:]*:272: Error: cannot use register index with PC-relative addressing -- `strbt r0,\[pc,#4\]'
+[^:]*:273: Error: r15 not allowed here -- `strbt pc,\[r0,#4\]'
+[^:]*:277: Error: cannot use register index with PC-relative addressing -- `strd r0,r1,\[pc,#4\]'
+[^:]*:278: Error: cannot use post-indexing with PC-relative addressing -- `strd r0,r1,\[pc\],#4'
+[^:]*:279: Error: cannot use writeback with PC-relative addressing -- `strd r0,r1,\[pc,#4\]!'
+[^:]*:280: Error: r15 not allowed here -- `strd pc,r0,\[r1,#4\]'
+[^:]*:281: Error: r15 not allowed here -- `strd pc,r0,\[r1\],#4'
+[^:]*:282: Error: r15 not allowed here -- `strd pc,r0,\[r1,#4\]!'
+[^:]*:286: Error: r15 not allowed here -- `strd r0,pc,\[r1,#4\]'
+[^:]*:287: Error: r15 not allowed here -- `strd r0,pc,\[r1\],#4'
+[^:]*:288: Error: r15 not allowed here -- `strd r0,pc,\[r1,#4\]!'
+[^:]*:297: Error: r15 not allowed here -- `strex pc,r0,\[r1\]'
+[^:]*:298: Error: r15 not allowed here -- `strex pc,r0,\[r1,#4\]'
+[^:]*:301: Error: r15 not allowed here -- `strex r0,pc,\[r1\]'
+[^:]*:302: Error: r15 not allowed here -- `strex r0,pc,\[r1,#4\]'
+[^:]*:305: Error: r15 not allowed here -- `strex r0,r1,\[pc\]'
+[^:]*:306: Error: r15 not allowed here -- `strex r0,r1,\[pc,#4\]'
+[^:]*:309: Error: r15 not allowed here -- `strexb pc,r0,\[r1\]'
+[^:]*:311: Error: r15 not allowed here -- `strexb r0,pc,\[r1\]'
+[^:]*:313: Error: r15 not allowed here -- `strexb r0,r1,\[pc\]'
+[^:]*:316: Error: r15 not allowed here -- `strexd pc,r0,r1,\[r2\]'
+[^:]*:318: Error: r15 not allowed here -- `strexd r0,pc,r1,\[r2\]'
+[^:]*:320: Error: r15 not allowed here -- `strexd r0,r1,pc,\[r2\]'
+[^:]*:322: Error: r15 not allowed here -- `strexd r0,r1,r2,\[pc\]'
+[^:]*:325: Error: r15 not allowed here -- `strexh pc,r0,\[r1\]'
+[^:]*:327: Error: r15 not allowed here -- `strexh r0,pc,\[r1\]'
+[^:]*:329: Error: r15 not allowed here -- `strexh r0,r1,\[pc\]'
+[^:]*:332: Error: cannot use register index with PC-relative addressing -- `strh.w r0,\[pc\]'
+[^:]*:333: Error: cannot use register index with PC-relative addressing -- `strh.w r0,\[pc,#4\]'
+[^:]*:334: Error: cannot use register index with PC-relative addressing -- `strh r0,\[pc,#-4\]'
+[^:]*:335: Error: cannot use post-indexing with PC-relative addressing -- `strh r0,\[pc\],#4'
+[^:]*:336: Error: cannot use writeback with PC-relative addressing -- `strh r0,\[pc,#4\]!'
+[^:]*:339: Error: cannot use register index with PC-relative addressing -- `strh.w r0,\[pc,r1\]'
+[^:]*:340: Error: cannot use register index with PC-relative addressing -- `strh.w r0,\[pc,r1,LSL#2\]'
+[^:]*:341: Error: r15 not allowed here -- `strh.w pc,\[r0,#4\]'
+[^:]*:342: Error: r15 not allowed here -- `strh.w pc,\[r0\]'
+[^:]*:345: Error: r15 not allowed here -- `strh pc,\[r0,#-4\]'
+[^:]*:346: Error: r15 not allowed here -- `strh pc,\[r0\],#4'
+[^:]*:347: Error: r15 not allowed here -- `strh pc,\[r0,#4\]!'
+[^:]*:351: Error: r15 not allowed here -- `strh.w pc,\[r0,r1\]'
+[^:]*:353: Error: r15 not allowed here -- `strh.w r0,\[r1,pc\]'
+[^:]*:355: Error: r15 not allowed here -- `strh.w pc,\[r0,r1,LSL#2\]'
+[^:]*:357: Error: r15 not allowed here -- `strh.w r0,\[r1,pc,LSL#2\]'
+[^:]*:361: Error: cannot use register index with PC-relative addressing -- `strht r0,\[pc,#4\]'
+[^:]*:362: Error: r15 not allowed here -- `strht pc,\[r0,#4\]'
+[^:]*:363: Error: cannot use register index with PC-relative addressing -- `strht sp,\[pc,#4\]'
+[^:]*:366: Error: cannot use register index with PC-relative addressing -- `strt r0,\[pc,#4\]'
+[^:]*:367: Error: r15 not allowed here -- `strt pc,\[r0,#4\]'
diff --git a/gas/testsuite/gas/arm/sp-pc-validations-bad-t.d b/gas/testsuite/gas/arm/sp-pc-validations-bad-t.d
index 8579f43..7c84944 100644
--- a/gas/testsuite/gas/arm/sp-pc-validations-bad-t.d
+++ b/gas/testsuite/gas/arm/sp-pc-validations-bad-t.d
@@ -1,2 +1,3 @@
-# name: Invalid SP and PC operands test - THUMB
+# name: Invalid SP and PC operands test - THUMB (v7a)
+# as: -march=armv7-a
 # error-output: sp-pc-validations-bad-t.l
diff --git a/gas/testsuite/gas/arm/sp-pc-validations-bad-t.s b/gas/testsuite/gas/arm/sp-pc-validations-bad-t.s
index 3da0861..8ea4766 100644
--- a/gas/testsuite/gas/arm/sp-pc-validations-bad-t.s
+++ b/gas/testsuite/gas/arm/sp-pc-validations-bad-t.s
@@ -1,5 +1,5 @@
 .syntax unified
-.arch armv7-a
+@ Enable Thumb mode
 .thumb
 .macro it_test opcode operands:vararg
 itt eq
diff --git a/gas/testsuite/gas/arm/sp-usage-thumb2-relax-on-v7.d b/gas/testsuite/gas/arm/sp-usage-thumb2-relax-on-v7.d
new file mode 100644
index 0000000..0707f0e
--- /dev/null
+++ b/gas/testsuite/gas/arm/sp-usage-thumb2-relax-on-v7.d
@@ -0,0 +1,4 @@
+#as: -march=armv7-a
+#name: Invalid SP operands test - THUMB (v7a)
+#source: sp-usage-thumb2-relax.s
+#error-output: sp-usage-thumb2-relax-on-v7.l
diff --git a/gas/testsuite/gas/arm/sp-usage-thumb2-relax-on-v7.l b/gas/testsuite/gas/arm/sp-usage-thumb2-relax-on-v7.l
new file mode 100644
index 0000000..f19274a
--- /dev/null
+++ b/gas/testsuite/gas/arm/sp-usage-thumb2-relax-on-v7.l
@@ -0,0 +1,17 @@
+[^:]*: Assembler messages:
+[^:]*:25: Error: r13 not allowed here -- `add.w sp,r7,#1'
+[^:]*:25: Error: r13 not allowed here -- `sub.w sp,r7,#1'
+[^:]*:25: Error: r13 not allowed here -- `addw sp,r7,#1'
+[^:]*:25: Error: r13 not allowed here -- `subw sp,r7,#1'
+[^:]*:26: Error: r13 not allowed here -- `bic r7,sp,r2'
+[^:]*:26: Error: r13 not allowed here -- `sbcs r7,sp,r2'
+[^:]*:26: Error: r13 not allowed here -- `and r7,sp,r2'
+[^:]*:26: Error: r13 not allowed here -- `eor r7,sp,r2'
+[^:]*:27: Error: r13 not allowed here -- `smlabb sp,sp,sp,sp'
+[^:]*:27: Error: r13 not allowed here -- `smlabb r0,sp,r3,r11'
+[^:]*:27: Error: r13 not allowed here -- `smlatb sp,sp,sp,sp'
+[^:]*:27: Error: r13 not allowed here -- `smlatb r0,sp,r3,r11'
+[^:]*:27: Error: r13 not allowed here -- `smlabt sp,sp,sp,sp'
+[^:]*:27: Error: r13 not allowed here -- `smlabt r0,sp,r3,r11'
+[^:]*:27: Error: r13 not allowed here -- `smlabt sp,sp,sp,sp'
+[^:]*:27: Error: r13 not allowed here -- `smlabt r0,sp,r3,r11'
diff --git a/gas/testsuite/gas/arm/sp-usage-thumb2-relax-on-v8.d b/gas/testsuite/gas/arm/sp-usage-thumb2-relax-on-v8.d
new file mode 100644
index 0000000..be2bb9e
--- /dev/null
+++ b/gas/testsuite/gas/arm/sp-usage-thumb2-relax-on-v8.d
@@ -0,0 +1,25 @@
+#as: -march=armv8-a
+#source: sp-usage-thumb2-relax.s
+#objdump: -d
+
+.*:     file format .*
+
+Disassembly of section \.text:
+
+.* <.*>:
+.*:	f107 0d01 	add.w	sp, r7, #1
+.*:	f1a7 0d01 	sub.w	sp, r7, #1
+.*:	f207 0d01 	addw	sp, r7, #1
+.*:	f2a7 0d01 	subw	sp, r7, #1
+.*:	ea2d 0702 	bic.w	r7, sp, r2
+.*:	eb7d 0702 	sbcs.w	r7, sp, r2
+.*:	ea0d 0702 	and.w	r7, sp, r2
+.*:	ea8d 0702 	eor.w	r7, sp, r2
+.*:	fb1d dd0d 	smlabb	sp, sp, sp, sp
+.*:	fb1d b003 	smlabb	r0, sp, r3, fp
+.*:	fb1d dd2d 	smlatb	sp, sp, sp, sp
+.*:	fb1d b023 	smlatb	r0, sp, r3, fp
+.*:	fb1d dd1d 	smlabt	sp, sp, sp, sp
+.*:	fb1d b013 	smlabt	r0, sp, r3, fp
+.*:	fb1d dd1d 	smlabt	sp, sp, sp, sp
+.*:	fb1d b013 	smlabt	r0, sp, r3, fp
diff --git a/gas/testsuite/gas/arm/sp-usage-thumb2-relax.s b/gas/testsuite/gas/arm/sp-usage-thumb2-relax.s
new file mode 100644
index 0000000..99a3bf6
--- /dev/null
+++ b/gas/testsuite/gas/arm/sp-usage-thumb2-relax.s
@@ -0,0 +1,27 @@
+	.macro iter_addsub
+	.irp m, add.w, sub.w, addw, subw
+	   \m sp, r7, #1
+	.endr
+	.endm
+
+	.macro iter_arith3
+	.irp m, bic, sbcs, and, eor
+	   \m r7, sp, r2
+	.endr
+	.endm
+
+	.macro iter_mla
+	.irp m, smlabb, smlatb, smlabt, smlabt
+	   \m sp, sp, sp, sp
+	   \m r0, sp, r3, r11
+	.endr
+	.endm
+
+	.syntax unified
+	.text
+	.thumb
+	.global foo
+foo:
+	iter_addsub
+	iter_arith3
+	iter_mla
diff --git a/gas/testsuite/gas/arm/strex-bad-t.d b/gas/testsuite/gas/arm/strex-bad-t.d
index f5ec4c5..3640746 100644
--- a/gas/testsuite/gas/arm/strex-bad-t.d
+++ b/gas/testsuite/gas/arm/strex-bad-t.d
@@ -1,3 +1,4 @@
 # name: Bad addressing modes STREXH/STREXB. - THUMB
+# as: -march=armv7-a
 # error-output: strex-bad-t.l
 

commit 71729203ae7b857b6468524e56a593254413eddc
Author: Tristan Gingold <gingold@adacore.com>
Date:   Tue Jul 25 16:44:47 2017 +0200

    Version 2.28.1
    
    bfd/
    2017-07-25  Tristan Gingold  <gingold@adacore.com>
    
    	* version.m4: Bump version to 2.28.1
    	* configure: Regenerate.
    
    binutils/
    2017-07-25  Tristan Gingold  <gingold@adacore.com>
    
    	* configure: Regenerate.
    
    gas/
    2017-07-25  Tristan Gingold  <gingold@adacore.com>
    
    	* configure: Regenerate.
    
    gprof/
    2017-07-25  Tristan Gingold  <gingold@adacore.com>
    
    	* configure: Regenerate.
    
    ld/
    2017-07-25  Tristan Gingold  <gingold@adacore.com>
    
    	* configure: Regenerate.
    
    opcodes/
    2017-07-25  Tristan Gingold  <gingold@adacore.com>
    
    	* configure: Regenerate.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 085e9c4..f99ec05 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,12 @@
+2017-07-25  Tristan Gingold  <gingold@adacore.com>
+
+	* version.m4: Bump version to 2.28.1
+	* configure: Regenerate.
+
+2017-07-25  Tristan Gingold  <gingold@adacore.com>
+
+	* development.sh: Set development to false.
+
 2017-06-22  Eric Christopher  <echristo@gmail.com>
 
 	Backport from mainline
diff --git a/bfd/configure b/bfd/configure
index f30bfab..48d2bde 100755
--- a/bfd/configure
+++ b/bfd/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for bfd 2.28.0.
+# Generated by GNU Autoconf 2.64 for bfd 2.28.1.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='bfd'
 PACKAGE_TARNAME='bfd'
-PACKAGE_VERSION='2.28.0'
-PACKAGE_STRING='bfd 2.28.0'
+PACKAGE_VERSION='2.28.1'
+PACKAGE_STRING='bfd 2.28.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1354,7 +1354,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures bfd 2.28.0 to adapt to many kinds of systems.
+\`configure' configures bfd 2.28.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1425,7 +1425,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of bfd 2.28.0:";;
+     short | recursive ) echo "Configuration of bfd 2.28.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1546,7 +1546,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-bfd configure 2.28.0
+bfd configure 2.28.1
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -2188,7 +2188,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by bfd $as_me 2.28.0, which was
+It was created by bfd $as_me 2.28.1, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -3997,7 +3997,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='bfd'
- VERSION='2.28.0'
+ VERSION='2.28.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -16613,7 +16613,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by bfd $as_me 2.28.0, which was
+This file was extended by bfd $as_me 2.28.1, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -16677,7 +16677,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-bfd config.status 2.28.0
+bfd config.status 2.28.1
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
diff --git a/bfd/development.sh b/bfd/development.sh
index cd31410..b001a88 100644
--- a/bfd/development.sh
+++ b/bfd/development.sh
@@ -16,4 +16,4 @@
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
 # Controls whether to enable development-mode features by default.
-development=true
+development=false
diff --git a/bfd/version.m4 b/bfd/version.m4
index 8bde21e..67e8bed 100644
--- a/bfd/version.m4
+++ b/bfd/version.m4
@@ -1 +1 @@
-m4_define([BFD_VERSION], [2.28.0])
+m4_define([BFD_VERSION], [2.28.1])
diff --git a/binutils/ChangeLog b/binutils/ChangeLog
index 431822a..20bd0be 100644
--- a/binutils/ChangeLog
+++ b/binutils/ChangeLog
@@ -1,3 +1,7 @@
+2017-07-25  Tristan Gingold  <gingold@adacore.com>
+
+	* configure: Regenerate.
+
 2017-05-18  Alan Modra  <amodra@gmail.com>
 
 	Apply from master
diff --git a/binutils/configure b/binutils/configure
index 82119ef..2032de1 100755
--- a/binutils/configure
+++ b/binutils/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for binutils 2.28.0.
+# Generated by GNU Autoconf 2.64 for binutils 2.28.1.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='binutils'
 PACKAGE_TARNAME='binutils'
-PACKAGE_VERSION='2.28.0'
-PACKAGE_STRING='binutils 2.28.0'
+PACKAGE_VERSION='2.28.1'
+PACKAGE_STRING='binutils 2.28.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1338,7 +1338,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures binutils 2.28.0 to adapt to many kinds of systems.
+\`configure' configures binutils 2.28.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1409,7 +1409,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of binutils 2.28.0:";;
+     short | recursive ) echo "Configuration of binutils 2.28.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1530,7 +1530,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-binutils configure 2.28.0
+binutils configure 2.28.1
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -2172,7 +2172,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by binutils $as_me 2.28.0, which was
+It was created by binutils $as_me 2.28.1, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -3981,7 +3981,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='binutils'
- VERSION='2.28.0'
+ VERSION='2.28.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -15223,7 +15223,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by binutils $as_me 2.28.0, which was
+This file was extended by binutils $as_me 2.28.1, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -15287,7 +15287,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-binutils config.status 2.28.0
+binutils config.status 2.28.1
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
diff --git a/binutils/doc/addr2line.1 b/binutils/doc/addr2line.1
index 253bdd2..505b12d 100644
--- a/binutils/doc/addr2line.1
+++ b/binutils/doc/addr2line.1
@@ -1,4 +1,4 @@
-.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
+.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
 .\"
 .\" Standard preamble:
 .\" ========================================================================
@@ -133,7 +133,7 @@
 .\" ========================================================================
 .\"
 .IX Title "ADDR2LINE 1"
-.TH ADDR2LINE 1 "2017-03-02" "binutils-2.28" "GNU Development Tools"
+.TH ADDR2LINE 1 "2017-07-25" "binutils-2.28.1" "GNU Development Tools"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
diff --git a/binutils/doc/ar.1 b/binutils/doc/ar.1
index 61b05c2..bc157fd 100644
--- a/binutils/doc/ar.1
+++ b/binutils/doc/ar.1
@@ -1,4 +1,4 @@
-.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
+.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
 .\"
 .\" Standard preamble:
 .\" ========================================================================
@@ -133,7 +133,7 @@
 .\" ========================================================================
 .\"
 .IX Title "AR 1"
-.TH AR 1 "2017-03-02" "binutils-2.28" "GNU Development Tools"
+.TH AR 1 "2017-07-25" "binutils-2.28.1" "GNU Development Tools"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
diff --git a/binutils/sysinfo.c b/binutils/sysinfo.c
index 84a1e55..9f64d55 100644
--- a/binutils/sysinfo.c
+++ b/binutils/sysinfo.c
@@ -1,8 +1,8 @@
-/* A Bison parser, made by GNU Bison 3.0.  */
+/* A Bison parser, made by GNU Bison 3.0.4.  */
 
 /* Bison implementation for Yacc-like parsers in C
 
-   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.
+   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.
 
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -44,7 +44,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "3.0"
+#define YYBISON_VERSION "3.0.4"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -82,11 +82,11 @@ extern int yylex (void);
 
 #line 84 "sysinfo.c" /* yacc.c:339  */
 
-# ifndef YY_NULL
+# ifndef YY_NULLPTR
 #  if defined __cplusplus && 201103L <= __cplusplus
-#   define YY_NULL nullptr
+#   define YY_NULLPTR nullptr
 #  else
-#   define YY_NULL 0
+#   define YY_NULLPTR 0
 #  endif
 # endif
 
@@ -133,7 +133,7 @@ extern int yydebug;
 
 /* Value type.  */
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
-typedef union YYSTYPE YYSTYPE;
+
 union YYSTYPE
 {
 #line 40 "sysinfo.y" /* yacc.c:355  */
@@ -143,6 +143,8 @@ union YYSTYPE
 
 #line 145 "sysinfo.c" /* yacc.c:355  */
 };
+
+typedef union YYSTYPE YYSTYPE;
 # define YYSTYPE_IS_TRIVIAL 1
 # define YYSTYPE_IS_DECLARED 1
 #endif
@@ -156,7 +158,7 @@ int yyparse (void);
 
 /* Copy the second part of user declarations.  */
 
-#line 160 "sysinfo.c" /* yacc.c:358  */
+#line 162 "sysinfo.c" /* yacc.c:358  */
 
 #ifdef short
 # undef short
@@ -213,11 +215,30 @@ typedef short int yytype_int16;
 # endif
 #endif
 
-#ifndef __attribute__
-/* This feature is available in gcc versions 2.5 and later.  */
-# if (! defined __GNUC__ || __GNUC__ < 2 \
-      || (__GNUC__ == 2 && __GNUC_MINOR__ < 5))
-#  define __attribute__(Spec) /* empty */
+#ifndef YY_ATTRIBUTE
+# if (defined __GNUC__                                               \
+      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
+     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
+#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
+# else
+#  define YY_ATTRIBUTE(Spec) /* empty */
+# endif
+#endif
+
+#ifndef YY_ATTRIBUTE_PURE
+# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
+#endif
+
+#ifndef YY_ATTRIBUTE_UNUSED
+# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
+#endif
+
+#if !defined _Noreturn \
+     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
+# if defined _MSC_VER && 1200 <= _MSC_VER
+#  define _Noreturn __declspec (noreturn)
+# else
+#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
 # endif
 #endif
 
@@ -450,7 +471,7 @@ static const char *const yytname[] =
   "NAME", "NUMBER", "UNIT", "$accept", "top", "$@1", "it_list", "it",
   "$@2", "it_field_list", "repeat_it_field", "$@3", "cond_it_field", "$@4",
   "it_field", "$@5", "attr_type", "attr_desc", "attr_size", "attr_id",
-  "enums", "enum_list", YY_NULL
+  "enums", "enum_list", YY_NULLPTR
 };
 #endif
 
@@ -841,11 +862,11 @@ static int
 yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                 yytype_int16 *yyssp, int yytoken)
 {
-  YYSIZE_T yysize0 = yytnamerr (YY_NULL, yytname[yytoken]);
+  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
   YYSIZE_T yysize = yysize0;
   enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
   /* Internationalized format string. */
-  const char *yyformat = YY_NULL;
+  const char *yyformat = YY_NULLPTR;
   /* Arguments of yyformat. */
   char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
   /* Number of reported tokens (one for the "unexpected", one per
@@ -902,7 +923,7 @@ yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                   }
                 yyarg[yycount++] = yytname[yyx];
                 {
-                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULL, yytname[yyx]);
+                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                   if (! (yysize <= yysize1
                          && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                     return 2;
@@ -1234,7 +1255,7 @@ yyreduce:
   switch (yyn)
     {
         case 2:
-#line 54 "sysinfo.y" /* yacc.c:1661  */
+#line 54 "sysinfo.y" /* yacc.c:1646  */
     {
   switch (writecode)
     {
@@ -1257,11 +1278,11 @@ yyreduce:
       break;
     }
  }
-#line 1261 "sysinfo.c" /* yacc.c:1661  */
+#line 1282 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 3:
-#line 76 "sysinfo.y" /* yacc.c:1661  */
+#line 76 "sysinfo.y" /* yacc.c:1646  */
     {
   switch (writecode) {
   case 'i':
@@ -1274,11 +1295,11 @@ yyreduce:
     break;
   }
 }
-#line 1278 "sysinfo.c" /* yacc.c:1661  */
+#line 1299 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 6:
-#line 98 "sysinfo.y" /* yacc.c:1661  */
+#line 98 "sysinfo.y" /* yacc.c:1646  */
     {
 	it = (yyvsp[-1].s); code = (yyvsp[0].i);
 	switch (writecode)
@@ -1328,11 +1349,11 @@ yyreduce:
 	  }
 
       }
-#line 1332 "sysinfo.c" /* yacc.c:1661  */
+#line 1353 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 7:
-#line 149 "sysinfo.y" /* yacc.c:1661  */
+#line 149 "sysinfo.y" /* yacc.c:1646  */
     {
   switch (writecode) {
   case 'd':
@@ -1347,11 +1368,11 @@ yyreduce:
     printf("}\n");
   }
 }
-#line 1351 "sysinfo.c" /* yacc.c:1661  */
+#line 1372 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 12:
-#line 175 "sysinfo.y" /* yacc.c:1661  */
+#line 175 "sysinfo.y" /* yacc.c:1646  */
     {
 	  rdepth++;
 	  switch (writecode)
@@ -1380,11 +1401,11 @@ yyreduce:
 	  oldrepeat = repeat;
          repeat = (yyvsp[0].s);
 	}
-#line 1384 "sysinfo.c" /* yacc.c:1661  */
+#line 1405 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 13:
-#line 206 "sysinfo.y" /* yacc.c:1661  */
+#line 206 "sysinfo.y" /* yacc.c:1646  */
     {
 	  repeat = oldrepeat;
 	  oldrepeat =0;
@@ -1398,11 +1419,11 @@ yyreduce:
 	  printf("\t}}\n");
 	}
 	}
-#line 1402 "sysinfo.c" /* yacc.c:1661  */
+#line 1423 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 14:
-#line 223 "sysinfo.y" /* yacc.c:1661  */
+#line 223 "sysinfo.y" /* yacc.c:1646  */
     {
 	  switch (writecode)
 	    {
@@ -1414,11 +1435,11 @@ yyreduce:
 	      break;
 	    }
 	}
-#line 1418 "sysinfo.c" /* yacc.c:1661  */
+#line 1439 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 15:
-#line 236 "sysinfo.y" /* yacc.c:1661  */
+#line 236 "sysinfo.y" /* yacc.c:1646  */
     {
 	  switch (writecode)
 	    {
@@ -1429,17 +1450,17 @@ yyreduce:
 	  printf("\t}\n");
 	}
 	}
-#line 1433 "sysinfo.c" /* yacc.c:1661  */
+#line 1454 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 16:
-#line 250 "sysinfo.y" /* yacc.c:1661  */
+#line 250 "sysinfo.y" /* yacc.c:1646  */
     {name = (yyvsp[0].s); }
-#line 1439 "sysinfo.c" /* yacc.c:1661  */
+#line 1460 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 17:
-#line 252 "sysinfo.y" /* yacc.c:1661  */
+#line 252 "sysinfo.y" /* yacc.c:1646  */
     {
 	  char *desc = (yyvsp[-8].s);
 	  char *type = (yyvsp[-6].s);
@@ -1540,47 +1561,47 @@ char *ptr = pnames[rdepth];
 		  break;
 		}
 	}
-#line 1544 "sysinfo.c" /* yacc.c:1661  */
+#line 1565 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 18:
-#line 357 "sysinfo.y" /* yacc.c:1661  */
+#line 357 "sysinfo.y" /* yacc.c:1646  */
     { (yyval.s) = (yyvsp[0].s); }
-#line 1550 "sysinfo.c" /* yacc.c:1661  */
+#line 1571 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 19:
-#line 358 "sysinfo.y" /* yacc.c:1661  */
+#line 358 "sysinfo.y" /* yacc.c:1646  */
     { (yyval.s) = "INT";}
-#line 1556 "sysinfo.c" /* yacc.c:1661  */
+#line 1577 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 20:
-#line 363 "sysinfo.y" /* yacc.c:1661  */
+#line 363 "sysinfo.y" /* yacc.c:1646  */
     { (yyval.s) = (yyvsp[-1].s); }
-#line 1562 "sysinfo.c" /* yacc.c:1661  */
+#line 1583 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 21:
-#line 368 "sysinfo.y" /* yacc.c:1661  */
+#line 368 "sysinfo.y" /* yacc.c:1646  */
     { (yyval.i) = (yyvsp[-1].i) * (yyvsp[0].i); }
-#line 1568 "sysinfo.c" /* yacc.c:1661  */
+#line 1589 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 22:
-#line 373 "sysinfo.y" /* yacc.c:1661  */
+#line 373 "sysinfo.y" /* yacc.c:1646  */
     { (yyval.s) = (yyvsp[-1].s); }
-#line 1574 "sysinfo.c" /* yacc.c:1661  */
+#line 1595 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 23:
-#line 374 "sysinfo.y" /* yacc.c:1661  */
+#line 374 "sysinfo.y" /* yacc.c:1646  */
     { (yyval.s) = "dummy";}
-#line 1580 "sysinfo.c" /* yacc.c:1661  */
+#line 1601 "sysinfo.c" /* yacc.c:1646  */
     break;
 
   case 27:
-#line 382 "sysinfo.y" /* yacc.c:1661  */
+#line 382 "sysinfo.y" /* yacc.c:1646  */
     {
 	  switch (writecode)
 	    {
@@ -1591,11 +1612,11 @@ char *ptr = pnames[rdepth];
 		printf("if (ptr->%s%s == %s) { tabout(); printf(\"%s\\n\");}\n", name, names[rdepth],(yyvsp[-1].s),(yyvsp[-2].s));
 	    }
 	}
-#line 1595 "sysinfo.c" /* yacc.c:1661  */
+#line 1616 "sysinfo.c" /* yacc.c:1646  */
     break;
 
 
-#line 1599 "sysinfo.c" /* yacc.c:1661  */
+#line 1620 "sysinfo.c" /* yacc.c:1646  */
       default: break;
     }
   /* User semantic actions sometimes alter yychar, and that requires
diff --git a/binutils/sysinfo.h b/binutils/sysinfo.h
index 1b80330..1b75444 100644
--- a/binutils/sysinfo.h
+++ b/binutils/sysinfo.h
@@ -1,8 +1,8 @@
-/* A Bison parser, made by GNU Bison 3.0.  */
+/* A Bison parser, made by GNU Bison 3.0.4.  */
 
 /* Bison interface for Yacc-like parsers in C
 
-   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.
+   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.
 
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -63,16 +63,18 @@ extern int yydebug;
 
 /* Value type.  */
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
-typedef union YYSTYPE YYSTYPE;
+
 union YYSTYPE
 {
-#line 40 "sysinfo.y" /* yacc.c:1915  */
+#line 40 "sysinfo.y" /* yacc.c:1909  */
 
  int i;
  char *s;
 
-#line 75 "sysinfo.h" /* yacc.c:1915  */
+#line 75 "sysinfo.h" /* yacc.c:1909  */
 };
+
+typedef union YYSTYPE YYSTYPE;
 # define YYSTYPE_IS_TRIVIAL 1
 # define YYSTYPE_IS_DECLARED 1
 #endif
diff --git a/etc/config.log b/etc/config.log
index 961533c..de7d273 100644
--- a/etc/config.log
+++ b/etc/config.log
@@ -4,48 +4,39 @@ running configure, to aid debugging if configure makes a mistake.
 It was created by configure, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
-  $ /Users/gingold/Repositories/fsf/binutils-release.git/etc/configure --srcdir=.././etc --cache-file=./config.cache --with-gnu-as --with-gnu-ld --program-transform-name=s&^&i386-pc-linux-gnu-& --disable-option-checking --build=x86_64-apple-darwin15.6.0 --host=x86_64-apple-darwin15.6.0 --target=i386-pc-linux-gnu
+  $ /home/gingold/Repositories/fsf/binutils-release.git/etc/configure --srcdir=.././etc --cache-file=./config.cache --with-gnu-as --with-gnu-ld --program-transform-name=s&^&i386-pc-linux-gnu-& --disable-option-checking --build=x86_64-pc-linux-gnu --host=x86_64-pc-linux-gnu --target=i386-pc-linux-gnu
 
 ## --------- ##
 ## Platform. ##
 ## --------- ##
 
-hostname = dhcp-guest-231.act-europe.fr
+hostname = gingold-Precision-7510
 uname -m = x86_64
-uname -r = 15.6.0
-uname -s = Darwin
-uname -v = Darwin Kernel Version 15.6.0: Thu Sep  1 15:01:16 PDT 2016; root:xnu-3248.60.11~2/RELEASE_X86_64
+uname -r = 4.8.0-58-generic
+uname -s = Linux
+uname -v = #63~16.04.1-Ubuntu SMP Mon Jun 26 18:08:51 UTC 2017
 
-/usr/bin/uname -p = i386
+/usr/bin/uname -p = unknown
 /bin/uname -X     = unknown
 
 /bin/arch              = unknown
 /usr/bin/arch -k       = unknown
 /usr/convex/getsysinfo = unknown
-/usr/bin/hostinfo      = Mach kernel version:
-	 Darwin Kernel Version 15.6.0: Thu Sep  1 15:01:16 PDT 2016; root:xnu-3248.60.11~2/RELEASE_X86_64
-Kernel configured for up to 8 processors.
-4 processors are physically available.
-8 processors are logically available.
-Processor type: i486 (Intel 80486)
-Processors active: 0 1 2 3 4 5 6 7
-Primary memory available: 16.00 gigabytes
-Default processor set: 257 tasks, 1216 threads, 8 processors
-Load average: 2.03, Mach factor: 5.96
+/usr/bin/hostinfo      = unknown
 /bin/machine           = unknown
 /usr/bin/oslevel       = unknown
 /bin/universe          = unknown
 
-PATH: /Users/gingold/Repositories/fsf/release-binutils/tools/bin
-PATH: /Users/gingold/local/bin/
-PATH: /Users/gingold/work/gcc-6/gcc-inst/bin/
+PATH: /home/gingold/Repositories/fsf/release-binutils/tools/bin
+PATH: /usr/local/sbin
 PATH: /usr/local/bin
-PATH: /usr/local/bin
-PATH: /usr/bin
-PATH: /bin
 PATH: /usr/sbin
+PATH: /usr/bin
 PATH: /sbin
-PATH: /opt/X11/bin
+PATH: /bin
+PATH: /usr/games
+PATH: /usr/local/games
+PATH: /snap/bin
 
 
 ## ----------- ##
@@ -54,7 +45,7 @@ PATH: /opt/X11/bin
 
 configure:1572: creating cache ./config.cache
 configure:1683: checking for a BSD-compatible install
-configure:1751: result: /usr/local/bin/install -c
+configure:1751: result: /usr/bin/install -c
 configure:1850: updating cache ./config.cache
 configure:1923: creating ./config.status
 
@@ -71,7 +62,7 @@ generated by GNU Autoconf 2.64.  Invocation command line was
   CONFIG_COMMANDS = 
   $ ./config.status 
 
-on dhcp-guest-231.act-europe.fr
+on gingold-Precision-7510
 
 config.status:715: creating Makefile
 
@@ -80,20 +71,20 @@ config.status:715: creating Makefile
 ## ---------------- ##
 
 ac_cv_env_build_alias_set=set
-ac_cv_env_build_alias_value=x86_64-apple-darwin15.6.0
+ac_cv_env_build_alias_value=x86_64-pc-linux-gnu
 ac_cv_env_host_alias_set=set
-ac_cv_env_host_alias_value=x86_64-apple-darwin15.6.0
+ac_cv_env_host_alias_value=x86_64-pc-linux-gnu
 ac_cv_env_target_alias_set=set
 ac_cv_env_target_alias_value=i386-pc-linux-gnu
-ac_cv_path_install='/usr/local/bin/install -c'
+ac_cv_path_install='/usr/bin/install -c'
 
 ## ----------------- ##
 ## Output variables. ##
 ## ----------------- ##
 
 DEFS='-DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\"'
-ECHO_C='\c'
-ECHO_N=''
+ECHO_C=''
+ECHO_N='-n'
 ECHO_T=''
 INSTALL_DATA='${INSTALL} -m 644'
 INSTALL_PROGRAM='${INSTALL}'
@@ -109,15 +100,15 @@ PACKAGE_TARNAME=''
 PACKAGE_URL=''
 PACKAGE_VERSION=''
 PATH_SEPARATOR=':'
-SHELL='/bin/sh'
+SHELL='/bin/bash'
 bindir='${exec_prefix}/bin'
-build_alias='x86_64-apple-darwin15.6.0'
+build_alias='x86_64-pc-linux-gnu'
 datadir='${datarootdir}'
 datarootdir='${prefix}/share'
 docdir='${datarootdir}/doc/${PACKAGE}'
 dvidir='${docdir}'
 exec_prefix='${prefix}'
-host_alias='x86_64-apple-darwin15.6.0'
+host_alias='x86_64-pc-linux-gnu'
 htmldir='${docdir}'
 includedir='${prefix}/include'
 infodir='${datarootdir}/info'
diff --git a/gas/ChangeLog b/gas/ChangeLog
index 5d212d9..a1472bf 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,7 @@
+2017-07-25  Tristan Gingold  <gingold@adacore.com>
+
+	* configure: Regenerate.
+
 2017-07-23  Jiong Wang  <jiong.wang@arm.com>
 
 	Backport from mainline
diff --git a/gas/configure b/gas/configure
index e574cb8..5aa6dcb 100755
--- a/gas/configure
+++ b/gas/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for gas 2.28.0.
+# Generated by GNU Autoconf 2.64 for gas 2.28.1.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='gas'
 PACKAGE_TARNAME='gas'
-PACKAGE_VERSION='2.28.0'
-PACKAGE_STRING='gas 2.28.0'
+PACKAGE_VERSION='2.28.1'
+PACKAGE_STRING='gas 2.28.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1330,7 +1330,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures gas 2.28.0 to adapt to many kinds of systems.
+\`configure' configures gas 2.28.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1401,7 +1401,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of gas 2.28.0:";;
+     short | recursive ) echo "Configuration of gas 2.28.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1523,7 +1523,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-gas configure 2.28.0
+gas configure 2.28.1
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -1933,7 +1933,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by gas $as_me 2.28.0, which was
+It was created by gas $as_me 2.28.1, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -3742,7 +3742,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='gas'
- VERSION='2.28.0'
+ VERSION='2.28.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -15212,7 +15212,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by gas $as_me 2.28.0, which was
+This file was extended by gas $as_me 2.28.1, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -15276,7 +15276,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-gas config.status 2.28.0
+gas config.status 2.28.1
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
diff --git a/gas/doc/as.1 b/gas/doc/as.1
index 132e8e3..be5422e 100644
--- a/gas/doc/as.1
+++ b/gas/doc/as.1
@@ -1,4 +1,4 @@
-.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
+.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
 .\"
 .\" Standard preamble:
 .\" ========================================================================
@@ -133,7 +133,7 @@
 .\" ========================================================================
 .\"
 .IX Title "AS 1"
-.TH AS 1 "2017-03-02" "binutils-2.28" "GNU Development Tools"
+.TH AS 1 "2017-07-25" "binutils-2.28.1" "GNU Development Tools"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
@@ -1804,6 +1804,12 @@ branch at the beginning to skip execution of the nops.
 .PP
 The following options are available when as is configured for a
 RISC-V  processor.
+.IP "\fB\-fpic\fR" 4
+.IX Item "-fpic"
+Generate position-independent code
+.IP "\fB\-fno\-pic\fR" 4
+.IX Item "-fno-pic"
+Don't generate position-independent code (default)
 .IP "\fB\-march=ISA\fR" 4
 .IX Item "-march=ISA"
 Select the base isa, as specified by \s-1ISA. \s0 For example \-march=rv32ima.
diff --git a/gas/doc/as.info b/gas/doc/as.info
index ca4fa5b..64e81ee 100644
--- a/gas/doc/as.info
+++ b/gas/doc/as.info
@@ -1,12 +1,6 @@
-This is as.info, produced by makeinfo version 4.8 from as.texinfo.
+This is as.info, produced by makeinfo version 6.1 from as.texinfo.
 
-INFO-DIR-SECTION Software development
-START-INFO-DIR-ENTRY
-* As: (as).                     The GNU assembler.
-* Gas: (as).                    The GNU assembler.
-END-INFO-DIR-ENTRY
-
-   This file documents the GNU Assembler "as".
+This file documents the GNU Assembler "as".
 
    Copyright (C) 1991-2017 Free Software Foundation, Inc.
 
@@ -17,18 +11,24 @@ Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
 Texts.  A copy of the license is included in the section entitled "GNU
 Free Documentation License".
 
+INFO-DIR-SECTION Software development
+START-INFO-DIR-ENTRY
+* As: (as).                     The GNU assembler.
+* Gas: (as).                    The GNU assembler.
+END-INFO-DIR-ENTRY
+
 
 File: as.info,  Node: Top,  Next: Overview,  Up: (dir)
 
 Using as
 ********
 
-This file is a user guide to the GNU assembler `as' (GNU Binutils)
+This file is a user guide to the GNU assembler 'as' (GNU Binutils)
 version 2.28.
 
    This document is distributed under the terms of the GNU Free
-Documentation License.  A copy of the license is included in the
-section entitled "GNU Free Documentation License".
+Documentation License.  A copy of the license is included in the section
+entitled "GNU Free Documentation License".
 
 * Menu:
 
@@ -39,7 +39,6 @@ section entitled "GNU Free Documentation License".
 * Symbols::                     Symbols
 * Expressions::                 Expressions
 * Pseudo Ops::                  Assembler Directives
-
 * Object Attributes::           Object Attributes
 * Machine Dependencies::        Machine Dependent Features
 * Reporting Bugs::              Reporting Bugs
@@ -53,7 +52,7 @@ File: as.info,  Node: Overview,  Next: Invoking,  Prev: Top,  Up: Top
 1 Overview
 **********
 
-Here is a brief summary of how to invoke `as'.  For details, see *Note
+Here is a brief summary of how to invoke 'as'.  For details, see *note
 Command-Line Options: Invoking.
 
      as [-a[cdghlns][=FILE]] [-alternate] [-D]
@@ -334,113 +333,113 @@ Command-Line Options: Invoking.
        [ -forbid-undocumented-instructions] [-Fud]
        [ -forbid-unportable-instructions] [-Fup]
 
-`@FILE'
-     Read command-line options from FILE.  The options read are
-     inserted in place of the original @FILE option.  If FILE does not
-     exist, or cannot be read, then the option will be treated
-     literally, and not removed.
+
+
+'@FILE'
+     Read command-line options from FILE.  The options read are inserted
+     in place of the original @FILE option.  If FILE does not exist, or
+     cannot be read, then the option will be treated literally, and not
+     removed.
 
      Options in FILE are separated by whitespace.  A whitespace
      character may be included in an option by surrounding the entire
-     option in either single or double quotes.  Any character
-     (including a backslash) may be included by prefixing the character
-     to be included with a backslash.  The FILE may itself contain
-     additional @FILE options; any such options will be processed
-     recursively.
+     option in either single or double quotes.  Any character (including
+     a backslash) may be included by prefixing the character to be
+     included with a backslash.  The FILE may itself contain additional
+     @FILE options; any such options will be processed recursively.
 
-`-a[cdghlmns]'
+'-a[cdghlmns]'
      Turn on listings, in any of a variety of ways:
 
-    `-ac'
+     '-ac'
           omit false conditionals
 
-    `-ad'
+     '-ad'
           omit debugging directives
 
-    `-ag'
+     '-ag'
           include general information, like as version and options
           passed
 
-    `-ah'
+     '-ah'
           include high-level source
 
-    `-al'
+     '-al'
           include assembly
 
-    `-am'
+     '-am'
           include macro expansions
 
-    `-an'
+     '-an'
           omit forms processing
 
-    `-as'
+     '-as'
           include symbols
 
-    `=file'
+     '=file'
           set the name of the listing file
 
-     You may combine these options; for example, use `-aln' for assembly
-     listing without forms processing.  The `=file' option, if used,
-     must be the last one.  By itself, `-a' defaults to `-ahls'.
+     You may combine these options; for example, use '-aln' for assembly
+     listing without forms processing.  The '=file' option, if used,
+     must be the last one.  By itself, '-a' defaults to '-ahls'.
 
-`--alternate'
-     Begin in alternate macro mode.  *Note `.altmacro': Altmacro.
+'--alternate'
+     Begin in alternate macro mode.  *Note '.altmacro': Altmacro.
 
-`--compress-debug-sections'
+'--compress-debug-sections'
      Compress DWARF debug sections using zlib with SHF_COMPRESSED from
-     the ELF ABI.  The resulting object file may not be compatible with
-     older linkers and object file utilities.  Note if compression
-     would make a given section _larger_ then it is not compressed.
-
-`--compress-debug-sections=none'
-`--compress-debug-sections=zlib'
-`--compress-debug-sections=zlib-gnu'
-`--compress-debug-sections=zlib-gabi'
+     the ELF ABI. The resulting object file may not be compatible with
+     older linkers and object file utilities.  Note if compression would
+     make a given section _larger_ then it is not compressed.
+
+'--compress-debug-sections=none'
+'--compress-debug-sections=zlib'
+'--compress-debug-sections=zlib-gnu'
+'--compress-debug-sections=zlib-gabi'
      These options control how DWARF debug sections are compressed.
-     `--compress-debug-sections=none' is equivalent to
-     `--nocompress-debug-sections'.  `--compress-debug-sections=zlib'
-     and `--compress-debug-sections=zlib-gabi' are equivalent to
-     `--compress-debug-sections'.  `--compress-debug-sections=zlib-gnu'
-     compresses DWARF debug sections using zlib.  The debug sections
-     are renamed to begin with `.zdebug'.  Note if compression would
-     make a given section _larger_ then it is not compressed nor
-     renamed.
-
-`--nocompress-debug-sections'
+     '--compress-debug-sections=none' is equivalent to
+     '--nocompress-debug-sections'.  '--compress-debug-sections=zlib'
+     and '--compress-debug-sections=zlib-gabi' are equivalent to
+     '--compress-debug-sections'.  '--compress-debug-sections=zlib-gnu'
+     compresses DWARF debug sections using zlib.  The debug sections are
+     renamed to begin with '.zdebug'.  Note if compression would make a
+     given section _larger_ then it is not compressed nor renamed.
+
+'--nocompress-debug-sections'
      Do not compress DWARF debug sections.  This is usually the default
      for all targets except the x86/x86_64, but a configure time option
      can be used to override this.
 
-`-D'
+'-D'
      Ignored.  This option is accepted for script compatibility with
      calls to other assemblers.
 
-`--debug-prefix-map OLD=NEW'
-     When assembling files in directory `OLD', record debugging
-     information describing them as in `NEW' instead.
+'--debug-prefix-map OLD=NEW'
+     When assembling files in directory 'OLD', record debugging
+     information describing them as in 'NEW' instead.
 
-`--defsym SYM=VALUE'
+'--defsym SYM=VALUE'
      Define the symbol SYM to be VALUE before assembling the input file.
-     VALUE must be an integer constant.  As in C, a leading `0x'
-     indicates a hexadecimal value, and a leading `0' indicates an octal
+     VALUE must be an integer constant.  As in C, a leading '0x'
+     indicates a hexadecimal value, and a leading '0' indicates an octal
      value.  The value of the symbol can be overridden inside a source
-     file via the use of a `.set' pseudo-op.
+     file via the use of a '.set' pseudo-op.
 
-`-f'
+'-f'
      "fast"--skip whitespace and comment preprocessing (assume source is
      compiler output).
 
-`-g'
-`--gen-debug'
-     Generate debugging information for each assembler source line
-     using whichever debug format is preferred by the target.  This
-     currently means either STABS, ECOFF or DWARF2.
+'-g'
+'--gen-debug'
+     Generate debugging information for each assembler source line using
+     whichever debug format is preferred by the target.  This currently
+     means either STABS, ECOFF or DWARF2.
 
-`--gstabs'
+'--gstabs'
      Generate stabs debugging information for each assembler line.  This
      may help debugging assembler code, if the debugger can handle it.
 
-`--gstabs+'
+'--gstabs+'
      Generate stabs debugging information for each assembler line, with
      GNU extensions that probably only gdb can handle, and that could
      make other debuggers crash or refuse to read your program.  This
@@ -448,137 +447,136 @@ Command-Line Options: Invoking.
      extension is the location of the current working directory at
      assembling time.
 
-`--gdwarf-2'
+'--gdwarf-2'
      Generate DWARF2 debugging information for each assembler line.
      This may help debugging assembler code, if the debugger can handle
      it.  Note--this option is only supported by some targets, not all
      of them.
 
-`--gdwarf-sections'
+'--gdwarf-sections'
      Instead of creating a .debug_line section, create a series of
-     .debug_line.FOO sections where FOO is the name of the
-     corresponding code section.  For example a code section called
-     .TEXT.FUNC will have its dwarf line number information placed into
-     a section called .DEBUG_LINE.TEXT.FUNC.  If the code section is
-     just called .TEXT then debug line section will still be called
-     just .DEBUG_LINE without any suffix.
-
-`--size-check=error'
-`--size-check=warning'
+     .debug_line.FOO sections where FOO is the name of the corresponding
+     code section.  For example a code section called .TEXT.FUNC will
+     have its dwarf line number information placed into a section called
+     .DEBUG_LINE.TEXT.FUNC.  If the code section is just called .TEXT
+     then debug line section will still be called just .DEBUG_LINE
+     without any suffix.
+
+'--size-check=error'
+'--size-check=warning'
      Issue an error or warning for invalid ELF .size directive.
 
-`--elf-stt-common=no'
-`--elf-stt-common=yes'
+'--elf-stt-common=no'
+'--elf-stt-common=yes'
      These options control whether the ELF assembler should generate
-     common symbols with the `STT_COMMON' type.  The default can be
-     controlled by a configure option `--enable-elf-stt-common'.
+     common symbols with the 'STT_COMMON' type.  The default can be
+     controlled by a configure option '--enable-elf-stt-common'.
 
-`--help'
+'--help'
      Print a summary of the command line options and exit.
 
-`--target-help'
+'--target-help'
      Print a summary of all target specific options and exit.
 
-`-I DIR'
-     Add directory DIR to the search list for `.include' directives.
+'-I DIR'
+     Add directory DIR to the search list for '.include' directives.
 
-`-J'
+'-J'
      Don't warn about signed overflow.
 
-`-K'
+'-K'
      Issue warnings when difference tables altered for long
      displacements.
 
-`-L'
-`--keep-locals'
+'-L'
+'--keep-locals'
      Keep (in the symbol table) local symbols.  These symbols start with
-     system-specific local label prefixes, typically `.L' for ELF
-     systems or `L' for traditional a.out systems.  *Note Symbol
+     system-specific local label prefixes, typically '.L' for ELF
+     systems or 'L' for traditional a.out systems.  *Note Symbol
      Names::.
 
-`--listing-lhs-width=NUMBER'
+'--listing-lhs-width=NUMBER'
      Set the maximum width, in words, of the output data column for an
      assembler listing to NUMBER.
 
-`--listing-lhs-width2=NUMBER'
+'--listing-lhs-width2=NUMBER'
      Set the maximum width, in words, of the output data column for
      continuation lines in an assembler listing to NUMBER.
 
-`--listing-rhs-width=NUMBER'
+'--listing-rhs-width=NUMBER'
      Set the maximum width of an input source line, as displayed in a
      listing, to NUMBER bytes.
 
-`--listing-cont-lines=NUMBER'
+'--listing-cont-lines=NUMBER'
      Set the maximum number of lines printed in a listing for a single
      line of input to NUMBER + 1.
 
-`--no-pad-sections'
+'--no-pad-sections'
      Stop the assembler for padding the ends of output sections to the
-     alignment of that section.  The default is to pad the sections,
-     but this can waste space which might be needed on targets which
-     have tight memory constraints.
+     alignment of that section.  The default is to pad the sections, but
+     this can waste space which might be needed on targets which have
+     tight memory constraints.
 
-`-o OBJFILE'
-     Name the object-file output from `as' OBJFILE.
+'-o OBJFILE'
+     Name the object-file output from 'as' OBJFILE.
 
-`-R'
+'-R'
      Fold the data section into the text section.
 
-`--hash-size=NUMBER'
+'--hash-size=NUMBER'
      Set the default size of GAS's hash tables to a prime number close
      to NUMBER.  Increasing this value can reduce the length of time it
      takes the assembler to perform its tasks, at the expense of
-     increasing the assembler's memory requirements.  Similarly
-     reducing this value can reduce the memory requirements at the
-     expense of speed.
+     increasing the assembler's memory requirements.  Similarly reducing
+     this value can reduce the memory requirements at the expense of
+     speed.
 
-`--reduce-memory-overheads'
+'--reduce-memory-overheads'
      This option reduces GAS's memory requirements, at the expense of
      making the assembly processes slower.  Currently this switch is a
-     synonym for `--hash-size=4051', but in the future it may have
-     other effects as well.
+     synonym for '--hash-size=4051', but in the future it may have other
+     effects as well.
 
-`--sectname-subst'
-     Honor substitution sequences in section names.  *Note `.section
+'--sectname-subst'
+     Honor substitution sequences in section names.  *Note '.section
      NAME': Section Name Substitutions.
 
-`--statistics'
-     Print the maximum space (in bytes) and total time (in seconds)
-     used by assembly.
+'--statistics'
+     Print the maximum space (in bytes) and total time (in seconds) used
+     by assembly.
 
-`--strip-local-absolute'
+'--strip-local-absolute'
      Remove local absolute symbols from the outgoing symbol table.
 
-`-v'
-`-version'
-     Print the `as' version.
+'-v'
+'-version'
+     Print the 'as' version.
 
-`--version'
-     Print the `as' version and exit.
+'--version'
+     Print the 'as' version and exit.
 
-`-W'
-`--no-warn'
+'-W'
+'--no-warn'
      Suppress warning messages.
 
-`--fatal-warnings'
+'--fatal-warnings'
      Treat warnings as errors.
 
-`--warn'
+'--warn'
      Don't suppress warning messages or treat them as errors.
 
-`-w'
+'-w'
      Ignored.
 
-`-x'
+'-x'
      Ignored.
 
-`-Z'
+'-Z'
      Generate an object file even after errors.
 
-`-- | FILES ...'
+'-- | FILES ...'
      Standard input, or source files to assemble.
 
-
    *Note AArch64 Options::, for the options available when as is
 configured for the 64-bit mode of the ARM Architecture (AArch64).
 
@@ -588,47 +586,36 @@ configured for an Alpha processor.
    The following options are available when as is configured for an ARC
 processor.
 
-`-mcpu=CPU'
+'-mcpu=CPU'
      This option selects the core processor variant.
-
-`-EB | -EL'
+'-EB | -EL'
      Select either big-endian (-EB) or little-endian (-EL) output.
-
-`-mcode-density'
+'-mcode-density'
      Enable Code Density extenssion instructions.
 
    The following options are available when as is configured for the ARM
 processor family.
 
-`-mcpu=PROCESSOR[+EXTENSION...]'
+'-mcpu=PROCESSOR[+EXTENSION...]'
      Specify which ARM processor variant is the target.
-
-`-march=ARCHITECTURE[+EXTENSION...]'
+'-march=ARCHITECTURE[+EXTENSION...]'
      Specify which ARM architecture variant is used by the target.
-
-`-mfpu=FLOATING-POINT-FORMAT'
+'-mfpu=FLOATING-POINT-FORMAT'
      Select which Floating Point architecture is the target.
-
-`-mfloat-abi=ABI'
+'-mfloat-abi=ABI'
      Select which floating point ABI is in use.
-
-`-mthumb'
+'-mthumb'
      Enable Thumb only instruction decoding.
-
-`-mapcs-32 | -mapcs-26 | -mapcs-float | -mapcs-reentrant'
+'-mapcs-32 | -mapcs-26 | -mapcs-float | -mapcs-reentrant'
      Select which procedure calling convention is in use.
-
-`-EB | -EL'
+'-EB | -EL'
      Select either big-endian (-EB) or little-endian (-EL) output.
-
-`-mthumb-interwork'
+'-mthumb-interwork'
      Specify that the code has been generated with interworking between
      Thumb and ARM code in mind.
-
-`-mccs'
+'-mccs'
      Turns on CodeComposer Studio assembly syntax compatibility mode.
-
-`-k'
+'-k'
      Specify that PIC code has been generated.
 
    *Note Blackfin Options::, for the options available when as is
@@ -638,18 +625,18 @@ configured for the Blackfin processor family.
 
    The following options are available when as is configured for a D10V
 processor.
-`-O'
+'-O'
      Optimize output by parallelizing instructions.
 
    The following options are available when as is configured for a D30V
 processor.
-`-O'
+'-O'
      Optimize output by parallelizing instructions.
 
-`-n'
+'-n'
      Warn when nops are generated.
 
-`-N'
+'-N'
      Warn when a nop after a 32-bit multiply instruction is generated.
 
    The following options are available when as is configured for the
@@ -658,82 +645,78 @@ Adapteva EPIPHANY series.
    *Note Epiphany Options::, for the options available when as is
 configured for an Epiphany processor.
 
-   *Note i386-Options::, for the options available when as is
-configured for an i386 processor.
+   *Note i386-Options::, for the options available when as is configured
+for an i386 processor.
 
    The following options are available when as is configured for the
 Intel 80960 processor.
 
-`-ACA | -ACA_A | -ACB | -ACC | -AKA | -AKB | -AKC | -AMC'
+'-ACA | -ACA_A | -ACB | -ACC | -AKA | -AKB | -AKC | -AMC'
      Specify which variant of the 960 architecture is the target.
 
-`-b'
+'-b'
      Add code to collect statistics about branches taken.
 
-`-no-relax'
+'-no-relax'
      Do not alter compare-and-branch instructions for long
      displacements; error if necessary.
 
-
    The following options are available when as is configured for the
 Ubicom IP2K series.
 
-`-mip2022ext'
+'-mip2022ext'
      Specifies that the extended IP2022 instructions are allowed.
 
-`-mip2022'
+'-mip2022'
      Restores the default behaviour, which restricts the permitted
      instructions to just the basic IP2022 ones.
 
-
    The following options are available when as is configured for the
 Renesas M32C and M16C processors.
 
-`-m32c'
+'-m32c'
      Assemble M32C instructions.
 
-`-m16c'
+'-m16c'
      Assemble M16C instructions (the default).
 
-`-relax'
+'-relax'
      Enable support for link-time relaxations.
 
-`-h-tick-hex'
+'-h-tick-hex'
      Support H'00 style hex constants in addition to 0x00 style.
 
-
    The following options are available when as is configured for the
 Renesas M32R (formerly Mitsubishi M32R) series.
 
-`--m32rx'
+'--m32rx'
      Specify which processor in the M32R family is the target.  The
      default is normally the M32R, but this option changes it to the
      M32RX.
 
-`--warn-explicit-parallel-conflicts or --Wp'
+'--warn-explicit-parallel-conflicts or --Wp'
      Produce warning messages when questionable parallel constructs are
      encountered.
 
-`--no-warn-explicit-parallel-conflicts or --Wnp'
+'--no-warn-explicit-parallel-conflicts or --Wnp'
      Do not produce warning messages when questionable parallel
      constructs are encountered.
 
-
    The following options are available when as is configured for the
 Motorola 68000 series.
 
-`-l'
+'-l'
      Shorten references to undefined symbols, to one word instead of
      two.
 
-`-m68000 | -m68008 | -m68010 | -m68020 | -m68030'
-`| -m68040 | -m68060 | -m68302 | -m68331 | -m68332'
-`| -m68333 | -m68340 | -mcpu32 | -m5200'
+'-m68000 | -m68008 | -m68010 | -m68020 | -m68030'
+'| -m68040 | -m68060 | -m68302 | -m68331 | -m68332'
+'| -m68333 | -m68340 | -mcpu32 | -m5200'
      Specify what processor in the 68000 family is the target.  The
      default is normally the 68020, but this can be changed at
      configuration time.
 
-`-m68881 | -m68882 | -mno-68881 | -mno-68882'
+'-m68881 | -m68882 | -mno-68881 | -mno-68882'
      The target machine does (or does not) have a floating-point
      coprocessor.  The default is to assume a coprocessor for 68020,
      68030, and cpu32.  Although the basic 68000 is not compatible with
@@ -741,400 +724,393 @@ Motorola 68000 series.
      possible to do emulation of the coprocessor instructions with the
      main processor.
 
-`-m68851 | -mno-68851'
-     The target machine does (or does not) have a memory-management
-     unit coprocessor.  The default is to assume an MMU for 68020 and
-     up.
-
+'-m68851 | -mno-68851'
+     The target machine does (or does not) have a memory-management unit
+     coprocessor.  The default is to assume an MMU for 68020 and up.
 
    *Note Nios II Options::, for the options available when as is
 configured for an Altera Nios II processor.
 
    For details about the PDP-11 machine dependent features options, see
-*Note PDP-11-Options::.
+*note PDP-11-Options::.
 
-`-mpic | -mno-pic'
+'-mpic | -mno-pic'
      Generate position-independent (or position-dependent) code.  The
-     default is `-mpic'.
+     default is '-mpic'.
 
-`-mall'
-`-mall-extensions'
+'-mall'
+'-mall-extensions'
      Enable all instruction set extensions.  This is the default.
 
-`-mno-extensions'
+'-mno-extensions'
      Disable all instruction set extensions.
 
-`-mEXTENSION | -mno-EXTENSION'
+'-mEXTENSION | -mno-EXTENSION'
      Enable (or disable) a particular instruction set extension.
 
-`-mCPU'
+'-mCPU'
      Enable the instruction set extensions supported by a particular
      CPU, and disable all other extensions.
 
-`-mMACHINE'
+'-mMACHINE'
      Enable the instruction set extensions supported by a particular
      machine model, and disable all other extensions.
 
    The following options are available when as is configured for a
 picoJava processor.
 
-`-mb'
+'-mb'
      Generate "big endian" format output.
 
-`-ml'
+'-ml'
      Generate "little endian" format output.
 
-
    The following options are available when as is configured for the
 Motorola 68HC11 or 68HC12 series.
 
-`-m68hc11 | -m68hc12 | -m68hcs12 | -mm9s12x | -mm9s12xg'
+'-m68hc11 | -m68hc12 | -m68hcs12 | -mm9s12x | -mm9s12xg'
      Specify what processor is the target.  The default is defined by
      the configuration option when building the assembler.
 
-`--xgate-ramoffset'
-     Instruct the linker to offset RAM addresses from S12X address
-     space into XGATE address space.
+'--xgate-ramoffset'
+     Instruct the linker to offset RAM addresses from S12X address space
+     into XGATE address space.
 
-`-mshort'
+'-mshort'
      Specify to use the 16-bit integer ABI.
 
-`-mlong'
+'-mlong'
      Specify to use the 32-bit integer ABI.
 
-`-mshort-double'
+'-mshort-double'
      Specify to use the 32-bit double ABI.
 
-`-mlong-double'
+'-mlong-double'
      Specify to use the 64-bit double ABI.
 
-`--force-long-branches'
-     Relative branches are turned into absolute ones. This concerns
+'--force-long-branches'
+     Relative branches are turned into absolute ones.  This concerns
      conditional branches, unconditional branches and branches to a sub
      routine.
 
-`-S | --short-branches'
-     Do not turn relative branches into absolute ones when the offset
-     is out of range.
+'-S | --short-branches'
+     Do not turn relative branches into absolute ones when the offset is
+     out of range.
 
-`--strict-direct-mode'
+'--strict-direct-mode'
      Do not turn the direct addressing mode into extended addressing
      mode when the instruction does not support direct addressing mode.
 
-`--print-insn-syntax'
+'--print-insn-syntax'
      Print the syntax of instruction in case of error.
 
-`--print-opcodes'
+'--print-opcodes'
      Print the list of instructions with syntax and then exit.
 
-`--generate-example'
+'--generate-example'
      Print an example of instruction for each possible instruction and
-     then exit.  This option is only useful for testing `as'.
-
+     then exit.  This option is only useful for testing 'as'.
 
-   The following options are available when `as' is configured for the
+   The following options are available when 'as' is configured for the
 SPARC architecture:
 
-`-Av6 | -Av7 | -Av8 | -Asparclet | -Asparclite'
-`-Av8plus | -Av8plusa | -Av9 | -Av9a'
+'-Av6 | -Av7 | -Av8 | -Asparclet | -Asparclite'
+'-Av8plus | -Av8plusa | -Av9 | -Av9a'
      Explicitly select a variant of the SPARC architecture.
 
-     `-Av8plus' and `-Av8plusa' select a 32 bit environment.  `-Av9'
-     and `-Av9a' select a 64 bit environment.
+     '-Av8plus' and '-Av8plusa' select a 32 bit environment.  '-Av9' and
+     '-Av9a' select a 64 bit environment.
 
-     `-Av8plusa' and `-Av9a' enable the SPARC V9 instruction set with
+     '-Av8plusa' and '-Av9a' enable the SPARC V9 instruction set with
      UltraSPARC extensions.
 
-`-xarch=v8plus | -xarch=v8plusa'
+'-xarch=v8plus | -xarch=v8plusa'
      For compatibility with the Solaris v9 assembler.  These options are
      equivalent to -Av8plus and -Av8plusa, respectively.
 
-`-bump'
+'-bump'
      Warn when the assembler switches to another architecture.
 
    The following options are available when as is configured for the
 'c54x architecture.
 
-`-mfar-mode'
+'-mfar-mode'
      Enable extended addressing mode.  All addresses and relocations
      will assume extended addressing (usually 23 bits).
-
-`-mcpu=CPU_VERSION'
+'-mcpu=CPU_VERSION'
      Sets the CPU version being compiled for.
-
-`-merrors-to-file FILENAME'
+'-merrors-to-file FILENAME'
      Redirect error output to a file, for broken systems which don't
      support such behaviour in the shell.
 
    The following options are available when as is configured for a MIPS
 processor.
 
-`-G NUM'
+'-G NUM'
      This option sets the largest size of an object that can be
-     referenced implicitly with the `gp' register.  It is only accepted
+     referenced implicitly with the 'gp' register.  It is only accepted
      for targets that use ECOFF format, such as a DECstation running
      Ultrix.  The default value is 8.
 
-`-EB'
+'-EB'
      Generate "big endian" format output.
 
-`-EL'
+'-EL'
      Generate "little endian" format output.
 
-`-mips1'
-`-mips2'
-`-mips3'
-`-mips4'
-`-mips5'
-`-mips32'
-`-mips32r2'
-`-mips32r3'
-`-mips32r5'
-`-mips32r6'
-`-mips64'
-`-mips64r2'
-`-mips64r3'
-`-mips64r5'
-`-mips64r6'
+'-mips1'
+'-mips2'
+'-mips3'
+'-mips4'
+'-mips5'
+'-mips32'
+'-mips32r2'
+'-mips32r3'
+'-mips32r5'
+'-mips32r6'
+'-mips64'
+'-mips64r2'
+'-mips64r3'
+'-mips64r5'
+'-mips64r6'
      Generate code for a particular MIPS Instruction Set Architecture
-     level.  `-mips1' is an alias for `-march=r3000', `-mips2' is an
-     alias for `-march=r6000', `-mips3' is an alias for `-march=r4000'
-     and `-mips4' is an alias for `-march=r8000'.  `-mips5', `-mips32',
-     `-mips32r2', `-mips32r3', `-mips32r5', `-mips32r6', `-mips64',
-     `-mips64r2', `-mips64r3', `-mips64r5', and `-mips64r6' correspond
+     level.  '-mips1' is an alias for '-march=r3000', '-mips2' is an
+     alias for '-march=r6000', '-mips3' is an alias for '-march=r4000'
+     and '-mips4' is an alias for '-march=r8000'.  '-mips5', '-mips32',
+     '-mips32r2', '-mips32r3', '-mips32r5', '-mips32r6', '-mips64',
+     '-mips64r2', '-mips64r3', '-mips64r5', and '-mips64r6' correspond
      to generic MIPS V, MIPS32, MIPS32 Release 2, MIPS32 Release 3,
      MIPS32 Release 5, MIPS32 Release 6, MIPS64, MIPS64 Release 2,
      MIPS64 Release 3, MIPS64 Release 5, and MIPS64 Release 6 ISA
      processors, respectively.
 
-`-march=CPU'
+'-march=CPU'
      Generate code for a particular MIPS CPU.
 
-`-mtune=CPU'
+'-mtune=CPU'
      Schedule and tune for a particular MIPS CPU.
 
-`-mfix7000'
-`-mno-fix7000'
+'-mfix7000'
+'-mno-fix7000'
      Cause nops to be inserted if the read of the destination register
      of an mfhi or mflo instruction occurs in the following two
      instructions.
 
-`-mfix-rm7000'
-`-mno-fix-rm7000'
+'-mfix-rm7000'
+'-mno-fix-rm7000'
      Cause nops to be inserted if a dmult or dmultu instruction is
      followed by a load instruction.
 
-`-mdebug'
-`-no-mdebug'
+'-mdebug'
+'-no-mdebug'
      Cause stabs-style debugging output to go into an ECOFF-style
      .mdebug section instead of the standard ELF .stabs sections.
 
-`-mpdr'
-`-mno-pdr'
-     Control generation of `.pdr' sections.
+'-mpdr'
+'-mno-pdr'
+     Control generation of '.pdr' sections.
 
-`-mgp32'
-`-mfp32'
+'-mgp32'
+'-mfp32'
      The register sizes are normally inferred from the ISA and ABI, but
      these flags force a certain group of registers to be treated as 32
-     bits wide at all times.  `-mgp32' controls the size of
-     general-purpose registers and `-mfp32' controls the size of
+     bits wide at all times.  '-mgp32' controls the size of
+     general-purpose registers and '-mfp32' controls the size of
      floating-point registers.
 
-`-mgp64'
-`-mfp64'
+'-mgp64'
+'-mfp64'
      The register sizes are normally inferred from the ISA and ABI, but
      these flags force a certain group of registers to be treated as 64
-     bits wide at all times.  `-mgp64' controls the size of
-     general-purpose registers and `-mfp64' controls the size of
+     bits wide at all times.  '-mgp64' controls the size of
+     general-purpose registers and '-mfp64' controls the size of
      floating-point registers.
 
-`-mfpxx'
+'-mfpxx'
      The register sizes are normally inferred from the ISA and ABI, but
-     using this flag in combination with `-mabi=32' enables an ABI
+     using this flag in combination with '-mabi=32' enables an ABI
      variant which will operate correctly with floating-point registers
      which are 32 or 64 bits wide.
 
-`-modd-spreg'
-`-mno-odd-spreg'
+'-modd-spreg'
+'-mno-odd-spreg'
      Enable use of floating-point operations on odd-numbered
-     single-precision registers when supported by the ISA.  `-mfpxx'
-     implies `-mno-odd-spreg', otherwise the default is `-modd-spreg'.
+     single-precision registers when supported by the ISA. '-mfpxx'
+     implies '-mno-odd-spreg', otherwise the default is '-modd-spreg'.
 
-`-mips16'
-`-no-mips16'
+'-mips16'
+'-no-mips16'
      Generate code for the MIPS 16 processor.  This is equivalent to
-     putting `.set mips16' at the start of the assembly file.
-     `-no-mips16' turns off this option.
+     putting '.set mips16' at the start of the assembly file.
+     '-no-mips16' turns off this option.
 
-`-mmicromips'
-`-mno-micromips'
+'-mmicromips'
+'-mno-micromips'
      Generate code for the microMIPS processor.  This is equivalent to
-     putting `.set micromips' at the start of the assembly file.
-     `-mno-micromips' turns off this option.  This is equivalent to
-     putting `.set nomicromips' at the start of the assembly file.
+     putting '.set micromips' at the start of the assembly file.
+     '-mno-micromips' turns off this option.  This is equivalent to
+     putting '.set nomicromips' at the start of the assembly file.
 
-`-msmartmips'
-`-mno-smartmips'
+'-msmartmips'
+'-mno-smartmips'
      Enables the SmartMIPS extension to the MIPS32 instruction set.
-     This is equivalent to putting `.set smartmips' at the start of the
-     assembly file.  `-mno-smartmips' turns off this option.
+     This is equivalent to putting '.set smartmips' at the start of the
+     assembly file.  '-mno-smartmips' turns off this option.
 
-`-mips3d'
-`-no-mips3d'
-     Generate code for the MIPS-3D Application Specific Extension.
-     This tells the assembler to accept MIPS-3D instructions.
-     `-no-mips3d' turns off this option.
+'-mips3d'
+'-no-mips3d'
+     Generate code for the MIPS-3D Application Specific Extension.  This
+     tells the assembler to accept MIPS-3D instructions.  '-no-mips3d'
+     turns off this option.
 
-`-mdmx'
-`-no-mdmx'
+'-mdmx'
+'-no-mdmx'
      Generate code for the MDMX Application Specific Extension.  This
-     tells the assembler to accept MDMX instructions.  `-no-mdmx' turns
+     tells the assembler to accept MDMX instructions.  '-no-mdmx' turns
      off this option.
 
-`-mdsp'
-`-mno-dsp'
+'-mdsp'
+'-mno-dsp'
      Generate code for the DSP Release 1 Application Specific Extension.
      This tells the assembler to accept DSP Release 1 instructions.
-     `-mno-dsp' turns off this option.
+     '-mno-dsp' turns off this option.
 
-`-mdspr2'
-`-mno-dspr2'
+'-mdspr2'
+'-mno-dspr2'
      Generate code for the DSP Release 2 Application Specific Extension.
-     This option implies `-mdsp'.  This tells the assembler to accept
-     DSP Release 2 instructions.  `-mno-dspr2' turns off this option.
+     This option implies '-mdsp'.  This tells the assembler to accept
+     DSP Release 2 instructions.  '-mno-dspr2' turns off this option.
 
-`-mdspr3'
-`-mno-dspr3'
+'-mdspr3'
+'-mno-dspr3'
      Generate code for the DSP Release 3 Application Specific Extension.
-     This option implies `-mdsp' and `-mdspr2'.  This tells the
-     assembler to accept DSP Release 3 instructions.  `-mno-dspr3'
-     turns off this option.
-
-`-mmsa'
-`-mno-msa'
-     Generate code for the MIPS SIMD Architecture Extension.  This
-     tells the assembler to accept MSA instructions.  `-mno-msa' turns
+     This option implies '-mdsp' and '-mdspr2'.  This tells the
+     assembler to accept DSP Release 3 instructions.  '-mno-dspr3' turns
      off this option.
 
-`-mxpa'
-`-mno-xpa'
+'-mmsa'
+'-mno-msa'
+     Generate code for the MIPS SIMD Architecture Extension.  This tells
+     the assembler to accept MSA instructions.  '-mno-msa' turns off
+     this option.
+
+'-mxpa'
+'-mno-xpa'
      Generate code for the MIPS eXtended Physical Address (XPA)
      Extension.  This tells the assembler to accept XPA instructions.
-     `-mno-xpa' turns off this option.
+     '-mno-xpa' turns off this option.
 
-`-mmt'
-`-mno-mt'
+'-mmt'
+'-mno-mt'
      Generate code for the MT Application Specific Extension.  This
-     tells the assembler to accept MT instructions.  `-mno-mt' turns
-     off this option.
+     tells the assembler to accept MT instructions.  '-mno-mt' turns off
+     this option.
 
-`-mmcu'
-`-mno-mcu'
+'-mmcu'
+'-mno-mcu'
      Generate code for the MCU Application Specific Extension.  This
-     tells the assembler to accept MCU instructions.  `-mno-mcu' turns
+     tells the assembler to accept MCU instructions.  '-mno-mcu' turns
      off this option.
 
-`-minsn32'
-`-mno-insn32'
+'-minsn32'
+'-mno-insn32'
      Only use 32-bit instruction encodings when generating code for the
      microMIPS processor.  This option inhibits the use of any 16-bit
-     instructions.  This is equivalent to putting `.set insn32' at the
-     start of the assembly file.  `-mno-insn32' turns off this option.
-     This is equivalent to putting `.set noinsn32' at the start of the
-     assembly file.  By default `-mno-insn32' is selected, allowing all
+     instructions.  This is equivalent to putting '.set insn32' at the
+     start of the assembly file.  '-mno-insn32' turns off this option.
+     This is equivalent to putting '.set noinsn32' at the start of the
+     assembly file.  By default '-mno-insn32' is selected, allowing all
      instructions to be used.
 
-`--construct-floats'
-`--no-construct-floats'
-     The `--no-construct-floats' option disables the construction of
+'--construct-floats'
+'--no-construct-floats'
+     The '--no-construct-floats' option disables the construction of
      double width floating point constants by loading the two halves of
      the value into the two single width floating point registers that
-     make up the double width register.  By default
-     `--construct-floats' is selected, allowing construction of these
-     floating point constants.
-
-`--relax-branch'
-`--no-relax-branch'
-     The `--relax-branch' option enables the relaxation of out-of-range
-     branches.  By default `--no-relax-branch' is selected, causing any
+     make up the double width register.  By default '--construct-floats'
+     is selected, allowing construction of these floating point
+     constants.
+
+'--relax-branch'
+'--no-relax-branch'
+     The '--relax-branch' option enables the relaxation of out-of-range
+     branches.  By default '--no-relax-branch' is selected, causing any
      out-of-range branches to produce an error.
 
-`-mignore-branch-isa'
-`-mno-ignore-branch-isa'
+'-mignore-branch-isa'
+'-mno-ignore-branch-isa'
      Ignore branch checks for invalid transitions between ISA modes.
      The semantics of branches does not provide for an ISA mode switch,
      so in most cases the ISA mode a branch has been encoded for has to
      be the same as the ISA mode of the branch's target label.
-     Therefore GAS has checks implemented that verify in branch
-     assembly that the two ISA modes match.  `-mignore-branch-isa'
-     disables these checks.  By default `-mno-ignore-branch-isa' is
-     selected, causing any invalid branch requiring a transition
-     between ISA modes to produce an error.
+     Therefore GAS has checks implemented that verify in branch assembly
+     that the two ISA modes match.  '-mignore-branch-isa' disables these
+     checks.  By default '-mno-ignore-branch-isa' is selected, causing
+     any invalid branch requiring a transition between ISA modes to
+     produce an error.
 
-`-mnan=ENCODING'
-     Select between the IEEE 754-2008 (`-mnan=2008') or the legacy
-     (`-mnan=legacy') NaN encoding format.  The latter is the default.
+'-mnan=ENCODING'
+     Select between the IEEE 754-2008 ('-mnan=2008') or the legacy
+     ('-mnan=legacy') NaN encoding format.  The latter is the default.
 
-`--emulation=NAME'
+'--emulation=NAME'
      This option was formerly used to switch between ELF and ECOFF
      output on targets like IRIX 5 that supported both.  MIPS ECOFF
      support was removed in GAS 2.24, so the option now serves little
      purpose.  It is retained for backwards compatibility.
 
-     The available configuration names are: `mipself', `mipslelf' and
-     `mipsbelf'.  Choosing `mipself' now has no effect, since the output
-     is always ELF.  `mipslelf' and `mipsbelf' select little- and
-     big-endian output respectively, but `-EL' and `-EB' are now the
+     The available configuration names are: 'mipself', 'mipslelf' and
+     'mipsbelf'.  Choosing 'mipself' now has no effect, since the output
+     is always ELF. 'mipslelf' and 'mipsbelf' select little- and
+     big-endian output respectively, but '-EL' and '-EB' are now the
      preferred options instead.
 
-`-nocpp'
-     `as' ignores this option.  It is accepted for compatibility with
+'-nocpp'
+     'as' ignores this option.  It is accepted for compatibility with
      the native tools.
 
-`--trap'
-`--no-trap'
-`--break'
-`--no-break'
+'--trap'
+'--no-trap'
+'--break'
+'--no-break'
      Control how to deal with multiplication overflow and division by
-     zero.  `--trap' or `--no-break' (which are synonyms) take a trap
+     zero.  '--trap' or '--no-break' (which are synonyms) take a trap
      exception (and only work for Instruction Set Architecture level 2
-     and higher); `--break' or `--no-trap' (also synonyms, and the
+     and higher); '--break' or '--no-trap' (also synonyms, and the
      default) take a break exception.
 
-`-n'
-     When this option is used, `as' will issue a warning every time it
+'-n'
+     When this option is used, 'as' will issue a warning every time it
      generates a nop instruction from a macro.
 
    The following options are available when as is configured for an
 MCore processor.
 
-`-jsri2bsr'
-`-nojsri2bsr'
+'-jsri2bsr'
+'-nojsri2bsr'
      Enable or disable the JSRI to BSR transformation.  By default this
-     is enabled.  The command line option `-nojsri2bsr' can be used to
+     is enabled.  The command line option '-nojsri2bsr' can be used to
      disable it.
 
-`-sifilter'
-`-nosifilter'
-     Enable or disable the silicon filter behaviour.  By default this
-     is disabled.  The default can be overridden by the `-sifilter'
-     command line option.
+'-sifilter'
+'-nosifilter'
+     Enable or disable the silicon filter behaviour.  By default this is
+     disabled.  The default can be overridden by the '-sifilter' command
+     line option.
 
-`-relax'
+'-relax'
      Alter jump instructions for long displacements.
 
-`-mcpu=[210|340]'
+'-mcpu=[210|340]'
      Select the cpu type on the target hardware.  This controls which
      instructions can be assembled.
 
-`-EB'
+'-EB'
      Assemble for a big endian target.
 
-`-EL'
+'-EL'
      Assemble for a little endian target.
 
-
    *Note Meta Options::, for the options available when as is configured
 for a Meta processor.
 
@@ -1154,27 +1130,22 @@ for a RISC-V processor.
    The following options are available when as is configured for the
 s390 processor family.
 
-`-m31'
-`-m64'
+'-m31'
+'-m64'
      Select the word size, either 31/32 bits or 64 bits.
-
-`-mesa'
-
-`-mzarch'
+'-mesa'
+'-mzarch'
      Select the architecture mode, either the Enterprise System
      Architecture (esa) or the z/Architecture mode (zarch).
-
-`-march=PROCESSOR'
-     Specify which s390 processor variant is the target, `g5' (or
-     `arch3'), `g6', `z900' (or `arch5'), `z990' (or `arch6'),
-     `z9-109', `z9-ec' (or `arch7'), `z10' (or `arch8'), `z196' (or
-     `arch9'), `zEC12' (or `arch10'), `z13' (or `arch11'), or `arch12'.
-
-`-mregnames'
-`-mno-regnames'
+'-march=PROCESSOR'
+     Specify which s390 processor variant is the target, 'g5' (or
+     'arch3'), 'g6', 'z900' (or 'arch5'), 'z990' (or 'arch6'), 'z9-109',
+     'z9-ec' (or 'arch7'), 'z10' (or 'arch8'), 'z196' (or 'arch9'),
+     'zEC12' (or 'arch10'), 'z13' (or 'arch11'), or 'arch12'.
+'-mregnames'
+'-mno-regnames'
      Allow or disallow symbolic names for registers.
-
-`-mwarn-areg-zero'
+'-mwarn-areg-zero'
      Warn whenever the operand for a base or index register has been
      specified but evaluates to zero.
 
@@ -1192,37 +1163,30 @@ configured for an Xtensa processor.
 
    The following options are available when as is configured for a Z80
 family processor.
-`-z80'
+'-z80'
      Assemble for Z80 processor.
-
-`-r800'
+'-r800'
      Assemble for R800 processor.
-
-`-ignore-undocumented-instructions'
-`-Wnud'
+'-ignore-undocumented-instructions'
+'-Wnud'
      Assemble undocumented Z80 instructions that also work on R800
      without warning.
-
-`-ignore-unportable-instructions'
-`-Wnup'
+'-ignore-unportable-instructions'
+'-Wnup'
      Assemble all undocumented Z80 instructions without warning.
-
-`-warn-undocumented-instructions'
-`-Wud'
-     Issue a warning for undocumented Z80 instructions that also work
-     on R800.
-
-`-warn-unportable-instructions'
-`-Wup'
+'-warn-undocumented-instructions'
+'-Wud'
+     Issue a warning for undocumented Z80 instructions that also work on
+     R800.
+'-warn-unportable-instructions'
+'-Wup'
      Issue a warning for undocumented Z80 instructions that do not work
      on R800.
-
-`-forbid-undocumented-instructions'
-`-Fud'
+'-forbid-undocumented-instructions'
+'-Fud'
      Treat all undocumented instructions as errors.
-
-`-forbid-unportable-instructions'
-`-Fup'
+'-forbid-unportable-instructions'
+'-Fup'
      Treat undocumented Z80 instructions that do not work on R800 as
      errors.
 
@@ -1243,9 +1207,9 @@ File: as.info,  Node: Manual,  Next: GNU Assembler,  Up: Overview
 ============================
 
 This manual is intended to describe what you need to know to use GNU
-`as'.  We cover the syntax expected in source files, including notation
-for symbols, constants, and expressions; the directives that `as'
-understands; and of course how to invoke `as'.
+'as'.  We cover the syntax expected in source files, including notation
+for symbols, constants, and expressions; the directives that 'as'
+understands; and of course how to invoke 'as'.
 
    This manual also describes some of the machine-dependent features of
 various flavors of the assembler.
@@ -1264,24 +1228,24 @@ File: as.info,  Node: GNU Assembler,  Next: Object Formats,  Prev: Manual,  Up:
 1.2 The GNU Assembler
 =====================
 
-GNU `as' is really a family of assemblers.  If you use (or have used)
+GNU 'as' is really a family of assemblers.  If you use (or have used)
 the GNU assembler on one architecture, you should find a fairly similar
 environment when you use it on another architecture.  Each version has
 much in common with the others, including object file formats, most
 assembler directives (often called "pseudo-ops") and assembler syntax.
 
-   `as' is primarily intended to assemble the output of the GNU C
-compiler `gcc' for use by the linker `ld'.  Nevertheless, we've tried
-to make `as' assemble correctly everything that other assemblers for
-the same machine would assemble.  Any exceptions are documented
-explicitly (*note Machine Dependencies::).  This doesn't mean `as'
-always uses the same syntax as another assembler for the same
-architecture; for example, we know of several incompatible versions of
-680x0 assembly language syntax.
+   'as' is primarily intended to assemble the output of the GNU C
+compiler 'gcc' for use by the linker 'ld'.  Nevertheless, we've tried to
+make 'as' assemble correctly everything that other assemblers for the
+same machine would assemble.  Any exceptions are documented explicitly
+(*note Machine Dependencies::).  This doesn't mean 'as' always uses the
+same syntax as another assembler for the same architecture; for example,
+we know of several incompatible versions of 680x0 assembly language
+syntax.
 
-   Unlike older assemblers, `as' is designed to assemble a source
+   Unlike older assemblers, 'as' is designed to assemble a source
 program in one pass of the source file.  This has a subtle impact on the
-`.org' directive (*note `.org': Org.).
+'.org' directive (*note '.org': Org.).
 
 
 File: as.info,  Node: Object Formats,  Next: Command Line,  Prev: GNU Assembler,  Up: Overview
@@ -1301,23 +1265,23 @@ File: as.info,  Node: Command Line,  Next: Input Files,  Prev: Object Formats,
 1.4 Command Line
 ================
 
-After the program name `as', the command line may contain options and
+After the program name 'as', the command line may contain options and
 file names.  Options may appear in any order, and may be before, after,
 or between file names.  The order of file names is significant.
 
-   `--' (two hyphens) by itself names the standard input file
-explicitly, as one of the files for `as' to assemble.
+   '--' (two hyphens) by itself names the standard input file
+explicitly, as one of the files for 'as' to assemble.
 
-   Except for `--' any command line argument that begins with a hyphen
-(`-') is an option.  Each option changes the behavior of `as'.  No
-option changes the way another option works.  An option is a `-'
+   Except for '--' any command line argument that begins with a hyphen
+('-') is an option.  Each option changes the behavior of 'as'.  No
+option changes the way another option works.  An option is a '-'
 followed by one or more letters; the case of the letter is important.
 All options are optional.
 
    Some options expect exactly one file name to follow them.  The file
 name may either immediately follow the option's letter (compatible with
-older assemblers) or it may be the next command argument (GNU
-standard).  These two command lines are equivalent:
+older assemblers) or it may be the next command argument (GNU standard).
+These two command lines are equivalent:
 
      as -o my-object-file.o mumble.s
      as -omy-object-file.o mumble.s
@@ -1329,30 +1293,30 @@ File: as.info,  Node: Input Files,  Next: Object,  Prev: Command Line,  Up: Over
 ===============
 
 We use the phrase "source program", abbreviated "source", to describe
-the program input to one run of `as'.  The program may be in one or
-more files; how the source is partitioned into files doesn't change the
+the program input to one run of 'as'.  The program may be in one or more
+files; how the source is partitioned into files doesn't change the
 meaning of the source.
 
    The source program is a concatenation of the text in all the files,
 in the order specified.
 
-   Each time you run `as' it assembles exactly one source program.  The
+   Each time you run 'as' it assembles exactly one source program.  The
 source program is made up of one or more files.  (The standard input is
 also a file.)
 
-   You give `as' a command line that has zero or more input file names.
-The input files are read (from left file name to right).  A command
-line argument (in any position) that has no special meaning is taken to
-be an input file name.
+   You give 'as' a command line that has zero or more input file names.
+The input files are read (from left file name to right).  A command line
+argument (in any position) that has no special meaning is taken to be an
+input file name.
 
-   If you give `as' no file names it attempts to read one input file
-from the `as' standard input, which is normally your terminal.  You may
-have to type <ctl-D> to tell `as' there is no more program to assemble.
+   If you give 'as' no file names it attempts to read one input file
+from the 'as' standard input, which is normally your terminal.  You may
+have to type <ctl-D> to tell 'as' there is no more program to assemble.
 
-   Use `--' if you need to explicitly name the standard input file in
+   Use '--' if you need to explicitly name the standard input file in
 your command line.
 
-   If the source is empty, `as' produces a small, empty object file.
+   If the source is empty, 'as' produces a small, empty object file.
 
 Filenames and Line-numbers
 --------------------------
@@ -1363,14 +1327,14 @@ line number in a physical file; the other refers to a line number in a
 "logical" file.  *Note Error and Warning Messages: Errors.
 
    "Physical files" are those files named in the command line given to
-`as'.
+'as'.
 
    "Logical files" are simply names declared explicitly by assembler
-directives; they bear no relation to physical files.  Logical file
-names help error messages reflect the original source file, when `as'
-source is itself synthesized from other files.  `as' understands the
-`#' directives emitted by the `gcc' preprocessor.  See also *Note
-`.file': File.
+directives; they bear no relation to physical files.  Logical file names
+help error messages reflect the original source file, when 'as' source
+is itself synthesized from other files.  'as' understands the '#'
+directives emitted by the 'gcc' preprocessor.  See also *note '.file':
+File.
 
 
 File: as.info,  Node: Object,  Next: Errors,  Prev: Input Files,  Up: Overview
@@ -1378,19 +1342,19 @@ File: as.info,  Node: Object,  Next: Errors,  Prev: Input Files,  Up: Overview
 1.6 Output (Object) File
 ========================
 
-Every time you run `as' it produces an output file, which is your
+Every time you run 'as' it produces an output file, which is your
 assembly language program translated into numbers.  This file is the
-object file.  Its default name is `a.out'.  You can give it another
-name by using the `-o' option.  Conventionally, object file names end
-with `.o'.  The default name is used for historical reasons: older
-assemblers were capable of assembling self-contained programs directly
-into a runnable program.  (For some formats, this isn't currently
-possible, but it can be done for the `a.out' format.)
+object file.  Its default name is 'a.out'.  You can give it another name
+by using the '-o' option.  Conventionally, object file names end with
+'.o'.  The default name is used for historical reasons: older assemblers
+were capable of assembling self-contained programs directly into a
+runnable program.  (For some formats, this isn't currently possible, but
+it can be done for the 'a.out' format.)
 
-   The object file is meant for input to the linker `ld'.  It contains
-assembled program code, information to help `ld' integrate the
-assembled program into a runnable file, and (optionally) symbolic
-information for the debugger.
+   The object file is meant for input to the linker 'ld'.  It contains
+assembled program code, information to help 'ld' integrate the assembled
+program into a runnable file, and (optionally) symbolic information for
+the debugger.
 
 
 File: as.info,  Node: Errors,  Prev: Object,  Up: Overview
@@ -1398,9 +1362,9 @@ File: as.info,  Node: Errors,  Prev: Object,  Up: Overview
 1.7 Error and Warning Messages
 ==============================
 
-`as' may write warnings and error messages to the standard error file
-(usually your terminal).  This should not happen when  a compiler runs
-`as' automatically.  Warnings report an assumption made so that `as'
+'as' may write warnings and error messages to the standard error file
+(usually your terminal).  This should not happen when a compiler runs
+'as' automatically.  Warnings report an assumption made so that 'as'
 could keep assembling a flawed program; errors report a grave problem
 that stops the assembly.
 
@@ -1409,13 +1373,13 @@ that stops the assembly.
      file_name:NNN:Warning Message Text
 
 (where NNN is a line number).  If both a logical file name (*note
-`.file': File.) and a logical line number (*note `.line': Line.)  have
+'.file': File.) and a logical line number (*note '.line': Line.) have
 been given then they will be used, otherwise the file name and line
 number in the current assembler source file will be used.  The message
 text is intended to be self explanatory (in the grand Unix tradition).
 
-   Note the file name must be set via the logical version of the `.file'
-directive, not the DWARF2 version of the `.file' directive.  For
+   Note the file name must be set via the logical version of the '.file'
+directive, not the DWARF2 version of the '.file' directive.  For
 example:
 
        .file 2 "bar.c"
@@ -1445,230 +1409,228 @@ File: as.info,  Node: Invoking,  Next: Syntax,  Prev: Overview,  Up: Top
 **********************
 
 This chapter describes command-line options available in _all_ versions
-of the GNU assembler; see *Note Machine Dependencies::, for options
+of the GNU assembler; see *note Machine Dependencies::, for options
 specific to particular machine architectures.
 
-   If you are invoking `as' via the GNU C compiler, you can use the
-`-Wa' option to pass arguments through to the assembler.  The assembler
-arguments must be separated from each other (and the `-Wa') by commas.
+   If you are invoking 'as' via the GNU C compiler, you can use the
+'-Wa' option to pass arguments through to the assembler.  The assembler
+arguments must be separated from each other (and the '-Wa') by commas.
 For example:
 
      gcc -c -g -O -Wa,-alh,-L file.c
 
-This passes two options to the assembler: `-alh' (emit a listing to
-standard output with high-level and assembly source) and `-L' (retain
+This passes two options to the assembler: '-alh' (emit a listing to
+standard output with high-level and assembly source) and '-L' (retain
 local symbols in the symbol table).
 
-   Usually you do not need to use this `-Wa' mechanism, since many
+   Usually you do not need to use this '-Wa' mechanism, since many
 compiler command-line options are automatically passed to the assembler
-by the compiler.  (You can call the GNU compiler driver with the `-v'
-option to see precisely what options it passes to each compilation
-pass, including the assembler.)
+by the compiler.  (You can call the GNU compiler driver with the '-v'
+option to see precisely what options it passes to each compilation pass,
+including the assembler.)
 
 * Menu:
 
 * a::             -a[cdghlns] enable listings
-* alternate::     --alternate enable alternate macro syntax
+* alternate::     -alternate enable alternate macro syntax
 * D::             -D for compatibility
 * f::             -f to work faster
 * I::             -I for .include search path
-
 * K::             -K for difference tables
 
 * L::             -L to retain local symbols
-* listing::       --listing-XXX to configure listing output
-* M::		  -M or --mri to assemble in MRI compatibility mode
-* MD::            --MD for dependency tracking
-* no-pad-sections:: --no-pad-sections to stop section padding
+* listing::       -listing-XXX to configure listing output
+* M::		  -M or -mri to assemble in MRI compatibility mode
+* MD::            -MD for dependency tracking
+* no-pad-sections:: -no-pad-sections to stop section padding
 * o::             -o to name the object file
 * R::             -R to join data and text sections
-* statistics::    --statistics to see statistics about assembly
-* traditional-format:: --traditional-format for compatible output
+* statistics::    -statistics to see statistics about assembly
+* traditional-format:: -traditional-format for compatible output
 * v::             -v to announce version
-* W::             -W, --no-warn, --warn, --fatal-warnings to control warnings
+* W::             -W, -no-warn, -warn, -fatal-warnings to control warnings
 * Z::             -Z to make object file even after errors
 
 
 File: as.info,  Node: a,  Next: alternate,  Up: Invoking
 
-2.1 Enable Listings: `-a[cdghlns]'
+2.1 Enable Listings: '-a[cdghlns]'
 ==================================
 
-These options enable listing output from the assembler.  By itself,
-`-a' requests high-level, assembly, and symbols listing.  You can use
-other letters to select specific options for the list: `-ah' requests a
-high-level language listing, `-al' requests an output-program assembly
-listing, and `-as' requests a symbol table listing.  High-level
-listings require that a compiler debugging option like `-g' be used,
-and that assembly listings (`-al') be requested also.
+These options enable listing output from the assembler.  By itself, '-a'
+requests high-level, assembly, and symbols listing.  You can use other
+letters to select specific options for the list: '-ah' requests a
+high-level language listing, '-al' requests an output-program assembly
+listing, and '-as' requests a symbol table listing.  High-level listings
+require that a compiler debugging option like '-g' be used, and that
+assembly listings ('-al') be requested also.
 
-   Use the `-ag' option to print a first section with general assembly
+   Use the '-ag' option to print a first section with general assembly
 information, like as version, switches passed, or time stamp.
 
-   Use the `-ac' option to omit false conditionals from a listing.  Any
-lines which are not assembled because of a false `.if' (or `.ifdef', or
-any other conditional), or a true `.if' followed by an `.else', will be
+   Use the '-ac' option to omit false conditionals from a listing.  Any
+lines which are not assembled because of a false '.if' (or '.ifdef', or
+any other conditional), or a true '.if' followed by an '.else', will be
 omitted from the listing.
 
-   Use the `-ad' option to omit debugging directives from the listing.
+   Use the '-ad' option to omit debugging directives from the listing.
 
    Once you have specified one of these options, you can further control
-listing output and its appearance using the directives `.list',
-`.nolist', `.psize', `.eject', `.title', and `.sbttl'.  The `-an'
-option turns off all forms processing.  If you do not request listing
-output with one of the `-a' options, the listing-control directives
-have no effect.
+listing output and its appearance using the directives '.list',
+'.nolist', '.psize', '.eject', '.title', and '.sbttl'.  The '-an' option
+turns off all forms processing.  If you do not request listing output
+with one of the '-a' options, the listing-control directives have no
+effect.
 
-   The letters after `-a' may be combined into one option, _e.g._,
-`-aln'.
+   The letters after '-a' may be combined into one option, _e.g._,
+'-aln'.
 
    Note if the assembler source is coming from the standard input (e.g.,
-because it is being created by `gcc' and the `-pipe' command line switch
+because it is being created by 'gcc' and the '-pipe' command line switch
 is being used) then the listing will not contain any comments or
-preprocessor directives.  This is because the listing code buffers
-input source lines from stdin only after they have been preprocessed by
-the assembler.  This reduces memory usage and makes the code more
-efficient.
+preprocessor directives.  This is because the listing code buffers input
+source lines from stdin only after they have been preprocessed by the
+assembler.  This reduces memory usage and makes the code more efficient.
 
 
 File: as.info,  Node: alternate,  Next: D,  Prev: a,  Up: Invoking
 
-2.2 `--alternate'
+2.2 '--alternate'
 =================
 
-Begin in alternate macro mode, see *Note `.altmacro': Altmacro.
+Begin in alternate macro mode, see *note '.altmacro': Altmacro.
 
 
 File: as.info,  Node: D,  Next: f,  Prev: alternate,  Up: Invoking
 
-2.3 `-D'
+2.3 '-D'
 ========
 
 This option has no effect whatsoever, but it is accepted to make it more
-likely that scripts written for other assemblers also work with `as'.
+likely that scripts written for other assemblers also work with 'as'.
 
 
 File: as.info,  Node: f,  Next: I,  Prev: D,  Up: Invoking
 
-2.4 Work Faster: `-f'
+2.4 Work Faster: '-f'
 =====================
 
-`-f' should only be used when assembling programs written by a
-(trusted) compiler.  `-f' stops the assembler from doing whitespace and
-comment preprocessing on the input file(s) before assembling them.
-*Note Preprocessing: Preprocessing.
+'-f' should only be used when assembling programs written by a (trusted)
+compiler.  '-f' stops the assembler from doing whitespace and comment
+preprocessing on the input file(s) before assembling them.  *Note
+Preprocessing: Preprocessing.
 
-     _Warning:_ if you use `-f' when the files actually need to be
-     preprocessed (if they contain comments, for example), `as' does
-     not work correctly.
+     _Warning:_ if you use '-f' when the files actually need to be
+     preprocessed (if they contain comments, for example), 'as' does not
+     work correctly.
 
 
 File: as.info,  Node: I,  Next: K,  Prev: f,  Up: Invoking
 
-2.5 `.include' Search Path: `-I' PATH
+2.5 '.include' Search Path: '-I' PATH
 =====================================
 
-Use this option to add a PATH to the list of directories `as' searches
-for files specified in `.include' directives (*note `.include':
-Include.).  You may use `-I' as many times as necessary to include a
+Use this option to add a PATH to the list of directories 'as' searches
+for files specified in '.include' directives (*note '.include':
+Include.).  You may use '-I' as many times as necessary to include a
 variety of paths.  The current working directory is always searched
-first; after that, `as' searches any `-I' directories in the same order
+first; after that, 'as' searches any '-I' directories in the same order
 as they were specified (left to right) on the command line.
 
 
 File: as.info,  Node: K,  Next: L,  Prev: I,  Up: Invoking
 
-2.6 Difference Tables: `-K'
+2.6 Difference Tables: '-K'
 ===========================
 
-`as' sometimes alters the code emitted for directives of the form
-`.word SYM1-SYM2'.  *Note `.word': Word.  You can use the `-K' option
-if you want a warning issued when this is done.
+'as' sometimes alters the code emitted for directives of the form '.word
+SYM1-SYM2'.  *Note '.word': Word.  You can use the '-K' option if you
+want a warning issued when this is done.
 
 
 File: as.info,  Node: L,  Next: listing,  Prev: K,  Up: Invoking
 
-2.7 Include Local Symbols: `-L'
+2.7 Include Local Symbols: '-L'
 ===============================
 
 Symbols beginning with system-specific local label prefixes, typically
-`.L' for ELF systems or `L' for traditional a.out systems, are called
+'.L' for ELF systems or 'L' for traditional a.out systems, are called
 "local symbols".  *Note Symbol Names::.  Normally you do not see such
 symbols when debugging, because they are intended for the use of
 programs (like compilers) that compose assembler programs, not for your
-notice.  Normally both `as' and `ld' discard such symbols, so you do
-not normally debug with them.
+notice.  Normally both 'as' and 'ld' discard such symbols, so you do not
+normally debug with them.
 
-   This option tells `as' to retain those local symbols in the object
-file.  Usually if you do this you also tell the linker `ld' to preserve
+   This option tells 'as' to retain those local symbols in the object
+file.  Usually if you do this you also tell the linker 'ld' to preserve
 those symbols.
 
 
 File: as.info,  Node: listing,  Next: M,  Prev: L,  Up: Invoking
 
-2.8 Configuring listing output: `--listing'
+2.8 Configuring listing output: '--listing'
 ===========================================
 
-The listing feature of the assembler can be enabled via the command
-line switch `-a' (*note a::).  This feature combines the input source
-file(s) with a hex dump of the corresponding locations in the output
-object file, and displays them as a listing file.  The format of this
-listing can be controlled by directives inside the assembler source
-(i.e., `.list' (*note List::), `.title' (*note Title::), `.sbttl'
-(*note Sbttl::), `.psize' (*note Psize::), and `.eject' (*note Eject::)
-and also by the following switches:
-
-`--listing-lhs-width=`number''
-     Sets the maximum width, in words, of the first line of the hex
-     byte dump.  This dump appears on the left hand side of the listing
+The listing feature of the assembler can be enabled via the command line
+switch '-a' (*note a::).  This feature combines the input source file(s)
+with a hex dump of the corresponding locations in the output object
+file, and displays them as a listing file.  The format of this listing
+can be controlled by directives inside the assembler source (i.e.,
+'.list' (*note List::), '.title' (*note Title::), '.sbttl' (*note
+Sbttl::), '.psize' (*note Psize::), and '.eject' (*note Eject::) and
+also by the following switches:
+
+'--listing-lhs-width='number''
+     Sets the maximum width, in words, of the first line of the hex byte
+     dump.  This dump appears on the left hand side of the listing
      output.
 
-`--listing-lhs-width2=`number''
+'--listing-lhs-width2='number''
      Sets the maximum width, in words, of any further lines of the hex
      byte dump for a given input source line.  If this value is not
-     specified, it defaults to being the same as the value specified
-     for `--listing-lhs-width'.  If neither switch is used the default
-     is to one.
+     specified, it defaults to being the same as the value specified for
+     '--listing-lhs-width'.  If neither switch is used the default is to
+     one.
 
-`--listing-rhs-width=`number''
+'--listing-rhs-width='number''
      Sets the maximum width, in characters, of the source line that is
      displayed alongside the hex dump.  The default value for this
      parameter is 100.  The source line is displayed on the right hand
      side of the listing output.
 
-`--listing-cont-lines=`number''
-     Sets the maximum number of continuation lines of hex dump that
-     will be displayed for a given single line of source input.  The
-     default value is 4.
+'--listing-cont-lines='number''
+     Sets the maximum number of continuation lines of hex dump that will
+     be displayed for a given single line of source input.  The default
+     value is 4.
 
 
 File: as.info,  Node: M,  Next: MD,  Prev: listing,  Up: Invoking
 
-2.9 Assemble in MRI Compatibility Mode: `-M'
+2.9 Assemble in MRI Compatibility Mode: '-M'
 ============================================
 
-The `-M' or `--mri' option selects MRI compatibility mode.  This
-changes the syntax and pseudo-op handling of `as' to make it compatible
-with the `ASM68K' or the `ASM960' (depending upon the configured
-target) assembler from Microtec Research.  The exact nature of the MRI
-syntax will not be documented here; see the MRI manuals for more
-information.  Note in particular that the handling of macros and macro
-arguments is somewhat different.  The purpose of this option is to
-permit assembling existing MRI assembler code using `as'.
+The '-M' or '--mri' option selects MRI compatibility mode.  This changes
+the syntax and pseudo-op handling of 'as' to make it compatible with the
+'ASM68K' or the 'ASM960' (depending upon the configured target)
+assembler from Microtec Research.  The exact nature of the MRI syntax
+will not be documented here; see the MRI manuals for more information.
+Note in particular that the handling of macros and macro arguments is
+somewhat different.  The purpose of this option is to permit assembling
+existing MRI assembler code using 'as'.
 
-   The MRI compatibility is not complete.  Certain operations of the
-MRI assembler depend upon its object file format, and can not be
-supported using other object file formats.  Supporting these would
-require enhancing each object file format individually.  These are:
+   The MRI compatibility is not complete.  Certain operations of the MRI
+assembler depend upon its object file format, and can not be supported
+using other object file formats.  Supporting these would require
+enhancing each object file format individually.  These are:
 
    * global symbols in common section
 
-     The m68k MRI assembler supports common sections which are merged
-     by the linker.  Other object file formats do not support this.
-     `as' handles common sections by treating them as a single common
-     symbol.  It permits local symbols to be defined within a common
-     section, but it can not support global symbols, since it has no
-     way to describe them.
+     The m68k MRI assembler supports common sections which are merged by
+     the linker.  Other object file formats do not support this.  'as'
+     handles common sections by treating them as a single common symbol.
+     It permits local symbols to be defined within a common section, but
+     it can not support global symbols, since it has no way to describe
+     them.
 
    * complex relocations
 
@@ -1677,31 +1639,31 @@ require enhancing each object file format individually.  These are:
      or more sections.  These are not support by other object file
      formats.
 
-   * `END' pseudo-op specifying start address
+   * 'END' pseudo-op specifying start address
 
-     The MRI `END' pseudo-op permits the specification of a start
+     The MRI 'END' pseudo-op permits the specification of a start
      address.  This is not supported by other object file formats.  The
-     start address may instead be specified using the `-e' option to
-     the linker, or in a linker script.
+     start address may instead be specified using the '-e' option to the
+     linker, or in a linker script.
 
-   * `IDNT', `.ident' and `NAME' pseudo-ops
+   * 'IDNT', '.ident' and 'NAME' pseudo-ops
 
-     The MRI `IDNT', `.ident' and `NAME' pseudo-ops assign a module
-     name to the output file.  This is not supported by other object
-     file formats.
+     The MRI 'IDNT', '.ident' and 'NAME' pseudo-ops assign a module name
+     to the output file.  This is not supported by other object file
+     formats.
 
-   * `ORG' pseudo-op
+   * 'ORG' pseudo-op
 
-     The m68k MRI `ORG' pseudo-op begins an absolute section at a given
-     address.  This differs from the usual `as' `.org' pseudo-op, which
-     changes the location within the current section.  Absolute
-     sections are not supported by other object file formats.  The
-     address of a section may be assigned within a linker script.
+     The m68k MRI 'ORG' pseudo-op begins an absolute section at a given
+     address.  This differs from the usual 'as' '.org' pseudo-op, which
+     changes the location within the current section.  Absolute sections
+     are not supported by other object file formats.  The address of a
+     section may be assigned within a linker script.
 
    There are some other features of the MRI assembler which are not
-supported by `as', typically either because they are difficult or
-because they seem of little consequence.  Some of these may be
-supported in future releases.
+supported by 'as', typically either because they are difficult or
+because they seem of little consequence.  Some of these may be supported
+in future releases.
 
    * EBCDIC strings
 
@@ -1710,76 +1672,75 @@ supported in future releases.
    * packed binary coded decimal
 
      Packed binary coded decimal is not supported.  This means that the
-     `DC.P' and `DCB.P' pseudo-ops are not supported.
+     'DC.P' and 'DCB.P' pseudo-ops are not supported.
 
-   * `FEQU' pseudo-op
+   * 'FEQU' pseudo-op
 
-     The m68k `FEQU' pseudo-op is not supported.
+     The m68k 'FEQU' pseudo-op is not supported.
 
-   * `NOOBJ' pseudo-op
+   * 'NOOBJ' pseudo-op
 
-     The m68k `NOOBJ' pseudo-op is not supported.
+     The m68k 'NOOBJ' pseudo-op is not supported.
 
-   * `OPT' branch control options
+   * 'OPT' branch control options
 
-     The m68k `OPT' branch control options--`B', `BRS', `BRB', `BRL',
-     and `BRW'--are ignored.  `as' automatically relaxes all branches,
+     The m68k 'OPT' branch control options--'B', 'BRS', 'BRB', 'BRL',
+     and 'BRW'--are ignored.  'as' automatically relaxes all branches,
      whether forward or backward, to an appropriate size, so these
      options serve no purpose.
 
-   * `OPT' list control options
+   * 'OPT' list control options
 
-     The following m68k `OPT' list control options are ignored: `C',
-     `CEX', `CL', `CRE', `E', `G', `I', `M', `MEX', `MC', `MD', `X'.
+     The following m68k 'OPT' list control options are ignored: 'C',
+     'CEX', 'CL', 'CRE', 'E', 'G', 'I', 'M', 'MEX', 'MC', 'MD', 'X'.
 
-   * other `OPT' options
+   * other 'OPT' options
 
-     The following m68k `OPT' options are ignored: `NEST', `O', `OLD',
-     `OP', `P', `PCO', `PCR', `PCS', `R'.
+     The following m68k 'OPT' options are ignored: 'NEST', 'O', 'OLD',
+     'OP', 'P', 'PCO', 'PCR', 'PCS', 'R'.
 
-   * `OPT' `D' option is default
+   * 'OPT' 'D' option is default
 
-     The m68k `OPT' `D' option is the default, unlike the MRI assembler.
-     `OPT NOD' may be used to turn it off.
+     The m68k 'OPT' 'D' option is the default, unlike the MRI assembler.
+     'OPT NOD' may be used to turn it off.
 
-   * `XREF' pseudo-op.
+   * 'XREF' pseudo-op.
 
-     The m68k `XREF' pseudo-op is ignored.
+     The m68k 'XREF' pseudo-op is ignored.
 
-   * `.debug' pseudo-op
+   * '.debug' pseudo-op
 
-     The i960 `.debug' pseudo-op is not supported.
+     The i960 '.debug' pseudo-op is not supported.
 
-   * `.extended' pseudo-op
+   * '.extended' pseudo-op
 
-     The i960 `.extended' pseudo-op is not supported.
+     The i960 '.extended' pseudo-op is not supported.
 
-   * `.list' pseudo-op.
+   * '.list' pseudo-op.
 
-     The various options of the i960 `.list' pseudo-op are not
+     The various options of the i960 '.list' pseudo-op are not
      supported.
 
-   * `.optimize' pseudo-op
-
-     The i960 `.optimize' pseudo-op is not supported.
+   * '.optimize' pseudo-op
 
-   * `.output' pseudo-op
+     The i960 '.optimize' pseudo-op is not supported.
 
-     The i960 `.output' pseudo-op is not supported.
+   * '.output' pseudo-op
 
-   * `.setreal' pseudo-op
+     The i960 '.output' pseudo-op is not supported.
 
-     The i960 `.setreal' pseudo-op is not supported.
+   * '.setreal' pseudo-op
 
+     The i960 '.setreal' pseudo-op is not supported.
 
 
 File: as.info,  Node: MD,  Next: no-pad-sections,  Prev: M,  Up: Invoking
 
-2.10 Dependency Tracking: `--MD'
+2.10 Dependency Tracking: '--MD'
 ================================
 
-`as' can generate a dependency file for the file it creates.  This file
-consists of a single rule suitable for `make' describing the
+'as' can generate a dependency file for the file it creates.  This file
+consists of a single rule suitable for 'make' describing the
 dependencies of the main source file.
 
    The rule is written to the file named in its argument.
@@ -1794,114 +1755,114 @@ File: as.info,  Node: no-pad-sections,  Next: o,  Prev: MD,  Up: Invoking
 
 Normally the assembler will pad the end of each output section up to its
 alignment boundary.  But this can waste space, which can be significant
-on memory constrained targets.  So the `--no-pad-sections' option will
+on memory constrained targets.  So the '--no-pad-sections' option will
 disable this behaviour.
 
 
 File: as.info,  Node: o,  Next: R,  Prev: no-pad-sections,  Up: Invoking
 
-2.12 Name the Object File: `-o'
+2.12 Name the Object File: '-o'
 ===============================
 
-There is always one object file output when you run `as'.  By default
-it has the name `a.out' (or `b.out', for Intel 960 targets only).  You
-use this option (which takes exactly one filename) to give the object
-file a different name.
+There is always one object file output when you run 'as'.  By default it
+has the name 'a.out' (or 'b.out', for Intel 960 targets only).  You use
+this option (which takes exactly one filename) to give the object file a
+different name.
 
-   Whatever the object file is called, `as' overwrites any existing
-file of the same name.
+   Whatever the object file is called, 'as' overwrites any existing file
+of the same name.
 
 
 File: as.info,  Node: R,  Next: statistics,  Prev: o,  Up: Invoking
 
-2.13 Join Data and Text Sections: `-R'
+2.13 Join Data and Text Sections: '-R'
 ======================================
 
-`-R' tells `as' to write the object file as if all data-section data
+'-R' tells 'as' to write the object file as if all data-section data
 lives in the text section.  This is only done at the very last moment:
 your binary data are the same, but data section parts are relocated
 differently.  The data section part of your object file is zero bytes
 long because all its bytes are appended to the text section.  (*Note
 Sections and Relocation: Sections.)
 
-   When you specify `-R' it would be possible to generate shorter
+   When you specify '-R' it would be possible to generate shorter
 address displacements (because we do not have to cross between text and
 data section).  We refrain from doing this simply for compatibility with
-older versions of `as'.  In future, `-R' may work this way.
+older versions of 'as'.  In future, '-R' may work this way.
 
-   When `as' is configured for COFF or ELF output, this option is only
-useful if you use sections named `.text' and `.data'.
+   When 'as' is configured for COFF or ELF output, this option is only
+useful if you use sections named '.text' and '.data'.
 
-   `-R' is not supported for any of the HPPA targets.  Using `-R'
-generates a warning from `as'.
+   '-R' is not supported for any of the HPPA targets.  Using '-R'
+generates a warning from 'as'.
 
 
 File: as.info,  Node: statistics,  Next: traditional-format,  Prev: R,  Up: Invoking
 
-2.14 Display Assembly Statistics: `--statistics'
+2.14 Display Assembly Statistics: '--statistics'
 ================================================
 
-Use `--statistics' to display two statistics about the resources used by
-`as': the maximum amount of space allocated during the assembly (in
+Use '--statistics' to display two statistics about the resources used by
+'as': the maximum amount of space allocated during the assembly (in
 bytes), and the total execution time taken for the assembly (in CPU
 seconds).
 
 
 File: as.info,  Node: traditional-format,  Next: v,  Prev: statistics,  Up: Invoking
 
-2.15 Compatible Output: `--traditional-format'
+2.15 Compatible Output: '--traditional-format'
 ==============================================
 
-For some targets, the output of `as' is different in some ways from the
-output of some existing assembler.  This switch requests `as' to use
-the traditional format instead.
+For some targets, the output of 'as' is different in some ways from the
+output of some existing assembler.  This switch requests 'as' to use the
+traditional format instead.
 
-   For example, it disables the exception frame optimizations which
-`as' normally does by default on `gcc' output.
+   For example, it disables the exception frame optimizations which 'as'
+normally does by default on 'gcc' output.
 
 
 File: as.info,  Node: v,  Next: W,  Prev: traditional-format,  Up: Invoking
 
-2.16 Announce Version: `-v'
+2.16 Announce Version: '-v'
 ===========================
 
 You can find out what version of as is running by including the option
-`-v' (which you can also spell as `-version') on the command line.
+'-v' (which you can also spell as '-version') on the command line.
 
 
 File: as.info,  Node: W,  Next: Z,  Prev: v,  Up: Invoking
 
-2.17 Control Warnings: `-W', `--warn', `--no-warn', `--fatal-warnings'
+2.17 Control Warnings: '-W', '--warn', '--no-warn', '--fatal-warnings'
 ======================================================================
 
-`as' should never give a warning or error message when assembling
-compiler output.  But programs written by people often cause `as' to
-give a warning that a particular assumption was made.  All such
-warnings are directed to the standard error file.
+'as' should never give a warning or error message when assembling
+compiler output.  But programs written by people often cause 'as' to
+give a warning that a particular assumption was made.  All such warnings
+are directed to the standard error file.
 
-   If you use the `-W' and `--no-warn' options, no warnings are issued.
+   If you use the '-W' and '--no-warn' options, no warnings are issued.
 This only affects the warning messages: it does not change any
-particular of how `as' assembles your file.  Errors, which stop the
+particular of how 'as' assembles your file.  Errors, which stop the
 assembly, are still reported.
 
-   If you use the `--fatal-warnings' option, `as' considers files that
+   If you use the '--fatal-warnings' option, 'as' considers files that
 generate warnings to be in error.
 
-   You can switch these options off again by specifying `--warn', which
+   You can switch these options off again by specifying '--warn', which
 causes warnings to be output as usual.
 
 
 File: as.info,  Node: Z,  Prev: W,  Up: Invoking
 
-2.18 Generate Object File in Spite of Errors: `-Z'
+2.18 Generate Object File in Spite of Errors: '-Z'
 ==================================================
 
-After an error message, `as' normally produces no output.  If for some
-reason you are interested in object file output even after `as' gives
-an error message on your program, use the `-Z' option.  If there are
-any errors, `as' continues anyways, and writes an object file after a
-final warning message of the form `N errors, M warnings, generating bad
-object file.'
+After an error message, 'as' normally produces no output.  If for some
+reason you are interested in object file output even after 'as' gives an
+error message on your program, use the '-Z' option.  If there are any
+errors, 'as' continues anyways, and writes an object file after a final
+warning message of the form 'N errors, M warnings, generating bad object
+file.'
 
 
 File: as.info,  Node: Syntax,  Next: Sections,  Prev: Invoking,  Up: Top
@@ -1910,8 +1871,8 @@ File: as.info,  Node: Syntax,  Next: Sections,  Prev: Invoking,  Up: Top
 ********
 
 This chapter describes the machine-independent syntax allowed in a
-source file.  `as' syntax is similar to what many other assemblers use;
-it is inspired by the BSD 4.2 assembler, except that `as' does not
+source file.  'as' syntax is similar to what many other assemblers use;
+it is inspired by the BSD 4.2 assembler, except that 'as' does not
 assemble Vax bit-fields.
 
 * Menu:
@@ -1929,7 +1890,7 @@ File: as.info,  Node: Preprocessing,  Next: Whitespace,  Up: Syntax
 3.1 Preprocessing
 =================
 
-The `as' internal preprocessor:
+The 'as' internal preprocessor:
    * adjusts and removes extra whitespace.  It leaves one space or tab
      before the keywords on a line, and turns any other whitespace on
      the line into a single space.
@@ -1941,23 +1902,22 @@ The `as' internal preprocessor:
 
    It does not do macro processing, include file handling, or anything
 else you may get from your C compiler's preprocessor.  You can do
-include file processing with the `.include' directive (*note
-`.include': Include.).  You can use the GNU C compiler driver to get
-other "CPP" style preprocessing by giving the input file a `.S' suffix.
-*Note Options Controlling the Kind of Output: (gcc info)Overall
-Options.
+include file processing with the '.include' directive (*note '.include':
+Include.).  You can use the GNU C compiler driver to get other "CPP"
+style preprocessing by giving the input file a '.S' suffix.  *Note
+Options Controlling the Kind of Output: (gcc info)Overall Options.
 
    Excess whitespace, comments, and character constants cannot be used
 in the portions of the input text that are not preprocessed.
 
-   If the first line of an input file is `#NO_APP' or if you use the
-`-f' option, whitespace and comments are not removed from the input
+   If the first line of an input file is '#NO_APP' or if you use the
+'-f' option, whitespace and comments are not removed from the input
 file.  Within an input file, you can ask for whitespace and comment
-removal in specific portions of the by putting a line that says `#APP'
+removal in specific portions of the by putting a line that says '#APP'
 before the text that may contain whitespace or comments, and putting a
-line that says `#NO_APP' after this text.  This feature is mainly
-intend to support `asm' statements in compilers whose output is
-otherwise free of comments and whitespace.
+line that says '#NO_APP' after this text.  This feature is mainly intend
+to support 'asm' statements in compilers whose output is otherwise free
+of comments and whitespace.
 
 
 File: as.info,  Node: Whitespace,  Next: Comments,  Prev: Preprocessing,  Up: Syntax
@@ -1965,8 +1925,8 @@ File: as.info,  Node: Whitespace,  Next: Comments,  Prev: Preprocessing,  Up: Sy
 3.2 Whitespace
 ==============
 
-"Whitespace" is one or more blanks or tabs, in any order.  Whitespace
-is used to separate symbols, and to make programs neater for people to
+"Whitespace" is one or more blanks or tabs, in any order.  Whitespace is
+used to separate symbols, and to make programs neater for people to
 read.  Unless within character constants (*note Character Constants:
 Characters.), any whitespace means the same as exactly one space.
 
@@ -1976,10 +1936,10 @@ File: as.info,  Node: Comments,  Next: Symbol Intro,  Prev: Whitespace,  Up: Syn
 3.3 Comments
 ============
 
-There are two ways of rendering comments to `as'.  In both cases the
+There are two ways of rendering comments to 'as'.  In both cases the
 comment is equivalent to one space.
 
-   Anything from `/*' through the next `*/' is a comment.  This means
+   Anything from '/*' through the next '*/' is a comment.  This means
 you may not nest these comments.
 
      /*
@@ -1992,22 +1952,22 @@ you may not nest these comments.
    Anything from a "line comment" character up to the next newline is
 considered a comment and is ignored.  The line comment character is
 target specific, and some targets multiple comment characters.  Some
-targets also have line comment characters that only work if they are
-the first character on a line.  Some targets use a sequence of two
+targets also have line comment characters that only work if they are the
+first character on a line.  Some targets use a sequence of two
 characters to introduce a line comment.  Some targets can also change
 their line comment characters depending upon command line options that
 have been used.  For more details see the _Syntax_ section in the
 documentation for individual targets.
 
-   If the line comment character is the hash sign (`#') then it still
+   If the line comment character is the hash sign ('#') then it still
 has the special ability to enable and disable preprocessing (*note
 Preprocessing::) and to specify logical line numbers:
 
-   To be compatible with past assemblers, lines that begin with `#'
-have a special interpretation.  Following the `#' should be an absolute
+   To be compatible with past assemblers, lines that begin with '#' have
+a special interpretation.  Following the '#' should be an absolute
 expression (*note Expressions::): the logical line number of the _next_
-line.  Then a string (*note Strings: Strings.) is allowed: if present
-it is a new logical file name.  The rest of the line, if any, should be
+line.  Then a string (*note Strings: Strings.) is allowed: if present it
+is a new logical file name.  The rest of the line, if any, should be
 whitespace.
 
    If the first non-whitespace characters on the line are not numeric,
@@ -2016,8 +1976,8 @@ the line is ignored.  (Just like a comment.)
                                # This is an ordinary comment.
      # 42-6 "new_file_name"    # New logical file name
                                # This is logical line # 36.
-   This feature is deprecated, and may disappear from future versions
-of `as'.
+   This feature is deprecated, and may disappear from future versions of
+'as'.
 
 
 File: as.info,  Node: Symbol Intro,  Next: Statements,  Prev: Comments,  Up: Syntax
@@ -2026,19 +1986,19 @@ File: as.info,  Node: Symbol Intro,  Next: Statements,  Prev: Comments,  Up: Syn
 ===========
 
 A "symbol" is one or more characters chosen from the set of all letters
-(both upper and lower case), digits and the three characters `_.$'.  On
-most machines, you can also use `$' in symbol names; exceptions are
-noted in *Note Machine Dependencies::.  No symbol may begin with a
+(both upper and lower case), digits and the three characters '_.$'.  On
+most machines, you can also use '$' in symbol names; exceptions are
+noted in *note Machine Dependencies::.  No symbol may begin with a
 digit.  Case is significant.  There is no length limit; all characters
 are significant.  Multibyte characters are supported.  Symbols are
 delimited by characters not in that set, or by the beginning of a file
 (since the source program must end with a newline, the end of a file is
 not a possible symbol delimiter).  *Note Symbols::.
 
-Symbol names may also be enclosed in double quote `"' characters.  In
-such cases any characters are allowed, except for the NUL character.
-If a double quote character is to be included in the symbol name it
-must be preceeded by a backslash `\' character.  
+   Symbol names may also be enclosed in double quote '"' characters.  In
+such cases any characters are allowed, except for the NUL character.  If
+a double quote character is to be included in the symbol name it must be
+preceeded by a backslash '\' character.
 
 
 File: as.info,  Node: Statements,  Next: Constants,  Prev: Symbol Intro,  Up: Syntax
@@ -2046,15 +2006,15 @@ File: as.info,  Node: Statements,  Next: Constants,  Prev: Symbol Intro,  Up: Sy
 3.5 Statements
 ==============
 
-A "statement" ends at a newline character (`\n') or a "line separator
+A "statement" ends at a newline character ('\n') or a "line separator
 character".  The line separator character is target specific and
 described in the _Syntax_ section of each target's documentation.  Not
 all targets support a line separator character.  The newline or line
-separator character is considered to be part of the preceding
-statement.  Newlines and separators within character constants are an
-exception: they do not end statements.
+separator character is considered to be part of the preceding statement.
+Newlines and separators within character constants are an exception:
+they do not end statements.
 
-   It is an error to end any statement with end-of-file:  the last
+   It is an error to end any statement with end-of-file: the last
 character of any input file should be a newline.
 
    An empty statement is allowed, and may include whitespace.  It is
@@ -2063,21 +2023,21 @@ ignored.
    A statement begins with zero or more labels, optionally followed by a
 key symbol which determines what kind of statement it is.  The key
 symbol determines the syntax of the rest of the statement.  If the
-symbol begins with a dot `.' then the statement is an assembler
+symbol begins with a dot '.' then the statement is an assembler
 directive: typically valid for any computer.  If the symbol begins with
 a letter the statement is an assembly language "instruction": it
 assembles into a machine language instruction.  Different versions of
-`as' for different computers recognize different instructions.  In
-fact, the same symbol may represent a different instruction in a
-different computer's assembly language.
+'as' for different computers recognize different instructions.  In fact,
+the same symbol may represent a different instruction in a different
+computer's assembly language.
 
-   A label is a symbol immediately followed by a colon (`:').
+   A label is a symbol immediately followed by a colon (':').
 Whitespace before a label or after a colon is permitted, but you may not
-have whitespace between a label's symbol and its colon. *Note Labels::.
+have whitespace between a label's symbol and its colon.  *Note Labels::.
 
-   For HPPA targets, labels need not be immediately followed by a
-colon, but the definition of a label must begin in column zero.  This
-also implies that only one label may be defined on each line.
+   For HPPA targets, labels need not be immediately followed by a colon,
+but the definition of a label must begin in column zero.  This also
+implies that only one label may be defined on each line.
 
      label:     .directive    followed by something
      another_label:           # This is an empty statement.
@@ -2128,51 +2088,51 @@ File: as.info,  Node: Strings,  Next: Chars,  Up: Characters
 A "string" is written between double-quotes.  It may contain
 double-quotes or null characters.  The way to get special characters
 into a string is to "escape" these characters: precede them with a
-backslash `\' character.  For example `\\' represents one backslash:
-the first `\' is an escape which tells `as' to interpret the second
-character literally as a backslash (which prevents `as' from
-recognizing the second `\' as an escape character).  The complete list
-of escapes follows.
+backslash '\' character.  For example '\\' represents one backslash: the
+first '\' is an escape which tells 'as' to interpret the second
+character literally as a backslash (which prevents 'as' from recognizing
+the second '\' as an escape character).  The complete list of escapes
+follows.
 
-`\b'
+'\b'
      Mnemonic for backspace; for ASCII this is octal code 010.
 
-`backslash-f'
+'backslash-f'
      Mnemonic for FormFeed; for ASCII this is octal code 014.
 
-`\n'
+'\n'
      Mnemonic for newline; for ASCII this is octal code 012.
 
-`\r'
+'\r'
      Mnemonic for carriage-Return; for ASCII this is octal code 015.
 
-`\t'
+'\t'
      Mnemonic for horizontal Tab; for ASCII this is octal code 011.
 
-`\ DIGIT DIGIT DIGIT'
+'\ DIGIT DIGIT DIGIT'
      An octal character code.  The numeric code is 3 octal digits.  For
      compatibility with other Unix systems, 8 and 9 are accepted as
-     digits: for example, `\008' has the value 010, and `\009' the
-     value 011.
+     digits: for example, '\008' has the value 010, and '\009' the value
+     011.
 
-`\`x' HEX-DIGITS...'
+'\x HEX-DIGITS...'
      A hex character code.  All trailing hex digits are combined.
-     Either upper or lower case `x' works.
+     Either upper or lower case 'x' works.
 
-`\\'
-     Represents one `\' character.
+'\\'
+     Represents one '\' character.
 
-`\"'
-     Represents one `"' character.  Needed in strings to represent this
-     character, because an unescaped `"' would end the string.
+'\"'
+     Represents one '"' character.  Needed in strings to represent this
+     character, because an unescaped '"' would end the string.
 
-`\ ANYTHING-ELSE'
-     Any other character when escaped by `\' gives a warning, but
-     assembles as if the `\' was not present.  The idea is that if you
+'\ ANYTHING-ELSE'
+     Any other character when escaped by '\' gives a warning, but
+     assembles as if the '\' was not present.  The idea is that if you
      used an escape sequence you clearly didn't want the literal
-     interpretation of the following character.  However `as' has no
-     other interpretation, so `as' knows it is giving you the wrong
-     code and warns you of the fact.
+     interpretation of the following character.  However 'as' has no
+     other interpretation, so 'as' knows it is giving you the wrong code
+     and warns you of the fact.
 
    Which characters are escapable, and what those escapes represent,
 varies widely among assemblers.  The current set is what we think the
@@ -2185,17 +2145,17 @@ File: as.info,  Node: Chars,  Prev: Strings,  Up: Characters
 3.6.1.2 Characters
 ..................
 
-A single character may be written as a single quote immediately
-followed by that character.  Some backslash escapes apply to
-characters, `\b', `\f', `\n', `\r', `\t', and `\"' with the same meaning
-as for strings, plus `\'' for a single quote.  So if you want to write
-the character backslash, you must write `'\\' where the first `\'
-escapes the second `\'.  As you can see, the quote is an acute accent,
-not a grave accent.  A newline immediately following an acute accent is
-taken as a literal character and does not count as the end of a
-statement.  The value of a character constant in a numeric expression
-is the machine's byte-wide code for that character.  `as' assumes your
-character code is ASCII: `'A' means 65, `'B' means 66, and so on.
+A single character may be written as a single quote immediately followed
+by that character.  Some backslash escapes apply to characters, '\b',
+'\f', '\n', '\r', '\t', and '\"' with the same meaning as for strings,
+plus '\'' for a single quote.  So if you want to write the character
+backslash, you must write ''\\' where the first '\' escapes the second
+'\'.  As you can see, the quote is an acute accent, not a grave accent.
+A newline immediately following an acute accent is taken as a literal
+character and does not count as the end of a statement.  The value of a
+character constant in a numeric expression is the machine's byte-wide
+code for that character.  'as' assumes your character code is ASCII:
+''A' means 65, ''B' means 66, and so on.
 
 
 File: as.info,  Node: Numbers,  Prev: Characters,  Up: Constants
@@ -2203,9 +2163,9 @@ File: as.info,  Node: Numbers,  Prev: Characters,  Up: Constants
 3.6.2 Number Constants
 ----------------------
 
-`as' distinguishes three kinds of numbers according to how they are
+'as' distinguishes three kinds of numbers according to how they are
 stored in the target machine.  _Integers_ are numbers that would fit
-into an `int' in the C language.  _Bignums_ are integers, but they are
+into an 'int' in the C language.  _Bignums_ are integers, but they are
 stored in more than 32 bits.  _Flonums_ are floating point numbers,
 described below.
 
@@ -2221,20 +2181,20 @@ File: as.info,  Node: Integers,  Next: Bignums,  Up: Numbers
 3.6.2.1 Integers
 ................
 
-A binary integer is `0b' or `0B' followed by zero or more of the binary
-digits `01'.
+A binary integer is '0b' or '0B' followed by zero or more of the binary
+digits '01'.
 
-   An octal integer is `0' followed by zero or more of the octal digits
-(`01234567').
+   An octal integer is '0' followed by zero or more of the octal digits
+('01234567').
 
    A decimal integer starts with a non-zero digit followed by zero or
-more digits (`0123456789').
+more digits ('0123456789').
 
-   A hexadecimal integer is `0x' or `0X' followed by one or more
-hexadecimal digits chosen from `0123456789abcdefABCDEF'.
+   A hexadecimal integer is '0x' or '0X' followed by one or more
+hexadecimal digits chosen from '0123456789abcdefABCDEF'.
 
    Integers have the usual values.  To denote a negative integer, use
-the prefix operator `-' discussed under expressions (*note Prefix
+the prefix operator '-' discussed under expressions (*note Prefix
 Operators: Prefix Ops.).
 
 
@@ -2256,51 +2216,48 @@ File: as.info,  Node: Flonums,  Prev: Bignums,  Up: Numbers
 
 A "flonum" represents a floating point number.  The translation is
 indirect: a decimal floating point number from the text is converted by
-`as' to a generic binary floating point number of more than sufficient
+'as' to a generic binary floating point number of more than sufficient
 precision.  This generic floating point number is converted to a
-particular computer's floating point format (or formats) by a portion
-of `as' specialized to that computer.
+particular computer's floating point format (or formats) by a portion of
+'as' specialized to that computer.
 
    A flonum is written by writing (in order)
-   * The digit `0'.  (`0' is optional on the HPPA.)
+   * The digit '0'.  ('0' is optional on the HPPA.)
 
-   * A letter, to tell `as' the rest of the number is a flonum.  `e' is
+   * A letter, to tell 'as' the rest of the number is a flonum.  'e' is
      recommended.  Case is not important.
 
      On the H8/300, Renesas / SuperH SH, and AMD 29K architectures, the
-     letter must be one of the letters `DFPRSX' (in upper or lower
+     letter must be one of the letters 'DFPRSX' (in upper or lower
      case).
 
-     On the ARC, the letter must be one of the letters `DFRS' (in upper
+     On the ARC, the letter must be one of the letters 'DFRS' (in upper
      or lower case).
 
      On the Intel 960 architecture, the letter must be one of the
-     letters `DFT' (in upper or lower case).
+     letters 'DFT' (in upper or lower case).
 
-     On the HPPA architecture, the letter must be `E' (upper case only).
+     On the HPPA architecture, the letter must be 'E' (upper case only).
 
-   * An optional sign: either `+' or `-'.
+   * An optional sign: either '+' or '-'.
 
    * An optional "integer part": zero or more decimal digits.
 
-   * An optional "fractional part": `.' followed by zero or more
-     decimal digits.
+   * An optional "fractional part": '.' followed by zero or more decimal
+     digits.
 
    * An optional exponent, consisting of:
 
-        * An `E' or `e'.
-
-        * Optional sign: either `+' or `-'.
-
+        * An 'E' or 'e'.
+        * Optional sign: either '+' or '-'.
         * One or more decimal digits.
 
-
    At least one of the integer part or the fractional part must be
 present.  The floating point number has the usual base-10 value.
 
-   `as' does all processing using integers.  Flonums are computed
+   'as' does all processing using integers.  Flonums are computed
 independently of any floating point hardware in the computer running
-`as'.
+'as'.
 
 
 File: as.info,  Node: Sections,  Next: Symbols,  Prev: Syntax,  Up: Top
@@ -2326,82 +2283,79 @@ Roughly, a section is a range of addresses, with no gaps; all data "in"
 those addresses is treated the same for some particular purpose.  For
 example there may be a "read only" section.
 
-   The linker `ld' reads many object files (partial programs) and
-combines their contents to form a runnable program.  When `as' emits an
-object file, the partial program is assumed to start at address 0.
-`ld' assigns the final addresses for the partial program, so that
-different partial programs do not overlap.  This is actually an
-oversimplification, but it suffices to explain how `as' uses sections.
+   The linker 'ld' reads many object files (partial programs) and
+combines their contents to form a runnable program.  When 'as' emits an
+object file, the partial program is assumed to start at address 0.  'ld'
+assigns the final addresses for the partial program, so that different
+partial programs do not overlap.  This is actually an
+oversimplification, but it suffices to explain how 'as' uses sections.
 
-   `ld' moves blocks of bytes of your program to their run-time
+   'ld' moves blocks of bytes of your program to their run-time
 addresses.  These blocks slide to their run-time addresses as rigid
 units; their length does not change and neither does the order of bytes
 within them.  Such a rigid unit is called a _section_.  Assigning
 run-time addresses to sections is called "relocation".  It includes the
-task of adjusting mentions of object-file addresses so they refer to
-the proper run-time addresses.  For the H8/300, and for the Renesas /
-SuperH SH, `as' pads sections if needed to ensure they end on a word
-(sixteen bit) boundary.
+task of adjusting mentions of object-file addresses so they refer to the
+proper run-time addresses.  For the H8/300, and for the Renesas / SuperH
+SH, 'as' pads sections if needed to ensure they end on a word (sixteen
+bit) boundary.
 
-   An object file written by `as' has at least three sections, any of
+   An object file written by 'as' has at least three sections, any of
 which may be empty.  These are named "text", "data" and "bss" sections.
 
-   When it generates COFF or ELF output, `as' can also generate
-whatever other named sections you specify using the `.section'
-directive (*note `.section': Section.).  If you do not use any
-directives that place output in the `.text' or `.data' sections, these
-sections still exist, but are empty.
+   When it generates COFF or ELF output, 'as' can also generate whatever
+other named sections you specify using the '.section' directive (*note
+'.section': Section.).  If you do not use any directives that place
+output in the '.text' or '.data' sections, these sections still exist,
+but are empty.
 
-   When `as' generates SOM or ELF output for the HPPA, `as' can also
-generate whatever other named sections you specify using the `.space'
-and `.subspace' directives.  See `HP9000 Series 800 Assembly Language
-Reference Manual' (HP 92432-90001) for details on the `.space' and
-`.subspace' assembler directives.
+   When 'as' generates SOM or ELF output for the HPPA, 'as' can also
+generate whatever other named sections you specify using the '.space'
+and '.subspace' directives.  See 'HP9000 Series 800 Assembly Language
+Reference Manual' (HP 92432-90001) for details on the '.space' and
+'.subspace' assembler directives.
 
-   Additionally, `as' uses different names for the standard text, data,
+   Additionally, 'as' uses different names for the standard text, data,
 and bss sections when generating SOM output.  Program text is placed
-into the `$CODE$' section, data into `$DATA$', and BSS into `$BSS$'.
+into the '$CODE$' section, data into '$DATA$', and BSS into '$BSS$'.
 
-   Within the object file, the text section starts at address `0', the
+   Within the object file, the text section starts at address '0', the
 data section follows, and the bss section follows the data section.
 
    When generating either SOM or ELF output files on the HPPA, the text
-section starts at address `0', the data section at address `0x4000000',
+section starts at address '0', the data section at address '0x4000000',
 and the bss section follows the data section.
 
-   To let `ld' know which data changes when the sections are relocated,
-and how to change that data, `as' also writes to the object file
-details of the relocation needed.  To perform relocation `ld' must
-know, each time an address in the object file is mentioned:
+   To let 'ld' know which data changes when the sections are relocated,
+and how to change that data, 'as' also writes to the object file details
+of the relocation needed.  To perform relocation 'ld' must know, each
+time an address in the object file is mentioned:
    * Where in the object file is the beginning of this reference to an
      address?
-
    * How long (in bytes) is this reference?
-
-   * Which section does the address refer to?  What is the numeric
-     value of
+   * Which section does the address refer to?  What is the numeric value
+     of
           (ADDRESS) - (START-ADDRESS OF SECTION)?
-
    * Is the reference to an address "Program-Counter relative"?
 
-   In fact, every address `as' ever uses is expressed as
+   In fact, every address 'as' ever uses is expressed as
      (SECTION) + (OFFSET INTO SECTION)
-   Further, most expressions `as' computes have this section-relative
+Further, most expressions 'as' computes have this section-relative
 nature.  (For some object formats, such as SOM for the HPPA, some
 expressions are symbol-relative instead.)
 
-   In this manual we use the notation {SECNAME N} to mean "offset N
-into section SECNAME."
+   In this manual we use the notation {SECNAME N} to mean "offset N into
+section SECNAME."
 
    Apart from text, data and bss sections you need to know about the
-"absolute" section.  When `ld' mixes partial programs, addresses in the
-absolute section remain unchanged.  For example, address `{absolute 0}'
-is "relocated" to run-time address 0 by `ld'.  Although the linker
-never arranges two partial programs' data sections with overlapping
-addresses after linking, _by definition_ their absolute sections must
-overlap.  Address `{absolute 239}' in one part of a program is always
-the same address when the program is running as address `{absolute
-239}' in any other part of the program.
+"absolute" section.  When 'ld' mixes partial programs, addresses in the
+absolute section remain unchanged.  For example, address '{absolute 0}'
+is "relocated" to run-time address 0 by 'ld'.  Although the linker never
+arranges two partial programs' data sections with overlapping addresses
+after linking, _by definition_ their absolute sections must overlap.
+Address '{absolute 239}' in one part of a program is always the same
+address when the program is running as address '{absolute 239}' in any
+other part of the program.
 
    The idea of sections is extended to the "undefined" section.  Any
 address whose section is unknown at assembly time is by definition
@@ -2412,14 +2366,13 @@ be such a symbol: its value is unknown at assembly time so it has
 section _undefined_.
 
    By analogy the word _section_ is used to describe groups of sections
-in the linked program.  `ld' puts all partial programs' text sections
-in contiguous addresses in the linked program.  It is customary to
-refer to the _text section_ of a program, meaning all the addresses of
-all partial programs' text sections.  Likewise for data and bss
-sections.
+in the linked program.  'ld' puts all partial programs' text sections in
+contiguous addresses in the linked program.  It is customary to refer to
+the _text section_ of a program, meaning all the addresses of all
+partial programs' text sections.  Likewise for data and bss sections.
 
-   Some sections are manipulated by `ld'; others are invented for use
-of `as' and have no meaning except during assembly.
+   Some sections are manipulated by 'ld'; others are invented for use of
+'as' and have no meaning except during assembly.
 
 
 File: as.info,  Node: Ld Sections,  Next: As Sections,  Prev: Secs Background,  Up: Sections
@@ -2427,16 +2380,16 @@ File: as.info,  Node: Ld Sections,  Next: As Sections,  Prev: Secs Background,
 4.2 Linker Sections
 ===================
 
-`ld' deals with just four kinds of sections, summarized below.
+'ld' deals with just four kinds of sections, summarized below.
 
 *named sections*
 *text section*
 *data section*
-     These sections hold your program.  `as' and `ld' treat them as
+     These sections hold your program.  'as' and 'ld' treat them as
      separate but equal sections.  Anything you can say of one section
      is true of another.  When the program is running, however, it is
-     customary for the text section to be unalterable.  The text
-     section is often shared among processes: it contains instructions,
+     customary for the text section to be unalterable.  The text section
+     is often shared among processes: it contains instructions,
      constants and the like.  The data section of a running program is
      usually alterable: for example, C variables would be stored in the
      data section.
@@ -2452,17 +2405,17 @@ File: as.info,  Node: Ld Sections,  Next: As Sections,  Prev: Secs Background,
 
 *absolute section*
      Address 0 of this section is always "relocated" to runtime address
-     0.  This is useful if you want to refer to an address that `ld'
+     0.  This is useful if you want to refer to an address that 'ld'
      must not change when relocating.  In this sense we speak of
-     absolute addresses being "unrelocatable": they do not change
-     during relocation.
+     absolute addresses being "unrelocatable": they do not change during
+     relocation.
 
 *undefined section*
-     This "section" is a catch-all for address references to objects
-     not in the preceding sections.
+     This "section" is a catch-all for address references to objects not
+     in the preceding sections.
 
    An idealized example of three relocatable sections follows.  The
-example uses the traditional section names `.text' and `.data'.  Memory
+example uses the traditional section names '.text' and '.data'.  Memory
 addresses are on the horizontal axis.
 
                            +-----+----+--+
@@ -2488,16 +2441,16 @@ File: as.info,  Node: As Sections,  Next: Sub-Sections,  Prev: Ld Sections,  Up:
 4.3 Assembler Internal Sections
 ===============================
 
-These sections are meant only for the internal use of `as'.  They have
+These sections are meant only for the internal use of 'as'.  They have
 no meaning at run-time.  You do not really need to know about these
-sections for most purposes; but they can be mentioned in `as' warning
+sections for most purposes; but they can be mentioned in 'as' warning
 messages, so it might be helpful to have an idea of their meanings to
-`as'.  These sections are used to permit the value of every expression
+'as'.  These sections are used to permit the value of every expression
 in your assembly language program to be a section-relative address.
 
 ASSEMBLER-INTERNAL-LOGIC-ERROR!
-     An internal assembler logic error has been found.  This means
-     there is a bug in the assembler.
+     An internal assembler logic error has been found.  This means there
+     is a bug in the assembler.
 
 expr section
      The assembler stores complex expression internally as combinations
@@ -2513,40 +2466,40 @@ File: as.info,  Node: Sub-Sections,  Next: bss,  Prev: As Sections,  Up: Section
 Assembled bytes conventionally fall into two sections: text and data.
 You may have separate groups of data in named sections that you want to
 end up near to each other in the object file, even though they are not
-contiguous in the assembler source.  `as' allows you to use
+contiguous in the assembler source.  'as' allows you to use
 "subsections" for this purpose.  Within each section, there can be
-numbered subsections with values from 0 to 8192.  Objects assembled
-into the same subsection go into the object file together with other
-objects in the same subsection.  For example, a compiler might want to
-store constants in the text section, but might not want to have them
+numbered subsections with values from 0 to 8192.  Objects assembled into
+the same subsection go into the object file together with other objects
+in the same subsection.  For example, a compiler might want to store
+constants in the text section, but might not want to have them
 interspersed with the program being assembled.  In this case, the
-compiler could issue a `.text 0' before each section of code being
-output, and a `.text 1' before each group of constants being output.
+compiler could issue a '.text 0' before each section of code being
+output, and a '.text 1' before each group of constants being output.
 
-Subsections are optional.  If you do not use subsections, everything
+   Subsections are optional.  If you do not use subsections, everything
 goes in subsection number zero.
 
    Each subsection is zero-padded up to a multiple of four bytes.
 (Subsections may be padded a different amount on different flavors of
-`as'.)
+'as'.)
 
    Subsections appear in your object file in numeric order, lowest
 numbered to highest.  (All this to be compatible with other people's
-assemblers.)  The object file contains no representation of
-subsections; `ld' and other programs that manipulate object files see
-no trace of them.  They just see all your text subsections as a text
-section, and all your data subsections as a data section.
+assemblers.)  The object file contains no representation of subsections;
+'ld' and other programs that manipulate object files see no trace of
+them.  They just see all your text subsections as a text section, and
+all your data subsections as a data section.
 
    To specify which subsection you want subsequent statements assembled
-into, use a numeric argument to specify it, in a `.text EXPRESSION' or
-a `.data EXPRESSION' statement.  When generating COFF output, you can
-also use an extra subsection argument with arbitrary named sections:
-`.section NAME, EXPRESSION'.  When generating ELF output, you can also
-use the `.subsection' directive (*note SubSection::) to specify a
-subsection: `.subsection EXPRESSION'.  EXPRESSION should be an absolute
-expression (*note Expressions::).  If you just say `.text' then `.text
-0' is assumed.  Likewise `.data' means `.data 0'.  Assembly begins in
-`text 0'.  For instance:
+into, use a numeric argument to specify it, in a '.text EXPRESSION' or a
+'.data EXPRESSION' statement.  When generating COFF output, you can also
+use an extra subsection argument with arbitrary named sections:
+'.section NAME, EXPRESSION'.  When generating ELF output, you can also
+use the '.subsection' directive (*note SubSection::) to specify a
+subsection: '.subsection EXPRESSION'.  EXPRESSION should be an absolute
+expression (*note Expressions::).  If you just say '.text' then '.text
+0' is assumed.  Likewise '.data' means '.data 0'.  Assembly begins in
+'text 0'.  For instance:
      .text 0     # The default subsection is text 0 anyway.
      .ascii "This lives in the first text subsection. *"
      .text 1
@@ -2560,12 +2513,12 @@ expression (*note Expressions::).  If you just say `.text' then `.text
 
    Each section has a "location counter" incremented by one for every
 byte assembled into that section.  Because subsections are merely a
-convenience restricted to `as' there is no concept of a subsection
+convenience restricted to 'as' there is no concept of a subsection
 location counter.  There is no way to directly manipulate a location
-counter--but the `.align' directive changes it, and any label
-definition captures its current value.  The location counter of the
-section where statements are being assembled is said to be the "active"
-location counter.
+counter--but the '.align' directive changes it, and any label definition
+captures its current value.  The location counter of the section where
+statements are being assembled is said to be the "active" location
+counter.
 
 
 File: as.info,  Node: bss,  Prev: Sub-Sections,  Up: Sections
@@ -2578,17 +2531,17 @@ allocate address space in the bss section, but you may not dictate data
 to load into it before your program executes.  When your program starts
 running, all the contents of the bss section are zeroed bytes.
 
-   The `.lcomm' pseudo-op defines a symbol in the bss section; see
-*Note `.lcomm': Lcomm.
+   The '.lcomm' pseudo-op defines a symbol in the bss section; see *note
+'.lcomm': Lcomm.
 
-   The `.comm' pseudo-op may be used to declare a common symbol, which
-is another form of uninitialized symbol; see *Note `.comm': Comm.
+   The '.comm' pseudo-op may be used to declare a common symbol, which
+is another form of uninitialized symbol; see *note '.comm': Comm.
 
    When assembling for a target which supports multiple sections, such
-as ELF or COFF, you may switch into the `.bss' section and define
-symbols as usual; see *Note `.section': Section.  You may only assemble
+as ELF or COFF, you may switch into the '.bss' section and define
+symbols as usual; see *note '.section': Section.  You may only assemble
 zero values into the section.  Typically the section will only contain
-symbol definitions and `.skip' directives (*note `.skip': Skip.).
+symbol definitions and '.skip' directives (*note '.skip': Skip.).
 
 
 File: as.info,  Node: Symbols,  Next: Expressions,  Prev: Sections,  Up: Top
@@ -2600,7 +2553,7 @@ Symbols are a central concept: the programmer uses symbols to name
 things, the linker uses symbols to link, and the debugger uses symbols
 to debug.
 
-     _Warning:_ `as' does not place symbols in the object file in the
+     _Warning:_ 'as' does not place symbols in the object file in the
      same order they were declared.  This may break some debuggers.
 
 * Menu:
@@ -2617,7 +2570,7 @@ File: as.info,  Node: Labels,  Next: Setting Symbols,  Up: Symbols
 5.1 Labels
 ==========
 
-A "label" is written as a symbol immediately followed by a colon `:'.
+A "label" is written as a symbol immediately followed by a colon ':'.
 The symbol then represents the current value of the active location
 counter, and is, for example, a suitable instruction operand.  You are
 warned if you use the same symbol to represent two different locations:
@@ -2626,7 +2579,7 @@ the first definition overrides any other definitions.
    On the HPPA, the usual form for a label need not be immediately
 followed by a colon, but instead must start in column zero.  Only one
 label may be defined on a single line.  To work around this, the HPPA
-version of `as' also provides a special directive `.label' for defining
+version of 'as' also provides a special directive '.label' for defining
 labels more flexibly.
 
 
@@ -2636,12 +2589,12 @@ File: as.info,  Node: Setting Symbols,  Next: Symbol Names,  Prev: Labels,  Up:
 ===============================
 
 A symbol can be given an arbitrary value by writing a symbol, followed
-by an equals sign `=', followed by an expression (*note Expressions::).
-This is equivalent to using the `.set' directive.  *Note `.set': Set.
-In the same way, using a double equals sign `='`=' here represents an
-equivalent of the `.eqv' directive.  *Note `.eqv': Eqv.
+by an equals sign '=', followed by an expression (*note Expressions::).
+This is equivalent to using the '.set' directive.  *Note '.set': Set.
+In the same way, using a double equals sign '=''=' here represents an
+equivalent of the '.eqv' directive.  *Note '.eqv': Eqv.
 
-   Blackfin does not support symbol assignment with `='.
+   Blackfin does not support symbol assignment with '='.
 
 
 File: as.info,  Node: Symbol Names,  Next: Dot,  Prev: Setting Symbols,  Up: Symbols
@@ -2649,21 +2602,21 @@ File: as.info,  Node: Symbol Names,  Next: Dot,  Prev: Setting Symbols,  Up: Sym
 5.3 Symbol Names
 ================
 
-Symbol names begin with a letter or with one of `._'.  On most
-machines, you can also use `$' in symbol names; exceptions are noted in
-*Note Machine Dependencies::.  That character may be followed by any
-string of digits, letters, dollar signs (unless otherwise noted for a
-particular target machine), and underscores.
+Symbol names begin with a letter or with one of '._'.  On most machines,
+you can also use '$' in symbol names; exceptions are noted in *note
+Machine Dependencies::.  That character may be followed by any string of
+digits, letters, dollar signs (unless otherwise noted for a particular
+target machine), and underscores.
 
-Case of letters is significant: `foo' is a different symbol name than
-`Foo'.
+   Case of letters is significant: 'foo' is a different symbol name than
+'Foo'.
 
-   Symbol names do not start with a digit.  An exception to this rule
-is made for Local Labels.  See below.
+   Symbol names do not start with a digit.  An exception to this rule is
+made for Local Labels.  See below.
 
    Multibyte characters are supported.  To generate a symbol name
 containing multibyte characters enclose it within double quotes and use
-escape codes. cf *Note Strings::.  Generating a multibyte symbol name
+escape codes.  cf *Note Strings::.  Generating a multibyte symbol name
 from a label is not currently supported.
 
    Each symbol has exactly one name.  Each name in an assembly language
@@ -2674,14 +2627,14 @@ Local Symbol Names
 ------------------
 
 A local symbol is any symbol beginning with certain local label
-prefixes.  By default, the local label prefix is `.L' for ELF systems or
-`L' for traditional a.out systems, but each target may have its own set
-of local label prefixes.  On the HPPA local symbols begin with `L$'.
+prefixes.  By default, the local label prefix is '.L' for ELF systems or
+'L' for traditional a.out systems, but each target may have its own set
+of local label prefixes.  On the HPPA local symbols begin with 'L$'.
 
    Local symbols are defined and used within the assembler, but they are
 normally not saved in object files.  Thus, they are not visible when
-debugging.  You may use the `-L' option (*note Include Local Symbols:
-L.)  to retain the local symbols in the object files.
+debugging.  You may use the '-L' option (*note Include Local Symbols:
+L.) to retain the local symbols in the object files.
 
 Local Labels
 ------------
@@ -2690,21 +2643,21 @@ Local labels are different from local symbols.  Local labels help
 compilers and programmers use names temporarily.  They create symbols
 which are guaranteed to be unique over the entire scope of the input
 source code and which can be referred to by a simple notation.  To
-define a local label, write a label of the form `N:' (where N
-represents any non-negative integer).  To refer to the most recent
-previous definition of that label write `Nb', using the same number as
-when you defined the label.  To refer to the next definition of a local
-label, write `Nf'.  The `b' stands for "backwards" and the `f' stands
-for "forwards".
+define a local label, write a label of the form 'N:' (where N represents
+any non-negative integer).  To refer to the most recent previous
+definition of that label write 'Nb', using the same number as when you
+defined the label.  To refer to the next definition of a local label,
+write 'Nf'.  The 'b' stands for "backwards" and the 'f' stands for
+"forwards".
 
    There is no restriction on how you can use these labels, and you can
 reuse them too.  So that it is possible to repeatedly define the same
-local label (using the same number `N'), although you can only refer to
+local label (using the same number 'N'), although you can only refer to
 the most recently defined local label of that number (for a backwards
 reference) or the next definition of a specific local label for a
 forward reference.  It is also worth noting that the first 10 local
-labels (`0:'...`9:') are implemented in a slightly more efficient
-manner than the others.
+labels ('0:'...'9:') are implemented in a slightly more efficient manner
+than the others.
 
    Here is an example:
 
@@ -2726,52 +2679,51 @@ uses them.  The symbol names are stored in the symbol table, appear in
 error messages, and are optionally emitted to the object file.  The
 names are constructed using these parts:
 
-`_local label prefix_'
+'_local label prefix_'
      All local symbols begin with the system-specific local label
-     prefix.  Normally both `as' and `ld' forget symbols that start
-     with the local label prefix.  These labels are used for symbols
-     you are never intended to see.  If you use the `-L' option then
-     `as' retains these symbols in the object file. If you also
-     instruct `ld' to retain these symbols, you may use them in
-     debugging.
-
-`NUMBER'
-     This is the number that was used in the local label definition.
-     So if the label is written `55:' then the number is `55'.
-
-`C-B'
+     prefix.  Normally both 'as' and 'ld' forget symbols that start with
+     the local label prefix.  These labels are used for symbols you are
+     never intended to see.  If you use the '-L' option then 'as'
+     retains these symbols in the object file.  If you also instruct
+     'ld' to retain these symbols, you may use them in debugging.
+
+'NUMBER'
+     This is the number that was used in the local label definition.  So
+     if the label is written '55:' then the number is '55'.
+
+'C-B'
      This unusual character is included so you do not accidentally
-     invent a symbol of the same name.  The character has ASCII value
-     of `\002' (control-B).
+     invent a symbol of the same name.  The character has ASCII value of
+     '\002' (control-B).
 
-`_ordinal number_'
+'_ordinal number_'
      This is a serial number to keep the labels distinct.  The first
-     definition of `0:' gets the number `1'.  The 15th definition of
-     `0:' gets the number `15', and so on.  Likewise the first
-     definition of `1:' gets the number `1' and its 15th definition
-     gets `15' as well.
+     definition of '0:' gets the number '1'.  The 15th definition of
+     '0:' gets the number '15', and so on.  Likewise the first
+     definition of '1:' gets the number '1' and its 15th definition gets
+     '15' as well.
 
-   So for example, the first `1:' may be named `.L1C-B1', and the 44th
-`3:' may be named `.L3C-B44'.
+   So for example, the first '1:' may be named '.L1C-B1', and the 44th
+'3:' may be named '.L3C-B44'.
 
 Dollar Local Labels
 -------------------
 
-On some targets `as' also supports an even more local form of local
+On some targets 'as' also supports an even more local form of local
 labels called dollar labels.  These labels go out of scope (i.e., they
 become undefined) as soon as a non-local label is defined.  Thus they
 remain valid for only a small region of the input source code.  Normal
-local labels, by contrast, remain in scope for the entire file, or
-until they are redefined by another occurrence of the same local label.
+local labels, by contrast, remain in scope for the entire file, or until
+they are redefined by another occurrence of the same local label.
 
    Dollar labels are defined in exactly the same way as ordinary local
 labels, except that they have a dollar sign suffix to their numeric
-value, e.g., `55$:'.
+value, e.g., '55$:'.
 
    They can also be distinguished from ordinary local labels by their
-transformed names which use ASCII character `\001' (control-A) as the
+transformed names which use ASCII character '\001' (control-A) as the
 magic character to distinguish them from ordinary labels.  For example,
-the fifth definition of `6$' may be named `.L6C-A5'.
+the fifth definition of '6$' may be named '.L6'C-A'5'.
 
 
 File: as.info,  Node: Dot,  Next: Symbol Attributes,  Prev: Symbol Names,  Up: Symbols
@@ -2779,11 +2731,11 @@ File: as.info,  Node: Dot,  Next: Symbol Attributes,  Prev: Symbol Names,  Up: S
 5.4 The Special Dot Symbol
 ==========================
 
-The special symbol `.' refers to the current address that `as' is
-assembling into.  Thus, the expression `melvin: .long .' defines
-`melvin' to contain its own address.  Assigning a value to `.' is
-treated the same as a `.org' directive.  Thus, the expression `.=.+4'
-is the same as saying `.space 4'.
+The special symbol '.' refers to the current address that 'as' is
+assembling into.  Thus, the expression 'melvin: .long .' defines
+'melvin' to contain its own address.  Assigning a value to '.' is
+treated the same as a '.org' directive.  Thus, the expression '.=.+4' is
+the same as saying '.space 4'.
 
 
 File: as.info,  Node: Symbol Attributes,  Prev: Dot,  Up: Symbols
@@ -2795,20 +2747,16 @@ Every symbol has, as well as its name, the attributes "Value" and
 "Type".  Depending on output format, symbols can also have auxiliary
 attributes.
 
-   If you use a symbol without defining it, `as' assumes zero for all
-these attributes, and probably won't warn you.  This makes the symbol
-an externally defined symbol, which is generally what you would want.
+   If you use a symbol without defining it, 'as' assumes zero for all
+these attributes, and probably won't warn you.  This makes the symbol an
+externally defined symbol, which is generally what you would want.
 
 * Menu:
 
 * Symbol Value::                Value
 * Symbol Type::                 Type
-
-
-* a.out Symbols::               Symbol Attributes: `a.out'
-
+* a.out Symbols::               Symbol Attributes: 'a.out'
 * COFF Symbols::                Symbol Attributes for COFF
-
 * SOM Symbols::                Symbol Attributes for SOM
 
 
@@ -2821,15 +2769,15 @@ The value of a symbol is (usually) 32 bits.  For a symbol which labels a
 location in the text, data, bss or absolute sections the value is the
 number of addresses from the start of that section to the label.
 Naturally for text, data and bss sections the value of a symbol changes
-as `ld' changes section base addresses during linking.  Absolute
+as 'ld' changes section base addresses during linking.  Absolute
 symbols' values do not change during linking: that is why they are
 called absolute.
 
    The value of an undefined symbol is treated in a special way.  If it
 is 0 then the symbol is not defined in this assembler source file, and
-`ld' tries to determine its value from other files linked into the same
+'ld' tries to determine its value from other files linked into the same
 program.  You make this kind of symbol simply by mentioning a symbol
-name without defining it.  A non-zero value represents a `.comm' common
+name without defining it.  A non-zero value represents a '.comm' common
 declaration.  The value is how much common storage to reserve, in bytes
 (addresses).  The symbol refers to the first address of the allocated
 storage.
@@ -2848,7 +2796,7 @@ format depends on the object-code output format in use.
 
 File: as.info,  Node: a.out Symbols,  Next: COFF Symbols,  Prev: Symbol Type,  Up: Symbol Attributes
 
-5.5.3 Symbol Attributes: `a.out'
+5.5.3 Symbol Attributes: 'a.out'
 --------------------------------
 
 * Menu:
@@ -2863,8 +2811,8 @@ File: as.info,  Node: Symbol Desc,  Next: Symbol Other,  Up: a.out Symbols
 ..................
 
 This is an arbitrary 16-bit value.  You may establish a symbol's
-descriptor value by using a `.desc' statement (*note `.desc': Desc.).
-A descriptor value means nothing to `as'.
+descriptor value by using a '.desc' statement (*note '.desc': Desc.).  A
+descriptor value means nothing to 'as'.
 
 
 File: as.info,  Node: Symbol Other,  Prev: Symbol Desc,  Up: a.out Symbols
@@ -2872,7 +2820,7 @@ File: as.info,  Node: Symbol Other,  Prev: Symbol Desc,  Up: a.out Symbols
 5.5.3.2 Other
 .............
 
-This is an arbitrary 8-bit value.  It means nothing to `as'.
+This is an arbitrary 8-bit value.  It means nothing to 'as'.
 
 
 File: as.info,  Node: COFF Symbols,  Next: SOM Symbols,  Prev: a.out Symbols,  Up: Symbol Attributes
@@ -2881,20 +2829,20 @@ File: as.info,  Node: COFF Symbols,  Next: SOM Symbols,  Prev: a.out Symbols,  U
 --------------------------------
 
 The COFF format supports a multitude of auxiliary symbol attributes;
-like the primary symbol attributes, they are set between `.def' and
-`.endef' directives.
+like the primary symbol attributes, they are set between '.def' and
+'.endef' directives.
 
 5.5.4.1 Primary Attributes
 ..........................
 
-The symbol name is set with `.def'; the value and type, respectively,
-with `.val' and `.type'.
+The symbol name is set with '.def'; the value and type, respectively,
+with '.val' and '.type'.
 
 5.5.4.2 Auxiliary Attributes
 ............................
 
-The `as' directives `.dim', `.line', `.scl', `.size', `.tag', and
-`.weak' can generate auxiliary symbol table information for COFF.
+The 'as' directives '.dim', '.line', '.scl', '.size', '.tag', and
+'.weak' can generate auxiliary symbol table information for COFF.
 
 
 File: as.info,  Node: SOM Symbols,  Prev: COFF Symbols,  Up: Symbol Attributes
@@ -2903,10 +2851,10 @@ File: as.info,  Node: SOM Symbols,  Prev: COFF Symbols,  Up: Symbol Attributes
 -------------------------------
 
 The SOM format for the HPPA supports a multitude of symbol attributes
-set with the `.EXPORT' and `.IMPORT' directives.
+set with the '.EXPORT' and '.IMPORT' directives.
 
-   The attributes are described in `HP9000 Series 800 Assembly Language
-Reference Manual' (HP 92432-90001) under the `IMPORT' and `EXPORT'
+   The attributes are described in 'HP9000 Series 800 Assembly Language
+Reference Manual' (HP 92432-90001) under the 'IMPORT' and 'EXPORT'
 assembler directive documentation.
 
 
@@ -2919,11 +2867,11 @@ An "expression" specifies an address or numeric value.  Whitespace may
 precede and/or follow an expression.
 
    The result of an expression must be an absolute number, or else an
-offset into a particular section.  If an expression is not absolute,
-and there is not enough information when `as' sees the expression to
-know its section, a second pass over the source program might be
-necessary to interpret the expression--but the second pass is currently
-not implemented.  `as' aborts with an error message in this situation.
+offset into a particular section.  If an expression is not absolute, and
+there is not enough information when 'as' sees the expression to know
+its section, a second pass over the source program might be necessary to
+interpret the expression--but the second pass is currently not
+implemented.  'as' aborts with an error message in this situation.
 
 * Menu:
 
@@ -2938,7 +2886,7 @@ File: as.info,  Node: Empty Exprs,  Next: Integer Exprs,  Up: Expressions
 
 An empty expression has no value: it is just whitespace or null.
 Wherever an absolute expression is required, you may omit the
-expression, and `as' assumes a value of (absolute) 0.  This is
+expression, and 'as' assumes a value of (absolute) 0.  This is
 compatible with other assemblers.
 
 
@@ -2977,12 +2925,12 @@ complement 32 bit integer.
    Numbers are usually integers.
 
    A number can be a flonum or bignum.  In this case, you are warned
-that only the low order 32 bits are used, and `as' pretends these 32
+that only the low order 32 bits are used, and 'as' pretends these 32
 bits are an integer.  You may write integer-manipulating instructions
 that act on exotic constants, compatible with other assemblers.
 
-   Subexpressions are a left parenthesis `(' followed by an integer
-expression, followed by a right parenthesis `)'; or a prefix operator
+   Subexpressions are a left parenthesis '(' followed by an integer
+expression, followed by a right parenthesis ')'; or a prefix operator
 followed by an argument.
 
 
@@ -2991,10 +2939,9 @@ File: as.info,  Node: Operators,  Next: Prefix Ops,  Prev: Arguments,  Up: Integ
 6.2.2 Operators
 ---------------
 
-"Operators" are arithmetic functions, like `+' or `%'.  Prefix
-operators are followed by an argument.  Infix operators appear between
-their arguments.  Operators may be preceded and/or followed by
-whitespace.
+"Operators" are arithmetic functions, like '+' or '%'.  Prefix operators
+are followed by an argument.  Infix operators appear between their
+arguments.  Operators may be preceded and/or followed by whitespace.
 
 
 File: as.info,  Node: Prefix Ops,  Next: Infix Ops,  Prev: Operators,  Up: Integer Exprs
@@ -3002,13 +2949,12 @@ File: as.info,  Node: Prefix Ops,  Next: Infix Ops,  Prev: Operators,  Up: Integ
 6.2.3 Prefix Operator
 ---------------------
 
-`as' has the following "prefix operators".  They each take one
-argument, which must be absolute.
+'as' has the following "prefix operators".  They each take one argument,
+which must be absolute.
 
-`-'
+'-'
      "Negation".  Two's complement negation.
-
-`~'
+'~'
      "Complementation".  Bitwise not.
 
 
@@ -3019,83 +2965,78 @@ File: as.info,  Node: Infix Ops,  Prev: Prefix Ops,  Up: Integer Exprs
 
 "Infix operators" take two arguments, one on either side.  Operators
 have precedence, but operations with equal precedence are performed left
-to right.  Apart from `+' or `-', both arguments must be absolute, and
+to right.  Apart from '+' or '-', both arguments must be absolute, and
 the result is absolute.
 
   1. Highest Precedence
 
-    `*'
+     '*'
           "Multiplication".
 
-    `/'
-          "Division".  Truncation is the same as the C operator `/'
+     '/'
+          "Division".  Truncation is the same as the C operator '/'
 
-    `%'
+     '%'
           "Remainder".
 
-    `<<'
-          "Shift Left".  Same as the C operator `<<'.
+     '<<'
+          "Shift Left".  Same as the C operator '<<'.
 
-    `>>'
-          "Shift Right".  Same as the C operator `>>'.
+     '>>'
+          "Shift Right".  Same as the C operator '>>'.
 
   2. Intermediate precedence
 
-    `|'
+     '|'
+
           "Bitwise Inclusive Or".
 
-    `&'
+     '&'
           "Bitwise And".
 
-    `^'
+     '^'
           "Bitwise Exclusive Or".
 
-    `!'
+     '!'
           "Bitwise Or Not".
 
   3. Low Precedence
 
-    `+'
+     '+'
           "Addition".  If either argument is absolute, the result has
           the section of the other argument.  You may not add together
           arguments from different sections.
 
-    `-'
+     '-'
           "Subtraction".  If the right argument is absolute, the result
           has the section of the left argument.  If both arguments are
           in the same section, the result is absolute.  You may not
           subtract arguments from different sections.
 
-    `=='
+     '=='
           "Is Equal To"
-
-    `<>'
-    `!='
+     '<>'
+     '!='
           "Is Not Equal To"
-
-    `<'
+     '<'
           "Is Less Than"
-
-    `>'
+     '>'
           "Is Greater Than"
-
-    `>='
+     '>='
           "Is Greater Than Or Equal To"
-
-    `<='
+     '<='
           "Is Less Than Or Equal To"
 
           The comparison operators can be used as infix operators.  A
           true results has a value of -1 whereas a false result has a
-          value of 0.   Note, these operators perform signed
-          comparisons.
+          value of 0.  Note, these operators perform signed comparisons.
 
   4. Lowest Precedence
 
-    `&&'
+     '&&'
           "Logical And".
 
-    `||'
+     '||'
           "Logical Or".
 
           These two logical operations can be used to combine the
@@ -3104,7 +3045,6 @@ the result is absolute.
           results does still return 0.  Also note that the logical or
           operator has a slightly lower precedence than logical and.
 
-
    In short, it's only meaningful to add or subtract the _offsets_ in an
 address; you can only have a defined section in one of the two
 arguments.
@@ -3115,8 +3055,8 @@ File: as.info,  Node: Pseudo Ops,  Next: Object Attributes,  Prev: Expressions,
 7 Assembler Directives
 **********************
 
-All assembler directives have names that begin with a period (`.').
-The names are case insensitive for most targets, and usually written in
+All assembler directives have names that begin with a period ('.').  The
+names are case insensitive for most targets, and usually written in
 lower case.
 
    This chapter discusses directives that are available regardless of
@@ -3126,180 +3066,156 @@ Dependencies::.
 
 * Menu:
 
-* Abort::                       `.abort'
-
-* ABORT (COFF)::                `.ABORT'
-
-* Align::                       `.align ABS-EXPR , ABS-EXPR'
-* Altmacro::                    `.altmacro'
-* Ascii::                       `.ascii "STRING"'...
-* Asciz::                       `.asciz "STRING"'...
-* Balign::                      `.balign ABS-EXPR , ABS-EXPR'
-* Bundle directives::           `.bundle_align_mode ABS-EXPR', etc
-* Byte::                        `.byte EXPRESSIONS'
-* CFI directives::		`.cfi_startproc [simple]', `.cfi_endproc', etc.
-* Comm::                        `.comm SYMBOL , LENGTH '
-* Data::                        `.data SUBSECTION'
-
-* Def::                         `.def NAME'
-
-* Desc::                        `.desc SYMBOL, ABS-EXPRESSION'
-
-* Dim::                         `.dim'
-
-* Double::                      `.double FLONUMS'
-* Eject::                       `.eject'
-* Else::                        `.else'
-* Elseif::                      `.elseif'
-* End::				`.end'
-
-* Endef::                       `.endef'
-
-* Endfunc::                     `.endfunc'
-* Endif::                       `.endif'
-* Equ::                         `.equ SYMBOL, EXPRESSION'
-* Equiv::                       `.equiv SYMBOL, EXPRESSION'
-* Eqv::                         `.eqv SYMBOL, EXPRESSION'
-* Err::				`.err'
-* Error::			`.error STRING'
-* Exitm::			`.exitm'
-* Extern::                      `.extern'
-* Fail::			`.fail'
-* File::                        `.file'
-* Fill::                        `.fill REPEAT , SIZE , VALUE'
-* Float::                       `.float FLONUMS'
-* Func::                        `.func'
-* Global::                      `.global SYMBOL', `.globl SYMBOL'
-
-* Gnu_attribute::               `.gnu_attribute TAG,VALUE'
-* Hidden::                      `.hidden NAMES'
-
-* hword::                       `.hword EXPRESSIONS'
-* Ident::                       `.ident'
-* If::                          `.if ABSOLUTE EXPRESSION'
-* Incbin::                      `.incbin "FILE"[,SKIP[,COUNT]]'
-* Include::                     `.include "FILE"'
-* Int::                         `.int EXPRESSIONS'
-
-* Internal::                    `.internal NAMES'
-
-* Irp::				`.irp SYMBOL,VALUES'...
-* Irpc::			`.irpc SYMBOL,VALUES'...
-* Lcomm::                       `.lcomm SYMBOL , LENGTH'
-* Lflags::                      `.lflags'
-
-* Line::                        `.line LINE-NUMBER'
-
-* Linkonce::			`.linkonce [TYPE]'
-* List::                        `.list'
-* Ln::                          `.ln LINE-NUMBER'
-* Loc::                         `.loc FILENO LINENO'
-* Loc_mark_labels::             `.loc_mark_labels ENABLE'
-
-* Local::                       `.local NAMES'
-
-* Long::                        `.long EXPRESSIONS'
-
-* Macro::			`.macro NAME ARGS'...
-* MRI::				`.mri VAL'
-* Noaltmacro::                  `.noaltmacro'
-* Nolist::                      `.nolist'
-* Octa::                        `.octa BIGNUMS'
-* Offset::			`.offset LOC'
-* Org::                         `.org NEW-LC, FILL'
-* P2align::                     `.p2align ABS-EXPR, ABS-EXPR, ABS-EXPR'
-
-* PopSection::                  `.popsection'
-* Previous::                    `.previous'
-
-* Print::			`.print STRING'
-
-* Protected::                   `.protected NAMES'
-
-* Psize::                       `.psize LINES, COLUMNS'
-* Purgem::			`.purgem NAME'
-
-* PushSection::                 `.pushsection NAME'
-
-* Quad::                        `.quad BIGNUMS'
-* Reloc::			`.reloc OFFSET, RELOC_NAME[, EXPRESSION]'
-* Rept::			`.rept COUNT'
-* Sbttl::                       `.sbttl "SUBHEADING"'
-
-* Scl::                         `.scl CLASS'
-
-* Section::                     `.section NAME[, FLAGS]'
-
-* Set::                         `.set SYMBOL, EXPRESSION'
-* Short::                       `.short EXPRESSIONS'
-* Single::                      `.single FLONUMS'
-
-* Size::                        `.size [NAME , EXPRESSION]'
-
-* Skip::                        `.skip SIZE , FILL'
-
-* Sleb128::			`.sleb128 EXPRESSIONS'
-
-* Space::                       `.space SIZE , FILL'
-
-* Stab::                        `.stabd, .stabn, .stabs'
-
-* String::                      `.string "STR"', `.string8 "STR"', `.string16 "STR"', `.string32 "STR"', `.string64 "STR"'
-* Struct::			`.struct EXPRESSION'
-
-* SubSection::                  `.subsection'
-* Symver::                      `.symver NAME,NAME2@NODENAME'
-
-
-* Tag::                         `.tag STRUCTNAME'
-
-* Text::                        `.text SUBSECTION'
-* Title::                       `.title "HEADING"'
-
-* Type::                        `.type <INT | NAME , TYPE DESCRIPTION>'
-
-* Uleb128::                     `.uleb128 EXPRESSIONS'
-
-* Val::                         `.val ADDR'
-
-
-* Version::                     `.version "STRING"'
-* VTableEntry::                 `.vtable_entry TABLE, OFFSET'
-* VTableInherit::               `.vtable_inherit CHILD, PARENT'
-
-* Warning::			`.warning STRING'
-* Weak::                        `.weak NAMES'
-* Weakref::                     `.weakref ALIAS, SYMBOL'
-* Word::                        `.word EXPRESSIONS'
-
-* Zero::                        `.zero SIZE'
+* Abort::                       '.abort'
+* ABORT (COFF)::                '.ABORT'
+
+* Align::                       '.align ABS-EXPR , ABS-EXPR'
+* Altmacro::                    '.altmacro'
+* Ascii::                       '.ascii "STRING"'...
+* Asciz::                       '.asciz "STRING"'...
+* Balign::                      '.balign ABS-EXPR , ABS-EXPR'
+* Bundle directives::           '.bundle_align_mode ABS-EXPR', etc
+* Byte::                        '.byte EXPRESSIONS'
+* CFI directives::		'.cfi_startproc [simple]', '.cfi_endproc', etc.
+* Comm::                        '.comm SYMBOL , LENGTH '
+* Data::                        '.data SUBSECTION'
+* Def::                         '.def NAME'
+* Desc::                        '.desc SYMBOL, ABS-EXPRESSION'
+* Dim::                         '.dim'
+
+* Double::                      '.double FLONUMS'
+* Eject::                       '.eject'
+* Else::                        '.else'
+* Elseif::                      '.elseif'
+* End::				'.end'
+* Endef::                       '.endef'
+
+* Endfunc::                     '.endfunc'
+* Endif::                       '.endif'
+* Equ::                         '.equ SYMBOL, EXPRESSION'
+* Equiv::                       '.equiv SYMBOL, EXPRESSION'
+* Eqv::                         '.eqv SYMBOL, EXPRESSION'
+* Err::				'.err'
+* Error::			'.error STRING'
+* Exitm::			'.exitm'
+* Extern::                      '.extern'
+* Fail::			'.fail'
+* File::                        '.file'
+* Fill::                        '.fill REPEAT , SIZE , VALUE'
+* Float::                       '.float FLONUMS'
+* Func::                        '.func'
+* Global::                      '.global SYMBOL', '.globl SYMBOL'
+* Gnu_attribute::               '.gnu_attribute TAG,VALUE'
+* Hidden::                      '.hidden NAMES'
+
+* hword::                       '.hword EXPRESSIONS'
+* Ident::                       '.ident'
+* If::                          '.if ABSOLUTE EXPRESSION'
+* Incbin::                      '.incbin "FILE"[,SKIP[,COUNT]]'
+* Include::                     '.include "FILE"'
+* Int::                         '.int EXPRESSIONS'
+* Internal::                    '.internal NAMES'
+
+* Irp::				'.irp SYMBOL,VALUES'...
+* Irpc::			'.irpc SYMBOL,VALUES'...
+* Lcomm::                       '.lcomm SYMBOL , LENGTH'
+* Lflags::                      '.lflags'
+* Line::                        '.line LINE-NUMBER'
+
+* Linkonce::			'.linkonce [TYPE]'
+* List::                        '.list'
+* Ln::                          '.ln LINE-NUMBER'
+* Loc::                         '.loc FILENO LINENO'
+* Loc_mark_labels::             '.loc_mark_labels ENABLE'
+* Local::                       '.local NAMES'
+
+* Long::                        '.long EXPRESSIONS'
+
+* Macro::			'.macro NAME ARGS'...
+* MRI::				'.mri VAL'
+* Noaltmacro::                  '.noaltmacro'
+* Nolist::                      '.nolist'
+* Octa::                        '.octa BIGNUMS'
+* Offset::			'.offset LOC'
+* Org::                         '.org NEW-LC, FILL'
+* P2align::                     '.p2align ABS-EXPR, ABS-EXPR, ABS-EXPR'
+* PopSection::                  '.popsection'
+* Previous::                    '.previous'
+
+* Print::			'.print STRING'
+* Protected::                   '.protected NAMES'
+
+* Psize::                       '.psize LINES, COLUMNS'
+* Purgem::			'.purgem NAME'
+* PushSection::                 '.pushsection NAME'
+
+* Quad::                        '.quad BIGNUMS'
+* Reloc::			'.reloc OFFSET, RELOC_NAME[, EXPRESSION]'
+* Rept::			'.rept COUNT'
+* Sbttl::                       '.sbttl "SUBHEADING"'
+* Scl::                         '.scl CLASS'
+* Section::                     '.section NAME[, FLAGS]'
+
+* Set::                         '.set SYMBOL, EXPRESSION'
+* Short::                       '.short EXPRESSIONS'
+* Single::                      '.single FLONUMS'
+* Size::                        '.size [NAME , EXPRESSION]'
+* Skip::                        '.skip SIZE , FILL'
+
+* Sleb128::			'.sleb128 EXPRESSIONS'
+* Space::                       '.space SIZE , FILL'
+* Stab::                        '.stabd, .stabn, .stabs'
+
+* String::                      '.string "STR"', '.string8 "STR"', '.string16 "STR"', '.string32 "STR"', '.string64 "STR"'
+* Struct::			'.struct EXPRESSION'
+* SubSection::                  '.subsection'
+* Symver::                      '.symver NAME,NAME2@NODENAME'
+
+* Tag::                         '.tag STRUCTNAME'
+
+* Text::                        '.text SUBSECTION'
+* Title::                       '.title "HEADING"'
+* Type::                        '.type <INT | NAME , TYPE DESCRIPTION>'
+
+* Uleb128::                     '.uleb128 EXPRESSIONS'
+* Val::                         '.val ADDR'
+
+* Version::                     '.version "STRING"'
+* VTableEntry::                 '.vtable_entry TABLE, OFFSET'
+* VTableInherit::               '.vtable_inherit CHILD, PARENT'
+
+* Warning::			'.warning STRING'
+* Weak::                        '.weak NAMES'
+* Weakref::                     '.weakref ALIAS, SYMBOL'
+* Word::                        '.word EXPRESSIONS'
+* Zero::                        '.zero SIZE'
 * Deprecated::                  Deprecated Directives
 
 
 File: as.info,  Node: Abort,  Next: ABORT (COFF),  Up: Pseudo Ops
 
-7.1 `.abort'
+7.1 '.abort'
 ============
 
 This directive stops the assembly immediately.  It is for compatibility
-with other assemblers.  The original idea was that the assembly
-language source would be piped into the assembler.  If the sender of
-the source quit, it could use this directive tells `as' to quit also.
-One day `.abort' will not be supported.
+with other assemblers.  The original idea was that the assembly language
+source would be piped into the assembler.  If the sender of the source
+quit, it could use this directive tells 'as' to quit also.  One day
+'.abort' will not be supported.
 
 
 File: as.info,  Node: ABORT (COFF),  Next: Align,  Prev: Abort,  Up: Pseudo Ops
 
-7.2 `.ABORT' (COFF)
+7.2 '.ABORT' (COFF)
 ===================
 
-When producing COFF output, `as' accepts this directive as a synonym
-for `.abort'.
+When producing COFF output, 'as' accepts this directive as a synonym for
+'.abort'.
 
 
 File: as.info,  Node: Align,  Next: Altmacro,  Prev: ABORT (COFF),  Up: Pseudo Ops
 
-7.3 `.align ABS-EXPR, ABS-EXPR, ABS-EXPR'
+7.3 '.align ABS-EXPR, ABS-EXPR, ABS-EXPR'
 =========================================
 
 Pad the location counter (in the current subsection) to a particular
@@ -3314,99 +3230,99 @@ is omitted, the space is filled with no-op instructions.
 
    The third expression is also absolute, and is also optional.  If it
 is present, it is the maximum number of bytes that should be skipped by
-this alignment directive.  If doing the alignment would require
-skipping more bytes than the specified maximum, then the alignment is
-not done at all.  You can omit the fill value (the second argument)
-entirely by simply using two commas after the required alignment; this
-can be useful if you want the alignment to be filled with no-op
-instructions when appropriate.
+this alignment directive.  If doing the alignment would require skipping
+more bytes than the specified maximum, then the alignment is not done at
+all.  You can omit the fill value (the second argument) entirely by
+simply using two commas after the required alignment; this can be useful
+if you want the alignment to be filled with no-op instructions when
+appropriate.
 
    The way the required alignment is specified varies from system to
 system.  For the arc, hppa, i386 using ELF, i860, iq2000, m68k, or1k,
 s390, sparc, tic4x, tic80 and xtensa, the first expression is the
-alignment request in bytes.  For example `.align 8' advances the
+alignment request in bytes.  For example '.align 8' advances the
 location counter until it is a multiple of 8.  If the location counter
 is already a multiple of 8, no change is needed.  For the tic54x, the
 first expression is the alignment request in words.
 
    For other systems, including ppc, i386 using a.out format, arm and
 strongarm, it is the number of low-order zero bits the location counter
-must have after advancement.  For example `.align 3' advances the
+must have after advancement.  For example '.align 3' advances the
 location counter until it a multiple of 8.  If the location counter is
 already a multiple of 8, no change is needed.
 
    This inconsistency is due to the different behaviors of the various
 native assemblers for these systems which GAS must emulate.  GAS also
-provides `.balign' and `.p2align' directives, described later, which
-have a consistent behavior across all architectures (but are specific
-to GAS).
+provides '.balign' and '.p2align' directives, described later, which
+have a consistent behavior across all architectures (but are specific to
+GAS).
 
 
 File: as.info,  Node: Altmacro,  Next: Ascii,  Prev: Align,  Up: Pseudo Ops
 
-7.4 `.altmacro'
+7.4 '.altmacro'
 ===============
 
 Enable alternate macro mode, enabling:
 
-`LOCAL NAME [ , ... ]'
-     One additional directive, `LOCAL', is available.  It is used to
+'LOCAL NAME [ , ... ]'
+     One additional directive, 'LOCAL', is available.  It is used to
      generate a string replacement for each of the NAME arguments, and
      replace any instances of NAME in each macro expansion.  The
      replacement string is unique in the assembly, and different for
-     each separate macro expansion.  `LOCAL' allows you to write macros
+     each separate macro expansion.  'LOCAL' allows you to write macros
      that define symbols, without fear of conflict between separate
      macro expansions.
 
-`String delimiters'
+'String delimiters'
      You can write strings delimited in these other ways besides
-     `"STRING"':
+     '"STRING"':
 
-    `'STRING''
+     ''STRING''
           You can delimit strings with single-quote characters.
 
-    `<STRING>'
+     '<STRING>'
           You can delimit strings with matching angle brackets.
 
-`single-character string escape'
+'single-character string escape'
      To include any single character literally in a string (even if the
      character would otherwise have some special meaning), you can
-     prefix the character with `!' (an exclamation mark).  For example,
-     you can write `<4.3 !> 5.4!!>' to get the literal text `4.3 >
+     prefix the character with '!' (an exclamation mark).  For example,
+     you can write '<4.3 !> 5.4!!>' to get the literal text '4.3 >
      5.4!'.
 
-`Expression results as strings'
-     You can write `%EXPR' to evaluate the expression EXPR and use the
+'Expression results as strings'
+     You can write '%EXPR' to evaluate the expression EXPR and use the
      result as a string.
 
 
 File: as.info,  Node: Ascii,  Next: Asciz,  Prev: Altmacro,  Up: Pseudo Ops
 
-7.5 `.ascii "STRING"'...
+7.5 '.ascii "STRING"'...
 ========================
 
-`.ascii' expects zero or more string literals (*note Strings::)
+'.ascii' expects zero or more string literals (*note Strings::)
 separated by commas.  It assembles each string (with no automatic
 trailing zero byte) into consecutive addresses.
 
 
 File: as.info,  Node: Asciz,  Next: Balign,  Prev: Ascii,  Up: Pseudo Ops
 
-7.6 `.asciz "STRING"'...
+7.6 '.asciz "STRING"'...
 ========================
 
-`.asciz' is just like `.ascii', but each string is followed by a zero
-byte.  The "z" in `.asciz' stands for "zero".
+'.asciz' is just like '.ascii', but each string is followed by a zero
+byte.  The "z" in '.asciz' stands for "zero".
 
 
 File: as.info,  Node: Balign,  Next: Bundle directives,  Prev: Asciz,  Up: Pseudo Ops
 
-7.7 `.balign[wl] ABS-EXPR, ABS-EXPR, ABS-EXPR'
+7.7 '.balign[wl] ABS-EXPR, ABS-EXPR, ABS-EXPR'
 ==============================================
 
 Pad the location counter (in the current subsection) to a particular
 storage boundary.  The first expression (which must be absolute) is the
-alignment request in bytes.  For example `.balign 8' advances the
+alignment request in bytes.  For example '.balign 8' advances the
 location counter until it is a multiple of 8.  If the location counter
 is already a multiple of 8, no change is needed.
 
@@ -3418,21 +3334,21 @@ is omitted, the space is filled with no-op instructions.
 
    The third expression is also absolute, and is also optional.  If it
 is present, it is the maximum number of bytes that should be skipped by
-this alignment directive.  If doing the alignment would require
-skipping more bytes than the specified maximum, then the alignment is
-not done at all.  You can omit the fill value (the second argument)
-entirely by simply using two commas after the required alignment; this
-can be useful if you want the alignment to be filled with no-op
-instructions when appropriate.
-
-   The `.balignw' and `.balignl' directives are variants of the
-`.balign' directive.  The `.balignw' directive treats the fill pattern
-as a two byte word value.  The `.balignl' directives treats the fill
-pattern as a four byte longword value.  For example, `.balignw
-4,0x368d' will align to a multiple of 4.  If it skips two bytes, they
-will be filled in with the value 0x368d (the exact placement of the
-bytes depends upon the endianness of the processor).  If it skips 1 or
-3 bytes, the fill value is undefined.
+this alignment directive.  If doing the alignment would require skipping
+more bytes than the specified maximum, then the alignment is not done at
+all.  You can omit the fill value (the second argument) entirely by
+simply using two commas after the required alignment; this can be useful
+if you want the alignment to be filled with no-op instructions when
+appropriate.
+
+   The '.balignw' and '.balignl' directives are variants of the
+'.balign' directive.  The '.balignw' directive treats the fill pattern
+as a two byte word value.  The '.balignl' directives treats the fill
+pattern as a four byte longword value.  For example, '.balignw 4,0x368d'
+will align to a multiple of 4.  If it skips two bytes, they will be
+filled in with the value 0x368d (the exact placement of the bytes
+depends upon the endianness of the processor).  If it skips 1 or 3
+bytes, the fill value is undefined.
 
 
 File: as.info,  Node: Bundle directives,  Next: Byte,  Prev: Balign,  Up: Pseudo Ops
@@ -3440,64 +3356,64 @@ File: as.info,  Node: Bundle directives,  Next: Byte,  Prev: Balign,  Up: Pseudo
 7.8 Bundle directives
 =====================
 
-7.8.1 `.bundle_align_mode ABS-EXPR'
+7.8.1 '.bundle_align_mode ABS-EXPR'
 -----------------------------------
 
-`.bundle_align_mode' enables or disables "aligned instruction bundle"
-mode.  In this mode, sequences of adjacent instructions are grouped
-into fixed-sized "bundles".  If the argument is zero, this mode is
-disabled (which is the default state).  If the argument it not zero, it
-gives the size of an instruction bundle as a power of two (as for the
-`.p2align' directive, *note P2align::).
+'.bundle_align_mode' enables or disables "aligned instruction bundle"
+mode.  In this mode, sequences of adjacent instructions are grouped into
+fixed-sized "bundles".  If the argument is zero, this mode is disabled
+(which is the default state).  If the argument it not zero, it gives the
+size of an instruction bundle as a power of two (as for the '.p2align'
+directive, *note P2align::).
 
    For some targets, it's an ABI requirement that no instruction may
 span a certain aligned boundary.  A "bundle" is simply a sequence of
 instructions that starts on an aligned boundary.  For example, if
-ABS-EXPR is `5' then the bundle size is 32, so each aligned chunk of 32
+ABS-EXPR is '5' then the bundle size is 32, so each aligned chunk of 32
 bytes is a bundle.  When aligned instruction bundle mode is in effect,
 no single instruction may span a boundary between bundles.  If an
 instruction would start too close to the end of a bundle for the length
 of that particular instruction to fit within the bundle, then the space
 at the end of that bundle is filled with no-op instructions so the
-instruction starts in the next bundle.  As a corollary, it's an error
-if any single instruction's encoding is longer than the bundle size.
+instruction starts in the next bundle.  As a corollary, it's an error if
+any single instruction's encoding is longer than the bundle size.
 
-7.8.2 `.bundle_lock' and `.bundle_unlock'
+7.8.2 '.bundle_lock' and '.bundle_unlock'
 -----------------------------------------
 
-The `.bundle_lock' and directive `.bundle_unlock' directives allow
+The '.bundle_lock' and directive '.bundle_unlock' directives allow
 explicit control over instruction bundle padding.  These directives are
-only valid when `.bundle_align_mode' has been used to enable aligned
+only valid when '.bundle_align_mode' has been used to enable aligned
 instruction bundle mode.  It's an error if they appear when
-`.bundle_align_mode' has not been used at all, or when the last
-directive was `.bundle_align_mode 0'.
+'.bundle_align_mode' has not been used at all, or when the last
+directive was '.bundle_align_mode 0'.
 
    For some targets, it's an ABI requirement that certain instructions
 may appear only as part of specified permissible sequences of multiple
-instructions, all within the same bundle.  A pair of `.bundle_lock' and
-`.bundle_unlock' directives define a "bundle-locked" instruction
+instructions, all within the same bundle.  A pair of '.bundle_lock' and
+'.bundle_unlock' directives define a "bundle-locked" instruction
 sequence.  For purposes of aligned instruction bundle mode, a sequence
-starting with `.bundle_lock' and ending with `.bundle_unlock' is
-treated as a single instruction.  That is, the entire sequence must fit
-into a single bundle and may not span a bundle boundary.  If necessary,
-no-op instructions will be inserted before the first instruction of the
+starting with '.bundle_lock' and ending with '.bundle_unlock' is treated
+as a single instruction.  That is, the entire sequence must fit into a
+single bundle and may not span a bundle boundary.  If necessary, no-op
+instructions will be inserted before the first instruction of the
 sequence so that the whole sequence starts on an aligned bundle
 boundary.  It's an error if the sequence is longer than the bundle size.
 
-   For convenience when using `.bundle_lock' and `.bundle_unlock'
-inside assembler macros (*note Macro::), bundle-locked sequences may be
-nested.  That is, a second `.bundle_lock' directive before the next
-`.bundle_unlock' directive has no effect except that it must be matched
-by another closing `.bundle_unlock' so that there is the same number of
-`.bundle_lock' and `.bundle_unlock' directives.
+   For convenience when using '.bundle_lock' and '.bundle_unlock' inside
+assembler macros (*note Macro::), bundle-locked sequences may be nested.
+That is, a second '.bundle_lock' directive before the next
+'.bundle_unlock' directive has no effect except that it must be matched
+by another closing '.bundle_unlock' so that there is the same number of
+'.bundle_lock' and '.bundle_unlock' directives.
 
 
 File: as.info,  Node: Byte,  Next: CFI directives,  Prev: Bundle directives,  Up: Pseudo Ops
 
-7.9 `.byte EXPRESSIONS'
+7.9 '.byte EXPRESSIONS'
 =======================
 
-`.byte' expects zero or more expressions, separated by commas.  Each
+'.byte' expects zero or more expressions, separated by commas.  Each
 expression is assembled into the next byte.
 
 
@@ -3506,175 +3422,175 @@ File: as.info,  Node: CFI directives,  Next: Comm,  Prev: Byte,  Up: Pseudo Ops
 7.10 CFI directives
 ===================
 
-7.10.1 `.cfi_sections SECTION_LIST'
+7.10.1 '.cfi_sections SECTION_LIST'
 -----------------------------------
 
-`.cfi_sections' may be used to specify whether CFI directives should
-emit `.eh_frame' section and/or `.debug_frame' section.  If
-SECTION_LIST is `.eh_frame', `.eh_frame' is emitted, if SECTION_LIST is
-`.debug_frame', `.debug_frame' is emitted.  To emit both use
-`.eh_frame, .debug_frame'.  The default if this directive is not used
-is `.cfi_sections .eh_frame'.
+'.cfi_sections' may be used to specify whether CFI directives should
+emit '.eh_frame' section and/or '.debug_frame' section.  If SECTION_LIST
+is '.eh_frame', '.eh_frame' is emitted, if SECTION_LIST is
+'.debug_frame', '.debug_frame' is emitted.  To emit both use '.eh_frame,
+.debug_frame'.  The default if this directive is not used is
+'.cfi_sections .eh_frame'.
 
    On targets that support compact unwinding tables these can be
-generated by specifying `.eh_frame_entry' instead of `.eh_frame'.
+generated by specifying '.eh_frame_entry' instead of '.eh_frame'.
 
-   Some targets may support an additional name, such as `.c6xabi.exidx'
-which is used by the  target.
+   Some targets may support an additional name, such as '.c6xabi.exidx'
+which is used by the target.
 
-   The `.cfi_sections' directive can be repeated, with the same or
+   The '.cfi_sections' directive can be repeated, with the same or
 different arguments, provided that CFI generation has not yet started.
 Once CFI generation has started however the section list is fixed and
 any attempts to redefine it will result in an error.
 
-7.10.2 `.cfi_startproc [simple]'
+7.10.2 '.cfi_startproc [simple]'
 --------------------------------
 
-`.cfi_startproc' is used at the beginning of each function that should
-have an entry in `.eh_frame'. It initializes some internal data
-structures. Don't forget to close the function by `.cfi_endproc'.
+'.cfi_startproc' is used at the beginning of each function that should
+have an entry in '.eh_frame'.  It initializes some internal data
+structures.  Don't forget to close the function by '.cfi_endproc'.
 
-   Unless `.cfi_startproc' is used along with parameter `simple' it
-also emits some architecture dependent initial CFI instructions.
+   Unless '.cfi_startproc' is used along with parameter 'simple' it also
+emits some architecture dependent initial CFI instructions.
 
-7.10.3 `.cfi_endproc'
+7.10.3 '.cfi_endproc'
 ---------------------
 
-`.cfi_endproc' is used at the end of a function where it closes its
-unwind entry previously opened by `.cfi_startproc', and emits it to
-`.eh_frame'.
+'.cfi_endproc' is used at the end of a function where it closes its
+unwind entry previously opened by '.cfi_startproc', and emits it to
+'.eh_frame'.
 
-7.10.4 `.cfi_personality ENCODING [, EXP]'
+7.10.4 '.cfi_personality ENCODING [, EXP]'
 ------------------------------------------
 
-`.cfi_personality' defines personality routine and its encoding.
+'.cfi_personality' defines personality routine and its encoding.
 ENCODING must be a constant determining how the personality should be
-encoded.  If it is 255 (`DW_EH_PE_omit'), second argument is not
+encoded.  If it is 255 ('DW_EH_PE_omit'), second argument is not
 present, otherwise second argument should be a constant or a symbol
 name.  When using indirect encodings, the symbol provided should be the
 location where personality can be loaded from, not the personality
-routine itself.  The default after `.cfi_startproc' is
-`.cfi_personality 0xff', no personality routine.
+routine itself.  The default after '.cfi_startproc' is '.cfi_personality
+0xff', no personality routine.
 
-7.10.5 `.cfi_personality_id ID'
+7.10.5 '.cfi_personality_id ID'
 -------------------------------
 
-`cfi_personality_id' defines a personality routine by its index as
+'cfi_personality_id' defines a personality routine by its index as
 defined in a compact unwinding format.  Only valid when generating
-compact EH frames (i.e.  with `.cfi_sections eh_frame_entry'.
+compact EH frames (i.e.  with '.cfi_sections eh_frame_entry'.
 
-7.10.6 `.cfi_fde_data [OPCODE1 [, ...]]'
+7.10.6 '.cfi_fde_data [OPCODE1 [, ...]]'
 ----------------------------------------
 
-`cfi_fde_data' is used to describe the compact unwind opcodes to be
-used for the current function.  These are emitted inline in the
-`.eh_frame_entry' section if small enough and there is no LSDA, or in
-the `.gnu.extab' section otherwise.  Only valid when generating compact
-EH frames (i.e.  with `.cfi_sections eh_frame_entry'.
+'cfi_fde_data' is used to describe the compact unwind opcodes to be used
+for the current function.  These are emitted inline in the
+'.eh_frame_entry' section if small enough and there is no LSDA, or in
+the '.gnu.extab' section otherwise.  Only valid when generating compact
+EH frames (i.e.  with '.cfi_sections eh_frame_entry'.
 
-7.10.7 `.cfi_lsda ENCODING [, EXP]'
+7.10.7 '.cfi_lsda ENCODING [, EXP]'
 -----------------------------------
 
-`.cfi_lsda' defines LSDA and its encoding.  ENCODING must be a constant
+'.cfi_lsda' defines LSDA and its encoding.  ENCODING must be a constant
 determining how the LSDA should be encoded.  If it is 255
-(`DW_EH_PE_omit'), the second argument is not present, otherwise the
+('DW_EH_PE_omit'), the second argument is not present, otherwise the
 second argument should be a constant or a symbol name.  The default
-after `.cfi_startproc' is `.cfi_lsda 0xff', meaning that no LSDA is
+after '.cfi_startproc' is '.cfi_lsda 0xff', meaning that no LSDA is
 present.
 
-7.10.8 `.cfi_inline_lsda' [ALIGN]
+7.10.8 '.cfi_inline_lsda' [ALIGN]
 ---------------------------------
 
-`.cfi_inline_lsda' marks the start of a LSDA data section and switches
-to the corresponding `.gnu.extab' section.  Must be preceded by a CFI
-block containing a `.cfi_lsda' directive.  Only valid when generating
-compact EH frames (i.e.  with `.cfi_sections eh_frame_entry'.
+'.cfi_inline_lsda' marks the start of a LSDA data section and switches
+to the corresponding '.gnu.extab' section.  Must be preceded by a CFI
+block containing a '.cfi_lsda' directive.  Only valid when generating
+compact EH frames (i.e.  with '.cfi_sections eh_frame_entry'.
 
    The table header and unwinding opcodes will be generated at this
 point, so that they are immediately followed by the LSDA data.  The
-symbol referenced by the `.cfi_lsda' directive should still be defined
+symbol referenced by the '.cfi_lsda' directive should still be defined
 in case a fallback FDE based encoding is used.  The LSDA data is
 terminated by a section directive.
 
    The optional ALIGN argument specifies the alignment required.  The
-alignment is specified as a power of two, as with the `.p2align'
+alignment is specified as a power of two, as with the '.p2align'
 directive.
 
-7.10.9 `.cfi_def_cfa REGISTER, OFFSET'
+7.10.9 '.cfi_def_cfa REGISTER, OFFSET'
 --------------------------------------
 
-`.cfi_def_cfa' defines a rule for computing CFA as: take address from
+'.cfi_def_cfa' defines a rule for computing CFA as: take address from
 REGISTER and add OFFSET to it.
 
-7.10.10 `.cfi_def_cfa_register REGISTER'
+7.10.10 '.cfi_def_cfa_register REGISTER'
 ----------------------------------------
 
-`.cfi_def_cfa_register' modifies a rule for computing CFA. From now on
-REGISTER will be used instead of the old one. Offset remains the same.
+'.cfi_def_cfa_register' modifies a rule for computing CFA. From now on
+REGISTER will be used instead of the old one.  Offset remains the same.
 
-7.10.11 `.cfi_def_cfa_offset OFFSET'
+7.10.11 '.cfi_def_cfa_offset OFFSET'
 ------------------------------------
 
-`.cfi_def_cfa_offset' modifies a rule for computing CFA. Register
-remains the same, but OFFSET is new. Note that it is the absolute
+'.cfi_def_cfa_offset' modifies a rule for computing CFA. Register
+remains the same, but OFFSET is new.  Note that it is the absolute
 offset that will be added to a defined register to compute CFA address.
 
-7.10.12 `.cfi_adjust_cfa_offset OFFSET'
+7.10.12 '.cfi_adjust_cfa_offset OFFSET'
 ---------------------------------------
 
-Same as `.cfi_def_cfa_offset' but OFFSET is a relative value that is
+Same as '.cfi_def_cfa_offset' but OFFSET is a relative value that is
 added/substracted from the previous offset.
 
-7.10.13 `.cfi_offset REGISTER, OFFSET'
+7.10.13 '.cfi_offset REGISTER, OFFSET'
 --------------------------------------
 
 Previous value of REGISTER is saved at offset OFFSET from CFA.
 
-7.10.14 `.cfi_val_offset REGISTER, OFFSET'
+7.10.14 '.cfi_val_offset REGISTER, OFFSET'
 ------------------------------------------
 
 Previous value of REGISTER is CFA + OFFSET.
 
-7.10.15 `.cfi_rel_offset REGISTER, OFFSET'
+7.10.15 '.cfi_rel_offset REGISTER, OFFSET'
 ------------------------------------------
 
 Previous value of REGISTER is saved at offset OFFSET from the current
-CFA register.  This is transformed to `.cfi_offset' using the known
-displacement of the CFA register from the CFA.  This is often easier to
+CFA register.  This is transformed to '.cfi_offset' using the known
+displacement of the CFA register from the CFA. This is often easier to
 use, because the number will match the code it's annotating.
 
-7.10.16 `.cfi_register REGISTER1, REGISTER2'
+7.10.16 '.cfi_register REGISTER1, REGISTER2'
 --------------------------------------------
 
 Previous value of REGISTER1 is saved in register REGISTER2.
 
-7.10.17 `.cfi_restore REGISTER'
+7.10.17 '.cfi_restore REGISTER'
 -------------------------------
 
-`.cfi_restore' says that the rule for REGISTER is now the same as it
-was at the beginning of the function, after all initial instruction
-added by `.cfi_startproc' were executed.
+'.cfi_restore' says that the rule for REGISTER is now the same as it was
+at the beginning of the function, after all initial instruction added by
+'.cfi_startproc' were executed.
 
-7.10.18 `.cfi_undefined REGISTER'
+7.10.18 '.cfi_undefined REGISTER'
 ---------------------------------
 
 From now on the previous value of REGISTER can't be restored anymore.
 
-7.10.19 `.cfi_same_value REGISTER'
+7.10.19 '.cfi_same_value REGISTER'
 ----------------------------------
 
 Current value of REGISTER is the same like in the previous frame, i.e.
 no restoration needed.
 
-7.10.20 `.cfi_remember_state' and `.cfi_restore_state'
+7.10.20 '.cfi_remember_state' and '.cfi_restore_state'
 ------------------------------------------------------
 
-`.cfi_remember_state' pushes the set of rules for every register onto an
-implicit stack, while `.cfi_restore_state' pops them off the stack and
-places them in the current row.  This is useful for situations where
-you have multiple `.cfi_*' directives that need to be undone due to the
+'.cfi_remember_state' pushes the set of rules for every register onto an
+implicit stack, while '.cfi_restore_state' pops them off the stack and
+places them in the current row.  This is useful for situations where you
+have multiple '.cfi_*' directives that need to be undone due to the
 control flow of the program.  For example, we could have something like
-this (assuming the CFA is the value of `rbp'):
+this (assuming the CFA is the value of 'rbp'):
 
              je label
              popq %rbx
@@ -3688,12 +3604,12 @@ this (assuming the CFA is the value of `rbp'):
      label:
              /* Do something else */
 
-   Here, we want the `.cfi' directives to affect only the rows
-corresponding to the instructions before `label'.  This means we'd have
-to add multiple `.cfi' directives after `label' to recreate the
-original save locations of the registers, as well as setting the CFA
-back to the value of `rbp'.  This would be clumsy, and result in a
-larger binary size. Instead, we can write:
+   Here, we want the '.cfi' directives to affect only the rows
+corresponding to the instructions before 'label'.  This means we'd have
+to add multiple '.cfi' directives after 'label' to recreate the original
+save locations of the registers, as well as setting the CFA back to the
+value of 'rbp'.  This would be clumsy, and result in a larger binary
+size.  Instead, we can write:
 
              je label
              popq %rbx
@@ -3709,39 +3625,39 @@ larger binary size. Instead, we can write:
              .cfi_restore_state
              /* Do something else */
 
-   That way, the rules for the instructions after `label' will be the
-same as before the first `.cfi_restore' without having to use multiple
-`.cfi' directives.
+   That way, the rules for the instructions after 'label' will be the
+same as before the first '.cfi_restore' without having to use multiple
+'.cfi' directives.
 
-7.10.21 `.cfi_return_column REGISTER'
+7.10.21 '.cfi_return_column REGISTER'
 -------------------------------------
 
-Change return column REGISTER, i.e. the return address is either
+Change return column REGISTER, i.e.  the return address is either
 directly in REGISTER or can be accessed by rules for REGISTER.
 
-7.10.22 `.cfi_signal_frame'
+7.10.22 '.cfi_signal_frame'
 ---------------------------
 
 Mark current function as signal trampoline.
 
-7.10.23 `.cfi_window_save'
+7.10.23 '.cfi_window_save'
 --------------------------
 
 SPARC register window has been saved.
 
-7.10.24 `.cfi_escape' EXPRESSION[, ...]
+7.10.24 '.cfi_escape' EXPRESSION[, ...]
 ---------------------------------------
 
 Allows the user to add arbitrary bytes to the unwind info.  One might
-use this to add OS-specific CFI opcodes, or generic CFI opcodes that
-GAS does not yet support.
+use this to add OS-specific CFI opcodes, or generic CFI opcodes that GAS
+does not yet support.
 
-7.10.25 `.cfi_val_encoded_addr REGISTER, ENCODING, LABEL'
+7.10.25 '.cfi_val_encoded_addr REGISTER, ENCODING, LABEL'
 ---------------------------------------------------------
 
 The current value of REGISTER is LABEL.  The value of LABEL will be
-encoded in the output file according to ENCODING; see the description
-of `.cfi_personality' for details on this encoding.
+encoded in the output file according to ENCODING; see the description of
+'.cfi_personality' for details on this encoding.
 
    The usefulness of equating a register to a fixed label is probably
 limited to the return address register.  Here, it can be useful to mark
@@ -3752,101 +3668,101 @@ another register.
 
 File: as.info,  Node: Comm,  Next: Data,  Prev: CFI directives,  Up: Pseudo Ops
 
-7.11 `.comm SYMBOL , LENGTH '
+7.11 '.comm SYMBOL , LENGTH '
 =============================
 
-`.comm' declares a common symbol named SYMBOL.  When linking, a common
+'.comm' declares a common symbol named SYMBOL.  When linking, a common
 symbol in one object file may be merged with a defined or common symbol
-of the same name in another object file.  If `ld' does not see a
+of the same name in another object file.  If 'ld' does not see a
 definition for the symbol-just one or more common symbols-then it will
 allocate LENGTH bytes of uninitialized memory.  LENGTH must be an
-absolute expression.  If `ld' sees multiple common symbols with the
-same name, and they do not all have the same size, it will allocate
-space using the largest size.
+absolute expression.  If 'ld' sees multiple common symbols with the same
+name, and they do not all have the same size, it will allocate space
+using the largest size.
 
-   When using ELF or (as a GNU extension) PE, the `.comm' directive
+   When using ELF or (as a GNU extension) PE, the '.comm' directive
 takes an optional third argument.  This is the desired alignment of the
 symbol, specified for ELF as a byte boundary (for example, an alignment
 of 16 means that the least significant 4 bits of the address should be
 zero), and for PE as a power of two (for example, an alignment of 5
-means aligned to a 32-byte boundary).  The alignment must be an
-absolute expression, and it must be a power of two.  If `ld' allocates
+means aligned to a 32-byte boundary).  The alignment must be an absolute
+expression, and it must be a power of two.  If 'ld' allocates
 uninitialized memory for the common symbol, it will use the alignment
-when placing the symbol.  If no alignment is specified, `as' will set
-the alignment to the largest power of two less than or equal to the
-size of the symbol, up to a maximum of 16 on ELF, or the default
-section alignment of 4 on PE(1).
+when placing the symbol.  If no alignment is specified, 'as' will set
+the alignment to the largest power of two less than or equal to the size
+of the symbol, up to a maximum of 16 on ELF, or the default section
+alignment of 4 on PE(1).
 
-   The syntax for `.comm' differs slightly on the HPPA.  The syntax is
-`SYMBOL .comm, LENGTH'; SYMBOL is optional.
+   The syntax for '.comm' differs slightly on the HPPA. The syntax is
+'SYMBOL .comm, LENGTH'; SYMBOL is optional.
 
    ---------- Footnotes ----------
 
    (1) This is not the same as the executable image file alignment
-controlled by `ld''s `--section-alignment' option; image file sections
+controlled by 'ld''s '--section-alignment' option; image file sections
 in PE are aligned to multiples of 4096, which is far too large an
 alignment for ordinary variables.  It is rather the default alignment
-for (non-debug) sections within object (`*.o') files, which are less
+for (non-debug) sections within object ('*.o') files, which are less
 strictly aligned.
 
 
 File: as.info,  Node: Data,  Next: Def,  Prev: Comm,  Up: Pseudo Ops
 
-7.12 `.data SUBSECTION'
+7.12 '.data SUBSECTION'
 =======================
 
-`.data' tells `as' to assemble the following statements onto the end of
+'.data' tells 'as' to assemble the following statements onto the end of
 the data subsection numbered SUBSECTION (which is an absolute
 expression).  If SUBSECTION is omitted, it defaults to zero.
 
 
 File: as.info,  Node: Def,  Next: Desc,  Prev: Data,  Up: Pseudo Ops
 
-7.13 `.def NAME'
+7.13 '.def NAME'
 ================
 
 Begin defining debugging information for a symbol NAME; the definition
-extends until the `.endef' directive is encountered.
+extends until the '.endef' directive is encountered.
 
 
 File: as.info,  Node: Desc,  Next: Dim,  Prev: Def,  Up: Pseudo Ops
 
-7.14 `.desc SYMBOL, ABS-EXPRESSION'
+7.14 '.desc SYMBOL, ABS-EXPRESSION'
 ===================================
 
 This directive sets the descriptor of the symbol (*note Symbol
 Attributes::) to the low 16 bits of an absolute expression.
 
-   The `.desc' directive is not available when `as' is configured for
-COFF output; it is only for `a.out' or `b.out' object format.  For the
-sake of compatibility, `as' accepts it, but produces no output, when
+   The '.desc' directive is not available when 'as' is configured for
+COFF output; it is only for 'a.out' or 'b.out' object format.  For the
+sake of compatibility, 'as' accepts it, but produces no output, when
 configured for COFF.
 
 
 File: as.info,  Node: Dim,  Next: Double,  Prev: Desc,  Up: Pseudo Ops
 
-7.15 `.dim'
+7.15 '.dim'
 ===========
 
 This directive is generated by compilers to include auxiliary debugging
 information in the symbol table.  It is only permitted inside
-`.def'/`.endef' pairs.
+'.def'/'.endef' pairs.
 
 
 File: as.info,  Node: Double,  Next: Eject,  Prev: Dim,  Up: Pseudo Ops
 
-7.16 `.double FLONUMS'
+7.16 '.double FLONUMS'
 ======================
 
-`.double' expects zero or more flonums, separated by commas.  It
+'.double' expects zero or more flonums, separated by commas.  It
 assembles floating point numbers.  The exact kind of floating point
-numbers emitted depends on how `as' is configured.  *Note Machine
+numbers emitted depends on how 'as' is configured.  *Note Machine
 Dependencies::.
 
 
 File: as.info,  Node: Eject,  Next: Else,  Prev: Double,  Up: Pseudo Ops
 
-7.17 `.eject'
+7.17 '.eject'
 =============
 
 Force a page break at this point, when generating assembly listings.
@@ -3854,80 +3770,80 @@ Force a page break at this point, when generating assembly listings.
 
 File: as.info,  Node: Else,  Next: Elseif,  Prev: Eject,  Up: Pseudo Ops
 
-7.18 `.else'
+7.18 '.else'
 ============
 
-`.else' is part of the `as' support for conditional assembly; see *Note
-`.if': If.  It marks the beginning of a section of code to be assembled
-if the condition for the preceding `.if' was false.
+'.else' is part of the 'as' support for conditional assembly; see *note
+'.if': If.  It marks the beginning of a section of code to be assembled
+if the condition for the preceding '.if' was false.
 
 
 File: as.info,  Node: Elseif,  Next: End,  Prev: Else,  Up: Pseudo Ops
 
-7.19 `.elseif'
+7.19 '.elseif'
 ==============
 
-`.elseif' is part of the `as' support for conditional assembly; see
-*Note `.if': If.  It is shorthand for beginning a new `.if' block that
-would otherwise fill the entire `.else' section.
+'.elseif' is part of the 'as' support for conditional assembly; see
+*note '.if': If.  It is shorthand for beginning a new '.if' block that
+would otherwise fill the entire '.else' section.
 
 
 File: as.info,  Node: End,  Next: Endef,  Prev: Elseif,  Up: Pseudo Ops
 
-7.20 `.end'
+7.20 '.end'
 ===========
 
-`.end' marks the end of the assembly file.  `as' does not process
-anything in the file past the `.end' directive.
+'.end' marks the end of the assembly file.  'as' does not process
+anything in the file past the '.end' directive.
 
 
 File: as.info,  Node: Endef,  Next: Endfunc,  Prev: End,  Up: Pseudo Ops
 
-7.21 `.endef'
+7.21 '.endef'
 =============
 
-This directive flags the end of a symbol definition begun with `.def'.
+This directive flags the end of a symbol definition begun with '.def'.
 
 
 File: as.info,  Node: Endfunc,  Next: Endif,  Prev: Endef,  Up: Pseudo Ops
 
-7.22 `.endfunc'
+7.22 '.endfunc'
 ===============
 
-`.endfunc' marks the end of a function specified with `.func'.
+'.endfunc' marks the end of a function specified with '.func'.
 
 
 File: as.info,  Node: Endif,  Next: Equ,  Prev: Endfunc,  Up: Pseudo Ops
 
-7.23 `.endif'
+7.23 '.endif'
 =============
 
-`.endif' is part of the `as' support for conditional assembly; it marks
+'.endif' is part of the 'as' support for conditional assembly; it marks
 the end of a block of code that is only assembled conditionally.  *Note
-`.if': If.
+'.if': If.
 
 
 File: as.info,  Node: Equ,  Next: Equiv,  Prev: Endif,  Up: Pseudo Ops
 
-7.24 `.equ SYMBOL, EXPRESSION'
+7.24 '.equ SYMBOL, EXPRESSION'
 ==============================
 
-This directive sets the value of SYMBOL to EXPRESSION.  It is
-synonymous with `.set'; see *Note `.set': Set.
+This directive sets the value of SYMBOL to EXPRESSION.  It is synonymous
+with '.set'; see *note '.set': Set.
 
-   The syntax for `equ' on the HPPA is `SYMBOL .equ EXPRESSION'.
+   The syntax for 'equ' on the HPPA is 'SYMBOL .equ EXPRESSION'.
 
-   The syntax for `equ' on the Z80 is `SYMBOL equ EXPRESSION'.  On the
+   The syntax for 'equ' on the Z80 is 'SYMBOL equ EXPRESSION'.  On the
 Z80 it is an eror if SYMBOL is already defined, but the symbol is not
-protected from later redefinition.  Compare *Note Equiv::.
+protected from later redefinition.  Compare *note Equiv::.
 
 
 File: as.info,  Node: Equiv,  Next: Eqv,  Prev: Equ,  Up: Pseudo Ops
 
-7.25 `.equiv SYMBOL, EXPRESSION'
+7.25 '.equiv SYMBOL, EXPRESSION'
 ================================
 
-The `.equiv' directive is like `.equ' and `.set', except that the
+The '.equiv' directive is like '.equ' and '.set', except that the
 assembler will signal an error if SYMBOL is already defined.  Note a
 symbol which has been referenced but not actually defined is considered
 to be undefined.
@@ -3943,10 +3859,10 @@ equivalent to
 
 File: as.info,  Node: Eqv,  Next: Err,  Prev: Equiv,  Up: Pseudo Ops
 
-7.26 `.eqv SYMBOL, EXPRESSION'
+7.26 '.eqv SYMBOL, EXPRESSION'
 ==============================
 
-The `.eqv' directive is like `.equiv', but no attempt is made to
+The '.eqv' directive is like '.equiv', but no attempt is made to
 evaluate the expression or any part of it immediately.  Instead each
 time the resulting symbol is used in an expression, a snapshot of its
 current value is taken.
@@ -3954,31 +3870,31 @@ current value is taken.
 
 File: as.info,  Node: Err,  Next: Error,  Prev: Eqv,  Up: Pseudo Ops
 
-7.27 `.err'
+7.27 '.err'
 ===========
 
-If `as' assembles a `.err' directive, it will print an error message
-and, unless the `-Z' option was used, it will not generate an object
+If 'as' assembles a '.err' directive, it will print an error message
+and, unless the '-Z' option was used, it will not generate an object
 file.  This can be used to signal an error in conditionally compiled
 code.
 
 
 File: as.info,  Node: Error,  Next: Exitm,  Prev: Err,  Up: Pseudo Ops
 
-7.28 `.error "STRING"'
+7.28 '.error "STRING"'
 ======================
 
-Similarly to `.err', this directive emits an error, but you can specify
+Similarly to '.err', this directive emits an error, but you can specify
 a string that will be emitted as the error message.  If you don't
-specify the message, it defaults to `".error directive invoked in
-source file"'.  *Note Error and Warning Messages: Errors.
+specify the message, it defaults to '".error directive invoked in source
+file"'.  *Note Error and Warning Messages: Errors.
 
       .error "This code has not been assembled and tested."
 
 
 File: as.info,  Node: Exitm,  Next: Extern,  Prev: Error,  Up: Pseudo Ops
 
-7.29 `.exitm'
+7.29 '.exitm'
 =============
 
 Exit early from the current macro definition.  *Note Macro::.
@@ -3986,54 +3902,54 @@ Exit early from the current macro definition.  *Note Macro::.
 
 File: as.info,  Node: Extern,  Next: Fail,  Prev: Exitm,  Up: Pseudo Ops
 
-7.30 `.extern'
+7.30 '.extern'
 ==============
 
-`.extern' is accepted in the source program--for compatibility with
-other assemblers--but it is ignored.  `as' treats all undefined symbols
+'.extern' is accepted in the source program--for compatibility with
+other assemblers--but it is ignored.  'as' treats all undefined symbols
 as external.
 
 
 File: as.info,  Node: Fail,  Next: File,  Prev: Extern,  Up: Pseudo Ops
 
-7.31 `.fail EXPRESSION'
+7.31 '.fail EXPRESSION'
 =======================
 
 Generates an error or a warning.  If the value of the EXPRESSION is 500
-or more, `as' will print a warning message.  If the value is less than
-500, `as' will print an error message.  The message will include the
+or more, 'as' will print a warning message.  If the value is less than
+500, 'as' will print an error message.  The message will include the
 value of EXPRESSION.  This can occasionally be useful inside complex
 nested macros or conditional assembly.
 
 
 File: as.info,  Node: File,  Next: Fill,  Prev: Fail,  Up: Pseudo Ops
 
-7.32 `.file'
+7.32 '.file'
 ============
 
-There are two different versions of the `.file' directive.  Targets
-that support DWARF2 line number information use the DWARF2 version of
-`.file'.  Other targets use the default version.
+There are two different versions of the '.file' directive.  Targets that
+support DWARF2 line number information use the DWARF2 version of
+'.file'.  Other targets use the default version.
 
 Default Version
 ---------------
 
-This version of the `.file' directive tells `as' that we are about to
+This version of the '.file' directive tells 'as' that we are about to
 start a new logical file.  The syntax is:
 
      .file STRING
 
    STRING is the new file name.  In general, the filename is recognized
-whether or not it is surrounded by quotes `"'; but if you wish to
-specify an empty file name, you must give the quotes-`""'.  This
+whether or not it is surrounded by quotes '"'; but if you wish to
+specify an empty file name, you must give the quotes-'""'.  This
 statement may go away in future: it is only recognized to be compatible
-with old `as' programs.
+with old 'as' programs.
 
 DWARF2 Version
 --------------
 
-When emitting DWARF2 line number information, `.file' assigns filenames
-to the `.debug_line' file name table.  The syntax is:
+When emitting DWARF2 line number information, '.file' assigns filenames
+to the '.debug_line' file name table.  The syntax is:
 
      .file FILENO FILENAME
 
@@ -4042,14 +3958,14 @@ index of the entry in the table.  The FILENAME operand is a C string
 literal.
 
    The detail of filename indices is exposed to the user because the
-filename table is shared with the `.debug_info' section of the DWARF2
+filename table is shared with the '.debug_info' section of the DWARF2
 debugging information, and thus the user must know the exact indices
 that table entries will have.
 
 
 File: as.info,  Node: Fill,  Next: Float,  Prev: File,  Up: Pseudo Ops
 
-7.33 `.fill REPEAT , SIZE , VALUE'
+7.33 '.fill REPEAT , SIZE , VALUE'
 ==================================
 
 REPEAT, SIZE and VALUE are absolute expressions.  This emits REPEAT
@@ -4058,8 +3974,8 @@ more, but if it is more than 8, then it is deemed to have the value 8,
 compatible with other people's assemblers.  The contents of each REPEAT
 bytes is taken from an 8-byte number.  The highest order 4 bytes are
 zero.  The lowest order 4 bytes are VALUE rendered in the byte-order of
-an integer on the computer `as' is assembling for.  Each SIZE bytes in
-a repetition is taken from the lowest order SIZE bytes of this number.
+an integer on the computer 'as' is assembling for.  Each SIZE bytes in a
+repetition is taken from the lowest order SIZE bytes of this number.
 Again, this bizarre behavior is compatible with other people's
 assemblers.
 
@@ -4070,51 +3986,51 @@ are absent, SIZE is assumed to be 1.
 
 File: as.info,  Node: Float,  Next: Func,  Prev: Fill,  Up: Pseudo Ops
 
-7.34 `.float FLONUMS'
+7.34 '.float FLONUMS'
 =====================
 
 This directive assembles zero or more flonums, separated by commas.  It
-has the same effect as `.single'.  The exact kind of floating point
-numbers emitted depends on how `as' is configured.  *Note Machine
+has the same effect as '.single'.  The exact kind of floating point
+numbers emitted depends on how 'as' is configured.  *Note Machine
 Dependencies::.
 
 
 File: as.info,  Node: Func,  Next: Global,  Prev: Float,  Up: Pseudo Ops
 
-7.35 `.func NAME[,LABEL]'
+7.35 '.func NAME[,LABEL]'
 =========================
 
-`.func' emits debugging information to denote function NAME, and is
+'.func' emits debugging information to denote function NAME, and is
 ignored unless the file is assembled with debugging enabled.  Only
-`--gstabs[+]' is currently supported.  LABEL is the entry point of the
-function and if omitted NAME prepended with the `leading char' is used.
-`leading char' is usually `_' or nothing, depending on the target.  All
-functions are currently defined to have `void' return type.  The
-function must be terminated with `.endfunc'.
+'--gstabs[+]' is currently supported.  LABEL is the entry point of the
+function and if omitted NAME prepended with the 'leading char' is used.
+'leading char' is usually '_' or nothing, depending on the target.  All
+functions are currently defined to have 'void' return type.  The
+function must be terminated with '.endfunc'.
 
 
 File: as.info,  Node: Global,  Next: Gnu_attribute,  Prev: Func,  Up: Pseudo Ops
 
-7.36 `.global SYMBOL', `.globl SYMBOL'
+7.36 '.global SYMBOL', '.globl SYMBOL'
 ======================================
 
-`.global' makes the symbol visible to `ld'.  If you define SYMBOL in
+'.global' makes the symbol visible to 'ld'.  If you define SYMBOL in
 your partial program, its value is made available to other partial
 programs that are linked with it.  Otherwise, SYMBOL takes its
 attributes from a symbol of the same name from another file linked into
 the same program.
 
-   Both spellings (`.globl' and `.global') are accepted, for
+   Both spellings ('.globl' and '.global') are accepted, for
 compatibility with other assemblers.
 
-   On the HPPA, `.global' is not always enough to make it accessible to
-other partial programs.  You may need the HPPA-only `.EXPORT' directive
+   On the HPPA, '.global' is not always enough to make it accessible to
+other partial programs.  You may need the HPPA-only '.EXPORT' directive
 as well.  *Note HPPA Assembler Directives: HPPA Directives.
 
 
 File: as.info,  Node: Gnu_attribute,  Next: Hidden,  Prev: Global,  Up: Pseudo Ops
 
-7.37 `.gnu_attribute TAG,VALUE'
+7.37 '.gnu_attribute TAG,VALUE'
 ===============================
 
 Record a GNU object attribute for this file.  *Note Object Attributes::.
@@ -4122,161 +4038,161 @@ Record a GNU object attribute for this file.  *Note Object Attributes::.
 
 File: as.info,  Node: Hidden,  Next: hword,  Prev: Gnu_attribute,  Up: Pseudo Ops
 
-7.38 `.hidden NAMES'
+7.38 '.hidden NAMES'
 ====================
 
 This is one of the ELF visibility directives.  The other two are
-`.internal' (*note `.internal': Internal.) and `.protected' (*note
-`.protected': Protected.).
+'.internal' (*note '.internal': Internal.) and '.protected' (*note
+'.protected': Protected.).
 
    This directive overrides the named symbols default visibility (which
-is set by their binding: local, global or weak).  The directive sets
-the visibility to `hidden' which means that the symbols are not visible
-to other components.  Such symbols are always considered to be
-`protected' as well.
+is set by their binding: local, global or weak).  The directive sets the
+visibility to 'hidden' which means that the symbols are not visible to
+other components.  Such symbols are always considered to be 'protected'
+as well.
 
 
 File: as.info,  Node: hword,  Next: Ident,  Prev: Hidden,  Up: Pseudo Ops
 
-7.39 `.hword EXPRESSIONS'
+7.39 '.hword EXPRESSIONS'
 =========================
 
 This expects zero or more EXPRESSIONS, and emits a 16 bit number for
 each.
 
-   This directive is a synonym for `.short'; depending on the target
-architecture, it may also be a synonym for `.word'.
+   This directive is a synonym for '.short'; depending on the target
+architecture, it may also be a synonym for '.word'.
 
 
 File: as.info,  Node: Ident,  Next: If,  Prev: hword,  Up: Pseudo Ops
 
-7.40 `.ident'
+7.40 '.ident'
 =============
 
-This directive is used by some assemblers to place tags in object
-files.  The behavior of this directive varies depending on the target.
-When using the a.out object file format, `as' simply accepts the
-directive for source-file compatibility with existing assemblers, but
-does not emit anything for it.  When using COFF, comments are emitted
-to the `.comment' or `.rdata' section, depending on the target.  When
-using ELF, comments are emitted to the `.comment' section.
+This directive is used by some assemblers to place tags in object files.
+The behavior of this directive varies depending on the target.  When
+using the a.out object file format, 'as' simply accepts the directive
+for source-file compatibility with existing assemblers, but does not
+emit anything for it.  When using COFF, comments are emitted to the
+'.comment' or '.rdata' section, depending on the target.  When using
+ELF, comments are emitted to the '.comment' section.
 
 
 File: as.info,  Node: If,  Next: Incbin,  Prev: Ident,  Up: Pseudo Ops
 
-7.41 `.if ABSOLUTE EXPRESSION'
+7.41 '.if ABSOLUTE EXPRESSION'
 ==============================
 
-`.if' marks the beginning of a section of code which is only considered
+'.if' marks the beginning of a section of code which is only considered
 part of the source program being assembled if the argument (which must
 be an ABSOLUTE EXPRESSION) is non-zero.  The end of the conditional
-section of code must be marked by `.endif' (*note `.endif': Endif.);
+section of code must be marked by '.endif' (*note '.endif': Endif.);
 optionally, you may include code for the alternative condition, flagged
-by `.else' (*note `.else': Else.).  If you have several conditions to
-check, `.elseif' may be used to avoid nesting blocks if/else within
-each subsequent `.else' block.
+by '.else' (*note '.else': Else.).  If you have several conditions to
+check, '.elseif' may be used to avoid nesting blocks if/else within each
+subsequent '.else' block.
 
-   The following variants of `.if' are also supported:
-`.ifdef SYMBOL'
-     Assembles the following section of code if the specified SYMBOL
-     has been defined.  Note a symbol which has been referenced but not
-     yet defined is considered to be undefined.
+   The following variants of '.if' are also supported:
+'.ifdef SYMBOL'
+     Assembles the following section of code if the specified SYMBOL has
+     been defined.  Note a symbol which has been referenced but not yet
+     defined is considered to be undefined.
 
-`.ifb TEXT'
+'.ifb TEXT'
      Assembles the following section of code if the operand is blank
      (empty).
 
-`.ifc STRING1,STRING2'
+'.ifc STRING1,STRING2'
      Assembles the following section of code if the two strings are the
-     same.  The strings may be optionally quoted with single quotes.
-     If they are not quoted, the first string stops at the first comma,
-     and the second string stops at the end of the line.  Strings which
-     contain whitespace should be quoted.  The string comparison is
-     case sensitive.
+     same.  The strings may be optionally quoted with single quotes.  If
+     they are not quoted, the first string stops at the first comma, and
+     the second string stops at the end of the line.  Strings which
+     contain whitespace should be quoted.  The string comparison is case
+     sensitive.
 
-`.ifeq ABSOLUTE EXPRESSION'
+'.ifeq ABSOLUTE EXPRESSION'
      Assembles the following section of code if the argument is zero.
 
-`.ifeqs STRING1,STRING2'
-     Another form of `.ifc'.  The strings must be quoted using double
+'.ifeqs STRING1,STRING2'
+     Another form of '.ifc'.  The strings must be quoted using double
      quotes.
 
-`.ifge ABSOLUTE EXPRESSION'
+'.ifge ABSOLUTE EXPRESSION'
      Assembles the following section of code if the argument is greater
      than or equal to zero.
 
-`.ifgt ABSOLUTE EXPRESSION'
+'.ifgt ABSOLUTE EXPRESSION'
      Assembles the following section of code if the argument is greater
      than zero.
 
-`.ifle ABSOLUTE EXPRESSION'
+'.ifle ABSOLUTE EXPRESSION'
      Assembles the following section of code if the argument is less
      than or equal to zero.
 
-`.iflt ABSOLUTE EXPRESSION'
+'.iflt ABSOLUTE EXPRESSION'
      Assembles the following section of code if the argument is less
      than zero.
 
-`.ifnb TEXT'
-     Like `.ifb', but the sense of the test is reversed: this assembles
+'.ifnb TEXT'
+     Like '.ifb', but the sense of the test is reversed: this assembles
      the following section of code if the operand is non-blank
      (non-empty).
 
-`.ifnc STRING1,STRING2.'
-     Like `.ifc', but the sense of the test is reversed: this assembles
+'.ifnc STRING1,STRING2.'
+     Like '.ifc', but the sense of the test is reversed: this assembles
      the following section of code if the two strings are not the same.
 
-`.ifndef SYMBOL'
-`.ifnotdef SYMBOL'
-     Assembles the following section of code if the specified SYMBOL
-     has not been defined.  Both spelling variants are equivalent.
-     Note a symbol which has been referenced but not yet defined is
-     considered to be undefined.
+'.ifndef SYMBOL'
+'.ifnotdef SYMBOL'
+     Assembles the following section of code if the specified SYMBOL has
+     not been defined.  Both spelling variants are equivalent.  Note a
+     symbol which has been referenced but not yet defined is considered
+     to be undefined.
 
-`.ifne ABSOLUTE EXPRESSION'
+'.ifne ABSOLUTE EXPRESSION'
      Assembles the following section of code if the argument is not
-     equal to zero (in other words, this is equivalent to `.if').
+     equal to zero (in other words, this is equivalent to '.if').
 
-`.ifnes STRING1,STRING2'
-     Like `.ifeqs', but the sense of the test is reversed: this
+'.ifnes STRING1,STRING2'
+     Like '.ifeqs', but the sense of the test is reversed: this
      assembles the following section of code if the two strings are not
      the same.
 
 
 File: as.info,  Node: Incbin,  Next: Include,  Prev: If,  Up: Pseudo Ops
 
-7.42 `.incbin "FILE"[,SKIP[,COUNT]]'
+7.42 '.incbin "FILE"[,SKIP[,COUNT]]'
 ====================================
 
-The `incbin' directive includes FILE verbatim at the current location.
-You can control the search paths used with the `-I' command-line option
+The 'incbin' directive includes FILE verbatim at the current location.
+You can control the search paths used with the '-I' command-line option
 (*note Command-Line Options: Invoking.).  Quotation marks are required
 around FILE.
 
-   The SKIP argument skips a number of bytes from the start of the
-FILE.  The COUNT argument indicates the maximum number of bytes to
-read.  Note that the data is not aligned in any way, so it is the user's
+   The SKIP argument skips a number of bytes from the start of the FILE.
+The COUNT argument indicates the maximum number of bytes to read.  Note
+that the data is not aligned in any way, so it is the user's
 responsibility to make sure that proper alignment is provided both
-before and after the `incbin' directive.
+before and after the 'incbin' directive.
 
 
 File: as.info,  Node: Include,  Next: Int,  Prev: Incbin,  Up: Pseudo Ops
 
-7.43 `.include "FILE"'
+7.43 '.include "FILE"'
 ======================
 
 This directive provides a way to include supporting files at specified
-points in your source program.  The code from FILE is assembled as if
-it followed the point of the `.include'; when the end of the included
-file is reached, assembly of the original file continues.  You can
-control the search paths used with the `-I' command-line option (*note
+points in your source program.  The code from FILE is assembled as if it
+followed the point of the '.include'; when the end of the included file
+is reached, assembly of the original file continues.  You can control
+the search paths used with the '-I' command-line option (*note
 Command-Line Options: Invoking.).  Quotation marks are required around
 FILE.
 
 
 File: as.info,  Node: Int,  Next: Internal,  Prev: Include,  Up: Pseudo Ops
 
-7.44 `.int EXPRESSIONS'
+7.44 '.int EXPRESSIONS'
 =======================
 
 Expect zero or more EXPRESSIONS, of any section, separated by commas.
@@ -4287,33 +4203,33 @@ what kind of target the assembly is for.
 
 File: as.info,  Node: Internal,  Next: Irp,  Prev: Int,  Up: Pseudo Ops
 
-7.45 `.internal NAMES'
+7.45 '.internal NAMES'
 ======================
 
 This is one of the ELF visibility directives.  The other two are
-`.hidden' (*note `.hidden': Hidden.) and `.protected' (*note
-`.protected': Protected.).
+'.hidden' (*note '.hidden': Hidden.) and '.protected' (*note
+'.protected': Protected.).
 
    This directive overrides the named symbols default visibility (which
-is set by their binding: local, global or weak).  The directive sets
-the visibility to `internal' which means that the symbols are
-considered to be `hidden' (i.e., not visible to other components), and
-that some extra, processor specific processing must also be performed
-upon the  symbols as well.
+is set by their binding: local, global or weak).  The directive sets the
+visibility to 'internal' which means that the symbols are considered to
+be 'hidden' (i.e., not visible to other components), and that some
+extra, processor specific processing must also be performed upon the
+symbols as well.
 
 
 File: as.info,  Node: Irp,  Next: Irpc,  Prev: Internal,  Up: Pseudo Ops
 
-7.46 `.irp SYMBOL,VALUES'...
+7.46 '.irp SYMBOL,VALUES'...
 ============================
 
 Evaluate a sequence of statements assigning different values to SYMBOL.
-The sequence of statements starts at the `.irp' directive, and is
-terminated by an `.endr' directive.  For each VALUE, SYMBOL is set to
+The sequence of statements starts at the '.irp' directive, and is
+terminated by an '.endr' directive.  For each VALUE, SYMBOL is set to
 VALUE, and the sequence of statements is assembled.  If no VALUE is
-listed, the sequence of statements is assembled once, with SYMBOL set
-to the null string.  To refer to SYMBOL within the sequence of
-statements, use \SYMBOL.
+listed, the sequence of statements is assembled once, with SYMBOL set to
+the null string.  To refer to SYMBOL within the sequence of statements,
+use \SYMBOL.
 
    For example, assembling
 
@@ -4327,21 +4243,21 @@ statements, use \SYMBOL.
              move    d2,sp@-
              move    d3,sp@-
 
-   For some caveats with the spelling of SYMBOL, see also *Note Macro::.
+   For some caveats with the spelling of SYMBOL, see also *note Macro::.
 
 
 File: as.info,  Node: Irpc,  Next: Lcomm,  Prev: Irp,  Up: Pseudo Ops
 
-7.47 `.irpc SYMBOL,VALUES'...
+7.47 '.irpc SYMBOL,VALUES'...
 =============================
 
 Evaluate a sequence of statements assigning different values to SYMBOL.
-The sequence of statements starts at the `.irpc' directive, and is
-terminated by an `.endr' directive.  For each character in VALUE,
-SYMBOL is set to the character, and the sequence of statements is
-assembled.  If no VALUE is listed, the sequence of statements is
-assembled once, with SYMBOL set to the null string.  To refer to SYMBOL
-within the sequence of statements, use \SYMBOL.
+The sequence of statements starts at the '.irpc' directive, and is
+terminated by an '.endr' directive.  For each character in VALUE, SYMBOL
+is set to the character, and the sequence of statements is assembled.
+If no VALUE is listed, the sequence of statements is assembled once,
+with SYMBOL set to the null string.  To refer to SYMBOL within the
+sequence of statements, use \SYMBOL.
 
    For example, assembling
 
@@ -4361,64 +4277,64 @@ at *Note Macro::.
 
 File: as.info,  Node: Lcomm,  Next: Lflags,  Prev: Irpc,  Up: Pseudo Ops
 
-7.48 `.lcomm SYMBOL , LENGTH'
+7.48 '.lcomm SYMBOL , LENGTH'
 =============================
 
-Reserve LENGTH (an absolute expression) bytes for a local common
-denoted by SYMBOL.  The section and value of SYMBOL are those of the
-new local common.  The addresses are allocated in the bss section, so
-that at run-time the bytes start off zeroed.  SYMBOL is not declared
-global (*note `.global': Global.), so is normally not visible to `ld'.
+Reserve LENGTH (an absolute expression) bytes for a local common denoted
+by SYMBOL.  The section and value of SYMBOL are those of the new local
+common.  The addresses are allocated in the bss section, so that at
+run-time the bytes start off zeroed.  SYMBOL is not declared global
+(*note '.global': Global.), so is normally not visible to 'ld'.
 
-   Some targets permit a third argument to be used with `.lcomm'.  This
+   Some targets permit a third argument to be used with '.lcomm'.  This
 argument specifies the desired alignment of the symbol in the bss
 section.
 
-   The syntax for `.lcomm' differs slightly on the HPPA.  The syntax is
-`SYMBOL .lcomm, LENGTH'; SYMBOL is optional.
+   The syntax for '.lcomm' differs slightly on the HPPA. The syntax is
+'SYMBOL .lcomm, LENGTH'; SYMBOL is optional.
 
 
 File: as.info,  Node: Lflags,  Next: Line,  Prev: Lcomm,  Up: Pseudo Ops
 
-7.49 `.lflags'
+7.49 '.lflags'
 ==============
 
-`as' accepts this directive, for compatibility with other assemblers,
+'as' accepts this directive, for compatibility with other assemblers,
 but ignores it.
 
 
 File: as.info,  Node: Line,  Next: Linkonce,  Prev: Lflags,  Up: Pseudo Ops
 
-7.50 `.line LINE-NUMBER'
+7.50 '.line LINE-NUMBER'
 ========================
 
 Change the logical line number.  LINE-NUMBER must be an absolute
 expression.  The next line has that logical line number.  Therefore any
 other statements on the current line (after a statement separator
 character) are reported as on logical line number LINE-NUMBER - 1.  One
-day `as' will no longer support this directive: it is recognized only
+day 'as' will no longer support this directive: it is recognized only
 for compatibility with existing assembler programs.
 
-Even though this is a directive associated with the `a.out' or `b.out'
-object-code formats, `as' still recognizes it when producing COFF
-output, and treats `.line' as though it were the COFF `.ln' _if_ it is
-found outside a `.def'/`.endef' pair.
+   Even though this is a directive associated with the 'a.out' or
+'b.out' object-code formats, 'as' still recognizes it when producing
+COFF output, and treats '.line' as though it were the COFF '.ln' _if_ it
+is found outside a '.def'/'.endef' pair.
 
-   Inside a `.def', `.line' is, instead, one of the directives used by
+   Inside a '.def', '.line' is, instead, one of the directives used by
 compilers to generate auxiliary symbol information for debugging.
 
 
 File: as.info,  Node: Linkonce,  Next: List,  Prev: Line,  Up: Pseudo Ops
 
-7.51 `.linkonce [TYPE]'
+7.51 '.linkonce [TYPE]'
 =======================
 
 Mark the current section so that the linker only includes a single copy
 of it.  This may be used to include the same section in several
 different object files, but ensure that the linker will only include it
-once in the final output file.  The `.linkonce' pseudo-op must be used
-for each instance of the section.  Duplicate sections are detected
-based on the section name, so it should be unique.
+once in the final output file.  The '.linkonce' pseudo-op must be used
+for each instance of the section.  Duplicate sections are detected based
+on the section name, so it should be unique.
 
    This directive is only supported by a few object file formats; as of
 this writing, the only object file format which supports it is the
@@ -4429,128 +4345,127 @@ following strings.  For example:
      .linkonce same_size
    Not all types may be supported on all object file formats.
 
-`discard'
+'discard'
      Silently discard duplicate sections.  This is the default.
 
-`one_only'
+'one_only'
      Warn if there are duplicate sections, but still keep only one copy.
 
-`same_size'
+'same_size'
      Warn if any of the duplicates have different sizes.
 
-`same_contents'
+'same_contents'
      Warn if any of the duplicates do not have exactly the same
      contents.
 
 
 File: as.info,  Node: List,  Next: Ln,  Prev: Linkonce,  Up: Pseudo Ops
 
-7.52 `.list'
+7.52 '.list'
 ============
 
-Control (in conjunction with the `.nolist' directive) whether or not
+Control (in conjunction with the '.nolist' directive) whether or not
 assembly listings are generated.  These two directives maintain an
-internal counter (which is zero initially).   `.list' increments the
-counter, and `.nolist' decrements it.  Assembly listings are generated
+internal counter (which is zero initially).  '.list' increments the
+counter, and '.nolist' decrements it.  Assembly listings are generated
 whenever the counter is greater than zero.
 
    By default, listings are disabled.  When you enable them (with the
-`-a' command line option; *note Command-Line Options: Invoking.), the
+'-a' command line option; *note Command-Line Options: Invoking.), the
 initial value of the listing counter is one.
 
 
 File: as.info,  Node: Ln,  Next: Loc,  Prev: List,  Up: Pseudo Ops
 
-7.53 `.ln LINE-NUMBER'
+7.53 '.ln LINE-NUMBER'
 ======================
 
-`.ln' is a synonym for `.line'.
+'.ln' is a synonym for '.line'.
 
 
 File: as.info,  Node: Loc,  Next: Loc_mark_labels,  Prev: Ln,  Up: Pseudo Ops
 
-7.54 `.loc FILENO LINENO [COLUMN] [OPTIONS]'
+7.54 '.loc FILENO LINENO [COLUMN] [OPTIONS]'
 ============================================
 
-When emitting DWARF2 line number information, the `.loc' directive will
-add a row to the `.debug_line' line number matrix corresponding to the
+When emitting DWARF2 line number information, the '.loc' directive will
+add a row to the '.debug_line' line number matrix corresponding to the
 immediately following assembly instruction.  The FILENO, LINENO, and
-optional COLUMN arguments will be applied to the `.debug_line' state
+optional COLUMN arguments will be applied to the '.debug_line' state
 machine before the row is added.
 
    The OPTIONS are a sequence of the following tokens in any order:
 
-`basic_block'
-     This option will set the `basic_block' register in the
-     `.debug_line' state machine to `true'.
+'basic_block'
+     This option will set the 'basic_block' register in the
+     '.debug_line' state machine to 'true'.
 
-`prologue_end'
-     This option will set the `prologue_end' register in the
-     `.debug_line' state machine to `true'.
+'prologue_end'
+     This option will set the 'prologue_end' register in the
+     '.debug_line' state machine to 'true'.
 
-`epilogue_begin'
-     This option will set the `epilogue_begin' register in the
-     `.debug_line' state machine to `true'.
+'epilogue_begin'
+     This option will set the 'epilogue_begin' register in the
+     '.debug_line' state machine to 'true'.
 
-`is_stmt VALUE'
-     This option will set the `is_stmt' register in the `.debug_line'
-     state machine to `value', which must be either 0 or 1.
+'is_stmt VALUE'
+     This option will set the 'is_stmt' register in the '.debug_line'
+     state machine to 'value', which must be either 0 or 1.
 
-`isa VALUE'
-     This directive will set the `isa' register in the `.debug_line'
+'isa VALUE'
+     This directive will set the 'isa' register in the '.debug_line'
      state machine to VALUE, which must be an unsigned integer.
 
-`discriminator VALUE'
-     This directive will set the `discriminator' register in the
-     `.debug_line' state machine to VALUE, which must be an unsigned
+'discriminator VALUE'
+     This directive will set the 'discriminator' register in the
+     '.debug_line' state machine to VALUE, which must be an unsigned
      integer.
 
-
 
 File: as.info,  Node: Loc_mark_labels,  Next: Local,  Prev: Loc,  Up: Pseudo Ops
 
-7.55 `.loc_mark_labels ENABLE'
+7.55 '.loc_mark_labels ENABLE'
 ==============================
 
-When emitting DWARF2 line number information, the `.loc_mark_labels'
-directive makes the assembler emit an entry to the `.debug_line' line
-number matrix with the `basic_block' register in the state machine set
+When emitting DWARF2 line number information, the '.loc_mark_labels'
+directive makes the assembler emit an entry to the '.debug_line' line
+number matrix with the 'basic_block' register in the state machine set
 whenever a code label is seen.  The ENABLE argument should be either 1
 or 0, to enable or disable this function respectively.
 
 
 File: as.info,  Node: Local,  Next: Long,  Prev: Loc_mark_labels,  Up: Pseudo Ops
 
-7.56 `.local NAMES'
+7.56 '.local NAMES'
 ===================
 
 This directive, which is available for ELF targets, marks each symbol in
-the comma-separated list of `names' as a local symbol so that it will
+the comma-separated list of 'names' as a local symbol so that it will
 not be externally visible.  If the symbols do not already exist, they
 will be created.
 
-   For targets where the `.lcomm' directive (*note Lcomm::) does not
+   For targets where the '.lcomm' directive (*note Lcomm::) does not
 accept an alignment argument, which is the case for most ELF targets,
-the `.local' directive can be used in combination with `.comm' (*note
+the '.local' directive can be used in combination with '.comm' (*note
 Comm::) to define aligned local common data.
 
 
 File: as.info,  Node: Long,  Next: Macro,  Prev: Local,  Up: Pseudo Ops
 
-7.57 `.long EXPRESSIONS'
+7.57 '.long EXPRESSIONS'
 ========================
 
-`.long' is the same as `.int'.  *Note `.int': Int.
+'.long' is the same as '.int'.  *Note '.int': Int.
 
 
 File: as.info,  Node: Macro,  Next: MRI,  Prev: Long,  Up: Pseudo Ops
 
-7.58 `.macro'
+7.58 '.macro'
 =============
 
-The commands `.macro' and `.endm' allow you to define macros that
+The commands '.macro' and '.endm' allow you to define macros that
 generate assembly output.  For example, this definition specifies a
-macro `sum' that puts a sequence of numbers into memory:
+macro 'sum' that puts a sequence of numbers into memory:
 
              .macro  sum from=0, to=5
              .long   \from
@@ -4559,7 +4474,7 @@ macro `sum' that puts a sequence of numbers into memory:
              .endif
              .endm
 
-With that definition, `SUM 0,5' is equivalent to this assembly input:
+With that definition, 'SUM 0,5' is equivalent to this assembly input:
 
              .long   0
              .long   1
@@ -4568,56 +4483,55 @@ With that definition, `SUM 0,5' is equivalent to this assembly input:
              .long   4
              .long   5
 
-`.macro MACNAME'
-`.macro MACNAME MACARGS ...'
+'.macro MACNAME'
+'.macro MACNAME MACARGS ...'
      Begin the definition of a macro called MACNAME.  If your macro
      definition requires arguments, specify their names after the macro
      name, separated by commas or spaces.  You can qualify the macro
      argument to indicate whether all invocations must specify a
-     non-blank value (through `:`req''), or whether it takes all of the
-     remaining arguments (through `:`vararg'').  You can supply a
+     non-blank value (through ':'req''), or whether it takes all of the
+     remaining arguments (through ':'vararg'').  You can supply a
      default value for any macro argument by following the name with
-     `=DEFLT'.  You cannot define two macros with the same MACNAME
-     unless it has been subject to the `.purgem' directive (*note
+     '=DEFLT'.  You cannot define two macros with the same MACNAME
+     unless it has been subject to the '.purgem' directive (*note
      Purgem::) between the two definitions.  For example, these are all
-     valid `.macro' statements:
+     valid '.macro' statements:
 
-    `.macro comm'
-          Begin the definition of a macro called `comm', which takes no
+     '.macro comm'
+          Begin the definition of a macro called 'comm', which takes no
           arguments.
 
-    `.macro plus1 p, p1'
-    `.macro plus1 p p1'
+     '.macro plus1 p, p1'
+     '.macro plus1 p p1'
           Either statement begins the definition of a macro called
-          `plus1', which takes two arguments; within the macro
-          definition, write `\p' or `\p1' to evaluate the arguments.
+          'plus1', which takes two arguments; within the macro
+          definition, write '\p' or '\p1' to evaluate the arguments.
 
-    `.macro reserve_str p1=0 p2'
-          Begin the definition of a macro called `reserve_str', with two
+     '.macro reserve_str p1=0 p2'
+          Begin the definition of a macro called 'reserve_str', with two
           arguments.  The first argument has a default value, but not
           the second.  After the definition is complete, you can call
-          the macro either as `reserve_str A,B' (with `\p1' evaluating
-          to A and `\p2' evaluating to B), or as `reserve_str ,B' (with
-          `\p1' evaluating as the default, in this case `0', and `\p2'
+          the macro either as 'reserve_str A,B' (with '\p1' evaluating
+          to A and '\p2' evaluating to B), or as 'reserve_str ,B' (with
+          '\p1' evaluating as the default, in this case '0', and '\p2'
           evaluating to B).
 
-    `.macro m p1:req, p2=0, p3:vararg'
-          Begin the definition of a macro called `m', with at least
+     '.macro m p1:req, p2=0, p3:vararg'
+          Begin the definition of a macro called 'm', with at least
           three arguments.  The first argument must always have a value
           specified, but not the second, which instead has a default
-          value. The third formal will get assigned all remaining
+          value.  The third formal will get assigned all remaining
           arguments specified at invocation time.
 
           When you call a macro, you can specify the argument values
-          either by position, or by keyword.  For example, `sum 9,17'
-          is equivalent to `sum to=17, from=9'.
-
+          either by position, or by keyword.  For example, 'sum 9,17' is
+          equivalent to 'sum to=17, from=9'.
 
-     Note that since each of the MACARGS can be an identifier exactly
-     as any other one permitted by the target architecture, there may be
+     Note that since each of the MACARGS can be an identifier exactly as
+     any other one permitted by the target architecture, there may be
      occasional problems if the target hand-crafts special meanings to
      certain characters when they occur in a special position.  For
-     example, if the colon (`:') is generally permitted to be part of a
+     example, if the colon (':') is generally permitted to be part of a
      symbol name, but the architecture specific code special-cases it
      when occurring as the final character of a symbol (to denote a
      label), then the macro parameter replacement code will have no way
@@ -4630,12 +4544,12 @@ With that definition, `SUM 0,5' is equivalent to this assembly input:
           \l:
           	.endm
 
-     might not work as expected.  Invoking `label foo' might not create
-     a label called `foo' but instead just insert the text `\l:' into
+     might not work as expected.  Invoking 'label foo' might not create
+     a label called 'foo' but instead just insert the text '\l:' into
      the assembler source, probably generating an error about an
      unrecognised identifier.
 
-     Similarly problems might occur with the period character (`.')
+     Similarly problems might occur with the period character ('.')
      which is often allowed inside opcode names (and hence identifier
      names).  So for example constructing a macro to build an opcode
      from a base name and a length specifier like this:
@@ -4644,13 +4558,13 @@ With that definition, `SUM 0,5' is equivalent to this assembly input:
                   \base.\length
           	.endm
 
-     and invoking it as `opcode store l' will not create a `store.l'
+     and invoking it as 'opcode store l' will not create a 'store.l'
      instruction but instead generate some kind of error as the
-     assembler tries to interpret the text `\base.\length'.
+     assembler tries to interpret the text '\base.\length'.
 
      There are several possible ways around this problem:
 
-    `Insert white space'
+     'Insert white space'
           If it is possible to use white space characters then this is
           the simplest solution.  eg:
 
@@ -4658,17 +4572,17 @@ With that definition, `SUM 0,5' is equivalent to this assembly input:
                \l :
                	.endm
 
-    `Use `\()''
-          The string `\()' can be used to separate the end of a macro
+     'Use '\()''
+          The string '\()' can be used to separate the end of a macro
           argument from the following text.  eg:
 
                	.macro opcode base length
                        \base\().\length
                	.endm
 
-    `Use the alternate macro syntax mode'
+     'Use the alternate macro syntax mode'
           In the alternative macro syntax mode the ampersand character
-          (`&') can be used as a separator.  eg:
+          ('&') can be used as a separator.  eg:
 
                	.altmacro
                	.macro label l
@@ -4676,40 +4590,40 @@ With that definition, `SUM 0,5' is equivalent to this assembly input:
                	.endm
 
      Note: this problem of correctly identifying string parameters to
-     pseudo ops also applies to the identifiers used in `.irp' (*note
-     Irp::) and `.irpc' (*note Irpc::) as well.
+     pseudo ops also applies to the identifiers used in '.irp' (*note
+     Irp::) and '.irpc' (*note Irpc::) as well.
 
-`.endm'
+'.endm'
      Mark the end of a macro definition.
 
-`.exitm'
+'.exitm'
      Exit early from the current macro definition.
 
-`\@'
-     `as' maintains a counter of how many macros it has executed in
-     this pseudo-variable; you can copy that number to your output with
-     `\@', but _only within a macro definition_.
+'\@'
+     'as' maintains a counter of how many macros it has executed in this
+     pseudo-variable; you can copy that number to your output with '\@',
+     but _only within a macro definition_.
 
-`LOCAL NAME [ , ... ]'
-     _Warning: `LOCAL' is only available if you select "alternate macro
-     syntax" with `--alternate' or `.altmacro'._ *Note `.altmacro':
+'LOCAL NAME [ , ... ]'
+     _Warning: 'LOCAL' is only available if you select "alternate macro
+     syntax" with '--alternate' or '.altmacro'._  *Note '.altmacro':
      Altmacro.
 
 
 File: as.info,  Node: MRI,  Next: Noaltmacro,  Prev: Macro,  Up: Pseudo Ops
 
-7.59 `.mri VAL'
+7.59 '.mri VAL'
 ===============
 
-If VAL is non-zero, this tells `as' to enter MRI mode.  If VAL is zero,
-this tells `as' to exit MRI mode.  This change affects code assembled
-until the next `.mri' directive, or until the end of the file.  *Note
+If VAL is non-zero, this tells 'as' to enter MRI mode.  If VAL is zero,
+this tells 'as' to exit MRI mode.  This change affects code assembled
+until the next '.mri' directive, or until the end of the file.  *Note
 MRI mode: M.
 
 
 File: as.info,  Node: Noaltmacro,  Next: Nolist,  Prev: MRI,  Up: Pseudo Ops
 
-7.60 `.noaltmacro'
+7.60 '.noaltmacro'
 ==================
 
 Disable alternate macro mode.  *Note Altmacro::.
@@ -4717,19 +4631,19 @@ Disable alternate macro mode.  *Note Altmacro::.
 
 File: as.info,  Node: Nolist,  Next: Octa,  Prev: Noaltmacro,  Up: Pseudo Ops
 
-7.61 `.nolist'
+7.61 '.nolist'
 ==============
 
-Control (in conjunction with the `.list' directive) whether or not
+Control (in conjunction with the '.list' directive) whether or not
 assembly listings are generated.  These two directives maintain an
-internal counter (which is zero initially).   `.list' increments the
-counter, and `.nolist' decrements it.  Assembly listings are generated
+internal counter (which is zero initially).  '.list' increments the
+counter, and '.nolist' decrements it.  Assembly listings are generated
 whenever the counter is greater than zero.
 
 
 File: as.info,  Node: Octa,  Next: Offset,  Prev: Nolist,  Up: Pseudo Ops
 
-7.62 `.octa BIGNUMS'
+7.62 '.octa BIGNUMS'
 ====================
 
 This directive expects zero or more bignums, separated by commas.  For
@@ -4741,32 +4655,31 @@ hence _octa_-word for 16 bytes.
 
 File: as.info,  Node: Offset,  Next: Org,  Prev: Octa,  Up: Pseudo Ops
 
-7.63 `.offset LOC'
+7.63 '.offset LOC'
 ==================
 
-Set the location counter to LOC in the absolute section.  LOC must be
-an absolute expression.  This directive may be useful for defining
-symbols with absolute values.  Do not confuse it with the `.org'
-directive.
+Set the location counter to LOC in the absolute section.  LOC must be an
+absolute expression.  This directive may be useful for defining symbols
+with absolute values.  Do not confuse it with the '.org' directive.
 
 
 File: as.info,  Node: Org,  Next: P2align,  Prev: Offset,  Up: Pseudo Ops
 
-7.64 `.org NEW-LC , FILL'
+7.64 '.org NEW-LC , FILL'
 =========================
 
 Advance the location counter of the current section to NEW-LC.  NEW-LC
 is either an absolute expression or an expression with the same section
-as the current subsection.  That is, you can't use `.org' to cross
-sections: if NEW-LC has the wrong section, the `.org' directive is
+as the current subsection.  That is, you can't use '.org' to cross
+sections: if NEW-LC has the wrong section, the '.org' directive is
 ignored.  To be compatible with former assemblers, if the section of
-NEW-LC is absolute, `as' issues a warning, then pretends the section of
+NEW-LC is absolute, 'as' issues a warning, then pretends the section of
 NEW-LC is the same as the current subsection.
 
-   `.org' may only increase the location counter, or leave it
-unchanged; you cannot use `.org' to move the location counter backwards.
+   '.org' may only increase the location counter, or leave it unchanged;
+you cannot use '.org' to move the location counter backwards.
 
-   Because `as' tries to assemble programs in one pass, NEW-LC may not
+   Because 'as' tries to assemble programs in one pass, NEW-LC may not
 be undefined.  If you really detest this restriction we eagerly await a
 chance to share your improved assembler.
 
@@ -4781,15 +4694,15 @@ expression.  If the comma and FILL are omitted, FILL defaults to zero.
 
 File: as.info,  Node: P2align,  Next: PopSection,  Prev: Org,  Up: Pseudo Ops
 
-7.65 `.p2align[wl] ABS-EXPR, ABS-EXPR, ABS-EXPR'
+7.65 '.p2align[wl] ABS-EXPR, ABS-EXPR, ABS-EXPR'
 ================================================
 
 Pad the location counter (in the current subsection) to a particular
 storage boundary.  The first expression (which must be absolute) is the
 number of low-order zero bits the location counter must have after
-advancement.  For example `.p2align 3' advances the location counter
-until it a multiple of 8.  If the location counter is already a
-multiple of 8, no change is needed.
+advancement.  For example '.p2align 3' advances the location counter
+until it a multiple of 8.  If the location counter is already a multiple
+of 8, no change is needed.
 
    The second expression (also absolute) gives the fill value to be
 stored in the padding bytes.  It (and the comma) may be omitted.  If it
@@ -4799,51 +4712,51 @@ is omitted, the space is filled with no-op instructions.
 
    The third expression is also absolute, and is also optional.  If it
 is present, it is the maximum number of bytes that should be skipped by
-this alignment directive.  If doing the alignment would require
-skipping more bytes than the specified maximum, then the alignment is
-not done at all.  You can omit the fill value (the second argument)
-entirely by simply using two commas after the required alignment; this
-can be useful if you want the alignment to be filled with no-op
-instructions when appropriate.
-
-   The `.p2alignw' and `.p2alignl' directives are variants of the
-`.p2align' directive.  The `.p2alignw' directive treats the fill
-pattern as a two byte word value.  The `.p2alignl' directives treats the
-fill pattern as a four byte longword value.  For example, `.p2alignw
+this alignment directive.  If doing the alignment would require skipping
+more bytes than the specified maximum, then the alignment is not done at
+all.  You can omit the fill value (the second argument) entirely by
+simply using two commas after the required alignment; this can be useful
+if you want the alignment to be filled with no-op instructions when
+appropriate.
+
+   The '.p2alignw' and '.p2alignl' directives are variants of the
+'.p2align' directive.  The '.p2alignw' directive treats the fill pattern
+as a two byte word value.  The '.p2alignl' directives treats the fill
+pattern as a four byte longword value.  For example, '.p2alignw
 2,0x368d' will align to a multiple of 4.  If it skips two bytes, they
 will be filled in with the value 0x368d (the exact placement of the
-bytes depends upon the endianness of the processor).  If it skips 1 or
-3 bytes, the fill value is undefined.
+bytes depends upon the endianness of the processor).  If it skips 1 or 3
+bytes, the fill value is undefined.
 
 
 File: as.info,  Node: PopSection,  Next: Previous,  Prev: P2align,  Up: Pseudo Ops
 
-7.66 `.popsection'
+7.66 '.popsection'
 ==================
 
 This is one of the ELF section stack manipulation directives.  The
-others are `.section' (*note Section::), `.subsection' (*note
-SubSection::), `.pushsection' (*note PushSection::), and `.previous'
+others are '.section' (*note Section::), '.subsection' (*note
+SubSection::), '.pushsection' (*note PushSection::), and '.previous'
 (*note Previous::).
 
-   This directive replaces the current section (and subsection) with
-the top section (and subsection) on the section stack.  This section is
+   This directive replaces the current section (and subsection) with the
+top section (and subsection) on the section stack.  This section is
 popped off the stack.
 
 
 File: as.info,  Node: Previous,  Next: Print,  Prev: PopSection,  Up: Pseudo Ops
 
-7.67 `.previous'
+7.67 '.previous'
 ================
 
 This is one of the ELF section stack manipulation directives.  The
-others are `.section' (*note Section::), `.subsection' (*note
-SubSection::), `.pushsection' (*note PushSection::), and `.popsection'
+others are '.section' (*note Section::), '.subsection' (*note
+SubSection::), '.pushsection' (*note PushSection::), and '.popsection'
 (*note PopSection::).
 
    This directive swaps the current section (and subsection) with most
 recently referenced section/subsection pair prior to this one.  Multiple
-`.previous' directives in a row will flip between two sections (and
+'.previous' directives in a row will flip between two sections (and
 their subsections).  For example:
 
      .section A
@@ -4855,7 +4768,7 @@ their subsections).  For example:
       .word 0x9abc
 
    Will place 0x1234 and 0x9abc into subsection 1 and 0x5678 into
-subsection 2 of section A.  Whilst:
+subsection 2 of section A. Whilst:
 
      .section A
      .subsection 1
@@ -4872,8 +4785,8 @@ subsection 2 of section A.  Whilst:
        # Now in section B subsection 0
        .word 0xdef0
 
-   Will place 0x1234 into section A, 0x5678 and 0xdef0 into subsection
-0 of section B and 0x9abc into subsection 1 of section B.
+   Will place 0x1234 into section A, 0x5678 and 0xdef0 into subsection 0
+of section B and 0x9abc into subsection 1 of section B.
 
    In terms of the section stack, this directive swaps the current
 section with the top section on the section stack.
@@ -4881,51 +4794,51 @@ section with the top section on the section stack.
 
 File: as.info,  Node: Print,  Next: Protected,  Prev: Previous,  Up: Pseudo Ops
 
-7.68 `.print STRING'
+7.68 '.print STRING'
 ====================
 
-`as' will print STRING on the standard output during assembly.  You
-must put STRING in double quotes.
+'as' will print STRING on the standard output during assembly.  You must
+put STRING in double quotes.
 
 
 File: as.info,  Node: Protected,  Next: Psize,  Prev: Print,  Up: Pseudo Ops
 
-7.69 `.protected NAMES'
+7.69 '.protected NAMES'
 =======================
 
 This is one of the ELF visibility directives.  The other two are
-`.hidden' (*note Hidden::) and `.internal' (*note Internal::).
+'.hidden' (*note Hidden::) and '.internal' (*note Internal::).
 
    This directive overrides the named symbols default visibility (which
-is set by their binding: local, global or weak).  The directive sets
-the visibility to `protected' which means that any references to the
-symbols from within the components that defines them must be resolved
-to the definition in that component, even if a definition in another
-component would normally preempt this.
+is set by their binding: local, global or weak).  The directive sets the
+visibility to 'protected' which means that any references to the symbols
+from within the components that defines them must be resolved to the
+definition in that component, even if a definition in another component
+would normally preempt this.
 
 
 File: as.info,  Node: Psize,  Next: Purgem,  Prev: Protected,  Up: Pseudo Ops
 
-7.70 `.psize LINES , COLUMNS'
+7.70 '.psize LINES , COLUMNS'
 =============================
 
 Use this directive to declare the number of lines--and, optionally, the
 number of columns--to use for each page, when generating listings.
 
-   If you do not use `.psize', listings use a default line-count of 60.
+   If you do not use '.psize', listings use a default line-count of 60.
 You may omit the comma and COLUMNS specification; the default width is
 200 columns.
 
-   `as' generates formfeeds whenever the specified number of lines is
-exceeded (or whenever you explicitly request one, using `.eject').
+   'as' generates formfeeds whenever the specified number of lines is
+exceeded (or whenever you explicitly request one, using '.eject').
 
-   If you specify LINES as `0', no formfeeds are generated save those
-explicitly specified with `.eject'.
+   If you specify LINES as '0', no formfeeds are generated save those
+explicitly specified with '.eject'.
 
 
 File: as.info,  Node: Purgem,  Next: PushSection,  Prev: Psize,  Up: Pseudo Ops
 
-7.71 `.purgem NAME'
+7.71 '.purgem NAME'
 ===================
 
 Undefine the macro NAME, so that later uses of the string will not be
@@ -4934,30 +4847,30 @@ expanded.  *Note Macro::.
 
 File: as.info,  Node: PushSection,  Next: Quad,  Prev: Purgem,  Up: Pseudo Ops
 
-7.72 `.pushsection NAME [, SUBSECTION] [, "FLAGS"[, @TYPE[,ARGUMENTS]]]'
+7.72 '.pushsection NAME [, SUBSECTION] [, "FLAGS"[, @TYPE[,ARGUMENTS]]]'
 ========================================================================
 
 This is one of the ELF section stack manipulation directives.  The
-others are `.section' (*note Section::), `.subsection' (*note
-SubSection::), `.popsection' (*note PopSection::), and `.previous'
+others are '.section' (*note Section::), '.subsection' (*note
+SubSection::), '.popsection' (*note PopSection::), and '.previous'
 (*note Previous::).
 
    This directive pushes the current section (and subsection) onto the
 top of the section stack, and then replaces the current section and
-subsection with `name' and `subsection'. The optional `flags', `type'
-and `arguments' are treated the same as in the `.section' (*note
+subsection with 'name' and 'subsection'.  The optional 'flags', 'type'
+and 'arguments' are treated the same as in the '.section' (*note
 Section::) directive.
 
 
 File: as.info,  Node: Quad,  Next: Reloc,  Prev: PushSection,  Up: Pseudo Ops
 
-7.73 `.quad BIGNUMS'
+7.73 '.quad BIGNUMS'
 ====================
 
-`.quad' expects zero or more bignums, separated by commas.  For each
-bignum, it emits an 8-byte integer.  If the bignum won't fit in 8
-bytes, it prints a warning message; and just takes the lowest order 8
-bytes of the bignum.  
+'.quad' expects zero or more bignums, separated by commas.  For each
+bignum, it emits an 8-byte integer.  If the bignum won't fit in 8 bytes,
+it prints a warning message; and just takes the lowest order 8 bytes of
+the bignum.
 
    The term "quad" comes from contexts in which a "word" is two bytes;
 hence _quad_-word for 8 bytes.
@@ -4965,7 +4878,7 @@ hence _quad_-word for 8 bytes.
 
 File: as.info,  Node: Reloc,  Next: Rept,  Prev: Quad,  Up: Pseudo Ops
 
-7.74 `.reloc OFFSET, RELOC_NAME[, EXPRESSION]'
+7.74 '.reloc OFFSET, RELOC_NAME[, EXPRESSION]'
 ==============================================
 
 Generate a relocation at OFFSET of type RELOC_NAME with value
@@ -4981,11 +4894,11 @@ support addends stored in the section.
 
 File: as.info,  Node: Rept,  Next: Sbttl,  Prev: Reloc,  Up: Pseudo Ops
 
-7.75 `.rept COUNT'
+7.75 '.rept COUNT'
 ==================
 
-Repeat the sequence of lines between the `.rept' directive and the next
-`.endr' directive COUNT times.
+Repeat the sequence of lines between the '.rept' directive and the next
+'.endr' directive COUNT times.
 
    For example, assembling
 
@@ -5002,7 +4915,7 @@ Repeat the sequence of lines between the `.rept' directive and the next
 
 File: as.info,  Node: Sbttl,  Next: Scl,  Prev: Rept,  Up: Pseudo Ops
 
-7.76 `.sbttl "SUBHEADING"'
+7.76 '.sbttl "SUBHEADING"'
 ==========================
 
 Use SUBHEADING as the title (third line, immediately after the title
@@ -5014,31 +4927,31 @@ if it appears within ten lines of the top of a page.
 
 File: as.info,  Node: Scl,  Next: Section,  Prev: Sbttl,  Up: Pseudo Ops
 
-7.77 `.scl CLASS'
+7.77 '.scl CLASS'
 =================
 
 Set the storage-class value for a symbol.  This directive may only be
-used inside a `.def'/`.endef' pair.  Storage class may flag whether a
+used inside a '.def'/'.endef' pair.  Storage class may flag whether a
 symbol is static or external, or it may record further symbolic
 debugging information.
 
 
 File: as.info,  Node: Section,  Next: Set,  Prev: Scl,  Up: Pseudo Ops
 
-7.78 `.section NAME'
+7.78 '.section NAME'
 ====================
 
-Use the `.section' directive to assemble the following code into a
+Use the '.section' directive to assemble the following code into a
 section named NAME.
 
    This directive is only supported for targets that actually support
-arbitrarily named sections; on `a.out' targets, for example, it is not
-accepted, even with a standard `a.out' section name.
+arbitrarily named sections; on 'a.out' targets, for example, it is not
+accepted, even with a standard 'a.out' section name.
 
 COFF Version
 ------------
 
-   For COFF targets, the `.section' directive is used in one of the
+For COFF targets, the '.section' directive is used in one of the
 following ways:
 
      .section NAME[, "FLAGS"]
@@ -5048,64 +4961,54 @@ following ways:
 the section.  Each flag is a single character.  The following flags are
 recognized:
 
-`b'
+'b'
      bss section (uninitialized data)
-
-`n'
+'n'
      section is not loaded
-
-`w'
+'w'
      writable section
-
-`d'
+'d'
      data section
-
-`e'
+'e'
      exclude section from linking
-
-`r'
+'r'
      read-only section
-
-`x'
+'x'
      executable section
-
-`s'
+'s'
      shared section (meaningful for PE targets)
-
-`a'
+'a'
      ignored.  (For compatibility with the ELF version)
-
-`y'
+'y'
      section is not readable (meaningful for PE targets)
-
-`0-9'
+'0-9'
      single-digit power-of-two section alignment (GNU extension)
 
    If no flags are specified, the default flags depend upon the section
 name.  If the section name is not recognized, the default will be for
-the section to be loaded and writable.  Note the `n' and `w' flags
+the section to be loaded and writable.  Note the 'n' and 'w' flags
 remove attributes from the section, rather than adding them, so if they
 are used on their own it will be as if no flags had been specified at
 all.
 
-   If the optional argument to the `.section' directive is not quoted,
+   If the optional argument to the '.section' directive is not quoted,
 it is taken as a subsection number (*note Sub-Sections::).
 
 ELF Version
 -----------
 
-   This is one of the ELF section stack manipulation directives.  The
-others are `.subsection' (*note SubSection::), `.pushsection' (*note
-PushSection::), `.popsection' (*note PopSection::), and `.previous'
+This is one of the ELF section stack manipulation directives.  The
+others are '.subsection' (*note SubSection::), '.pushsection' (*note
+PushSection::), '.popsection' (*note PopSection::), and '.previous'
 (*note Previous::).
 
-   For ELF targets, the `.section' directive is used like this:
+   For ELF targets, the '.section' directive is used like this:
 
      .section NAME [, "FLAGS"[, @TYPE[,FLAG_SPECIFIC_ARGUMENTS]]]
 
-   If the `--sectname-subst' command-line option is provided, the NAME
-argument may contain a substitution sequence. Only `%S' is supported at
-the moment, and substitutes the current section name. For example:
+   If the '--sectname-subst' command-line option is provided, the NAME
+argument may contain a substitution sequence.  Only '%S' is supported at
+the moment, and substitutes the current section name.  For example:
 
      .macro exception_code
      .section %S.exception
@@ -5123,115 +5026,98 @@ the moment, and substitutes the current section name. For example:
      exception_code
      [...]
 
-   The two `exception_code' invocations above would create the
-`.text.exception' and `.init.exception' sections respectively.  This is
-useful e.g. to discriminate between anciliary sections that are tied to
+   The two 'exception_code' invocations above would create the
+'.text.exception' and '.init.exception' sections respectively.  This is
+useful e.g.  to discriminate between anciliary sections that are tied to
 setup code to be discarded after use from anciliary sections that need
-to stay resident without having to define multiple `exception_code'
+to stay resident without having to define multiple 'exception_code'
 macros just for that purpose.
 
    The optional FLAGS argument is a quoted string which may contain any
 combination of the following characters:
 
-`a'
+'a'
      section is allocatable
-
-`e'
+'e'
      section is excluded from executable and shared library.
-
-`w'
+'w'
      section is writable
-
-`x'
+'x'
      section is executable
-
-`M'
+'M'
      section is mergeable
-
-`S'
+'S'
      section contains zero terminated strings
-
-`G'
+'G'
      section is a member of a section group
-
-`T'
+'T'
      section is used for thread-local-storage
-
-`?'
+'?'
      section is a member of the previously-current section's group, if
      any
-
-``<number>''
+'<number>'
      a numeric value indicating the bits to be set in the ELF section
      header's flags field.  Note - if one or more of the alphabetic
      characters described above is also included in the flags field,
      their bit values will be ORed into the resulting value.
-
-``<target specific>''
+'<target specific>'
      some targets extend this list with their own flag characters
 
    Note - once a section's flags have been set they cannot be changed.
 There are a few exceptions to this rule however.  Processor and
 application specific flags can be added to an already defined section.
-The `.interp', `.strtab' and `.symtab' sections can have the allocate
-flag (`a') set after they are initially defined, and the
-`.note-GNU-stack' section may have the executable (`x') flag added.
+The '.interp', '.strtab' and '.symtab' sections can have the allocate
+flag ('a') set after they are initially defined, and the
+'.note-GNU-stack' section may have the executable ('x') flag added.
 
    The optional TYPE argument may contain one of the following
 constants:
 
-`@progbits'
+'@progbits'
      section contains data
-
-`@nobits'
+'@nobits'
      section does not contain data (i.e., section only occupies space)
-
-`@note'
+'@note'
      section contains data which is used by things other than the
      program
-
-`@init_array'
+'@init_array'
      section contains an array of pointers to init functions
-
-`@fini_array'
+'@fini_array'
      section contains an array of pointers to finish functions
-
-`@preinit_array'
+'@preinit_array'
      section contains an array of pointers to pre-init functions
-
-`@`<number>''
+'@<number>'
      a numeric value to be set as the ELF section header's type field.
-
-`@`<target specific>''
+'@<target specific>'
      some targets extend this list with their own types
 
    Many targets only support the first three section types.  The type
 may be enclosed in double quotes if necessary.
 
-   Note on targets where the `@' character is the start of a comment (eg
+   Note on targets where the '@' character is the start of a comment (eg
 ARM) then another character is used instead.  For example the ARM port
-uses the `%' character.
+uses the '%' character.
 
-   Note - some sections, eg `.text' and `.data' are considered to be
+   Note - some sections, eg '.text' and '.data' are considered to be
 special and have fixed types.  Any attempt to declare them with a
 different type will generate an error from the assembler.
 
-   If FLAGS contains the `M' symbol then the TYPE argument must be
+   If FLAGS contains the 'M' symbol then the TYPE argument must be
 specified as well as an extra argument--ENTSIZE--like this:
 
      .section NAME , "FLAGS"M, @TYPE, ENTSIZE
 
-   Sections with the `M' flag but not `S' flag must contain fixed size
-constants, each ENTSIZE octets long. Sections with both `M' and `S'
+   Sections with the 'M' flag but not 'S' flag must contain fixed size
+constants, each ENTSIZE octets long.  Sections with both 'M' and 'S'
 must contain zero terminated strings where each character is ENTSIZE
-bytes long. The linker may remove duplicates within sections with the
-same name, same entity size and same flags.  ENTSIZE must be an
-absolute expression.  For sections with both `M' and `S', a string
-which is a suffix of a larger string is considered a duplicate.  Thus
-`"def"' will be merged with `"abcdef"';  A reference to the first
-`"def"' will be changed to a reference to `"abcdef"+3'.
-
-   If FLAGS contains the `G' symbol then the TYPE argument must be
+bytes long.  The linker may remove duplicates within sections with the
+same name, same entity size and same flags.  ENTSIZE must be an absolute
+expression.  For sections with both 'M' and 'S', a string which is a
+suffix of a larger string is considered a duplicate.  Thus '"def"' will
+be merged with '"abcdef"'; A reference to the first '"def"' will be
+changed to a reference to '"abcdef"+3'.
+
+   If FLAGS contains the 'G' symbol then the TYPE argument must be
 present along with an additional field like this:
 
      .section NAME , "FLAGS"G, @TYPE, GROUPNAME[, LINKAGE]
@@ -5240,10 +5126,9 @@ present along with an additional field like this:
 this particular section belongs.  The optional linkage field can
 contain:
 
-`comdat'
+'comdat'
      indicates that only one copy of this section should be retained
-
-`.gnu.linkonce'
+'.gnu.linkonce'
      an alias for comdat
 
    Note: if both the M and G flags are present then the fields for the
@@ -5251,19 +5136,19 @@ Merge flag should come first, like this:
 
      .section NAME , "FLAGS"MG, @TYPE, ENTSIZE, GROUPNAME[, LINKAGE]
 
-   If FLAGS contains the `?' symbol then it may not also contain the
-`G' symbol and the GROUPNAME or LINKAGE fields should not be present.
-Instead, `?' says to consider the section that's current before this
-directive.  If that section used `G', then the new section will use `G'
+   If FLAGS contains the '?' symbol then it may not also contain the 'G'
+symbol and the GROUPNAME or LINKAGE fields should not be present.
+Instead, '?' says to consider the section that's current before this
+directive.  If that section used 'G', then the new section will use 'G'
 with those same GROUPNAME and LINKAGE fields implicitly.  If not, then
-the `?' symbol has no effect.
+the '?' symbol has no effect.
 
    If no flags are specified, the default flags depend upon the section
 name.  If the section name is not recognized, the default will be for
-the section to have none of the above flags: it will not be allocated
-in memory, nor writable, nor executable.  The section will contain data.
+the section to have none of the above flags: it will not be allocated in
+memory, nor writable, nor executable.  The section will contain data.
 
-   For ELF targets, the assembler supports another type of `.section'
+   For ELF targets, the assembler supports another type of '.section'
 directive for compatibility with the Solaris assembler:
 
      .section "NAME"[, FLAGS...]
@@ -5271,78 +5156,74 @@ directive for compatibility with the Solaris assembler:
    Note that the section name is quoted.  There may be a sequence of
 comma separated flags:
 
-`#alloc'
+'#alloc'
      section is allocatable
-
-`#write'
+'#write'
      section is writable
-
-`#execinstr'
+'#execinstr'
      section is executable
-
-`#exclude'
+'#exclude'
      section is excluded from executable and shared library.
-
-`#tls'
+'#tls'
      section is used for thread local storage
 
    This directive replaces the current section and subsection.  See the
-contents of the gas testsuite directory `gas/testsuite/gas/elf' for
-some examples of how this directive and the other section stack
-directives work.
+contents of the gas testsuite directory 'gas/testsuite/gas/elf' for some
+examples of how this directive and the other section stack directives
+work.
 
 
 File: as.info,  Node: Set,  Next: Short,  Prev: Section,  Up: Pseudo Ops
 
-7.79 `.set SYMBOL, EXPRESSION'
+7.79 '.set SYMBOL, EXPRESSION'
 ==============================
 
 Set the value of SYMBOL to EXPRESSION.  This changes SYMBOL's value and
 type to conform to EXPRESSION.  If SYMBOL was flagged as external, it
 remains flagged (*note Symbol Attributes::).
 
-   You may `.set' a symbol many times in the same assembly provided
-that the values given to the symbol are constants.  Values that are
-based on expressions involving other symbols are allowed, but some
-targets may restrict this to only being done once per assembly.  This
-is because those targets do not set the addresses of symbols at
-assembly time, but rather delay the assignment until a final link is
-performed.  This allows the linker a chance to change the code in the
-files, changing the location of, and the relative distance between,
-various different symbols.
+   You may '.set' a symbol many times in the same assembly provided that
+the values given to the symbol are constants.  Values that are based on
+expressions involving other symbols are allowed, but some targets may
+restrict this to only being done once per assembly.  This is because
+those targets do not set the addresses of symbols at assembly time, but
+rather delay the assignment until a final link is performed.  This
+allows the linker a chance to change the code in the files, changing the
+location of, and the relative distance between, various different
+symbols.
 
-   If you `.set' a global symbol, the value stored in the object file
-is the last value stored into it.
+   If you '.set' a global symbol, the value stored in the object file is
+the last value stored into it.
 
-   On Z80 `set' is a real instruction, use `SYMBOL defl EXPRESSION'
+   On Z80 'set' is a real instruction, use 'SYMBOL defl EXPRESSION'
 instead.
 
 
 File: as.info,  Node: Short,  Next: Single,  Prev: Set,  Up: Pseudo Ops
 
-7.80 `.short EXPRESSIONS'
+7.80 '.short EXPRESSIONS'
 =========================
 
-`.short' is normally the same as `.word'.  *Note `.word': Word.
+'.short' is normally the same as '.word'.  *Note '.word': Word.
 
-   In some configurations, however, `.short' and `.word' generate
+   In some configurations, however, '.short' and '.word' generate
 numbers of different lengths.  *Note Machine Dependencies::.
 
 
 File: as.info,  Node: Single,  Next: Size,  Prev: Short,  Up: Pseudo Ops
 
-7.81 `.single FLONUMS'
+7.81 '.single FLONUMS'
 ======================
 
 This directive assembles zero or more flonums, separated by commas.  It
-has the same effect as `.float'.  The exact kind of floating point
-numbers emitted depends on how `as' is configured.  *Note Machine
+has the same effect as '.float'.  The exact kind of floating point
+numbers emitted depends on how 'as' is configured.  *Note Machine
 Dependencies::.
 
 
 File: as.info,  Node: Size,  Next: Skip,  Prev: Single,  Up: Pseudo Ops
 
-7.82 `.size'
+7.82 '.size'
 ============
 
 This directive is used to set the size associated with a symbol.
@@ -5350,80 +5231,80 @@ This directive is used to set the size associated with a symbol.
 COFF Version
 ------------
 
-   For COFF targets, the `.size' directive is only permitted inside
-`.def'/`.endef' pairs.  It is used like this:
+For COFF targets, the '.size' directive is only permitted inside
+'.def'/'.endef' pairs.  It is used like this:
 
      .size EXPRESSION
 
 ELF Version
 -----------
 
-   For ELF targets, the `.size' directive is used like this:
+For ELF targets, the '.size' directive is used like this:
 
      .size NAME , EXPRESSION
 
-   This directive sets the size associated with a symbol NAME.  The
-size in bytes is computed from EXPRESSION which can make use of label
+   This directive sets the size associated with a symbol NAME.  The size
+in bytes is computed from EXPRESSION which can make use of label
 arithmetic.  This directive is typically used to set the size of
 function symbols.
 
 
 File: as.info,  Node: Skip,  Next: Sleb128,  Prev: Size,  Up: Pseudo Ops
 
-7.83 `.skip SIZE , FILL'
+7.83 '.skip SIZE , FILL'
 ========================
 
-This directive emits SIZE bytes, each of value FILL.  Both SIZE and
-FILL are absolute expressions.  If the comma and FILL are omitted, FILL
-is assumed to be zero.  This is the same as `.space'.
+This directive emits SIZE bytes, each of value FILL.  Both SIZE and FILL
+are absolute expressions.  If the comma and FILL are omitted, FILL is
+assumed to be zero.  This is the same as '.space'.
 
 
 File: as.info,  Node: Sleb128,  Next: Space,  Prev: Skip,  Up: Pseudo Ops
 
-7.84 `.sleb128 EXPRESSIONS'
+7.84 '.sleb128 EXPRESSIONS'
 ===========================
 
 SLEB128 stands for "signed little endian base 128."  This is a compact,
 variable length representation of numbers used by the DWARF symbolic
-debugging format.  *Note `.uleb128': Uleb128.
+debugging format.  *Note '.uleb128': Uleb128.
 
 
 File: as.info,  Node: Space,  Next: Stab,  Prev: Sleb128,  Up: Pseudo Ops
 
-7.85 `.space SIZE , FILL'
+7.85 '.space SIZE , FILL'
 =========================
 
-This directive emits SIZE bytes, each of value FILL.  Both SIZE and
-FILL are absolute expressions.  If the comma and FILL are omitted, FILL
-is assumed to be zero.  This is the same as `.skip'.
+This directive emits SIZE bytes, each of value FILL.  Both SIZE and FILL
+are absolute expressions.  If the comma and FILL are omitted, FILL is
+assumed to be zero.  This is the same as '.skip'.
 
-     _Warning:_ `.space' has a completely different meaning for HPPA
-     targets; use `.block' as a substitute.  See `HP9000 Series 800
+     _Warning:_ '.space' has a completely different meaning for HPPA
+     targets; use '.block' as a substitute.  See 'HP9000 Series 800
      Assembly Language Reference Manual' (HP 92432-90001) for the
-     meaning of the `.space' directive.  *Note HPPA Assembler
+     meaning of the '.space' directive.  *Note HPPA Assembler
      Directives: HPPA Directives, for a summary.
 
 
 File: as.info,  Node: Stab,  Next: String,  Prev: Space,  Up: Pseudo Ops
 
-7.86 `.stabd, .stabn, .stabs'
+7.86 '.stabd, .stabn, .stabs'
 =============================
 
-There are three directives that begin `.stab'.  All emit symbols (*note
+There are three directives that begin '.stab'.  All emit symbols (*note
 Symbols::), for use by symbolic debuggers.  The symbols are not entered
-in the `as' hash table: they cannot be referenced elsewhere in the
+in the 'as' hash table: they cannot be referenced elsewhere in the
 source file.  Up to five fields are required:
 
 STRING
      This is the symbol's name.  It may contain any character except
-     `\000', so is more general than ordinary symbol names.  Some
+     '\000', so is more general than ordinary symbol names.  Some
      debuggers used to code arbitrarily complex structures into symbol
      names using this field.
 
 TYPE
-     An absolute expression.  The symbol's type is set to the low 8
-     bits of this expression.  Any bit pattern is permitted, but `ld'
-     and debuggers choke on silly bit patterns.
+     An absolute expression.  The symbol's type is set to the low 8 bits
+     of this expression.  Any bit pattern is permitted, but 'ld' and
+     debuggers choke on silly bit patterns.
 
 OTHER
      An absolute expression.  The symbol's "other" attribute is set to
@@ -5436,43 +5317,44 @@ DESC
 VALUE
      An absolute expression which becomes the symbol's value.
 
-   If a warning is detected while reading a `.stabd', `.stabn', or
-`.stabs' statement, the symbol has probably already been created; you
+   If a warning is detected while reading a '.stabd', '.stabn', or
+'.stabs' statement, the symbol has probably already been created; you
 get a half-formed symbol in your object file.  This is compatible with
 earlier assemblers!
 
-`.stabd TYPE , OTHER , DESC'
-     The "name" of the symbol generated is not even an empty string.
-     It is a null pointer, for compatibility.  Older assemblers used a
-     null pointer so they didn't waste space in object files with empty
+'.stabd TYPE , OTHER , DESC'
+
+     The "name" of the symbol generated is not even an empty string.  It
+     is a null pointer, for compatibility.  Older assemblers used a null
+     pointer so they didn't waste space in object files with empty
      strings.
 
      The symbol's value is set to the location counter, relocatably.
      When your program is linked, the value of this symbol is the
-     address of the location counter when the `.stabd' was assembled.
+     address of the location counter when the '.stabd' was assembled.
 
-`.stabn TYPE , OTHER , DESC , VALUE'
-     The name of the symbol is set to the empty string `""'.
+'.stabn TYPE , OTHER , DESC , VALUE'
+     The name of the symbol is set to the empty string '""'.
 
-`.stabs STRING ,  TYPE , OTHER , DESC , VALUE'
+'.stabs STRING , TYPE , OTHER , DESC , VALUE'
      All five fields are specified.
 
 
 File: as.info,  Node: String,  Next: Struct,  Prev: Stab,  Up: Pseudo Ops
 
-7.87 `.string' "STR", `.string8' "STR", `.string16'
+7.87 '.string' "STR", '.string8' "STR", '.string16'
 ===================================================
 
-"STR", `.string32' "STR", `.string64' "STR"
+"STR", '.string32' "STR", '.string64' "STR"
 
    Copy the characters in STR to the object file.  You may specify more
 than one string to copy, separated by commas.  Unless otherwise
 specified for a particular machine, the assembler marks the end of each
-string with a 0 byte.  You can use any of the escape sequences
-described in *Note Strings: Strings.
+string with a 0 byte.  You can use any of the escape sequences described
+in *note Strings: Strings.
 
-   The variants `string16', `string32' and `string64' differ from the
-`string' pseudo opcode in that each 8-bit character from STR is copied
+   The variants 'string16', 'string32' and 'string64' differ from the
+'string' pseudo opcode in that each 8-bit character from STR is copied
 and expanded to 16, 32 or 64 bits respectively.  The expanded characters
 are stored in target endianness byte order.
 
@@ -5485,117 +5367,116 @@ are stored in target endianness byte order.
 
 File: as.info,  Node: Struct,  Next: SubSection,  Prev: String,  Up: Pseudo Ops
 
-7.88 `.struct EXPRESSION'
+7.88 '.struct EXPRESSION'
 =========================
 
 Switch to the absolute section, and set the section offset to
-EXPRESSION, which must be an absolute expression.  You might use this
-as follows:
+EXPRESSION, which must be an absolute expression.  You might use this as
+follows:
              .struct 0
      field1:
              .struct field1 + 4
      field2:
              .struct field2 + 4
      field3:
-   This would define the symbol `field1' to have the value 0, the symbol
-`field2' to have the value 4, and the symbol `field3' to have the value
+   This would define the symbol 'field1' to have the value 0, the symbol
+'field2' to have the value 4, and the symbol 'field3' to have the value
 8.  Assembly would be left in the absolute section, and you would need
-to use a `.section' directive of some sort to change to some other
+to use a '.section' directive of some sort to change to some other
 section before further assembly.
 
 
 File: as.info,  Node: SubSection,  Next: Symver,  Prev: Struct,  Up: Pseudo Ops
 
-7.89 `.subsection NAME'
+7.89 '.subsection NAME'
 =======================
 
 This is one of the ELF section stack manipulation directives.  The
-others are `.section' (*note Section::), `.pushsection' (*note
-PushSection::), `.popsection' (*note PopSection::), and `.previous'
+others are '.section' (*note Section::), '.pushsection' (*note
+PushSection::), '.popsection' (*note PopSection::), and '.previous'
 (*note Previous::).
 
-   This directive replaces the current subsection with `name'.  The
-current section is not changed.  The replaced subsection is put onto
-the section stack in place of the then current top of stack subsection.
+   This directive replaces the current subsection with 'name'.  The
+current section is not changed.  The replaced subsection is put onto the
+section stack in place of the then current top of stack subsection.
 
 
 File: as.info,  Node: Symver,  Next: Tag,  Prev: SubSection,  Up: Pseudo Ops
 
-7.90 `.symver'
+7.90 '.symver'
 ==============
 
-Use the `.symver' directive to bind symbols to specific version nodes
+Use the '.symver' directive to bind symbols to specific version nodes
 within a source file.  This is only supported on ELF platforms, and is
 typically used when assembling files to be linked into a shared library.
 There are cases where it may make sense to use this in objects to be
 bound into an application itself so as to override a versioned symbol
 from a shared library.
 
-   For ELF targets, the `.symver' directive can be used like this:
+   For ELF targets, the '.symver' directive can be used like this:
      .symver NAME, NAME2@NODENAME
    If the symbol NAME is defined within the file being assembled, the
-`.symver' directive effectively creates a symbol alias with the name
+'.symver' directive effectively creates a symbol alias with the name
 NAME2@NODENAME, and in fact the main reason that we just don't try and
-create a regular alias is that the @ character isn't permitted in
-symbol names.  The NAME2 part of the name is the actual name of the
-symbol by which it will be externally referenced.  The name NAME itself
-is merely a name of convenience that is used so that it is possible to
-have definitions for multiple versions of a function within a single
-source file, and so that the compiler can unambiguously know which
-version of a function is being mentioned.  The NODENAME portion of the
-alias should be the name of a node specified in the version script
-supplied to the linker when building a shared library.  If you are
-attempting to override a versioned symbol from a shared library, then
-NODENAME should correspond to the nodename of the symbol you are trying
-to override.
+create a regular alias is that the @ character isn't permitted in symbol
+names.  The NAME2 part of the name is the actual name of the symbol by
+which it will be externally referenced.  The name NAME itself is merely
+a name of convenience that is used so that it is possible to have
+definitions for multiple versions of a function within a single source
+file, and so that the compiler can unambiguously know which version of a
+function is being mentioned.  The NODENAME portion of the alias should
+be the name of a node specified in the version script supplied to the
+linker when building a shared library.  If you are attempting to
+override a versioned symbol from a shared library, then NODENAME should
+correspond to the nodename of the symbol you are trying to override.
 
    If the symbol NAME is not defined within the file being assembled,
 all references to NAME will be changed to NAME2@NODENAME.  If no
 reference to NAME is made, NAME2@NODENAME will be removed from the
 symbol table.
 
-   Another usage of the `.symver' directive is:
+   Another usage of the '.symver' directive is:
      .symver NAME, NAME2@@NODENAME
    In this case, the symbol NAME must exist and be defined within the
-file being assembled. It is similar to NAME2@NODENAME. The difference
+file being assembled.  It is similar to NAME2@NODENAME.  The difference
 is NAME2@@NODENAME will also be used to resolve references to NAME2 by
 the linker.
 
-   The third usage of the `.symver' directive is:
+   The third usage of the '.symver' directive is:
      .symver NAME, NAME2@@@NODENAME
    When NAME is not defined within the file being assembled, it is
-treated as NAME2@NODENAME. When NAME is defined within the file being
+treated as NAME2@NODENAME.  When NAME is defined within the file being
 assembled, the symbol name, NAME, will be changed to NAME2@@NODENAME.
 
 
 File: as.info,  Node: Tag,  Next: Text,  Prev: Symver,  Up: Pseudo Ops
 
-7.91 `.tag STRUCTNAME'
+7.91 '.tag STRUCTNAME'
 ======================
 
 This directive is generated by compilers to include auxiliary debugging
 information in the symbol table.  It is only permitted inside
-`.def'/`.endef' pairs.  Tags are used to link structure definitions in
+'.def'/'.endef' pairs.  Tags are used to link structure definitions in
 the symbol table with instances of those structures.
 
 
 File: as.info,  Node: Text,  Next: Title,  Prev: Tag,  Up: Pseudo Ops
 
-7.92 `.text SUBSECTION'
+7.92 '.text SUBSECTION'
 =======================
 
-Tells `as' to assemble the following statements onto the end of the
-text subsection numbered SUBSECTION, which is an absolute expression.
-If SUBSECTION is omitted, subsection number zero is used.
+Tells 'as' to assemble the following statements onto the end of the text
+subsection numbered SUBSECTION, which is an absolute expression.  If
+SUBSECTION is omitted, subsection number zero is used.
 
 
 File: as.info,  Node: Title,  Next: Type,  Prev: Text,  Up: Pseudo Ops
 
-7.93 `.title "HEADING"'
+7.93 '.title "HEADING"'
 =======================
 
-Use HEADING as the title (second line, immediately after the source
-file name and pagenumber) when generating assembly listings.
+Use HEADING as the title (second line, immediately after the source file
+name and pagenumber) when generating assembly listings.
 
    This directive affects subsequent pages, as well as the current page
 if it appears within ten lines of the top of a page.
@@ -5603,7 +5484,7 @@ if it appears within ten lines of the top of a page.
 
 File: as.info,  Node: Type,  Next: Uleb128,  Prev: Title,  Up: Pseudo Ops
 
-7.94 `.type'
+7.94 '.type'
 ============
 
 This directive is used to set the type of a symbol.
@@ -5611,8 +5492,8 @@ This directive is used to set the type of a symbol.
 COFF Version
 ------------
 
-   For COFF targets, this directive is permitted only within
-`.def'/`.endef' pairs.  It is used like this:
+For COFF targets, this directive is permitted only within
+'.def'/'.endef' pairs.  It is used like this:
 
      .type INT
 
@@ -5622,7 +5503,7 @@ entry.
 ELF Version
 -----------
 
-   For ELF targets, the `.type' directive is used like this:
+For ELF targets, the '.type' directive is used like this:
 
      .type NAME , TYPE DESCRIPTION
 
@@ -5631,12 +5512,12 @@ an object symbol.  There are five different syntaxes supported for the
 TYPE DESCRIPTION field, in order to provide compatibility with various
 other assemblers.
 
-   Because some of the characters used in these syntaxes (such as `@'
-and `#') are comment characters for some architectures, some of the
-syntaxes below do not work on all architectures.  The first variant
-will be accepted by the GNU assembler on all architectures so that
-variant should be used for maximum portability, if you do not need to
-assemble your code with other assemblers.
+   Because some of the characters used in these syntaxes (such as '@'
+and '#') are comment characters for some architectures, some of the
+syntaxes below do not work on all architectures.  The first variant will
+be accepted by the GNU assembler on all architectures so that variant
+should be used for maximum portability, if you do not need to assemble
+your code with other assemblers.
 
    The syntaxes supported are:
 
@@ -5648,113 +5529,112 @@ assemble your code with other assemblers.
 
    The types supported are:
 
-`STT_FUNC'
-`function'
+'STT_FUNC'
+'function'
      Mark the symbol as being a function name.
 
-`STT_GNU_IFUNC'
-`gnu_indirect_function'
+'STT_GNU_IFUNC'
+'gnu_indirect_function'
      Mark the symbol as an indirect function when evaluated during reloc
      processing.  (This is only supported on assemblers targeting GNU
      systems).
 
-`STT_OBJECT'
-`object'
+'STT_OBJECT'
+'object'
      Mark the symbol as being a data object.
 
-`STT_TLS'
-`tls_object'
+'STT_TLS'
+'tls_object'
      Mark the symbol as being a thead-local data object.
 
-`STT_COMMON'
-`common'
+'STT_COMMON'
+'common'
      Mark the symbol as being a common data object.
 
-`STT_NOTYPE'
-`notype'
+'STT_NOTYPE'
+'notype'
      Does not mark the symbol in any way.  It is supported just for
      completeness.
 
-`gnu_unique_object'
+'gnu_unique_object'
      Marks the symbol as being a globally unique data object.  The
      dynamic linker will make sure that in the entire process there is
      just one symbol with this name and type in use.  (This is only
      supported on assemblers targeting GNU systems).
 
-
    Note: Some targets support extra types in addition to those listed
 above.
 
 
 File: as.info,  Node: Uleb128,  Next: Val,  Prev: Type,  Up: Pseudo Ops
 
-7.95 `.uleb128 EXPRESSIONS'
+7.95 '.uleb128 EXPRESSIONS'
 ===========================
 
 ULEB128 stands for "unsigned little endian base 128."  This is a
 compact, variable length representation of numbers used by the DWARF
-symbolic debugging format.  *Note `.sleb128': Sleb128.
+symbolic debugging format.  *Note '.sleb128': Sleb128.
 
 
 File: as.info,  Node: Val,  Next: Version,  Prev: Uleb128,  Up: Pseudo Ops
 
-7.96 `.val ADDR'
+7.96 '.val ADDR'
 ================
 
-This directive, permitted only within `.def'/`.endef' pairs, records
-the address ADDR as the value attribute of a symbol table entry.
+This directive, permitted only within '.def'/'.endef' pairs, records the
+address ADDR as the value attribute of a symbol table entry.
 
 
 File: as.info,  Node: Version,  Next: VTableEntry,  Prev: Val,  Up: Pseudo Ops
 
-7.97 `.version "STRING"'
+7.97 '.version "STRING"'
 ========================
 
-This directive creates a `.note' section and places into it an ELF
-formatted note of type NT_VERSION.  The note's name is set to `string'.
+This directive creates a '.note' section and places into it an ELF
+formatted note of type NT_VERSION. The note's name is set to 'string'.
 
 
 File: as.info,  Node: VTableEntry,  Next: VTableInherit,  Prev: Version,  Up: Pseudo Ops
 
-7.98 `.vtable_entry TABLE, OFFSET'
+7.98 '.vtable_entry TABLE, OFFSET'
 ==================================
 
-This directive finds or creates a symbol `table' and creates a
-`VTABLE_ENTRY' relocation for it with an addend of `offset'.
+This directive finds or creates a symbol 'table' and creates a
+'VTABLE_ENTRY' relocation for it with an addend of 'offset'.
 
 
 File: as.info,  Node: VTableInherit,  Next: Warning,  Prev: VTableEntry,  Up: Pseudo Ops
 
-7.99 `.vtable_inherit CHILD, PARENT'
+7.99 '.vtable_inherit CHILD, PARENT'
 ====================================
 
-This directive finds the symbol `child' and finds or creates the symbol
-`parent' and then creates a `VTABLE_INHERIT' relocation for the parent
+This directive finds the symbol 'child' and finds or creates the symbol
+'parent' and then creates a 'VTABLE_INHERIT' relocation for the parent
 whose addend is the value of the child symbol.  As a special case the
-parent name of `0' is treated as referring to the `*ABS*' section.
+parent name of '0' is treated as referring to the '*ABS*' section.
 
 
 File: as.info,  Node: Warning,  Next: Weak,  Prev: VTableInherit,  Up: Pseudo Ops
 
-7.100 `.warning "STRING"'
+7.100 '.warning "STRING"'
 =========================
 
-Similar to the directive `.error' (*note `.error "STRING"': Error.),
-but just emits a warning.
+Similar to the directive '.error' (*note '.error "STRING"': Error.), but
+just emits a warning.
 
 
 File: as.info,  Node: Weak,  Next: Weakref,  Prev: Warning,  Up: Pseudo Ops
 
-7.101 `.weak NAMES'
+7.101 '.weak NAMES'
 ===================
 
 This directive sets the weak attribute on the comma separated list of
-symbol `names'.  If the symbols do not already exist, they will be
+symbol 'names'.  If the symbols do not already exist, they will be
 created.
 
    On COFF targets other than PE, weak symbols are a GNU extension.
 This directive sets the weak attribute on the comma separated list of
-symbol `names'.  If the symbols do not already exist, they will be
+symbol 'names'.  If the symbols do not already exist, they will be
 created.
 
    On the PE target, weak symbols are supported natively as weak
@@ -5764,15 +5644,15 @@ creates an alternate symbol to hold the default value.
 
 File: as.info,  Node: Weakref,  Next: Word,  Prev: Weak,  Up: Pseudo Ops
 
-7.102 `.weakref ALIAS, TARGET'
+7.102 '.weakref ALIAS, TARGET'
 ==============================
 
 This directive creates an alias to the target symbol that enables the
-symbol to be referenced with weak-symbol semantics, but without
-actually making it weak.  If direct references or definitions of the
-symbol are present, then the symbol will not be weak, but if all
-references to it are through weak references, the symbol will be marked
-as weak in the symbol table.
+symbol to be referenced with weak-symbol semantics, but without actually
+making it weak.  If direct references or definitions of the symbol are
+present, then the symbol will not be weak, but if all references to it
+are through weak references, the symbol will be marked as weak in the
+symbol table.
 
    The effect is equivalent to moving all references to the alias to a
 separate assembly source file, renaming the alias to the symbol in it,
@@ -5787,7 +5667,7 @@ handled within the assembler.
 
 File: as.info,  Node: Word,  Next: Zero,  Prev: Weakref,  Up: Pseudo Ops
 
-7.103 `.word EXPRESSIONS'
+7.103 '.word EXPRESSIONS'
 =========================
 
 This directive expects zero or more EXPRESSIONS, of any section,
@@ -5803,37 +5683,35 @@ addressing, require the following special treatment.  If the machine of
 interest to you does 32-bit addressing (or doesn't require it; *note
 Machine Dependencies::), you can ignore this issue.
 
-   In order to assemble compiler output into something that works, `as'
-occasionally does strange things to `.word' directives.  Directives of
-the form `.word sym1-sym2' are often emitted by compilers as part of
-jump tables.  Therefore, when `as' assembles a directive of the form
-`.word sym1-sym2', and the difference between `sym1' and `sym2' does
-not fit in 16 bits, `as' creates a "secondary jump table", immediately
+   In order to assemble compiler output into something that works, 'as'
+occasionally does strange things to '.word' directives.  Directives of
+the form '.word sym1-sym2' are often emitted by compilers as part of
+jump tables.  Therefore, when 'as' assembles a directive of the form
+'.word sym1-sym2', and the difference between 'sym1' and 'sym2' does not
+fit in 16 bits, 'as' creates a "secondary jump table", immediately
 before the next label.  This secondary jump table is preceded by a
-short-jump to the first byte after the secondary table.  This
-short-jump prevents the flow of control from accidentally falling into
-the new table.  Inside the table is a long-jump to `sym2'.  The
-original `.word' contains `sym1' minus the address of the long-jump to
-`sym2'.
+short-jump to the first byte after the secondary table.  This short-jump
+prevents the flow of control from accidentally falling into the new
+table.  Inside the table is a long-jump to 'sym2'.  The original '.word'
+contains 'sym1' minus the address of the long-jump to 'sym2'.
 
-   If there were several occurrences of `.word sym1-sym2' before the
-secondary jump table, all of them are adjusted.  If there was a `.word
-sym3-sym4', that also did not fit in sixteen bits, a long-jump to
-`sym4' is included in the secondary jump table, and the `.word'
-directives are adjusted to contain `sym3' minus the address of the
-long-jump to `sym4'; and so on, for as many entries in the original
-jump table as necessary.
+   If there were several occurrences of '.word sym1-sym2' before the
+secondary jump table, all of them are adjusted.  If there was a '.word
+sym3-sym4', that also did not fit in sixteen bits, a long-jump to 'sym4'
+is included in the secondary jump table, and the '.word' directives are
+adjusted to contain 'sym3' minus the address of the long-jump to 'sym4';
+and so on, for as many entries in the original jump table as necessary.
 
 
 File: as.info,  Node: Zero,  Next: Deprecated,  Prev: Word,  Up: Pseudo Ops
 
-7.104 `.zero SIZE'
+7.104 '.zero SIZE'
 ==================
 
 This directive emits SIZE 0-valued bytes.  SIZE must be an absolute
-expression.  This directive is actually an alias for the `.skip'
+expression.  This directive is actually an alias for the '.skip'
 directive so in can take an optional second argument of the value to
-store in the bytes instead of zero.  Using `.zero' in this way would be
+store in the bytes instead of zero.  Using '.zero' in this way would be
 confusing however.
 
 
@@ -5845,7 +5723,6 @@ File: as.info,  Node: Deprecated,  Prev: Zero,  Up: Pseudo Ops
 One day these directives won't work.  They are included for
 compatibility with older assemblers.
 .abort
-
 .line
 
 
@@ -5854,7 +5731,7 @@ File: as.info,  Node: Object Attributes,  Next: Machine Dependencies,  Prev: Pse
 8 Object Attributes
 *******************
 
-`as' assembles source files written for a specific architecture into
+'as' assembles source files written for a specific architecture into
 object files for that architecture.  But not all object files are alike.
 Many architectures support incompatible variations.  For instance,
 floating point arguments might be passed in floating point registers if
@@ -5865,19 +5742,19 @@ objects are built for different generations of the same architecture,
 the combination may require the newer generation at run-time.
 
    This information is useful during and after linking.  At link time,
-`ld' can warn about incompatible object files.  After link time, tools
-like `gdb' can use it to process the linked file correctly.
+'ld' can warn about incompatible object files.  After link time, tools
+like 'gdb' can use it to process the linked file correctly.
 
    Compatibility information is recorded as a series of object
 attributes.  Each attribute has a "vendor", "tag", and "value".  The
 vendor is a string, and indicates who sets the meaning of the tag.  The
 tag is an integer, and indicates what property the attribute describes.
-The value may be a string or an integer, and indicates how the
-property affects this object.  Missing attributes are the same as
-attributes with a zero value or empty string value.
+The value may be a string or an integer, and indicates how the property
+affects this object.  Missing attributes are the same as attributes with
+a zero value or empty string value.
 
    Object attributes were developed as part of the ABI for the ARM
-Architecture.  The file format is documented in `ELF for the ARM
+Architecture.  The file format is documented in 'ELF for the ARM
 Architecture'.
 
 * Menu:
@@ -5891,14 +5768,14 @@ File: as.info,  Node: GNU Object Attributes,  Next: Defining New Object Attribut
 8.1 GNU Object Attributes
 =========================
 
-The `.gnu_attribute' directive records an object attribute with vendor
-`gnu'.
+The '.gnu_attribute' directive records an object attribute with vendor
+'gnu'.
 
-   Except for `Tag_compatibility', which has both an integer and a
+   Except for 'Tag_compatibility', which has both an integer and a
 string for its value, GNU attributes have a string value if the tag
 number is odd and an integer value if the tag number is even.  The
-second bit (`TAG & 2' is set for architecture-independent attributes
-and clear for architecture-dependent ones.
+second bit ('TAG & 2' is set for architecture-independent attributes and
+clear for architecture-dependent ones.
 
 8.1.1 Common GNU attributes
 ---------------------------
@@ -5921,30 +5798,23 @@ Tag_GNU_MIPS_ABI_FP (4)
      be:
 
         * 0 for files not affected by the floating-point ABI.
-
         * 1 for files using the hardware floating-point ABI with a
           standard double-precision FPU.
-
         * 2 for files using the hardware floating-point ABI with a
           single-precision FPU.
-
         * 3 for files using the software floating-point ABI.
-
         * 4 for files using the deprecated hardware floating-point ABI
           which used 64-bit floating-point registers, 32-bit
           general-purpose registers and increased the number of
           callee-saved floating-point registers.
-
         * 5 for files using the hardware floating-point ABI with a
           double-precision FPU with either 32-bit or 64-bit
           floating-point registers and 32-bit general-purpose registers.
-
         * 6 for files using the hardware floating-point ABI with 64-bit
           floating-point registers and 32-bit general-purpose registers.
-
         * 7 for files using the hardware floating-point ABI with 64-bit
-          floating-point registers, 32-bit general-purpose registers
-          and a rule that forbids the direct use of odd-numbered
+          floating-point registers, 32-bit general-purpose registers and
+          a rule that forbids the direct use of odd-numbered
           single-precision floating-point registers.
 
 8.1.3 PowerPC Attributes
@@ -5955,12 +5825,9 @@ Tag_GNU_Power_ABI_FP (4)
      be:
 
         * 0 for files not affected by the floating-point ABI.
-
         * 1 for files using double-precision hardware floating-point
           ABI.
-
         * 2 for files using the software floating-point ABI.
-
         * 3 for files using single-precision hardware floating-point
           ABI.
 
@@ -5968,11 +5835,8 @@ Tag_GNU_Power_ABI_Vector (8)
      The vector ABI used by this object file.  The value will be:
 
         * 0 for files not affected by the vector ABI.
-
         * 1 for files using general purpose registers to pass vectors.
-
         * 2 for files using AltiVec registers to pass vectors.
-
         * 3 for files using SPE registers to pass vectors.
 
 8.1.4 IBM z Systems Attributes
@@ -5982,9 +5846,7 @@ Tag_GNU_S390_ABI_Vector (8)
      The vector ABI used by this object file.  The value will be:
 
         * 0 for files not affected by the vector ABI.
-
         * 1 for files using software vector ABI.
-
         * 2 for files using hardware vector ABI.
 
 
@@ -5995,19 +5857,14 @@ File: as.info,  Node: Defining New Object Attributes,  Prev: GNU Object Attribut
 
 If you want to define a new GNU object attribute, here are the places
 you will need to modify.  New attributes should be discussed on the
-`binutils' mailing list.
+'binutils' mailing list.
 
    * This manual, which is the official register of attributes.
-
-   * The header for your architecture `include/elf', to define the tag.
-
-   * The `bfd' support file for your architecture, to merge the
+   * The header for your architecture 'include/elf', to define the tag.
+   * The 'bfd' support file for your architecture, to merge the
      attribute and issue any appropriate link warnings.
-
-   * Test cases in `ld/testsuite' for merging and link warnings.
-
-   * `binutils/readelf.c' to display your attribute.
-
+   * Test cases in 'ld/testsuite' for merging and link warnings.
+   * 'binutils/readelf.c' to display your attribute.
    * GCC, if you want the compiler to mark the attribute automatically.
 
 
@@ -6017,10 +5874,10 @@ File: as.info,  Node: Machine Dependencies,  Next: Reporting Bugs,  Prev: Object
 ****************************
 
 The machine instruction sets are (almost by definition) different on
-each machine where `as' runs.  Floating point representations vary as
-well, and `as' often supports a few additional directives or
+each machine where 'as' runs.  Floating point representations vary as
+well, and 'as' often supports a few additional directives or
 command-line options for compatibility with other assemblers on a
-particular platform.  Finally, some versions of `as' support special
+particular platform.  Finally, some versions of 'as' support special
 pseudo-instructions for branch optimization.
 
    This chapter discusses most of these differences, though it does not
@@ -6029,114 +5886,60 @@ subject, see the hardware manufacturer's manual.
 
 * Menu:
 
-
 * AArch64-Dependent::		AArch64 Dependent Features
-
 * Alpha-Dependent::		Alpha Dependent Features
-
 * ARC-Dependent::               ARC Dependent Features
-
 * ARM-Dependent::               ARM Dependent Features
-
 * AVR-Dependent::               AVR Dependent Features
-
 * Blackfin-Dependent::		Blackfin Dependent Features
-
 * CR16-Dependent::              CR16 Dependent Features
-
 * CRIS-Dependent::              CRIS Dependent Features
-
 * D10V-Dependent::              D10V Dependent Features
-
 * D30V-Dependent::              D30V Dependent Features
-
 * Epiphany-Dependent::          EPIPHANY Dependent Features
-
 * H8/300-Dependent::            Renesas H8/300 Dependent Features
-
 * HPPA-Dependent::              HPPA Dependent Features
-
 * ESA/390-Dependent::           IBM ESA/390 Dependent Features
-
 * i386-Dependent::              Intel 80386 and AMD x86-64 Dependent Features
-
 * i860-Dependent::              Intel 80860 Dependent Features
-
 * i960-Dependent::              Intel 80960 Dependent Features
-
 * IA-64-Dependent::             Intel IA-64 Dependent Features
-
 * IP2K-Dependent::              IP2K Dependent Features
-
 * LM32-Dependent::              LM32 Dependent Features
-
 * M32C-Dependent::              M32C Dependent Features
-
 * M32R-Dependent::              M32R Dependent Features
-
 * M68K-Dependent::              M680x0 Dependent Features
-
 * M68HC11-Dependent::           M68HC11 and 68HC12 Dependent Features
-
 * Meta-Dependent ::             Meta Dependent Features
-
 * MicroBlaze-Dependent::	MICROBLAZE Dependent Features
-
 * MIPS-Dependent::              MIPS Dependent Features
-
 * MMIX-Dependent::              MMIX Dependent Features
-
 * MSP430-Dependent::		MSP430 Dependent Features
-
 * NDS32-Dependent::             Andes NDS32 Dependent Features
-
 * NiosII-Dependent::            Altera Nios II Dependent Features
-
 * NS32K-Dependent::		NS32K Dependent Features
-
 * PDP-11-Dependent::            PDP-11 Dependent Features
-
 * PJ-Dependent::                picoJava Dependent Features
-
 * PPC-Dependent::               PowerPC Dependent Features
-
 * RL78-Dependent::              RL78 Dependent Features
-
 * RISC-V-Dependent::            RISC-V Dependent Features
-
 * RX-Dependent::                RX Dependent Features
-
 * S/390-Dependent::             IBM S/390 Dependent Features
-
 * SCORE-Dependent::             SCORE Dependent Features
-
 * SH-Dependent::                Renesas / SuperH SH Dependent Features
 * SH64-Dependent::              SuperH SH64 Dependent Features
-
 * Sparc-Dependent::             SPARC Dependent Features
-
 * TIC54X-Dependent::            TI TMS320C54x Dependent Features
-
 * TIC6X-Dependent ::            TI TMS320C6x Dependent Features
-
 * TILE-Gx-Dependent ::          Tilera TILE-Gx Dependent Features
-
 * TILEPro-Dependent ::          Tilera TILEPro Dependent Features
-
 * V850-Dependent::              V850 Dependent Features
-
 * Vax-Dependent::               VAX Dependent Features
-
 * Visium-Dependent::            Visium Dependent Features
-
 * XGATE-Dependent::             XGATE Features
-
 * XSTORMY16-Dependent::         XStormy16 Dependent Features
-
 * Xtensa-Dependent::            Xtensa Dependent Features
-
 * Z80-Dependent::               Z80 Dependent Features
-
 * Z8000-Dependent::             Z8000 Dependent Features
 
 
@@ -6161,63 +5964,62 @@ File: as.info,  Node: AArch64 Options,  Next: AArch64 Extensions,  Up: AArch64-D
 9.1.1 Options
 -------------
 
-`-EB'
+'-EB'
      This option specifies that the output generated by the assembler
      should be marked as being encoded for a big-endian processor.
 
-`-EL'
+'-EL'
      This option specifies that the output generated by the assembler
      should be marked as being encoded for a little-endian processor.
 
-`-mabi=ABI'
+'-mabi=ABI'
      Specify which ABI the source code uses.  The recognized arguments
-     are: `ilp32' and `lp64', which decides the generated object file
-     in ELF32 and ELF64 format respectively.  The default is `lp64'.
+     are: 'ilp32' and 'lp64', which decides the generated object file in
+     ELF32 and ELF64 format respectively.  The default is 'lp64'.
 
-`-mcpu=PROCESSOR[+EXTENSION...]'
+'-mcpu=PROCESSOR[+EXTENSION...]'
      This option specifies the target processor.  The assembler will
      issue an error message if an attempt is made to assemble an
      instruction which will not execute on the target processor.  The
-     following processor names are recognized: `cortex-a35',
-     `cortex-a53', `cortex-a57', `cortex-a72', `cortex-a73',
-     `exynos-m1', `falkor', `qdf24xx', `thunderx', `vulcan', `xgene1'
-     and `xgene2'.  The special name `all' may be used to allow the
-     assembler to accept instructions valid for any supported
-     processor, including all optional extensions.
+     following processor names are recognized: 'cortex-a35',
+     'cortex-a53', 'cortex-a57', 'cortex-a72', 'cortex-a73',
+     'exynos-m1', 'falkor', 'qdf24xx', 'thunderx', 'vulcan', 'xgene1'
+     and 'xgene2'.  The special name 'all' may be used to allow the
+     assembler to accept instructions valid for any supported processor,
+     including all optional extensions.
 
-     In addition to the basic instruction set, the assembler can be
-     told to accept, or restrict, various extension mnemonics that
-     extend the processor.  *Note AArch64 Extensions::.
+     In addition to the basic instruction set, the assembler can be told
+     to accept, or restrict, various extension mnemonics that extend the
+     processor.  *Note AArch64 Extensions::.
 
      If some implementations of a particular processor can have an
      extension, then then those extensions are automatically enabled.
      Consequently, you will not normally have to specify any additional
      extensions.
 
-`-march=ARCHITECTURE[+EXTENSION...]'
+'-march=ARCHITECTURE[+EXTENSION...]'
      This option specifies the target architecture.  The assembler will
      issue an error message if an attempt is made to assemble an
      instruction which will not execute on the target architecture.  The
-     following architecture names are recognized: `armv8-a',
-     `armv8.1-a', `armv8.2-a' and `armv8.3-a'.
+     following architecture names are recognized: 'armv8-a',
+     'armv8.1-a', 'armv8.2-a' and 'armv8.3-a'.
 
-     If both `-mcpu' and `-march' are specified, the assembler will use
-     the setting for `-mcpu'.  If neither are specified, the assembler
-     will default to `-mcpu=all'.
+     If both '-mcpu' and '-march' are specified, the assembler will use
+     the setting for '-mcpu'.  If neither are specified, the assembler
+     will default to '-mcpu=all'.
 
      The architecture option can be extended with the same instruction
-     set extension options as the `-mcpu' option.  Unlike `-mcpu',
+     set extension options as the '-mcpu' option.  Unlike '-mcpu',
      extensions are not always enabled by default, *Note AArch64
      Extensions::.
 
-`-mverbose-error'
+'-mverbose-error'
      This option enables verbose error messages for AArch64 gas.  This
      option is enabled by default.
 
-`-mno-verbose-error'
+'-mno-verbose-error'
      This option disables verbose error messages in AArch64 gas.
 
-
 
 File: as.info,  Node: AArch64 Extensions,  Next: AArch64 Syntax,  Prev: AArch64 Options,  Up: AArch64-Dependent
 
@@ -6228,9 +6030,9 @@ The table below lists the permitted architecture extensions that are
 supported by the assembler and the conditions under which they are
 automatically enabled.
 
-   Multiple extensions may be specified, separated by a `+'.  Extension
-mnemonics may also be removed from those the assembler accepts.  This
-is done by prepending `no' to the option that adds the extension.
+   Multiple extensions may be specified, separated by a '+'.  Extension
+mnemonics may also be removed from those the assembler accepts.  This is
+done by prepending 'no' to the option that adds the extension.
 Extensions that are removed must be listed after all extensions that
 have been added.
 
@@ -6240,36 +6042,36 @@ disabling an extension that is required by other extensions will
 automatically cause those extensions to be disabled.
 
 Extension Minimum      Enabled by   Description
-          Architecture default      
----------------------------------------------------------------------------- 
-`compnum' ARMv8.2-A    ARMv8.3-A    Enable the complex number SIMD
-                       or later     extensions.  This implies  `fp16' and
-                                    `simd'.
-`crc'     ARMv8-A      ARMv8.1-A    Enable CRC instructions.
-                       or later     
-`crypto'  ARMv8-A      No           Enable cryptographic extensions.  This
-                                    implies `fp' and `simd'.
-`fp'      ARMv8-A      ARMv8-A or   Enable floating-point extensions.
-                       later        
-`fp16'    ARMv8.2-A    ARMv8.2-A    Enable ARMv8.2 16-bit floating-point
-                       or later     support.  This implies  `fp'.
-`lor'     ARMv8-A      ARMv8.1-A    Enable Limited Ordering Regions
+          Architecture default
+----------------------------------------------------------------------------
+'compnum' ARMv8.2-A    ARMv8.3-A    Enable the complex number SIMD
+                       or later     extensions.  This implies 'fp16' and
+                                    'simd'.
+'crc'     ARMv8-A      ARMv8.1-A    Enable CRC instructions.
+                       or later
+'crypto'  ARMv8-A      No           Enable cryptographic extensions.
+                                    This implies 'fp' and 'simd'.
+'fp'      ARMv8-A      ARMv8-A or   Enable floating-point extensions.
+                       later
+'fp16'    ARMv8.2-A    ARMv8.2-A    Enable ARMv8.2 16-bit floating-point
+                       or later     support.  This implies 'fp'.
+'lor'     ARMv8-A      ARMv8.1-A    Enable Limited Ordering Regions
                        or later     extensions.
-`lse'     ARMv8-A      ARMv8.1-A    Enable Large System extensions.
-                       or later     
-`pan'     ARMv8-A      ARMv8.1-A    Enable Privileged Access Never support.
-                       or later     
-`profile' ARMv8.2-A    No           Enable statistical profiling
+'lse'     ARMv8-A      ARMv8.1-A    Enable Large System extensions.
+                       or later
+'pan'     ARMv8-A      ARMv8.1-A    Enable Privileged Access Never
+                       or later     support.
+'profile' ARMv8.2-A    No           Enable statistical profiling
                                     extensions.
-`ras'     ARMv8-A      ARMv8.2-A    Enable the Reliability, Availability
-                       or later     and Serviceability  extension.
-`rdma'    ARMv8-A      ARMv8.1-A    Enable ARMv8.1 Advanced SIMD
-                       or later     extensions.  This implies `simd'.
-`simd'    ARMv8-A      ARMv8-A or   Enable Advanced SIMD extensions.  This
-                       later        implies `fp'.
-`sve'     ARMv8.2-A    No           Enable the Scalable Vector Extensions.
-                                    This implies `fp16',  `simd' and
-                                    `compnum'.
+'ras'     ARMv8-A      ARMv8.2-A    Enable the Reliability, Availability
+                       or later     and Serviceability extension.
+'rdma'    ARMv8-A      ARMv8.1-A    Enable ARMv8.1 Advanced SIMD
+                       or later     extensions.  This implies 'simd'.
+'simd'    ARMv8-A      ARMv8-A or   Enable Advanced SIMD extensions.
+                       later        This implies 'fp'.
+'sve'     ARMv8.2-A    No           Enable the Scalable Vector
+                                    Extensions.  This implies 'fp16',
+                                    'simd' and 'compnum'.
 
 
 File: as.info,  Node: AArch64 Syntax,  Next: AArch64 Floating Point,  Prev: AArch64 Extensions,  Up: AArch64-Dependent
@@ -6289,14 +6091,14 @@ File: as.info,  Node: AArch64-Chars,  Next: AArch64-Regs,  Up: AArch64 Syntax
 9.1.3.1 Special Characters
 ..........................
 
-The presence of a `//' on a line indicates the start of a comment that
-extends to the end of the current line.  If a `#' appears as the first
+The presence of a '//' on a line indicates the start of a comment that
+extends to the end of the current line.  If a '#' appears as the first
 character of a line, the whole line is treated as a comment.
 
-   The `;' character can be used instead of a newline to separate
+   The ';' character can be used instead of a newline to separate
 statements.
 
-   The `#' can be optionally used to indicate immediate operands.
+   The '#' can be optionally used to indicate immediate operands.
 
 
 File: as.info,  Node: AArch64-Regs,  Next: AArch64-Relocations,  Prev: AArch64-Chars,  Up: AArch64 Syntax
@@ -6304,8 +6106,8 @@ File: as.info,  Node: AArch64-Regs,  Next: AArch64-Relocations,  Prev: AArch64-C
 9.1.3.2 Register Names
 ......................
 
-Please refer to the section `4.4 Register Names' of `ARMv8 Instruction
-Set Overview', which is available at `http://infocenter.arm.com'.
+Please refer to the section '4.4 Register Names' of 'ARMv8 Instruction
+Set Overview', which is available at <http://infocenter.arm.com>.
 
 
 File: as.info,  Node: AArch64-Relocations,  Prev: AArch64-Regs,  Up: AArch64 Syntax
@@ -6313,20 +6115,20 @@ File: as.info,  Node: AArch64-Relocations,  Prev: AArch64-Regs,  Up: AArch64 Syn
 9.1.3.3 Relocations
 ...................
 
-Relocations for `MOVZ' and `MOVK' instructions can be generated by
-prefixing the label with `#:abs_g2:' etc.  For example to load the
+Relocations for 'MOVZ' and 'MOVK' instructions can be generated by
+prefixing the label with '#:abs_g2:' etc.  For example to load the
 48-bit absolute address of FOO into x0:
 
              movz x0, #:abs_g2:foo		// bits 32-47, overflow check
              movk x0, #:abs_g1_nc:foo	// bits 16-31, no overflow check
              movk x0, #:abs_g0_nc:foo	// bits  0-15, no overflow check
 
-   Relocations for `ADRP', and `ADD', `LDR' or `STR' instructions can
-be generated by prefixing the label with `:pg_hi21:' and `#:lo12:'
+   Relocations for 'ADRP', and 'ADD', 'LDR' or 'STR' instructions can be
+generated by prefixing the label with ':pg_hi21:' and '#:lo12:'
 respectively.
 
-   For example to use 33-bit (+/-4GB) pc-relative addressing to load
-the address of FOO into x0:
+   For example to use 33-bit (+/-4GB) pc-relative addressing to load the
+address of FOO into x0:
 
              adrp x0, :pg_hi21:foo
              add  x0, x0, #:lo12:foo
@@ -6336,7 +6138,7 @@ the address of FOO into x0:
              adrp x0, :pg_hi21:foo
              ldr  x0, [x0, #:lo12:foo]
 
-   Note that `:pg_hi21:' is optional.
+   Note that ':pg_hi21:' is optional.
 
              adrp x0, foo
 
@@ -6358,74 +6160,73 @@ File: as.info,  Node: AArch64 Directives,  Next: AArch64 Opcodes,  Prev: AArch64
 9.1.5 AArch64 Machine Directives
 --------------------------------
 
-`.arch NAME'
-     Select the target architecture.  Valid values for NAME are the
-     same as for the `-march' commandline option.
+'.arch NAME'
+     Select the target architecture.  Valid values for NAME are the same
+     as for the '-march' commandline option.
 
-     Specifying `.arch' clears any previously selected architecture
+     Specifying '.arch' clears any previously selected architecture
      extensions.
 
-`.arch_extension NAME'
-     Add or remove an architecture extension to the target
-     architecture.  Valid values for NAME are the same as those
-     accepted as architectural extensions by the `-mcpu' commandline
-     option.
+'.arch_extension NAME'
+     Add or remove an architecture extension to the target architecture.
+     Valid values for NAME are the same as those accepted as
+     architectural extensions by the '-mcpu' commandline option.
 
-     `.arch_extension' may be used multiple times to add or remove
+     '.arch_extension' may be used multiple times to add or remove
      extensions incrementally to the architecture being compiled for.
 
-`.bss'
-     This directive switches to the `.bss' section.
+'.bss'
+     This directive switches to the '.bss' section.
 
-`.cpu NAME'
+'.cpu NAME'
      Set the target processor.  Valid values for NAME are the same as
-     those accepted by the `-mcpu=' command line option.
+     those accepted by the '-mcpu=' command line option.
 
-`.dword EXPRESSIONS'
-     The `.dword' directive produces 64 bit values.
+'.dword EXPRESSIONS'
+     The '.dword' directive produces 64 bit values.
 
-`.even'
-     The `.even' directive aligns the output on the next even byte
+'.even'
+     The '.even' directive aligns the output on the next even byte
      boundary.
 
-`.inst EXPRESSIONS'
+'.inst EXPRESSIONS'
      Inserts the expressions into the output as if they were
      instructions, rather than data.
 
-`.ltorg'
+'.ltorg'
      This directive causes the current contents of the literal pool to
      be dumped into the current section (which is assumed to be the
      .text section) at the current location (aligned to a word
      boundary).  GAS maintains a separate literal pool for each section
-     and each sub-section.  The `.ltorg' directive will only affect the
-     literal pool of the current section and sub-section.  At the end
-     of assembly all remaining, un-empty literal pools will
-     automatically be dumped.
+     and each sub-section.  The '.ltorg' directive will only affect the
+     literal pool of the current section and sub-section.  At the end of
+     assembly all remaining, un-empty literal pools will automatically
+     be dumped.
 
      Note - older versions of GAS would dump the current literal pool
      any time a section change occurred.  This is no longer done, since
      it prevents accurate control of the placement of literal pools.
 
-`.pool'
+'.pool'
      This is a synonym for .ltorg.
 
-`NAME .req REGISTER NAME'
+'NAME .req REGISTER NAME'
      This creates an alias for REGISTER NAME called NAME.  For example:
 
                   foo .req w0
 
-``.tlsdescadd''
+'.tlsdescadd'
      Emits a TLSDESC_ADD reloc on the next instruction.
 
-``.tlsdesccall''
+'.tlsdesccall'
      Emits a TLSDESC_CALL reloc on the next instruction.
 
-``.tlsdescldr''
+'.tlsdescldr'
      Emits a TLSDESC_LDR reloc on the next instruction.
 
-`.unreq ALIAS-NAME'
+'.unreq ALIAS-NAME'
      This undefines a register alias which was previously defined using
-     the `req' directive.  For example:
+     the 'req' directive.  For example:
 
                   foo .req w0
                   .unreq foo
@@ -6434,10 +6235,9 @@ File: as.info,  Node: AArch64 Directives,  Next: AArch64 Opcodes,  Prev: AArch64
      can be used to delete builtin in register name aliases (eg 'w0').
      This should only be done if it is really necessary.
 
-`.xword EXPRESSIONS'
-     The `.xword' directive produces 64 bit values.  This is the same
-     as the `.dword' directive.
-
+'.xword EXPRESSIONS'
+     The '.xword' directive produces 64 bit values.  This is the same as
+     the '.dword' directive.
 
 
 File: as.info,  Node: AArch64 Opcodes,  Next: AArch64 Mapping Symbols,  Prev: AArch64 Directives,  Up: AArch64-Dependent
@@ -6448,17 +6248,16 @@ File: as.info,  Node: AArch64 Opcodes,  Next: AArch64 Mapping Symbols,  Prev: AA
 GAS implements all the standard AArch64 opcodes.  It also implements
 several pseudo opcodes, including several synthetic load instructions.
 
-`LDR ='
+'LDR ='
             ldr <register> , =<expression>
 
      The constant expression will be placed into the nearest literal
      pool (if it not already there) and a PC-relative LDR instruction
      will be generated.
 
-
    For more information on the AArch64 instruction set and assembly
-language notation, see `ARMv8 Instruction Set Overview' available at
-`http://infocenter.arm.com'.
+language notation, see 'ARMv8 Instruction Set Overview' available at
+<http://infocenter.arm.com>.
 
 
 File: as.info,  Node: AArch64 Mapping Symbols,  Prev: AArch64 Opcodes,  Up: AArch64-Dependent
@@ -6469,13 +6268,12 @@ File: as.info,  Node: AArch64 Mapping Symbols,  Prev: AArch64 Opcodes,  Up: AArc
 The AArch64 ELF specification requires that special symbols be inserted
 into object files to mark certain features:
 
-`$x'
+'$x'
      At the start of a region of code containing AArch64 instructions.
 
-`$d'
+'$d'
      At the start of a region of data.
 
-
 
 File: as.info,  Node: Alpha-Dependent,  Next: ARC-Dependent,  Prev: AArch64-Dependent,  Up: Machine Dependencies
 
@@ -6497,9 +6295,9 @@ File: as.info,  Node: Alpha Notes,  Next: Alpha Options,  Up: Alpha-Dependent
 9.2.1 Notes
 -----------
 
-The documentation here is primarily for the ELF object format.  `as'
-also supports the ECOFF and EVAX formats, but features specific to
-these formats are not yet documented.
+The documentation here is primarily for the ELF object format.  'as'
+also supports the ECOFF and EVAX formats, but features specific to these
+formats are not yet documented.
 
 
 File: as.info,  Node: Alpha Options,  Next: Alpha Syntax,  Prev: Alpha Notes,  Up: Alpha-Dependent
@@ -6507,33 +6305,33 @@ File: as.info,  Node: Alpha Options,  Next: Alpha Syntax,  Prev: Alpha Notes,  U
 9.2.2 Options
 -------------
 
-`-mCPU'
+'-mCPU'
      This option specifies the target processor.  If an attempt is made
      to assemble an instruction which will not execute on the target
      processor, the assembler may either expand the instruction as a
      macro or issue an error message.  This option is equivalent to the
-     `.arch' directive.
+     '.arch' directive.
 
-     The following processor names are recognized: `21064', `21064a',
-     `21066', `21068', `21164', `21164a', `21164pc', `21264', `21264a',
-     `21264b', `ev4', `ev5', `lca45', `ev5', `ev56', `pca56', `ev6',
-     `ev67', `ev68'.  The special name `all' may be used to allow the
+     The following processor names are recognized: '21064', '21064a',
+     '21066', '21068', '21164', '21164a', '21164pc', '21264', '21264a',
+     '21264b', 'ev4', 'ev5', 'lca45', 'ev5', 'ev56', 'pca56', 'ev6',
+     'ev67', 'ev68'.  The special name 'all' may be used to allow the
      assembler to accept instructions valid for any Alpha processor.
 
      In order to support existing practice in OSF/1 with respect to
-     `.arch', and existing practice within `MILO' (the Linux ARC
+     '.arch', and existing practice within 'MILO' (the Linux ARC
      bootloader), the numbered processor names (e.g. 21064) enable the
-     processor-specific PALcode instructions, while the
-     "electro-vlasic" names (e.g. `ev4') do not.
+     processor-specific PALcode instructions, while the "electro-vlasic"
+     names (e.g. 'ev4') do not.
 
-`-mdebug'
-`-no-mdebug'
-     Enables or disables the generation of `.mdebug' encapsulation for
+'-mdebug'
+'-no-mdebug'
+     Enables or disables the generation of '.mdebug' encapsulation for
      stabs directives and procedure descriptors.  The default is to
-     automatically enable `.mdebug' when the first stabs directive is
+     automatically enable '.mdebug' when the first stabs directive is
      seen.
 
-`-relax'
+'-relax'
      This option forces all relocations to be put into the object file,
      instead of saving space and resolving some relocations at assembly
      time.  Note that this option does not propagate all symbol
@@ -6541,25 +6339,25 @@ File: as.info,  Node: Alpha Options,  Next: Alpha Syntax,  Prev: Alpha Notes,  U
      can be represented.  However, the option can still be useful in
      specific applications.
 
-`-replace'
-`-noreplace'
+'-replace'
+'-noreplace'
      Enables or disables the optimization of procedure calls, both at
      assemblage and at link time.  These options are only available for
-     VMS targets and `-replace' is the default.  See section 1.4.1 of
+     VMS targets and '-replace' is the default.  See section 1.4.1 of
      the OpenVMS Linker Utility Manual.
 
-`-g'
+'-g'
      This option is used when the compiler generates debug information.
-     When `gcc' is using `mips-tfile' to generate debug information
-     for ECOFF, local labels must be passed through to the object file.
+     When 'gcc' is using 'mips-tfile' to generate debug information for
+     ECOFF, local labels must be passed through to the object file.
      Otherwise this option has no effect.
 
-`-GSIZE'
-     A local common symbol larger than SIZE is placed in `.bss', while
-     smaller symbols are placed in `.sbss'.
+'-GSIZE'
+     A local common symbol larger than SIZE is placed in '.bss', while
+     smaller symbols are placed in '.sbss'.
 
-`-F'
-`-32addr'
+'-F'
+'-32addr'
      These options are ignored for backward compatibility.
 
 
@@ -6584,12 +6382,12 @@ File: as.info,  Node: Alpha-Chars,  Next: Alpha-Regs,  Up: Alpha Syntax
 9.2.3.1 Special Characters
 ..........................
 
-`#' is the line comment character.  Note that if `#' is the first
+'#' is the line comment character.  Note that if '#' is the first
 character on a line then it can also be a logical line number directive
 (*note Comments::) or a preprocessor control command (*note
 Preprocessing::).
 
-   `;' can be used instead of a newline to separate statements.
+   ';' can be used instead of a newline to separate statements.
 
 
 File: as.info,  Node: Alpha-Regs,  Next: Alpha-Relocs,  Prev: Alpha-Chars,  Up: Alpha Syntax
@@ -6597,11 +6395,11 @@ File: as.info,  Node: Alpha-Regs,  Next: Alpha-Relocs,  Prev: Alpha-Chars,  Up:
 9.2.3.2 Register Names
 ......................
 
-The 32 integer registers are referred to as `$N' or `$rN'.  In
-addition, registers 15, 28, 29, and 30 may be referred to by the
-symbols `$fp', `$at', `$gp', and `$sp' respectively.
+The 32 integer registers are referred to as '$N' or '$rN'.  In addition,
+registers 15, 28, 29, and 30 may be referred to by the symbols '$fp',
+'$at', '$gp', and '$sp' respectively.
 
-   The 32 floating-point registers are referred to as `$fN'.
+   The 32 floating-point registers are referred to as '$fN'.
 
 
 File: as.info,  Node: Alpha-Relocs,  Prev: Alpha-Regs,  Up: Alpha Syntax
@@ -6610,10 +6408,10 @@ File: as.info,  Node: Alpha-Relocs,  Prev: Alpha-Regs,  Up: Alpha Syntax
 ...................
 
 Some of these relocations are available for ECOFF, but mostly only for
-ELF.  They are modeled after the relocation format introduced in
-Digital Unix 4.0, but there are additions.
+ELF. They are modeled after the relocation format introduced in Digital
+Unix 4.0, but there are additions.
 
-   The format is `!TAG' or `!TAG!NUMBER' where TAG is the name of the
+   The format is '!TAG' or '!TAG!NUMBER' where TAG is the name of the
 relocation.  In some cases NUMBER is used to relate specific
 instructions.
 
@@ -6624,147 +6422,145 @@ instructions.
      ldq   $1,b($29)    !literal!100
      ldl   $2,0($1)     !lituse_base!100
 
-`!literal'
-`!literal!N'
-     Used with an `ldq' instruction to load the address of a symbol
-     from the GOT.
+'!literal'
+'!literal!N'
+     Used with an 'ldq' instruction to load the address of a symbol from
+     the GOT.
 
      A sequence number N is optional, and if present is used to pair
-     `lituse' relocations with this `literal' relocation.  The `lituse'
+     'lituse' relocations with this 'literal' relocation.  The 'lituse'
      relocations are used by the linker to optimize the code based on
      the final location of the symbol.
 
      Note that these optimizations are dependent on the data flow of the
-     program.  Therefore, if _any_ `lituse' is paired with a `literal'
-     relocation, then _all_ uses of the register set by the `literal'
-     instruction must also be marked with `lituse' relocations.  This
-     is because the original `literal' instruction may be deleted or
+     program.  Therefore, if _any_ 'lituse' is paired with a 'literal'
+     relocation, then _all_ uses of the register set by the 'literal'
+     instruction must also be marked with 'lituse' relocations.  This is
+     because the original 'literal' instruction may be deleted or
      transformed into another instruction.
 
      Also note that there may be a one-to-many relationship between
-     `literal' and `lituse', but not a many-to-one.  That is, if there
-     are two code paths that load up the same address and feed the
-     value to a single use, then the use may not use a `lituse'
-     relocation.
+     'literal' and 'lituse', but not a many-to-one.  That is, if there
+     are two code paths that load up the same address and feed the value
+     to a single use, then the use may not use a 'lituse' relocation.
 
-`!lituse_base!N'
-     Used with any memory format instruction (e.g. `ldl') to indicate
+'!lituse_base!N'
+     Used with any memory format instruction (e.g. 'ldl') to indicate
      that the literal is used for an address load.  The offset field of
      the instruction must be zero.  During relaxation, the code may be
      altered to use a gp-relative load.
 
-`!lituse_jsr!N'
-     Used with a register branch format instruction (e.g. `jsr') to
+'!lituse_jsr!N'
+     Used with a register branch format instruction (e.g. 'jsr') to
      indicate that the literal is used for a call.  During relaxation,
-     the code may be altered to use a direct branch (e.g. `bsr').
+     the code may be altered to use a direct branch (e.g. 'bsr').
 
-`!lituse_jsrdirect!N'
-     Similar to `lituse_jsr', but also that this call cannot be vectored
+'!lituse_jsrdirect!N'
+     Similar to 'lituse_jsr', but also that this call cannot be vectored
      through a PLT entry.  This is useful for functions with special
      calling conventions which do not allow the normal call-clobbered
      registers to be clobbered.
 
-`!lituse_bytoff!N'
-     Used with a byte mask instruction (e.g. `extbl') to indicate that
+'!lituse_bytoff!N'
+     Used with a byte mask instruction (e.g. 'extbl') to indicate that
      only the low 3 bits of the address are relevant.  During
      relaxation, the code may be altered to use an immediate instead of
      a register shift.
 
-`!lituse_addr!N'
+'!lituse_addr!N'
      Used with any other instruction to indicate that the original
-     address is in fact used, and the original `ldq' instruction may
-     not be altered or deleted.  This is useful in conjunction with
-     `lituse_jsr' to test whether a weak symbol is defined.
+     address is in fact used, and the original 'ldq' instruction may not
+     be altered or deleted.  This is useful in conjunction with
+     'lituse_jsr' to test whether a weak symbol is defined.
 
           ldq  $27,foo($29)   !literal!1
           beq  $27,is_undef   !lituse_addr!1
           jsr  $26,($27),foo  !lituse_jsr!1
 
-`!lituse_tlsgd!N'
+'!lituse_tlsgd!N'
      Used with a register branch format instruction to indicate that the
-     literal is the call to `__tls_get_addr' used to compute the
-     address of the thread-local storage variable whose descriptor was
-     loaded with `!tlsgd!N'.
+     literal is the call to '__tls_get_addr' used to compute the address
+     of the thread-local storage variable whose descriptor was loaded
+     with '!tlsgd!N'.
 
-`!lituse_tlsldm!N'
+'!lituse_tlsldm!N'
      Used with a register branch format instruction to indicate that the
-     literal is the call to `__tls_get_addr' used to compute the
-     address of the base of the thread-local storage block for the
-     current module.  The descriptor for the module must have been
-     loaded with `!tlsldm!N'.
-
-`!gpdisp!N'
-     Used with `ldah' and `lda' to load the GP from the current
-     address, a-la the `ldgp' macro.  The source register for the
-     `ldah' instruction must contain the address of the `ldah'
-     instruction.  There must be exactly one `lda' instruction paired
-     with the `ldah' instruction, though it may appear anywhere in the
-     instruction stream.  The immediate operands must be zero.
+     literal is the call to '__tls_get_addr' used to compute the address
+     of the base of the thread-local storage block for the current
+     module.  The descriptor for the module must have been loaded with
+     '!tlsldm!N'.
+
+'!gpdisp!N'
+     Used with 'ldah' and 'lda' to load the GP from the current address,
+     a-la the 'ldgp' macro.  The source register for the 'ldah'
+     instruction must contain the address of the 'ldah' instruction.
+     There must be exactly one 'lda' instruction paired with the 'ldah'
+     instruction, though it may appear anywhere in the instruction
+     stream.  The immediate operands must be zero.
 
           bsr  $26,foo
           ldah $29,0($26)     !gpdisp!1
           lda  $29,0($29)     !gpdisp!1
 
-`!gprelhigh'
-     Used with an `ldah' instruction to add the high 16 bits of a
-     32-bit displacement from the GP.
+'!gprelhigh'
+     Used with an 'ldah' instruction to add the high 16 bits of a 32-bit
+     displacement from the GP.
 
-`!gprellow'
+'!gprellow'
      Used with any memory format instruction to add the low 16 bits of a
      32-bit displacement from the GP.
 
-`!gprel'
+'!gprel'
      Used with any memory format instruction to add a 16-bit
      displacement from the GP.
 
-`!samegp'
+'!samegp'
      Used with any branch format instruction to skip the GP load at the
      target address.  The referenced symbol must have the same GP as the
-     source object file, and it must be declared to either not use `$27'
+     source object file, and it must be declared to either not use '$27'
      or perform a standard GP load in the first two instructions via the
-     `.prologue' directive.
+     '.prologue' directive.
 
-`!tlsgd'
-`!tlsgd!N'
-     Used with an `lda' instruction to load the address of a TLS
+'!tlsgd'
+'!tlsgd!N'
+     Used with an 'lda' instruction to load the address of a TLS
      descriptor for a symbol in the GOT.
 
      The sequence number N is optional, and if present it used to pair
-     the descriptor load with both the `literal' loading the address of
-     the `__tls_get_addr' function and the `lituse_tlsgd' marking the
+     the descriptor load with both the 'literal' loading the address of
+     the '__tls_get_addr' function and the 'lituse_tlsgd' marking the
      call to that function.
 
-     For proper relaxation, both the `tlsgd', `literal' and `lituse'
-     relocations must be in the same extended basic block.  That is,
-     the relocation with the lowest address must be executed first at
+     For proper relaxation, both the 'tlsgd', 'literal' and 'lituse'
+     relocations must be in the same extended basic block.  That is, the
+     relocation with the lowest address must be executed first at
      runtime.
 
-`!tlsldm'
-`!tlsldm!N'
-     Used with an `lda' instruction to load the address of a TLS
+'!tlsldm'
+'!tlsldm!N'
+     Used with an 'lda' instruction to load the address of a TLS
      descriptor for the current module in the GOT.
 
-     Similar in other respects to `tlsgd'.
+     Similar in other respects to 'tlsgd'.
 
-`!gotdtprel'
-     Used with an `ldq' instruction to load the offset of the TLS
-     symbol within its module's thread-local storage block.  Also known
-     as the dynamic thread pointer offset or dtp-relative offset.
+'!gotdtprel'
+     Used with an 'ldq' instruction to load the offset of the TLS symbol
+     within its module's thread-local storage block.  Also known as the
+     dynamic thread pointer offset or dtp-relative offset.
 
-`!dtprelhi'
-`!dtprello'
-`!dtprel'
-     Like `gprel' relocations except they compute dtp-relative offsets.
+'!dtprelhi'
+'!dtprello'
+'!dtprel'
+     Like 'gprel' relocations except they compute dtp-relative offsets.
 
-`!gottprel'
-     Used with an `ldq' instruction to load the offset of the TLS
-     symbol from the thread pointer.  Also known as the tp-relative
-     offset.
+'!gottprel'
+     Used with an 'ldq' instruction to load the offset of the TLS symbol
+     from the thread pointer.  Also known as the tp-relative offset.
 
-`!tprelhi'
-`!tprello'
-`!tprel'
-     Like `gprel' relocations except they compute tp-relative offsets.
+'!tprelhi'
+'!tprello'
+'!tprel'
+     Like 'gprel' relocations except they compute tp-relative offsets.
 
 
 File: as.info,  Node: Alpha Floating Point,  Next: Alpha Directives,  Prev: Alpha Syntax,  Up: Alpha-Dependent
@@ -6780,122 +6576,121 @@ File: as.info,  Node: Alpha Directives,  Next: Alpha Opcodes,  Prev: Alpha Float
 9.2.5 Alpha Assembler Directives
 --------------------------------
 
-`as' for the Alpha supports many additional directives for
-compatibility with the native assembler.  This section describes them
-only briefly.
+'as' for the Alpha supports many additional directives for compatibility
+with the native assembler.  This section describes them only briefly.
 
-   These are the additional directives in `as' for the Alpha:
+   These are the additional directives in 'as' for the Alpha:
 
-`.arch CPU'
-     Specifies the target processor.  This is equivalent to the `-mCPU'
+'.arch CPU'
+     Specifies the target processor.  This is equivalent to the '-mCPU'
      command-line option.  *Note Options: Alpha Options, for a list of
      values for CPU.
 
-`.ent FUNCTION[, N]'
+'.ent FUNCTION[, N]'
      Mark the beginning of FUNCTION.  An optional number may follow for
      compatibility with the OSF/1 assembler, but is ignored.  When
-     generating `.mdebug' information, this will create a procedure
+     generating '.mdebug' information, this will create a procedure
      descriptor for the function.  In ELF, it will mark the symbol as a
-     function a-la the generic `.type' directive.
+     function a-la the generic '.type' directive.
 
-`.end FUNCTION'
+'.end FUNCTION'
      Mark the end of FUNCTION.  In ELF, it will set the size of the
-     symbol a-la the generic `.size' directive.
+     symbol a-la the generic '.size' directive.
 
-`.mask MASK, OFFSET'
+'.mask MASK, OFFSET'
      Indicate which of the integer registers are saved in the current
      function's stack frame.  MASK is interpreted a bit mask in which
      bit N set indicates that register N is saved.  The registers are
      saved in a block located OFFSET bytes from the "canonical frame
      address" (CFA) which is the value of the stack pointer on entry to
      the function.  The registers are saved sequentially, except that
-     the return address register (normally `$26') is saved first.
+     the return address register (normally '$26') is saved first.
 
      This and the other directives that describe the stack frame are
-     currently only used when generating `.mdebug' information.  They
-     may in the future be used to generate DWARF2 `.debug_frame' unwind
+     currently only used when generating '.mdebug' information.  They
+     may in the future be used to generate DWARF2 '.debug_frame' unwind
      information for hand written assembly.
 
-`.fmask MASK, OFFSET'
+'.fmask MASK, OFFSET'
      Indicate which of the floating-point registers are saved in the
      current stack frame.  The MASK and OFFSET parameters are
-     interpreted as with `.mask'.
+     interpreted as with '.mask'.
 
-`.frame FRAMEREG, FRAMEOFFSET, RETREG[, ARGOFFSET]'
+'.frame FRAMEREG, FRAMEOFFSET, RETREG[, ARGOFFSET]'
      Describes the shape of the stack frame.  The frame pointer in use
-     is FRAMEREG; normally this is either `$fp' or `$sp'.  The frame
-     pointer is FRAMEOFFSET bytes below the CFA.  The return address is
+     is FRAMEREG; normally this is either '$fp' or '$sp'.  The frame
+     pointer is FRAMEOFFSET bytes below the CFA. The return address is
      initially located in RETREG until it is saved as indicated in
-     `.mask'.  For compatibility with OSF/1 an optional ARGOFFSET
+     '.mask'.  For compatibility with OSF/1 an optional ARGOFFSET
      parameter is accepted and ignored.  It is believed to indicate the
      offset from the CFA to the saved argument registers.
 
-`.prologue N'
+'.prologue N'
      Indicate that the stack frame is set up and all registers have been
      spilled.  The argument N indicates whether and how the function
      uses the incoming "procedure vector" (the address of the called
-     function) in `$27'.  0 indicates that `$27' is not used; 1
-     indicates that the first two instructions of the function use `$27'
-     to perform a load of the GP register; 2 indicates that `$27' is
+     function) in '$27'.  0 indicates that '$27' is not used; 1
+     indicates that the first two instructions of the function use '$27'
+     to perform a load of the GP register; 2 indicates that '$27' is
      used in some non-standard way and so the linker cannot elide the
      load of the procedure vector during relaxation.
 
-`.usepv FUNCTION, WHICH'
-     Used to indicate the use of the `$27' register, similar to
-     `.prologue', but without the other semantics of needing to be
-     inside an open `.ent'/`.end' block.
+'.usepv FUNCTION, WHICH'
+     Used to indicate the use of the '$27' register, similar to
+     '.prologue', but without the other semantics of needing to be
+     inside an open '.ent'/'.end' block.
 
-     The WHICH argument should be either `no', indicating that `$27' is
-     not used, or `std', indicating that the first two instructions of
+     The WHICH argument should be either 'no', indicating that '$27' is
+     not used, or 'std', indicating that the first two instructions of
      the function perform a GP load.
 
-     One might use this directive instead of `.prologue' if you are
-     also using dwarf2 CFI directives.
+     One might use this directive instead of '.prologue' if you are also
+     using dwarf2 CFI directives.
 
-`.gprel32 EXPRESSION'
+'.gprel32 EXPRESSION'
      Computes the difference between the address in EXPRESSION and the
      GP for the current object file, and stores it in 4 bytes.  In
      addition to being smaller than a full 8 byte address, this also
      does not require a dynamic relocation when used in a shared
      library.
 
-`.t_floating EXPRESSION'
+'.t_floating EXPRESSION'
      Stores EXPRESSION as an IEEE double precision value.
 
-`.s_floating EXPRESSION'
+'.s_floating EXPRESSION'
      Stores EXPRESSION as an IEEE single precision value.
 
-`.f_floating EXPRESSION'
+'.f_floating EXPRESSION'
      Stores EXPRESSION as a VAX F format value.
 
-`.g_floating EXPRESSION'
+'.g_floating EXPRESSION'
      Stores EXPRESSION as a VAX G format value.
 
-`.d_floating EXPRESSION'
+'.d_floating EXPRESSION'
      Stores EXPRESSION as a VAX D format value.
 
-`.set FEATURE'
+'.set FEATURE'
      Enables or disables various assembler features.  Using the positive
-     name of the feature enables while using `noFEATURE' disables.
+     name of the feature enables while using 'noFEATURE' disables.
 
-    `at'
+     'at'
           Indicates that macro expansions may clobber the "assembler
-          temporary" (`$at' or `$28') register.  Some macros may not be
+          temporary" ('$at' or '$28') register.  Some macros may not be
           expanded without this and will generate an error message if
-          `noat' is in effect.  When `at' is in effect, a warning will
-          be generated if `$at' is used by the programmer.
+          'noat' is in effect.  When 'at' is in effect, a warning will
+          be generated if '$at' is used by the programmer.
 
-    `macro'
+     'macro'
           Enables the expansion of macro instructions.  Note that
-          variants of real instructions, such as `br label' vs `br
+          variants of real instructions, such as 'br label' vs 'br
           $31,label' are considered alternate forms and not macros.
 
-    `move'
-    `reorder'
-    `volatile'
+     'move'
+     'reorder'
+     'volatile'
           These control whether and how the assembler may re-order
           instructions.  Accepted for compatibility with the OSF/1
-          assembler, but `as' does not do instruction scheduling, so
+          assembler, but 'as' does not do instruction scheduling, so
           these features are ignored.
 
    The following directives are recognized for compatibility with the
@@ -6941,114 +6736,112 @@ File: as.info,  Node: ARC Options,  Next: ARC Syntax,  Up: ARC-Dependent
 The following options control the type of CPU for which code is
 assembled, and generic constraints on the code generated:
 
-`-mcpu=CPU'
+'-mcpu=CPU'
      Set architecture type and register usage for CPU.  There are also
      shortcut alias options available for backward compatibility and
      convenience.  Supported values for CPU are
 
-    `arc600'
-          Assemble for ARC 600.  Aliases: `-mA6', `-mARC600'.
+     'arc600'
+          Assemble for ARC 600.  Aliases: '-mA6', '-mARC600'.
 
-    `arc600_norm'
+     'arc600_norm'
           Assemble for ARC 600 with norm instructions.
 
-    `arc600_mul64'
+     'arc600_mul64'
           Assemble for ARC 600 with mul64 instructions.
 
-    `arc600_mul32x16'
+     'arc600_mul32x16'
           Assemble for ARC 600 with mul32x16 instructions.
 
-    `arc601'
-          Assemble for ARC 601.  Alias: `-mARC601'.
+     'arc601'
+          Assemble for ARC 601.  Alias: '-mARC601'.
 
-    `arc601_norm'
+     'arc601_norm'
           Assemble for ARC 601 with norm instructions.
 
-    `arc601_mul64'
+     'arc601_mul64'
           Assemble for ARC 601 with mul64 instructions.
 
-    `arc601_mul32x16'
+     'arc601_mul32x16'
           Assemble for ARC 601 with mul32x16 instructions.
 
-    `arc700'
-          Assemble for ARC 700.  Aliases: `-mA7', `-mARC700'.
+     'arc700'
+          Assemble for ARC 700.  Aliases: '-mA7', '-mARC700'.
 
-    `arcem'
-          Assemble for ARC EM.  Aliases: `-mEM'
+     'arcem'
+          Assemble for ARC EM. Aliases: '-mEM'
 
-    `em'
+     'em'
           Assemble for ARC EM, identical as arcem variant.
 
-    `em4'
+     'em4'
           Assemble for ARC EM with code-density instructions.
 
-    `em4_dmips'
+     'em4_dmips'
           Assemble for ARC EM with code-density instructions.
 
-    `em4_fpus'
+     'em4_fpus'
           Assemble for ARC EM with code-density instructions.
 
-    `em4_fpuda'
+     'em4_fpuda'
           Assemble for ARC EM with code-density, and double-precision
           assist instructions.
 
-    `quarkse_em'
+     'quarkse_em'
           Assemble for QuarkSE-EM cpu.
 
-    `archs'
-          Assemble for ARC HS.  Aliases: `-mHS', `-mav2hs'.
+     'archs'
+          Assemble for ARC HS. Aliases: '-mHS', '-mav2hs'.
 
-    `hs'
+     'hs'
           Assemble for ARC HS.
 
-    `hs34'
+     'hs34'
           Assemble for ARC HS34.
 
-    `hs38'
+     'hs38'
           Assemble for ARC HS38.
 
-    `hs38_linux'
+     'hs38_linux'
           Assemble for ARC HS38 with floating point support on.
 
-    `nps400'
+     'nps400'
           Assemble for ARC 700 with NPS-400 extended instructions.
 
-
-     Note: the `.cpu' directive (*note ARC Directives::) can to be used
+     Note: the '.cpu' directive (*note ARC Directives::) can to be used
      to select a core variant from within assembly code.
 
-`-EB'
+'-EB'
      This option specifies that the output generated by the assembler
      should be marked as being encoded for a big-endian processor.
 
-`-EL'
+'-EL'
      This option specifies that the output generated by the assembler
      should be marked as being encoded for a little-endian processor -
      this is the default.
 
-`-mcode-density'
-     This option turns on Code Density instructions.  Only valid for
-     ARC EM processors.
+'-mcode-density'
+     This option turns on Code Density instructions.  Only valid for ARC
+     EM processors.
 
-`-mrelax'
+'-mrelax'
      Enable support for assembly-time relaxation.  The assembler will
      replace a longer version of an instruction with a shorter one,
      whenever it is possible.
 
-`-mnps400'
+'-mnps400'
      Enable support for NPS-400 extended instructions.
 
-`-mspfp'
+'-mspfp'
      Enable support for single-precision floating point instructions.
 
-`-mdpfp'
+'-mdpfp'
      Enable support for double-precision floating point instructions.
 
-`-mfpuda'
+'-mfpuda'
      Enable support for double-precision assist floating point
      instructions.  Only valid for ARC EM processors.
 
-
 
 File: as.info,  Node: ARC Syntax,  Next: ARC Directives,  Prev: ARC Options,  Up: ARC-Dependent
 
@@ -7066,35 +6859,34 @@ File: as.info,  Node: ARC-Chars,  Next: ARC-Regs,  Up: ARC Syntax
 9.3.2.1 Special Characters
 ..........................
 
-`%'
-     A register name can optionally be prefixed by a `%' character.  So
-     register `%r0' is equivalent to `r0' in the assembly code.
+'%'
+     A register name can optionally be prefixed by a '%' character.  So
+     register '%r0' is equivalent to 'r0' in the assembly code.
 
-`#'
-     The presence of a `#' character within a line (but not at the
-     start of a line) indicates the start of a comment that extends to
-     the end of the current line.
+'#'
+     The presence of a '#' character within a line (but not at the start
+     of a line) indicates the start of a comment that extends to the end
+     of the current line.
 
-     _Note:_ if a line starts with a `#' character then it can also be
-     a logical line number directive (*note Comments::) or a
-     preprocessor control command (*note Preprocessing::).
+     _Note:_ if a line starts with a '#' character then it can also be a
+     logical line number directive (*note Comments::) or a preprocessor
+     control command (*note Preprocessing::).
 
-`@'
-     Prefixing an operand with an `@' specifies that the operand is a
+'@'
+     Prefixing an operand with an '@' specifies that the operand is a
      symbol and not a register.  This is how the assembler disambiguates
      the use of an ARC register name as a symbol.  So the instruction
           mov r0, @r0
-     moves the address of symbol `r0' into register `r0'.
+     moves the address of symbol 'r0' into register 'r0'.
 
-``'
-     The ``' (backtick) character is used to separate statements on a
+'`'
+     The '`' (backtick) character is used to separate statements on a
      single line.
 
-`-'
+'-'
      Used as a separator to obtain a sequence of commands from a C
      preprocessor macro.
 
-
 
 File: as.info,  Node: ARC-Regs,  Prev: ARC-Chars,  Up: ARC Syntax
 
@@ -7104,102 +6896,100 @@ File: as.info,  Node: ARC-Regs,  Prev: ARC-Chars,  Up: ARC Syntax
 The ARC assembler uses the following register names for its core
 registers:
 
-`r0-r31'
-     The core general registers.  Registers `r26' through `r31' have
+'r0-r31'
+     The core general registers.  Registers 'r26' through 'r31' have
      special functions, and are usually referred to by those synonyms.
 
-`gp'
-     The global pointer and a synonym for `r26'.
+'gp'
+     The global pointer and a synonym for 'r26'.
 
-`fp'
-     The frame pointer and a synonym for `r27'.
+'fp'
+     The frame pointer and a synonym for 'r27'.
 
-`sp'
-     The stack pointer and a synonym for `r28'.
+'sp'
+     The stack pointer and a synonym for 'r28'.
 
-`ilink1'
+'ilink1'
      For ARC 600 and ARC 700, the level 1 interrupt link register and a
-     synonym for `r29'.  Not supported for ARCv2.
+     synonym for 'r29'.  Not supported for ARCv2.
 
-`ilink'
-     For ARCv2, the interrupt link register and a synonym for `r29'.
+'ilink'
+     For ARCv2, the interrupt link register and a synonym for 'r29'.
      Not supported for ARC 600 and ARC 700.
 
-`ilink2'
+'ilink2'
      For ARC 600 and ARC 700, the level 2 interrupt link register and a
-     synonym for `r30'.  Not supported for ARC v2.
+     synonym for 'r30'.  Not supported for ARC v2.
 
-`blink'
-     The link register and a synonym for `r31'.
+'blink'
+     The link register and a synonym for 'r31'.
 
-`r32-r59'
+'r32-r59'
      The extension core registers.
 
-`lp_count'
+'lp_count'
      The loop count register.
 
-`pcl'
+'pcl'
      The word aligned program counter.
 
-
    In addition the ARC processor has a large number of _auxiliary
 registers_.  The precise set depends on the extensions being supported,
 but the following baseline set are always defined:
 
-`identity'
+'identity'
      Processor Identification register.  Auxiliary register address 0x4.
 
-`pc'
+'pc'
      Program Counter.  Auxiliary register address 0x6.
 
-`status32'
+'status32'
      Status register.  Auxiliary register address 0x0a.
 
-`bta'
+'bta'
      Branch Target Address.  Auxiliary register address 0x412.
 
-`ecr'
+'ecr'
      Exception Cause Register.  Auxiliary register address 0x403.
 
-`int_vector_base'
+'int_vector_base'
      Interrupt Vector Base address.  Auxiliary register address 0x25.
 
-`status32_p0'
+'status32_p0'
      Stored STATUS32 register on entry to level P0 interrupts.
      Auxiliary register address 0xb.
 
-`aux_user_sp'
+'aux_user_sp'
      Saved User Stack Pointer.  Auxiliary register address 0xd.
 
-`eret'
+'eret'
      Exception Return Address.  Auxiliary register address 0x400.
 
-`erbta'
+'erbta'
      BTA saved on exception entry.  Auxiliary register address 0x401.
 
-`erstatus'
+'erstatus'
      STATUS32 saved on exception.  Auxiliary register address 0x402.
 
-`bcr_ver'
+'bcr_ver'
      Build Configuration Registers Version.  Auxiliary register address
      0x60.
 
-`bta_link_build'
-     Build configuration for: BTA Registers.  Auxiliary register
-     address 0x63.
+'bta_link_build'
+     Build configuration for: BTA Registers.  Auxiliary register address
+     0x63.
 
-`vecbase_ac_build'
+'vecbase_ac_build'
      Build configuration for: Interrupts.  Auxiliary register address
      0x68.
 
-`rf_build'
+'rf_build'
      Build configuration for: Core Registers.  Auxiliary register
      address 0x6e.
 
-`dccm_build'
+'dccm_build'
      DCCM RAM Configuration Register.  Auxiliary register address 0xc1.
 
-
    Additional auxiliary register names are defined according to the
 processor architecture version and extensions selected by the options.
 
@@ -7209,128 +6999,126 @@ File: as.info,  Node: ARC Directives,  Next: ARC Modifiers,  Prev: ARC Syntax,
 9.3.3 ARC Machine Directives
 ----------------------------
 
-The ARC version of `as' supports the following additional machine
+The ARC version of 'as' supports the following additional machine
 directives:
 
-`.lcomm SYMBOL, LENGTH[, ALIGNMENT]'
+'.lcomm SYMBOL, LENGTH[, ALIGNMENT]'
      Reserve LENGTH (an absolute expression) bytes for a local common
      denoted by SYMBOL.  The section and value of SYMBOL are those of
      the new local common.  The addresses are allocated in the bss
      section, so that at run-time the bytes start off zeroed.  Since
-     SYMBOL is not declared global, it is normally not visible to `ld'.
+     SYMBOL is not declared global, it is normally not visible to 'ld'.
      The optional third parameter, ALIGNMENT, specifies the desired
      alignment of the symbol in the bss section, specified as a byte
      boundary (for example, an alignment of 16 means that the least
      significant 4 bits of the address should be zero).  The alignment
      must be an absolute expression, and it must be a power of two.  If
-     no alignment is specified, as will set the alignment to the
-     largest power of two less than or equal to the size of the symbol,
-     up to a maximum of 16.
+     no alignment is specified, as will set the alignment to the largest
+     power of two less than or equal to the size of the symbol, up to a
+     maximum of 16.
 
-`.lcommon SYMBOL, LENGTH[, ALIGNMENT]'
-     The same as `lcomm' directive.
+'.lcommon SYMBOL, LENGTH[, ALIGNMENT]'
+     The same as 'lcomm' directive.
 
-`.cpu CPU'
-     The `.cpu' directive must be followed by the desired core version.
+'.cpu CPU'
+     The '.cpu' directive must be followed by the desired core version.
      Permitted values for CPU are:
-    `ARC600'
+     'ARC600'
           Assemble for the ARC600 instruction set.
 
-    `arc600_norm'
+     'arc600_norm'
           Assemble for ARC 600 with norm instructions.
 
-    `arc600_mul64'
+     'arc600_mul64'
           Assemble for ARC 600 with mul64 instructions.
 
-    `arc600_mul32x16'
+     'arc600_mul32x16'
           Assemble for ARC 600 with mul32x16 instructions.
 
-    `arc601'
+     'arc601'
           Assemble for ARC 601 instruction set.
 
-    `arc601_norm'
+     'arc601_norm'
           Assemble for ARC 601 with norm instructions.
 
-    `arc601_mul64'
+     'arc601_mul64'
           Assemble for ARC 601 with mul64 instructions.
 
-    `arc601_mul32x16'
+     'arc601_mul32x16'
           Assemble for ARC 601 with mul32x16 instructions.
 
-    `ARC700'
+     'ARC700'
           Assemble for the ARC700 instruction set.
 
-    `NPS400'
+     'NPS400'
           Assemble for the NPS400 instruction set.
 
-    `EM'
+     'EM'
           Assemble for the ARC EM instruction set.
 
-    `arcem'
+     'arcem'
           Assemble for ARC EM instruction set
 
-    `em4'
+     'em4'
           Assemble for ARC EM with code-density instructions.
 
-    `em4_dmips'
+     'em4_dmips'
           Assemble for ARC EM with code-density instructions.
 
-    `em4_fpus'
+     'em4_fpus'
           Assemble for ARC EM with code-density instructions.
 
-    `em4_fpuda'
+     'em4_fpuda'
           Assemble for ARC EM with code-density, and double-precision
           assist instructions.
 
-    `quarkse_em'
+     'quarkse_em'
           Assemble for QuarkSE-EM instruction set.
 
-    `HS'
+     'HS'
           Assemble for the ARC HS instruction set.
 
-    `archs'
+     'archs'
           Assemble for ARC HS instruction set.
 
-    `hs'
+     'hs'
           Assemble for ARC HS instruction set.
 
-    `hs34'
+     'hs34'
           Assemble for ARC HS34 instruction set.
 
-    `hs38'
+     'hs38'
           Assemble for ARC HS38 instruction set.
 
-    `hs38_linux'
+     'hs38_linux'
           Assemble for ARC HS38 with floating point support on.
 
-
-     Note: the `.cpu' directive overrides the command line option
-     `-mcpu=CPU'; a warning is emitted when the version is not
+     Note: the '.cpu' directive overrides the command line option
+     '-mcpu=CPU'; a warning is emitted when the version is not
      consistent between the two.
 
-`.extAuxRegister NAME, ADDR, MODE'
+'.extAuxRegister NAME, ADDR, MODE'
      Auxiliary registers can be defined in the assembler source code by
      using this directive.  The first parameter, NAME, is the name of
-     the new auxiliary register.  The second parameter, ADDR, is
-     address the of the auxiliary register.  The third parameter, MODE,
+     the new auxiliary register.  The second parameter, ADDR, is address
+     the of the auxiliary register.  The third parameter, MODE,
      specifies whether the register is readable and/or writable and is
      one of:
-    `r'
+     'r'
           Read only;
 
-    `w'
+     'w'
           Write only;
 
-    `r|w'
+     'r|w'
           Read and write.
 
-
      For example:
           	.extAuxRegister mulhi, 0x12, w
      specifies a write only extension auxiliary register, MULHI at
      address 0x12.
 
-`.extCondCode SUFFIX, VAL'
+'.extCondCode SUFFIX, VAL'
      ARC supports extensible condition codes.  This directive defines a
      new condition code, to be known by the suffix, SUFFIX and will
      depend on the value, VAL in the condition code.
@@ -7338,38 +7126,37 @@ directives:
      For example:
           	.extCondCode is_busy,0x14
           	add.is_busy  r1,r2,r3
-     will only execute the `add' instruction if the condition code
-     value is 0x14.
+     will only execute the 'add' instruction if the condition code value
+     is 0x14.
 
-`.extCoreRegister NAME, REGNUM, MODE, SHORTCUT'
+'.extCoreRegister NAME, REGNUM, MODE, SHORTCUT'
      Specifies an extension core register named NAME as a synonym for
      the register numbered REGNUM.  The register number must be between
      32 and 59.  The third argument, MODE, indicates whether the
      register is readable and/or writable and is one of:
-    `r'
+     'r'
           Read only;
 
-    `w'
+     'w'
           Write only;
 
-    `r|w'
+     'r|w'
           Read and write.
 
-
      The final parameter, SHORTCUT indicates whether the register has a
      short cut in the pipeline.  The valid values are:
-    `can_shortcut'
+     'can_shortcut'
           The register has a short cut in the pipeline;
 
-    `cannot_shortcut'
+     'cannot_shortcut'
           The register does not have a short cut in the pipeline.
 
      For example:
           	.extCoreRegister mlo, 57, r , can_shortcut
-     defines a read only extension core register, `mlo', which is
+     defines a read only extension core register, 'mlo', which is
      register 57, and can short cut the pipeline.
 
-`.extInstruction NAME, OPCODE, SUBOPCODE, SUFFIXCLASS, SYNTAXCLASS'
+'.extInstruction NAME, OPCODE, SUBOPCODE, SUFFIXCLASS, SYNTAXCLASS'
      ARC allows the user to specify extension instructions.  These
      extension instructions are not macros; the assembler creates
      encodings for use of these instructions according to the
@@ -7385,45 +7172,45 @@ directives:
 
      The fourth argument, SUFFIXCLASS, determines the kinds of suffixes
      to be allowed.  Valid values are:
-    `SUFFIX_NONE'
+     'SUFFIX_NONE'
           No suffixes are permitted;
 
-    `SUFFIX_COND'
+     'SUFFIX_COND'
           Conditional suffixes are permitted;
 
-    `SUFFIX_FLAG'
+     'SUFFIX_FLAG'
           Flag setting suffixes are permitted.
 
-    `SUFFIX_COND|SUFFIX_FLAG'
+     'SUFFIX_COND|SUFFIX_FLAG'
           Both conditional and flag setting suffices are permitted.
 
-
      The fifth and final argument, SYNTAXCLASS, determines the syntax
      class for the instruction.  It can have the following values:
-    `SYNTAX_2OP'
+     'SYNTAX_2OP'
           Two Operand Instruction;
 
-    `SYNTAX_3OP'
+     'SYNTAX_3OP'
           Three Operand Instruction.
 
-    `SYNTAX_1OP'
+     'SYNTAX_1OP'
           One Operand Instruction.
 
-    `SYNTAX_NOP'
+     'SYNTAX_NOP'
           No Operand Instruction.
 
-     The syntax class may be followed by `|' and one of the following
+     The syntax class may be followed by '|' and one of the following
      modifiers.
-    `OP1_MUST_BE_IMM'
-          Modifies syntax class `SYNTAX_3OP', specifying that the first
+
+     'OP1_MUST_BE_IMM'
+          Modifies syntax class 'SYNTAX_3OP', specifying that the first
           operand of a three-operand instruction must be an immediate
           (i.e., the result is discarded).  This is usually used to set
           the flags using specific instructions and not retain results.
 
-    `OP1_IMM_IMPLIED'
-          Modifies syntax class `SYNTAX_20P', specifying that there is
-          an implied immediate destination operand which does not
-          appear in the syntax.
+     'OP1_IMM_IMPLIED'
+          Modifies syntax class 'SYNTAX_20P', specifying that there is
+          an implied immediate destination operand which does not appear
+          in the syntax.
 
           For example, if the source code contains an instruction like:
                inst r1,r2
@@ -7431,13 +7218,12 @@ directives:
           result is discarded).  This is the same as though the source
           code were: inst 0,r1,r2.
 
-
      For example, defining a 64-bit multiplier with immediate operands:
           	.extInstruction  mp64, 0x07, 0x2d, SUFFIX_COND|SUFFIX_FLAG,
           			 SYNTAX_3OP|OP1_MUST_BE_IMM
-     which specifies an extension instruction named `mp64' with 3
+     which specifies an extension instruction named 'mp64' with 3
      operands.  It sets the flags and can be used with a condition code,
-     for which the first operand is an immediate, i.e. equivalent to
+     for which the first operand is an immediate, i.e.  equivalent to
      discarding the result of the operation.
 
      A two operands instruction variant would be:
@@ -7447,7 +7233,6 @@ directives:
      immediate operand.  The result of this operation would be
      discarded.
 
-
 
 File: as.info,  Node: ARC Modifiers,  Next: ARC Symbols,  Prev: ARC Directives,  Up: ARC-Dependent
 
@@ -7459,27 +7244,26 @@ position-independent code.  These modifiers are available only with the
 ARC 700 and above processors and generate relocation entries, which are
 interpreted by the linker as follows:
 
-`@pcl(SYMBOL)'
+'@pcl(SYMBOL)'
      Relative distance of SYMBOL's from the current program counter
      location.
 
-`@gotpc(SYMBOL)'
+'@gotpc(SYMBOL)'
      Relative distance of SYMBOL's Global Offset Table entry from the
      current program counter location.
 
-`@gotoff(SYMBOL)'
+'@gotoff(SYMBOL)'
      Distance of SYMBOL from the base of the Global Offset Table.
 
-`@plt(SYMBOL)'
-     Distance of SYMBOL's Procedure Linkage Table entry from the
-     current program counter.  This is valid only with branch and link
+'@plt(SYMBOL)'
+     Distance of SYMBOL's Procedure Linkage Table entry from the current
+     program counter.  This is valid only with branch and link
      instructions and PC-relative calls.
 
-`@sda(SYMBOL)'
+'@sda(SYMBOL)'
      Relative distance of SYMBOL from the base of the Small Data
      Pointer.
 
-
 
 File: as.info,  Node: ARC Symbols,  Next: ARC Opcodes,  Prev: ARC Modifiers,  Up: ARC-Dependent
 
@@ -7490,14 +7274,12 @@ The following assembler symbols will prove useful when developing
 position-independent code.  These symbols are available only with the
 ARC 700 and above processors.
 
-`__GLOBAL_OFFSET_TABLE__'
+'__GLOBAL_OFFSET_TABLE__'
      Symbol referring to the base of the Global Offset Table.
 
-`__DYNAMIC__'
-     An alias for the Global Offset Table
-     `Base__GLOBAL_OFFSET_TABLE__'.  It can be used only with `@gotpc'
-     modifiers.
-
+'__DYNAMIC__'
+     An alias for the Global Offset Table 'Base__GLOBAL_OFFSET_TABLE__'.
+     It can be used only with '@gotpc' modifiers.
 
 
 File: as.info,  Node: ARC Opcodes,  Prev: ARC Symbols,  Up: ARC-Dependent
@@ -7505,7 +7287,7 @@ File: as.info,  Node: ARC Opcodes,  Prev: ARC Symbols,  Up: ARC-Dependent
 9.3.6 Opcodes
 -------------
 
-For information on the ARC instruction set, see `ARC Programmers
+For information on the ARC instruction set, see 'ARC Programmers
 Reference Manual', available where you download the processor IP
 library.
 
@@ -7531,106 +7313,107 @@ File: as.info,  Node: ARM Options,  Next: ARM Syntax,  Up: ARM-Dependent
 9.4.1 Options
 -------------
 
-`-mcpu=PROCESSOR[+EXTENSION...]'
+'-mcpu=PROCESSOR[+EXTENSION...]'
      This option specifies the target processor.  The assembler will
      issue an error message if an attempt is made to assemble an
      instruction which will not execute on the target processor.  The
-     following processor names are recognized: `arm1', `arm2', `arm250',
-     `arm3', `arm6', `arm60', `arm600', `arm610', `arm620', `arm7',
-     `arm7m', `arm7d', `arm7dm', `arm7di', `arm7dmi', `arm70', `arm700',
-     `arm700i', `arm710', `arm710t', `arm720', `arm720t', `arm740t',
-     `arm710c', `arm7100', `arm7500', `arm7500fe', `arm7t', `arm7tdmi',
-     `arm7tdmi-s', `arm8', `arm810', `strongarm', `strongarm1',
-     `strongarm110', `strongarm1100', `strongarm1110', `arm9', `arm920',
-     `arm920t', `arm922t', `arm940t', `arm9tdmi', `fa526' (Faraday
-     FA526 processor), `fa626' (Faraday FA626 processor), `arm9e',
-     `arm926e', `arm926ej-s', `arm946e-r0', `arm946e', `arm946e-s',
-     `arm966e-r0', `arm966e', `arm966e-s', `arm968e-s', `arm10t',
-     `arm10tdmi', `arm10e', `arm1020', `arm1020t', `arm1020e',
-     `arm1022e', `arm1026ej-s', `fa606te' (Faraday FA606TE processor),
-     `fa616te' (Faraday FA616TE processor), `fa626te' (Faraday FA626TE
-     processor), `fmp626' (Faraday FMP626 processor), `fa726te'
-     (Faraday FA726TE processor), `arm1136j-s', `arm1136jf-s',
-     `arm1156t2-s', `arm1156t2f-s', `arm1176jz-s', `arm1176jzf-s',
-     `mpcore', `mpcorenovfp', `cortex-a5', `cortex-a7', `cortex-a8',
-     `cortex-a9', `cortex-a15', `cortex-a17', `cortex-a32',
-     `cortex-a35', `cortex-a53', `cortex-a57', `cortex-a72',
-     `cortex-a73', `cortex-r4', `cortex-r4f', `cortex-r5', `cortex-r7',
-     `cortex-r8', `cortex-m33', `cortex-m23', `cortex-m7', `cortex-m4',
-     `cortex-m3', `cortex-m1', `cortex-m0', `cortex-m0plus',
-     `exynos-m1', `marvell-pj4', `marvell-whitney', `falkor', `qdf24xx',
-     `xgene1', `xgene2', `ep9312' (ARM920 with Cirrus Maverick
-     coprocessor), `i80200' (Intel XScale processor) `iwmmxt' (Intel(r)
-     XScale processor with Wireless MMX(tm) technology coprocessor) and
-     `xscale'.  The special name `all' may be used to allow the
+     following processor names are recognized: 'arm1', 'arm2', 'arm250',
+     'arm3', 'arm6', 'arm60', 'arm600', 'arm610', 'arm620', 'arm7',
+     'arm7m', 'arm7d', 'arm7dm', 'arm7di', 'arm7dmi', 'arm70', 'arm700',
+     'arm700i', 'arm710', 'arm710t', 'arm720', 'arm720t', 'arm740t',
+     'arm710c', 'arm7100', 'arm7500', 'arm7500fe', 'arm7t', 'arm7tdmi',
+     'arm7tdmi-s', 'arm8', 'arm810', 'strongarm', 'strongarm1',
+     'strongarm110', 'strongarm1100', 'strongarm1110', 'arm9', 'arm920',
+     'arm920t', 'arm922t', 'arm940t', 'arm9tdmi', 'fa526' (Faraday FA526
+     processor), 'fa626' (Faraday FA626 processor), 'arm9e', 'arm926e',
+     'arm926ej-s', 'arm946e-r0', 'arm946e', 'arm946e-s', 'arm966e-r0',
+     'arm966e', 'arm966e-s', 'arm968e-s', 'arm10t', 'arm10tdmi',
+     'arm10e', 'arm1020', 'arm1020t', 'arm1020e', 'arm1022e',
+     'arm1026ej-s', 'fa606te' (Faraday FA606TE processor), 'fa616te'
+     (Faraday FA616TE processor), 'fa626te' (Faraday FA626TE processor),
+     'fmp626' (Faraday FMP626 processor), 'fa726te' (Faraday FA726TE
+     processor), 'arm1136j-s', 'arm1136jf-s', 'arm1156t2-s',
+     'arm1156t2f-s', 'arm1176jz-s', 'arm1176jzf-s', 'mpcore',
+     'mpcorenovfp', 'cortex-a5', 'cortex-a7', 'cortex-a8', 'cortex-a9',
+     'cortex-a15', 'cortex-a17', 'cortex-a32', 'cortex-a35',
+     'cortex-a53', 'cortex-a57', 'cortex-a72', 'cortex-a73',
+     'cortex-r4', 'cortex-r4f', 'cortex-r5', 'cortex-r7', 'cortex-r8',
+     'cortex-m33', 'cortex-m23', 'cortex-m7', 'cortex-m4', 'cortex-m3',
+     'cortex-m1', 'cortex-m0', 'cortex-m0plus', 'exynos-m1',
+     'marvell-pj4', 'marvell-whitney', 'falkor', 'qdf24xx', 'xgene1',
+     'xgene2', 'ep9312' (ARM920 with Cirrus Maverick coprocessor),
+     'i80200' (Intel XScale processor) 'iwmmxt' (Intel(r) XScale
+     processor with Wireless MMX(tm) technology coprocessor) and
+     'xscale'.  The special name 'all' may be used to allow the
      assembler to accept instructions valid for any ARM processor.
 
-     In addition to the basic instruction set, the assembler can be
-     told to accept various extension mnemonics that extend the
-     processor using the co-processor instruction space.  For example,
-     `-mcpu=arm920+maverick' is equivalent to specifying `-mcpu=ep9312'.
+     In addition to the basic instruction set, the assembler can be told
+     to accept various extension mnemonics that extend the processor
+     using the co-processor instruction space.  For example,
+     '-mcpu=arm920+maverick' is equivalent to specifying '-mcpu=ep9312'.
 
-     Multiple extensions may be specified, separated by a `+'.  The
+     Multiple extensions may be specified, separated by a '+'.  The
      extensions should be specified in ascending alphabetical order.
 
-     Some extensions may be restricted to particular architectures;
-     this is documented in the list of extensions below.
+     Some extensions may be restricted to particular architectures; this
+     is documented in the list of extensions below.
 
      Extension mnemonics may also be removed from those the assembler
-     accepts.  This is done be prepending `no' to the option that adds
+     accepts.  This is done be prepending 'no' to the option that adds
      the extension.  Extensions that are removed should be listed after
      all extensions which have been added, again in ascending
-     alphabetical order.  For example, `-mcpu=ep9312+nomaverick' is
-     equivalent to specifying `-mcpu=arm920'.
+     alphabetical order.  For example, '-mcpu=ep9312+nomaverick' is
+     equivalent to specifying '-mcpu=arm920'.
 
-     The following extensions are currently supported: `crc' `crypto'
-     (Cryptography Extensions for v8-A architecture, implies `fp+simd'),
-     `fp' (Floating Point Extensions for v8-A architecture), `idiv'
+     The following extensions are currently supported: 'crc' 'crypto'
+     (Cryptography Extensions for v8-A architecture, implies 'fp+simd'),
+     'fp' (Floating Point Extensions for v8-A architecture), 'idiv'
      (Integer Divide Extensions for v7-A and v7-R architectures),
-     `iwmmxt', `iwmmxt2', `xscale', `maverick', `mp' (Multiprocessing
-     Extensions for v7-A and v7-R architectures), `os' (Operating
-     System for v6M architecture), `sec' (Security Extensions for v6K
-     and v7-A architectures), `simd' (Advanced SIMD Extensions for v8-A
-     architecture, implies `fp'), `virt' (Virtualization Extensions for
-     v7-A architecture, implies `idiv'), `pan' (Priviliged Access Never
-     Extensions for v8-A architecture), `ras' (Reliability,
-     Availability and Serviceability extensions for v8-A architecture),
-     `rdma' (ARMv8.1 Advanced SIMD extensions for v8-A architecture,
-     implies `simd') and `xscale'.
-
-`-march=ARCHITECTURE[+EXTENSION...]'
+     'iwmmxt', 'iwmmxt2', 'xscale', 'maverick', 'mp' (Multiprocessing
+     Extensions for v7-A and v7-R architectures), 'os' (Operating System
+     for v6M architecture), 'sec' (Security Extensions for v6K and v7-A
+     architectures), 'simd' (Advanced SIMD Extensions for v8-A
+     architecture, implies 'fp'), 'virt' (Virtualization Extensions for
+     v7-A architecture, implies 'idiv'), 'pan' (Priviliged Access Never
+     Extensions for v8-A architecture), 'ras' (Reliability, Availability
+     and Serviceability extensions for v8-A architecture), 'rdma'
+     (ARMv8.1 Advanced SIMD extensions for v8-A architecture, implies
+     'simd') and 'xscale'.
+
+'-march=ARCHITECTURE[+EXTENSION...]'
      This option specifies the target architecture.  The assembler will
      issue an error message if an attempt is made to assemble an
-     instruction which will not execute on the target architecture.
-     The following architecture names are recognized: `armv1', `armv2',
-     `armv2a', `armv2s', `armv3', `armv3m', `armv4', `armv4xm',
-     `armv4t', `armv4txm', `armv5', `armv5t', `armv5txm', `armv5te',
-     `armv5texp', `armv6', `armv6j', `armv6k', `armv6z', `armv6kz',
-     `armv6-m', `armv6s-m', `armv7', `armv7-a', `armv7ve', `armv7-r',
-     `armv7-m', `armv7e-m', `armv8-a', `armv8.1-a', `armv8.2-a',
-     `armv8.3-a', `iwmmxt' `iwmmxt2' and `xscale'.  If both `-mcpu' and
-     `-march' are specified, the assembler will use the setting for
-     `-mcpu'.
+     instruction which will not execute on the target architecture.  The
+     following architecture names are recognized: 'armv1', 'armv2',
+     'armv2a', 'armv2s', 'armv3', 'armv3m', 'armv4', 'armv4xm',
+     'armv4t', 'armv4txm', 'armv5', 'armv5t', 'armv5txm', 'armv5te',
+     'armv5texp', 'armv6', 'armv6j', 'armv6k', 'armv6z', 'armv6kz',
+     'armv6-m', 'armv6s-m', 'armv7', 'armv7-a', 'armv7ve', 'armv7-r',
+     'armv7-m', 'armv7e-m', 'armv8-a', 'armv8.1-a', 'armv8.2-a',
+     'armv8.3-a', 'iwmmxt' 'iwmmxt2' and 'xscale'.  If both '-mcpu' and
+     '-march' are specified, the assembler will use the setting for
+     '-mcpu'.
 
      The architecture option can be extended with the same instruction
-     set extension options as the `-mcpu' option.
+     set extension options as the '-mcpu' option.
+
+'-mfpu=FLOATING-POINT-FORMAT'
 
-`-mfpu=FLOATING-POINT-FORMAT'
      This option specifies the floating point format to assemble for.
      The assembler will issue an error message if an attempt is made to
      assemble an instruction which will not execute on the target
      floating point unit.  The following format options are recognized:
-     `softfpa', `fpe', `fpe2', `fpe3', `fpa', `fpa10', `fpa11',
-     `arm7500fe', `softvfp', `softvfp+vfp', `vfp', `vfp10', `vfp10-r0',
-     `vfp9', `vfpxd', `vfpv2', `vfpv3', `vfpv3-fp16', `vfpv3-d16',
-     `vfpv3-d16-fp16', `vfpv3xd', `vfpv3xd-d16', `vfpv4', `vfpv4-d16',
-     `fpv4-sp-d16', `fpv5-sp-d16', `fpv5-d16', `fp-armv8', `arm1020t',
-     `arm1020e', `arm1136jf-s', `maverick', `neon', `neon-vfpv4',
-     `neon-fp-armv8', `crypto-neon-fp-armv8', `neon-fp-armv8.1' and
-     `crypto-neon-fp-armv8.1'.
+     'softfpa', 'fpe', 'fpe2', 'fpe3', 'fpa', 'fpa10', 'fpa11',
+     'arm7500fe', 'softvfp', 'softvfp+vfp', 'vfp', 'vfp10', 'vfp10-r0',
+     'vfp9', 'vfpxd', 'vfpv2', 'vfpv3', 'vfpv3-fp16', 'vfpv3-d16',
+     'vfpv3-d16-fp16', 'vfpv3xd', 'vfpv3xd-d16', 'vfpv4', 'vfpv4-d16',
+     'fpv4-sp-d16', 'fpv5-sp-d16', 'fpv5-d16', 'fp-armv8', 'arm1020t',
+     'arm1020e', 'arm1136jf-s', 'maverick', 'neon', 'neon-vfpv4',
+     'neon-fp-armv8', 'crypto-neon-fp-armv8', 'neon-fp-armv8.1' and
+     'crypto-neon-fp-armv8.1'.
 
      In addition to determining which instructions are assembled, this
-     option also affects the way in which the `.double' assembler
+     option also affects the way in which the '.double' assembler
      directive behaves when assembling little-endian code.
 
      The default is dependent on the processor selected.  For
@@ -7638,101 +7421,100 @@ File: as.info,  Node: ARM Options,  Next: ARM Syntax,  Up: ARM-Dependent
      instructions; for earlier architectures the default is to assemble
      for FPA instructions.
 
-`-mthumb'
+'-mthumb'
      This option specifies that the assembler should start assembling
      Thumb instructions; that is, it should behave as though the file
-     starts with a `.code 16' directive.
+     starts with a '.code 16' directive.
 
-`-mthumb-interwork'
+'-mthumb-interwork'
      This option specifies that the output generated by the assembler
      should be marked as supporting interworking.
 
-`-mimplicit-it=never'
-`-mimplicit-it=always'
-`-mimplicit-it=arm'
-`-mimplicit-it=thumb'
-     The `-mimplicit-it' option controls the behavior of the assembler
-     when conditional instructions are not enclosed in IT blocks.
-     There are four possible behaviors.  If `never' is specified, such
+'-mimplicit-it=never'
+'-mimplicit-it=always'
+'-mimplicit-it=arm'
+'-mimplicit-it=thumb'
+     The '-mimplicit-it' option controls the behavior of the assembler
+     when conditional instructions are not enclosed in IT blocks.  There
+     are four possible behaviors.  If 'never' is specified, such
      constructs cause a warning in ARM code and an error in Thumb-2
-     code.  If `always' is specified, such constructs are accepted in
+     code.  If 'always' is specified, such constructs are accepted in
      both ARM and Thumb-2 code, where the IT instruction is added
-     implicitly.  If `arm' is specified, such constructs are accepted
-     in ARM code and cause an error in Thumb-2 code.  If `thumb' is
+     implicitly.  If 'arm' is specified, such constructs are accepted in
+     ARM code and cause an error in Thumb-2 code.  If 'thumb' is
      specified, such constructs cause a warning in ARM code and are
-     accepted in Thumb-2 code.  If you omit this option, the behavior
-     is equivalent to `-mimplicit-it=arm'.
+     accepted in Thumb-2 code.  If you omit this option, the behavior is
+     equivalent to '-mimplicit-it=arm'.
 
-`-mapcs-26'
-`-mapcs-32'
+'-mapcs-26'
+'-mapcs-32'
      These options specify that the output generated by the assembler
      should be marked as supporting the indicated version of the Arm
      Procedure.  Calling Standard.
 
-`-matpcs'
+'-matpcs'
      This option specifies that the output generated by the assembler
      should be marked as supporting the Arm/Thumb Procedure Calling
      Standard.  If enabled this option will cause the assembler to
      create an empty debugging section in the object file called
-     .arm.atpcs.  Debuggers can use this to determine the ABI being
-     used by.
+     .arm.atpcs.  Debuggers can use this to determine the ABI being used
+     by.
 
-`-mapcs-float'
+'-mapcs-float'
      This indicates the floating point variant of the APCS should be
      used.  In this variant floating point arguments are passed in FP
      registers rather than integer registers.
 
-`-mapcs-reentrant'
+'-mapcs-reentrant'
      This indicates that the reentrant variant of the APCS should be
      used.  This variant supports position independent code.
 
-`-mfloat-abi=ABI'
+'-mfloat-abi=ABI'
      This option specifies that the output generated by the assembler
-     should be marked as using specified floating point ABI.  The
-     following values are recognized: `soft', `softfp' and `hard'.
+     should be marked as using specified floating point ABI. The
+     following values are recognized: 'soft', 'softfp' and 'hard'.
 
-`-meabi=VER'
+'-meabi=VER'
      This option specifies which EABI version the produced object files
-     should conform to.  The following values are recognized: `gnu', `4'
-     and `5'.
+     should conform to.  The following values are recognized: 'gnu', '4'
+     and '5'.
 
-`-EB'
+'-EB'
      This option specifies that the output generated by the assembler
      should be marked as being encoded for a big-endian processor.
 
      Note: If a program is being built for a system with big-endian data
      and little-endian instructions then it should be assembled with the
-     `-EB' option, (all of it, code and data) and then linked with the
-     `--be8' option.  This will reverse the endianness of the
+     '-EB' option, (all of it, code and data) and then linked with the
+     '--be8' option.  This will reverse the endianness of the
      instructions back to little-endian, but leave the data as
      big-endian.
 
-`-EL'
+'-EL'
      This option specifies that the output generated by the assembler
      should be marked as being encoded for a little-endian processor.
 
-`-k'
+'-k'
      This option specifies that the output of the assembler should be
      marked as position-independent code (PIC).
 
-`--fix-v4bx'
-     Allow `BX' instructions in ARMv4 code.  This is intended for use
+'--fix-v4bx'
+     Allow 'BX' instructions in ARMv4 code.  This is intended for use
      with the linker option of the same name.
 
-`-mwarn-deprecated'
-`-mno-warn-deprecated'
+'-mwarn-deprecated'
+'-mno-warn-deprecated'
      Enable or disable warnings about using deprecated options or
      features.  The default is to warn.
 
-`-mccs'
+'-mccs'
      Turns on CodeComposer Studio assembly syntax compatibility mode.
 
-`-mwarn-syms'
-`-mno-warn-syms'
+'-mwarn-syms'
+'-mno-warn-syms'
      Enable or disable warnings about symbols that match the names of
      ARM instructions.  The default is to warn.
 
-
 
 File: as.info,  Node: ARM Syntax,  Next: ARM Floating Point,  Prev: ARM Options,  Up: ARM-Dependent
 
@@ -7754,29 +7536,28 @@ File: as.info,  Node: ARM-Instruction-Set,  Next: ARM-Chars,  Up: ARM Syntax
 ..............................
 
 Two slightly different syntaxes are support for ARM and THUMB
-instructions.  The default, `divided', uses the old style where ARM and
-THUMB instructions had their own, separate syntaxes.  The new,
-`unified' syntax, which can be selected via the `.syntax' directive,
-and has the following main features:
+instructions.  The default, 'divided', uses the old style where ARM and
+THUMB instructions had their own, separate syntaxes.  The new, 'unified'
+syntax, which can be selected via the '.syntax' directive, and has the
+following main features:
 
-   * Immediate operands do not require a `#' prefix.
+   * Immediate operands do not require a '#' prefix.
 
-   * The `IT' instruction may appear, and if it does it is validated
+   * The 'IT' instruction may appear, and if it does it is validated
      against subsequent conditional affixes.  In ARM mode it does not
      generate machine code, in THUMB mode it does.
 
    * For ARM instructions the conditional affixes always appear at the
-     end of the instruction.  For THUMB instructions conditional
-     affixes can be used, but only inside the scope of an `IT'
-     instruction.
+     end of the instruction.  For THUMB instructions conditional affixes
+     can be used, but only inside the scope of an 'IT' instruction.
 
    * All of the instructions new to the V6T2 architecture (and later)
      are available.  (Only a few such instructions can be written in the
-     `divided' syntax).
+     'divided' syntax).
 
-   * The `.N' and `.W' suffixes are recognized and honored.
+   * The '.N' and '.W' suffixes are recognized and honored.
 
-   * All instructions set the flags if and only if they have an `s'
+   * All instructions set the flags if and only if they have an 's'
      affix.
 
 
@@ -7785,18 +7566,18 @@ File: as.info,  Node: ARM-Chars,  Next: ARM-Regs,  Prev: ARM-Instruction-Set,  U
 9.4.2.2 Special Characters
 ..........................
 
-The presence of a `@' anywhere on a line indicates the start of a
+The presence of a '@' anywhere on a line indicates the start of a
 comment that extends to the end of that line.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line could also be a
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line could also be a
 logical line number directive (*note Comments::) or a preprocessor
 control command (*note Preprocessing::).
 
-   The `;' character can be used instead of a newline to separate
+   The ';' character can be used instead of a newline to separate
 statements.
 
-   Either `#' or `$' can be used to indicate immediate operands.
+   Either '#' or '$' can be used to indicate immediate operands.
 
    *TODO* Explain about /data modifier on symbols.
 
@@ -7819,27 +7600,27 @@ name in parentheses after the symbol name.  For example:
 
              .word foo(TARGET1)
 
-   This will generate an `R_ARM_TARGET1' relocation against the symbol
-FOO.  The following relocations are supported: `GOT', `GOTOFF',
-`TARGET1', `TARGET2', `SBREL', `TLSGD', `TLSLDM', `TLSLDO', `TLSDESC',
-`TLSCALL', `GOTTPOFF', `GOT_PREL' and `TPOFF'.
+   This will generate an 'R_ARM_TARGET1' relocation against the symbol
+FOO.  The following relocations are supported: 'GOT', 'GOTOFF',
+'TARGET1', 'TARGET2', 'SBREL', 'TLSGD', 'TLSLDM', 'TLSLDO', 'TLSDESC',
+'TLSCALL', 'GOTTPOFF', 'GOT_PREL' and 'TPOFF'.
 
    For compatibility with older toolchains the assembler also accepts
-`(PLT)' after branch targets.  On legacy targets this will generate the
-deprecated `R_ARM_PLT32' relocation.  On EABI targets it will encode
-either the `R_ARM_CALL' or `R_ARM_JUMP24' relocation, as appropriate.
+'(PLT)' after branch targets.  On legacy targets this will generate the
+deprecated 'R_ARM_PLT32' relocation.  On EABI targets it will encode
+either the 'R_ARM_CALL' or 'R_ARM_JUMP24' relocation, as appropriate.
 
-   Relocations for `MOVW' and `MOVT' instructions can be generated by
-prefixing the value with `#:lower16:' and `#:upper16' respectively.
-For example to load the 32-bit address of foo into r0:
+   Relocations for 'MOVW' and 'MOVT' instructions can be generated by
+prefixing the value with '#:lower16:' and '#:upper16' respectively.  For
+example to load the 32-bit address of foo into r0:
 
              MOVW r0, #:lower16:foo
              MOVT r0, #:upper16:foo
 
-   Relocations `R_ARM_THM_ALU_ABS_G0_NC', `R_ARM_THM_ALU_ABS_G1_NC',
-`R_ARM_THM_ALU_ABS_G2_NC' and `R_ARM_THM_ALU_ABS_G3_NC' can be
-generated by prefixing the value with `#:lower0_7:#', `#:lower8_15:#',
-`#:upper0_7:#' and `#:upper8_15:#' respectively.  For example to load
+   Relocations 'R_ARM_THM_ALU_ABS_G0_NC', 'R_ARM_THM_ALU_ABS_G1_NC',
+'R_ARM_THM_ALU_ABS_G2_NC' and 'R_ARM_THM_ALU_ABS_G3_NC' can be generated
+by prefixing the value with '#:lower0_7:#', '#:lower8_15:#',
+'#:upper0_7:#' and '#:upper8_15:#' respectively.  For example to load
 the 32-bit address of foo into r0:
 
              MOVS r0, #:upper8_15:#foo
@@ -7857,9 +7638,9 @@ File: as.info,  Node: ARM-Neon-Alignment,  Prev: ARM-Relocations,  Up: ARM Synta
 .................................
 
 Some NEON load/store instructions allow an optional address alignment
-qualifier.  The ARM documentation specifies that this is indicated by
-`@ ALIGN'. However GAS already interprets the `@' character as a "line
-comment" start, so `: ALIGN' is used instead.  For example:
+qualifier.  The ARM documentation specifies that this is indicated by '@
+ALIGN'.  However GAS already interprets the '@' character as a "line
+comment" start, so ': ALIGN' is used instead.  For example:
 
              vld1.8 {q0}, [r0, :128]
 
@@ -7877,66 +7658,66 @@ File: as.info,  Node: ARM Directives,  Next: ARM Opcodes,  Prev: ARM Floating Po
 9.4.4 ARM Machine Directives
 ----------------------------
 
-`.2byte EXPRESSION [, EXPRESSION]*'
-`.4byte EXPRESSION [, EXPRESSION]*'
-`.8byte EXPRESSION [, EXPRESSION]*'
+'.2byte EXPRESSION [, EXPRESSION]*'
+'.4byte EXPRESSION [, EXPRESSION]*'
+'.8byte EXPRESSION [, EXPRESSION]*'
      These directives write 2, 4 or 8 byte values to the output section.
 
-`.align EXPRESSION [, EXPRESSION]'
+'.align EXPRESSION [, EXPRESSION]'
      This is the generic .ALIGN directive.  For the ARM however if the
      first argument is zero (ie no alignment is needed) the assembler
      will behave as if the argument had been 2 (ie pad to the next four
      byte boundary).  This is for compatibility with ARM's own
      assembler.
 
-`.arch NAME'
-     Select the target architecture.  Valid values for NAME are the
-     same as for the `-march' commandline option.
+'.arch NAME'
+     Select the target architecture.  Valid values for NAME are the same
+     as for the '-march' commandline option.
 
-     Specifying `.arch' clears any previously selected architecture
+     Specifying '.arch' clears any previously selected architecture
      extensions.
 
-`.arch_extension NAME'
-     Add or remove an architecture extension to the target
-     architecture.  Valid values for NAME are the same as those
-     accepted as architectural extensions by the `-mcpu' commandline
-     option.
+'.arch_extension NAME'
+     Add or remove an architecture extension to the target architecture.
+     Valid values for NAME are the same as those accepted as
+     architectural extensions by the '-mcpu' commandline option.
 
-     `.arch_extension' may be used multiple times to add or remove
+     '.arch_extension' may be used multiple times to add or remove
      extensions incrementally to the architecture being compiled for.
 
-`.arm'
+'.arm'
      This performs the same action as .CODE 32.
 
-`.bss'
-     This directive switches to the `.bss' section.
+'.bss'
+     This directive switches to the '.bss' section.
 
-`.cantunwind'
+'.cantunwind'
      Prevents unwinding through the current function.  No personality
      routine or exception table data is required or permitted.
 
-`.code `[16|32]''
-     This directive selects the instruction set being generated. The
+'.code [16|32]'
+     This directive selects the instruction set being generated.  The
      value 16 selects Thumb, with the value 32 selecting ARM.
 
-`.cpu NAME'
+'.cpu NAME'
      Select the target processor.  Valid values for NAME are the same as
-     for the `-mcpu' commandline option.
+     for the '-mcpu' commandline option.
 
-     Specifying `.cpu' clears any previously selected architecture
+     Specifying '.cpu' clears any previously selected architecture
      extensions.
 
-`NAME .dn REGISTER NAME [.TYPE] [[INDEX]]'
-`NAME .qn REGISTER NAME [.TYPE] [[INDEX]]'
-     The `dn' and `qn' directives are used to create typed and/or
+'NAME .dn REGISTER NAME [.TYPE] [[INDEX]]'
+'NAME .qn REGISTER NAME [.TYPE] [[INDEX]]'
+
+     The 'dn' and 'qn' directives are used to create typed and/or
      indexed register aliases for use in Advanced SIMD Extension (Neon)
      instructions.  The former should be used to create aliases of
      double-precision registers, and the latter to create aliases of
      quad-precision registers.
 
-     If these directives are used to create typed aliases, those
-     aliases can be used in Neon instructions instead of writing types
-     after the mnemonic or after each operand.  For example:
+     If these directives are used to create typed aliases, those aliases
+     can be used in Neon instructions instead of writing types after the
+     mnemonic or after each operand.  For example:
 
                   x .dn d2.f32
                   y .dn d3.f32
@@ -7947,135 +7728,134 @@ File: as.info,  Node: ARM Directives,  Next: ARM Opcodes,  Prev: ARM Floating Po
 
                   vmul.f32 d2,d3,d4[1]
 
-     Aliases created using `dn' or `qn' can be destroyed using `unreq'.
+     Aliases created using 'dn' or 'qn' can be destroyed using 'unreq'.
 
-`.eabi_attribute TAG, VALUE'
+'.eabi_attribute TAG, VALUE'
      Set the EABI object attribute TAG to VALUE.
 
      The TAG is either an attribute number, or one of the following:
-     `Tag_CPU_raw_name', `Tag_CPU_name', `Tag_CPU_arch',
-     `Tag_CPU_arch_profile', `Tag_ARM_ISA_use', `Tag_THUMB_ISA_use',
-     `Tag_FP_arch', `Tag_WMMX_arch', `Tag_Advanced_SIMD_arch',
-     `Tag_PCS_config', `Tag_ABI_PCS_R9_use', `Tag_ABI_PCS_RW_data',
-     `Tag_ABI_PCS_RO_data', `Tag_ABI_PCS_GOT_use',
-     `Tag_ABI_PCS_wchar_t', `Tag_ABI_FP_rounding',
-     `Tag_ABI_FP_denormal', `Tag_ABI_FP_exceptions',
-     `Tag_ABI_FP_user_exceptions', `Tag_ABI_FP_number_model',
-     `Tag_ABI_align_needed', `Tag_ABI_align_preserved',
-     `Tag_ABI_enum_size', `Tag_ABI_HardFP_use', `Tag_ABI_VFP_args',
-     `Tag_ABI_WMMX_args', `Tag_ABI_optimization_goals',
-     `Tag_ABI_FP_optimization_goals', `Tag_compatibility',
-     `Tag_CPU_unaligned_access', `Tag_FP_HP_extension',
-     `Tag_ABI_FP_16bit_format', `Tag_MPextension_use', `Tag_DIV_use',
-     `Tag_nodefaults', `Tag_also_compatible_with', `Tag_conformance',
-     `Tag_T2EE_use', `Tag_Virtualization_use'
-
-     The VALUE is either a `number', `"string"', or `number, "string"'
+     'Tag_CPU_raw_name', 'Tag_CPU_name', 'Tag_CPU_arch',
+     'Tag_CPU_arch_profile', 'Tag_ARM_ISA_use', 'Tag_THUMB_ISA_use',
+     'Tag_FP_arch', 'Tag_WMMX_arch', 'Tag_Advanced_SIMD_arch',
+     'Tag_PCS_config', 'Tag_ABI_PCS_R9_use', 'Tag_ABI_PCS_RW_data',
+     'Tag_ABI_PCS_RO_data', 'Tag_ABI_PCS_GOT_use',
+     'Tag_ABI_PCS_wchar_t', 'Tag_ABI_FP_rounding',
+     'Tag_ABI_FP_denormal', 'Tag_ABI_FP_exceptions',
+     'Tag_ABI_FP_user_exceptions', 'Tag_ABI_FP_number_model',
+     'Tag_ABI_align_needed', 'Tag_ABI_align_preserved',
+     'Tag_ABI_enum_size', 'Tag_ABI_HardFP_use', 'Tag_ABI_VFP_args',
+     'Tag_ABI_WMMX_args', 'Tag_ABI_optimization_goals',
+     'Tag_ABI_FP_optimization_goals', 'Tag_compatibility',
+     'Tag_CPU_unaligned_access', 'Tag_FP_HP_extension',
+     'Tag_ABI_FP_16bit_format', 'Tag_MPextension_use', 'Tag_DIV_use',
+     'Tag_nodefaults', 'Tag_also_compatible_with', 'Tag_conformance',
+     'Tag_T2EE_use', 'Tag_Virtualization_use'
+
+     The VALUE is either a 'number', '"string"', or 'number, "string"'
      depending on the tag.
 
      Note - the following legacy values are also accepted by TAG:
-     `Tag_VFP_arch', `Tag_ABI_align8_needed',
-     `Tag_ABI_align8_preserved', `Tag_VFP_HP_extension',
+     'Tag_VFP_arch', 'Tag_ABI_align8_needed',
+     'Tag_ABI_align8_preserved', 'Tag_VFP_HP_extension',
 
-`.even'
+'.even'
      This directive aligns to an even-numbered address.
 
-`.extend  EXPRESSION [, EXPRESSION]*'
-`.ldouble  EXPRESSION [, EXPRESSION]*'
+'.extend EXPRESSION [, EXPRESSION]*'
+'.ldouble EXPRESSION [, EXPRESSION]*'
      These directives write 12byte long double floating-point values to
      the output section.  These are not compatible with current ARM
      processors or ABIs.
 
-`.fnend'
-     Marks the end of a function with an unwind table entry.  The
-     unwind index table entry is created when this directive is
-     processed.
+'.fnend'
+     Marks the end of a function with an unwind table entry.  The unwind
+     index table entry is created when this directive is processed.
 
      If no personality routine has been specified then standard
-     personality routine 0 or 1 will be used, depending on the number
-     of unwind opcodes required.
+     personality routine 0 or 1 will be used, depending on the number of
+     unwind opcodes required.
 
-`.fnstart'
+'.fnstart'
      Marks the start of a function with an unwind table entry.
 
-`.force_thumb'
+'.force_thumb'
      This directive forces the selection of Thumb instructions, even if
      the target processor does not support those instructions
 
-`.fpu NAME'
+'.fpu NAME'
      Select the floating-point unit to assemble for.  Valid values for
-     NAME are the same as for the `-mfpu' commandline option.
+     NAME are the same as for the '-mfpu' commandline option.
 
-`.handlerdata'
+'.handlerdata'
      Marks the end of the current function, and the start of the
      exception table entry for that function.  Anything between this
-     directive and the `.fnend' directive will be added to the
-     exception table entry.
+     directive and the '.fnend' directive will be added to the exception
+     table entry.
 
-     Must be preceded by a `.personality' or `.personalityindex'
+     Must be preceded by a '.personality' or '.personalityindex'
      directive.
 
-`.inst OPCODE [ , ... ]'
-`.inst.n OPCODE [ , ... ]'
-`.inst.w OPCODE [ , ... ]'
+'.inst OPCODE [ , ... ]'
+'.inst.n OPCODE [ , ... ]'
+'.inst.w OPCODE [ , ... ]'
      Generates the instruction corresponding to the numerical value
-     OPCODE.  `.inst.n' and `.inst.w' allow the Thumb instruction size
+     OPCODE.  '.inst.n' and '.inst.w' allow the Thumb instruction size
      to be specified explicitly, overriding the normal encoding rules.
 
-`.ldouble  EXPRESSION [, EXPRESSION]*'
-     See `.extend'.
+'.ldouble EXPRESSION [, EXPRESSION]*'
+     See '.extend'.
 
-`.ltorg'
+'.ltorg'
      This directive causes the current contents of the literal pool to
      be dumped into the current section (which is assumed to be the
      .text section) at the current location (aligned to a word
-     boundary).  `GAS' maintains a separate literal pool for each
-     section and each sub-section.  The `.ltorg' directive will only
-     affect the literal pool of the current section and sub-section.
-     At the end of assembly all remaining, un-empty literal pools will
+     boundary).  'GAS' maintains a separate literal pool for each
+     section and each sub-section.  The '.ltorg' directive will only
+     affect the literal pool of the current section and sub-section.  At
+     the end of assembly all remaining, un-empty literal pools will
      automatically be dumped.
 
-     Note - older versions of `GAS' would dump the current literal pool
+     Note - older versions of 'GAS' would dump the current literal pool
      any time a section change occurred.  This is no longer done, since
      it prevents accurate control of the placement of literal pools.
 
-`.movsp REG [, #OFFSET]'
+'.movsp REG [, #OFFSET]'
      Tell the unwinder that REG contains an offset from the current
      stack pointer.  If OFFSET is not specified then it is assumed to be
      zero.
 
-`.object_arch NAME'
+'.object_arch NAME'
      Override the architecture recorded in the EABI object attribute
-     section.  Valid values for NAME are the same as for the `.arch'
+     section.  Valid values for NAME are the same as for the '.arch'
      directive.  Typically this is useful when code uses runtime
      detection of CPU features.
 
-`.packed  EXPRESSION [, EXPRESSION]*'
+'.packed EXPRESSION [, EXPRESSION]*'
      This directive writes 12-byte packed floating-point values to the
      output section.  These are not compatible with current ARM
      processors or ABIs.
 
-`.pad #COUNT'
+'.pad #COUNT'
      Generate unwinder annotations for a stack adjustment of COUNT
      bytes.  A positive value indicates the function prologue allocated
      stack space by decrementing the stack pointer.
 
-`.personality NAME'
+'.personality NAME'
      Sets the personality routine for the current function to NAME.
 
-`.personalityindex INDEX'
+'.personalityindex INDEX'
      Sets the personality routine for the current function to the EABI
      standard routine number INDEX
 
-`.pool'
+'.pool'
      This is a synonym for .ltorg.
 
-`NAME .req REGISTER NAME'
+'NAME .req REGISTER NAME'
      This creates an alias for REGISTER NAME called NAME.  For example:
 
                   foo .req r0
 
-`.save REGLIST'
+'.save REGLIST'
      Generate unwinder annotations to restore the registers in REGLIST.
      The format of REGLIST is the same as the corresponding
      store-multiple instruction.
@@ -8099,13 +7879,13 @@ File: as.info,  Node: ARM Directives,  Next: ARM Opcodes,  Prev: ARM Floating Po
             .save wr10
             wstrd wr10, [sp, #-8]!
 
-`.setfp FPREG, SPREG [, #OFFSET]'
-     Make all unwinder annotations relative to a frame pointer.
-     Without this the unwinder will use offsets from the stack pointer.
+'.setfp FPREG, SPREG [, #OFFSET]'
+     Make all unwinder annotations relative to a frame pointer.  Without
+     this the unwinder will use offsets from the stack pointer.
 
-     The syntax of this directive is the same as the `add' or `mov'
+     The syntax of this directive is the same as the 'add' or 'mov'
      instruction used to set the frame pointer.  SPREG must be either
-     `sp' or mentioned in a previous `.movsp' directive.
+     'sp' or mentioned in a previous '.movsp' directive.
 
           .movsp ip
           mov ip, sp
@@ -8113,44 +7893,44 @@ File: as.info,  Node: ARM Directives,  Next: ARM Opcodes,  Prev: ARM Floating Po
           .setfp fp, ip, #4
           add fp, ip, #4
 
-`.secrel32 EXPRESSION [, EXPRESSION]*'
+'.secrel32 EXPRESSION [, EXPRESSION]*'
      This directive emits relocations that evaluate to the
      section-relative offset of each expression's symbol.  This
      directive is only supported for PE targets.
 
-`.syntax [`unified' | `divided']'
+'.syntax [unified | divided]'
      This directive sets the Instruction Set Syntax as described in the
-     *Note ARM-Instruction-Set:: section.
+     *note ARM-Instruction-Set:: section.
 
-`.thumb'
+'.thumb'
      This performs the same action as .CODE 16.
 
-`.thumb_func'
+'.thumb_func'
      This directive specifies that the following symbol is the name of a
      Thumb encoded function.  This information is necessary in order to
      allow the assembler and linker to generate correct code for
      interworking between Arm and Thumb instructions and should be used
-     even if interworking is not going to be performed.  The presence
-     of this directive also implies `.thumb'
+     even if interworking is not going to be performed.  The presence of
+     this directive also implies '.thumb'
 
      This directive is not neccessary when generating EABI objects.  On
      these targets the encoding is implicit when generating Thumb code.
 
-`.thumb_set'
-     This performs the equivalent of a `.set' directive in that it
-     creates a symbol which is an alias for another symbol (possibly
-     not yet defined).  This directive also has the added property in
-     that it marks the aliased symbol as being a thumb function entry
-     point, in the same way that the `.thumb_func' directive does.
+'.thumb_set'
+     This performs the equivalent of a '.set' directive in that it
+     creates a symbol which is an alias for another symbol (possibly not
+     yet defined).  This directive also has the added property in that
+     it marks the aliased symbol as being a thumb function entry point,
+     in the same way that the '.thumb_func' directive does.
 
-`.tlsdescseq TLS-VARIABLE'
+'.tlsdescseq TLS-VARIABLE'
      This directive is used to annotate parts of an inlined TLS
      descriptor trampoline.  Normally the trampoline is provided by the
      linker, and this directive is not needed.
 
-`.unreq ALIAS-NAME'
+'.unreq ALIAS-NAME'
      This undefines a register alias which was previously defined using
-     the `req', `dn' or `qn' directives.  For example:
+     the 'req', 'dn' or 'qn' directives.  For example:
 
                   foo .req r0
                   .unreq foo
@@ -8159,18 +7939,18 @@ File: as.info,  Node: ARM Directives,  Next: ARM Opcodes,  Prev: ARM Floating Po
      can be used to delete builtin in register name aliases (eg 'r0').
      This should only be done if it is really necessary.
 
-`.unwind_raw OFFSET, BYTE1, ...'
-     Insert one of more arbitary unwind opcode bytes, which are known
-     to adjust the stack pointer by OFFSET bytes.
+'.unwind_raw OFFSET, BYTE1, ...'
+     Insert one of more arbitary unwind opcode bytes, which are known to
+     adjust the stack pointer by OFFSET bytes.
 
-     For example `.unwind_raw 4, 0xb1, 0x01' is equivalent to `.save
+     For example '.unwind_raw 4, 0xb1, 0x01' is equivalent to '.save
      {r0}'
 
-`.vsave VFP-REGLIST'
+'.vsave VFP-REGLIST'
      Generate unwinder annotations to restore the VFP registers in
-     VFP-REGLIST using FLDMD.  Also works for VFPv3 registers that are
-     to be restored using VLDM.  The format of VFP-REGLIST is the same
-     as the corresponding store-multiple instruction.
+     VFP-REGLIST using FLDMD. Also works for VFPv3 registers that are to
+     be restored using VLDM. The format of VFP-REGLIST is the same as
+     the corresponding store-multiple instruction.
 
      _VFP registers_
             .vsave {d8, d9, d10}
@@ -8180,36 +7960,35 @@ File: as.info,  Node: ARM Directives,  Next: ARM Opcodes,  Prev: ARM Floating Po
             vstm sp!, {d15, d16, d17}
 
      Since FLDMX and FSTMX are now deprecated, this directive should be
-     used in favour of `.save' for saving VFP registers for ARMv6 and
+     used in favour of '.save' for saving VFP registers for ARMv6 and
      above.
 
-
 
 File: as.info,  Node: ARM Opcodes,  Next: ARM Mapping Symbols,  Prev: ARM Directives,  Up: ARM-Dependent
 
 9.4.5 Opcodes
 -------------
 
-`as' implements all the standard ARM opcodes.  It also implements
+'as' implements all the standard ARM opcodes.  It also implements
 several pseudo opcodes, including several synthetic load instructions.
 
-`NOP'
+'NOP'
             nop
 
-     This pseudo op will always evaluate to a legal ARM instruction
-     that does nothing.  Currently it will evaluate to MOV r0, r0.
+     This pseudo op will always evaluate to a legal ARM instruction that
+     does nothing.  Currently it will evaluate to MOV r0, r0.
 
-`LDR'
+'LDR'
             ldr <register> , = <expression>
 
      If expression evaluates to a numeric constant then a MOV or MVN
      instruction will be used in place of the LDR instruction, if the
      constant can be generated by either of these instructions.
-     Otherwise the constant will be placed into the nearest literal
-     pool (if it not already there) and a PC relative LDR instruction
-     will be generated.
+     Otherwise the constant will be placed into the nearest literal pool
+     (if it not already there) and a PC relative LDR instruction will be
+     generated.
 
-`ADR'
+'ADR'
             adr <register> <label>
 
      This instruction will load the address of LABEL into the indicated
@@ -8219,7 +7998,7 @@ several pseudo opcodes, including several synthetic load instructions.
      (and section) as the ADR instruction, then an error will be
      generated.  This instruction will not make use of the literal pool.
 
-`ADRL'
+'ADRL'
             adrl <register> <label>
 
      This instruction will load the address of LABEL into the indicated
@@ -8233,8 +8012,7 @@ several pseudo opcodes, including several synthetic load instructions.
      file (and section) as the ADRL instruction, then an error will be
      generated.  This instruction will not make use of the literal pool.
 
-
-   For information on the ARM or Thumb instruction sets, see `ARM
+   For information on the ARM or Thumb instruction sets, see 'ARM
 Software Development Toolkit Reference Manual', Advanced RISC Machines
 Ltd.
 
@@ -8244,24 +8022,23 @@ File: as.info,  Node: ARM Mapping Symbols,  Next: ARM Unwinding Tutorial,  Prev:
 9.4.6 Mapping Symbols
 ---------------------
 
-The ARM ELF specification requires that special symbols be inserted
-into object files to mark certain features:
+The ARM ELF specification requires that special symbols be inserted into
+object files to mark certain features:
 
-`$a'
+'$a'
      At the start of a region of code containing ARM instructions.
 
-`$t'
+'$t'
      At the start of a region of code containing THUMB instructions.
 
-`$d'
+'$d'
      At the start of a region of data.
 
-
    The assembler will automatically insert these symbols for you - there
 is no need to code them yourself.  Support for tagging symbols ($b, $f,
 $p and $m) which is also mentioned in the current ARM ELF specification
-is not implemented.  This is because they have been dropped from the
-new EABI and so tools cannot rely upon their presence.
+is not implemented.  This is because they have been dropped from the new
+EABI and so tools cannot rely upon their presence.
 
 
 File: as.info,  Node: ARM Unwinding Tutorial,  Prev: ARM Mapping Symbols,  Up: ARM-Dependent
@@ -8275,12 +8052,12 @@ exception is thrown to determine where control should be transferred.
 In particular, the unwind information is used to determine which
 function called the function that threw the exception, and which
 function called that one, and so forth.  This information is also used
-to restore the values of callee-saved registers in the function
-catching the exception.
+to restore the values of callee-saved registers in the function catching
+the exception.
 
    If you are writing functions in assembly code, and those functions
-call other functions that throw exceptions, you must use assembly
-pseudo ops to ensure that appropriate exception unwind information is
+call other functions that throw exceptions, you must use assembly pseudo
+ops to ensure that appropriate exception unwind information is
 generated.  Otherwise, if one of the functions called by your assembly
 code throws an exception, the run-time library will be unable to unwind
 the stack through your assembly code and your program will not behave
@@ -8289,7 +8066,6 @@ correctly.
    To illustrate the use of these pseudo ops, we will examine the code
 that G++ generates for the following C++ input:
 
-
 void callee (int *);
 
 int
@@ -8308,7 +8084,6 @@ exceptions.
    The code generated by one particular version of G++ when compiling
 the example above is:
 
-
 _Z6callerv:
 	.fnstart
 .LFB2:
@@ -8342,64 +8117,63 @@ that are used to generate unwind information.
 
    An important assumption made by the unwinder is that the stack frame
 does not change during the body of the function.  In particular, since
-we assume that the assembly code does not itself throw an exception,
-the only point where an exception can be thrown is from a call, such as
-the `bl' instruction above.  At each call site, the same saved
-registers (including `lr', which indicates the return address) must be
-located in the same locations relative to the frame pointer.
+we assume that the assembly code does not itself throw an exception, the
+only point where an exception can be thrown is from a call, such as the
+'bl' instruction above.  At each call site, the same saved registers
+(including 'lr', which indicates the return address) must be located in
+the same locations relative to the frame pointer.
 
-   The `.fnstart' (*note .fnstart pseudo op: arm_fnstart.) pseudo op
+   The '.fnstart' (*note .fnstart pseudo op: arm_fnstart.) pseudo op
 appears immediately before the first instruction of the function while
-the `.fnend' (*note .fnend pseudo op: arm_fnend.) pseudo op appears
+the '.fnend' (*note .fnend pseudo op: arm_fnend.) pseudo op appears
 immediately after the last instruction of the function.  These pseudo
 ops specify the range of the function.
 
-   Only the order of the other pseudos ops (e.g., `.setfp' or `.pad')
+   Only the order of the other pseudos ops (e.g., '.setfp' or '.pad')
 matters; their exact locations are irrelevant.  In the example above,
 the compiler emits the pseudo ops with particular instructions.  That
 makes it easier to understand the code, but it is not required for
 correctness.  It would work just as well to emit all of the pseudo ops
-other than `.fnend' in the same order, but immediately after `.fnstart'.
-
-   The `.save' (*note .save pseudo op: arm_save.) pseudo op indicates
-registers that have been saved to the stack so that they can be
-restored before the function returns.  The argument to the `.save'
-pseudo op is a list of registers to save.  If a register is
-"callee-saved" (as specified by the ABI) and is modified by the
-function you are writing, then your code must save the value before it
-is modified and restore the original value before the function returns.
-If an exception is thrown, the run-time library restores the values of
-these registers from their locations on the stack before returning
-control to the exception handler.  (Of course, if an exception is not
-thrown, the function that contains the `.save' pseudo op restores these
-registers in the function epilogue, as is done with the `ldmfd'
-instruction above.)
+other than '.fnend' in the same order, but immediately after '.fnstart'.
+
+   The '.save' (*note .save pseudo op: arm_save.) pseudo op indicates
+registers that have been saved to the stack so that they can be restored
+before the function returns.  The argument to the '.save' pseudo op is a
+list of registers to save.  If a register is "callee-saved" (as
+specified by the ABI) and is modified by the function you are writing,
+then your code must save the value before it is modified and restore the
+original value before the function returns.  If an exception is thrown,
+the run-time library restores the values of these registers from their
+locations on the stack before returning control to the exception
+handler.  (Of course, if an exception is not thrown, the function that
+contains the '.save' pseudo op restores these registers in the function
+epilogue, as is done with the 'ldmfd' instruction above.)
 
    You do not have to save callee-saved registers at the very beginning
-of the function and you do not need to use the `.save' pseudo op
+of the function and you do not need to use the '.save' pseudo op
 immediately following the point at which the registers are saved.
 However, if you modify a callee-saved register, you must save it on the
 stack before modifying it and before calling any functions which might
-throw an exception.  And, you must use the `.save' pseudo op to
-indicate that you have done so.
+throw an exception.  And, you must use the '.save' pseudo op to indicate
+that you have done so.
 
-   The `.pad' (*note .pad: arm_pad.) pseudo op indicates a modification
+   The '.pad' (*note .pad: arm_pad.) pseudo op indicates a modification
 of the stack pointer that does not save any registers.  The argument is
 the number of bytes (in decimal) that are subtracted from the stack
 pointer.  (On ARM CPUs, the stack grows downwards, so subtracting from
 the stack pointer increases the size of the stack.)
 
-   The `.setfp' (*note .setfp pseudo op: arm_setfp.) pseudo op
-indicates the register that contains the frame pointer.  The first
-argument is the register that is set, which is typically `fp'.  The
-second argument indicates the register from which the frame pointer
-takes its value.  The third argument, if present, is the value (in
-decimal) added to the register specified by the second argument to
-compute the value of the frame pointer.  You should not modify the
-frame pointer in the body of the function.
+   The '.setfp' (*note .setfp pseudo op: arm_setfp.) pseudo op indicates
+the register that contains the frame pointer.  The first argument is the
+register that is set, which is typically 'fp'.  The second argument
+indicates the register from which the frame pointer takes its value.
+The third argument, if present, is the value (in decimal) added to the
+register specified by the second argument to compute the value of the
+frame pointer.  You should not modify the frame pointer in the body of
+the function.
 
    If you do not use a frame pointer, then you should not use the
-`.setfp' pseudo op.  If you do not use a frame pointer, then you should
+'.setfp' pseudo op.  If you do not use a frame pointer, then you should
 avoid modifying the stack pointer outside of the function prologue.
 Otherwise, the run-time library will be unable to find saved registers
 when it is unwinding the stack.
@@ -8407,8 +8181,8 @@ when it is unwinding the stack.
    The pseudo ops described above are sufficient for writing assembly
 code that calls functions which may throw exceptions.  If you need to
 know more about the object-file format used to represent unwind
-information, you may consult the `Exception Handling ABI for the ARM
-Architecture' available from `http://infocenter.arm.com'.
+information, you may consult the 'Exception Handling ABI for the ARM
+Architecture' available from <http://infocenter.arm.com>.
 
 
 File: as.info,  Node: AVR-Dependent,  Next: Blackfin-Dependent,  Prev: ARM-Dependent,  Up: Machine Dependencies
@@ -8428,7 +8202,7 @@ File: as.info,  Node: AVR Options,  Next: AVR Syntax,  Up: AVR-Dependent
 9.5.1 Options
 -------------
 
-`-mmcu=MCU'
+'-mmcu=MCU'
      Specify ATMEL AVR instruction set or MCU type.
 
      Instruction set avr1 is for the minimal AVR core, not supported by
@@ -8451,8 +8225,8 @@ File: as.info,  Node: AVR Options,  Next: AVR Syntax,  Up: AVR-Dependent
      Instruction set avr3 is for the classic AVR core with up to 128K
      program memory space (MCU types: at43usb355, at76c711).
 
-     Instruction set avr31 is for the classic AVR core with exactly
-     128K program memory space (MCU types: atmega103, at43usb320).
+     Instruction set avr31 is for the classic AVR core with exactly 128K
+     program memory space (MCU types: atmega103, at43usb320).
 
      Instruction set avr35 is for classic AVR core plus MOVW, CALL, and
      JMP instructions (MCU types: attiny167, attiny1634, at90usb82,
@@ -8461,9 +8235,8 @@ File: as.info,  Node: AVR Options,  Next: AVR Syntax,  Up: AVR-Dependent
      Instruction set avr4 is for the enhanced AVR core with up to 8K
      program memory space (MCU types: atmega48, atmega48a, atmega48pa,
      atmega48p, atmega8, atmega8a, atmega88, atmega88a, atmega88p,
-     atmega88pa, atmega8515, atmega8535, atmega8hva, at90pwm1,
-     at90pwm2, at90pwm2b, at90pwm3, at90pwm3b, at90pwm81, ata6285,
-     ata6286).
+     atmega88pa, atmega8515, atmega8535, atmega8hva, at90pwm1, at90pwm2,
+     at90pwm2b, at90pwm3, at90pwm3b, at90pwm81, ata6285, ata6286).
 
      Instruction set avr5 is for the enhanced AVR core with up to 128K
      program memory space (MCU types: at90pwm161, atmega16, atmega16a,
@@ -8531,27 +8304,26 @@ File: as.info,  Node: AVR Options,  Next: AVR Syntax,  Up: AVR-Dependent
      Instruction set avrtiny is for the ATtiny4/5/9/10/20/40
      microcontrollers.
 
-`-mall-opcodes'
-     Accept all AVR opcodes, even if not supported by `-mmcu'.
+'-mall-opcodes'
+     Accept all AVR opcodes, even if not supported by '-mmcu'.
 
-`-mno-skip-bug'
+'-mno-skip-bug'
      This option disable warnings for skipping two-word instructions.
 
-`-mno-wrap'
-     This option reject `rjmp/rcall' instructions with 8K wrap-around.
+'-mno-wrap'
+     This option reject 'rjmp/rcall' instructions with 8K wrap-around.
 
-`-mrmw'
-     Accept Read-Modify-Write (`XCH,LAC,LAS,LAT') instructions.
+'-mrmw'
+     Accept Read-Modify-Write ('XCH,LAC,LAS,LAT') instructions.
 
-`-mlink-relax'
+'-mlink-relax'
      Enable support for link-time relaxation.  This is now on by default
      and this flag no longer has any effect.
 
-`-mno-link-relax'
+'-mno-link-relax'
      Disable support for link-time relaxation.  The assembler will
-     resolve relocations when it can, and may be able to better
-     compress some debug information.
-
+     resolve relocations when it can, and may be able to better compress
+     some debug information.
 
 
 File: as.info,  Node: AVR Syntax,  Next: AVR Opcodes,  Prev: AVR Options,  Up: AVR-Dependent
@@ -8571,15 +8343,15 @@ File: as.info,  Node: AVR-Chars,  Next: AVR-Regs,  Up: AVR Syntax
 9.5.2.1 Special Characters
 ..........................
 
-The presence of a `;' anywhere on a line indicates the start of a
+The presence of a ';' anywhere on a line indicates the start of a
 comment that extends to the end of that line.
 
-   If a `#' appears as the first character of a line, the whole line is
+   If a '#' appears as the first character of a line, the whole line is
 treated as a comment, but in this case the line can also be a logical
 line number directive (*note Comments::) or a preprocessor control
 command (*note Preprocessing::).
 
-   The `$' character can be used instead of a newline to separate
+   The '$' character can be used instead of a newline to separate
 statements.
 
 
@@ -8588,12 +8360,12 @@ File: as.info,  Node: AVR-Regs,  Next: AVR-Modifiers,  Prev: AVR-Chars,  Up: AVR
 9.5.2.2 Register Names
 ......................
 
-The AVR has 32 x 8-bit general purpose working registers `r0', `r1',
-... `r31'.  Six of the 32 registers can be used as three 16-bit
-indirect address register pointers for Data Space addressing. One of
-the these address pointers can also be used as an address pointer for
-look up tables in Flash program memory. These added function registers
-are the 16-bit `X', `Y' and `Z' - registers.
+The AVR has 32 x 8-bit general purpose working registers 'r0', 'r1', ...
+'r31'.  Six of the 32 registers can be used as three 16-bit indirect
+address register pointers for Data Space addressing.  One of the these
+address pointers can also be used as an address pointer for look up
+tables in Flash program memory.  These added function registers are the
+16-bit 'X', 'Y' and 'Z' - registers.
 
      X = r26:r27
      Y = r28:r29
@@ -8611,33 +8383,37 @@ following:
 
      modifier(relocatable-expression)
 
-`lo8'
+'lo8'
+
      This modifier allows you to use bits 0 through 7 of an address
      expression as 8 bit relocatable expression.
 
-`hi8'
+'hi8'
+
      This modifier allows you to use bits 7 through 15 of an address
      expression as 8 bit relocatable expression.  This is useful with,
-     for example, the AVR `ldi' instruction and `lo8' modifier.
+     for example, the AVR 'ldi' instruction and 'lo8' modifier.
 
      For example
 
           ldi r26, lo8(sym+10)
           ldi r27, hi8(sym+10)
 
-`hh8'
+'hh8'
+
      This modifier allows you to use bits 16 through 23 of an address
      expression as 8 bit relocatable expression.  Also, can be useful
      for loading 32 bit constants.
 
-`hlo8'
-     Synonym of `hh8'.
+'hlo8'
+
+     Synonym of 'hh8'.
+
+'hhi8'
 
-`hhi8'
-     This modifier allows you to use bits 24 through 31 of an
-     expression as 8 bit expression. This is useful with, for example,
-     the AVR `ldi' instruction and `lo8', `hi8', `hlo8', `hhi8',
-     modifier.
+     This modifier allows you to use bits 24 through 31 of an expression
+     as 8 bit expression.  This is useful with, for example, the AVR
+     'ldi' instruction and 'lo8', 'hi8', 'hlo8', 'hhi8', modifier.
 
      For example
 
@@ -8647,23 +8423,25 @@ following:
           ldi r29, hhi8(285774925)
           ; r29,r28,r27,r26 = 285774925
 
-`pm_lo8'
+'pm_lo8'
+
      This modifier allows you to use bits 0 through 7 of an address
      expression as 8 bit relocatable expression.  This modifier useful
-     for addressing data or code from Flash/Program memory. The using
-     of `pm_lo8' similar to `lo8'.
+     for addressing data or code from Flash/Program memory.  The using
+     of 'pm_lo8' similar to 'lo8'.
+
+'pm_hi8'
 
-`pm_hi8'
      This modifier allows you to use bits 8 through 15 of an address
      expression as 8 bit relocatable expression.  This modifier useful
      for addressing data or code from Flash/Program memory.
 
-`pm_hh8'
+'pm_hh8'
+
      This modifier allows you to use bits 15 through 23 of an address
      expression as 8 bit relocatable expression.  This modifier useful
      for addressing data or code from Flash/Program memory.
 
-
 
 File: as.info,  Node: AVR Opcodes,  Prev: AVR Syntax,  Up: AVR-Dependent
 
@@ -8671,17 +8449,17 @@ File: as.info,  Node: AVR Opcodes,  Prev: AVR Syntax,  Up: AVR-Dependent
 -------------
 
 For detailed information on the AVR machine instruction set, see
-`www.atmel.com/products/AVR'.
+<www.atmel.com/products/AVR>.
 
-   `as' implements all the standard AVR opcodes.  The following table
+   'as' implements all the standard AVR opcodes.  The following table
 summarizes the AVR opcodes, and their arguments.
 
      Legend:
         r   any register
-        d   `ldi' register (r16-r31)
-        v   `movw' even register (r0, r2, ..., r28, r30)
-        a   `fmul' register (r16-r23)
-        w   `adiw' register (r24,r26,r28,r30)
+        d   'ldi' register (r16-r31)
+        v   'movw' even register (r0, r2, ..., r28, r30)
+        a   'fmul' register (r16-r23)
+        w   'adiw' register (r24,r26,r28,r30)
         e   pointer registers (X,Y,Z)
         b   base pointer register and displacement ([YZ]+disp)
         z   Z pointer register (for [e]lpm Rd,Z[+])
@@ -8690,7 +8468,7 @@ summarizes the AVR opcodes, and their arguments.
         s   immediate value from 0 to 7
         P   Port address value from 0 to 63. (in, out)
         p   Port address value from 0 to 31. (cbi, sbi, sbic, sbis)
-        K   immediate value from 0 to 63 (used in `adiw', `sbiw')
+        K   immediate value from 0 to 63 (used in 'adiw', 'sbiw')
         i   immediate value
         l   signed pc relative offset from -64 to 63
         L   signed pc relative offset from -2048 to 2047
@@ -8833,24 +8611,24 @@ File: as.info,  Node: Blackfin Options,  Next: Blackfin Syntax,  Up: Blackfin-De
 9.6.1 Options
 -------------
 
-`-mcpu=PROCESSOR[-SIREVISION]'
+'-mcpu=PROCESSOR[-SIREVISION]'
      This option specifies the target processor.  The optional
      SIREVISION is not used in assembler.  It's here such that GCC can
-     easily pass down its `-mcpu=' option.  The assembler will issue an
+     easily pass down its '-mcpu=' option.  The assembler will issue an
      error message if an attempt is made to assemble an instruction
      which will not execute on the target processor.  The following
-     processor names are recognized: `bf504', `bf506', `bf512', `bf514',
-     `bf516', `bf518', `bf522', `bf523', `bf524', `bf525', `bf526',
-     `bf527', `bf531', `bf532', `bf533', `bf534', `bf535' (not
-     implemented yet), `bf536', `bf537', `bf538', `bf539', `bf542',
-     `bf542m', `bf544', `bf544m', `bf547', `bf547m', `bf548', `bf548m',
-     `bf549', `bf549m', `bf561', and `bf592'.
-
-`-mfdpic'
+     processor names are recognized: 'bf504', 'bf506', 'bf512', 'bf514',
+     'bf516', 'bf518', 'bf522', 'bf523', 'bf524', 'bf525', 'bf526',
+     'bf527', 'bf531', 'bf532', 'bf533', 'bf534', 'bf535' (not
+     implemented yet), 'bf536', 'bf537', 'bf538', 'bf539', 'bf542',
+     'bf542m', 'bf544', 'bf544m', 'bf547', 'bf547m', 'bf548', 'bf548m',
+     'bf549', 'bf549m', 'bf561', and 'bf592'.
+
+'-mfdpic'
      Assemble for the FDPIC ABI.
 
-`-mno-fdpic'
-`-mnopic'
+'-mno-fdpic'
+'-mnopic'
      Disable -mfdpic.
 
 
@@ -8859,7 +8637,7 @@ File: as.info,  Node: Blackfin Syntax,  Next: Blackfin Directives,  Prev: Blackf
 9.6.2 Syntax
 ------------
 
-`Special Characters'
+'Special Characters'
      Assembler input is free format and may appear anywhere on the line.
      One instruction may extend across multiple lines or more than one
      instruction may appear on the same line.  White space (space, tab,
@@ -8868,14 +8646,14 @@ File: as.info,  Node: Blackfin Syntax,  Next: Blackfin Directives,  Prev: Blackf
      names, keywords, user identifiers, and also some multicharacter
      special symbols like "+=", "/*" or "||".
 
-     Comments are introduced by the `#' character and extend to the end
-     of the current line.  If the `#' appears as the first character of
+     Comments are introduced by the '#' character and extend to the end
+     of the current line.  If the '#' appears as the first character of
      a line, the whole line is treated as a comment, but in this case
      the line can also be a logical line number directive (*note
      Comments::) or a preprocessor control command (*note
      Preprocessing::).
 
-`Instruction Delimiting'
+'Instruction Delimiting'
      A semicolon must terminate every instruction.  Sometimes a complete
      instruction will consist of more than one operation.  There are two
      cases where this occurs.  The first is when two general operations
@@ -8893,7 +8671,8 @@ File: as.info,  Node: Blackfin Syntax,  Next: Blackfin Directives,  Prev: Blackf
      Multiple instructions can occur on the same line.  Each must be
      terminated by a semicolon character.
 
-`Register Names'
+'Register Names'
+
      The assembler treats register names and instruction keywords in a
      case insensitive manner.  User identifiers are case sensitive.
      Thus, R3.l, R3.L, r3.l and r3.L are all equivalent input to the
@@ -8910,104 +8689,100 @@ File: as.info,  Node: Blackfin Syntax,  Next: Blackfin Directives,  Prev: Blackf
 
      Some instructions (such as -SP (Push Multiple)) require a group of
      adjacent registers.  Adjacent registers are denoted in the syntax
-     by the range enclosed in parentheses and separated by a colon,
-     eg., (R7:3).  Again, the larger number appears first.
+     by the range enclosed in parentheses and separated by a colon, eg.,
+     (R7:3).  Again, the larger number appears first.
 
      Portions of a particular register may be individually specified.
-     This is written with a dot (".") following the register name and
+     This is written with a dot (".")  following the register name and
      then a letter denoting the desired portion.  For 32-bit registers,
      ".H" denotes the most significant ("High") portion.  ".L" denotes
      the least-significant portion.  The subdivisions of the 40-bit
      registers are described later.
 
-`Accumulators'
+'Accumulators'
      The set of 40-bit registers A1 and A0 that normally contain data
      that is being manipulated.  Each accumulator can be accessed in
      four ways.
 
-    `one 40-bit register'
+     'one 40-bit register'
           The register will be referred to as A1 or A0.
-
-    `one 32-bit register'
+     'one 32-bit register'
           The registers are designated as A1.W or A0.W.
-
-    `two 16-bit registers'
+     'two 16-bit registers'
           The registers are designated as A1.H, A1.L, A0.H or A0.L.
-
-    `one 8-bit register'
+     'one 8-bit register'
           The registers are designated as A1.X or A0.X for the bits that
           extend beyond bit 31.
 
-`Data Registers'
+'Data Registers'
      The set of 32-bit registers (R0, R1, R2, R3, R4, R5, R6 and R7)
-     that normally contain data for manipulation.  These are
-     abbreviated as D-register or Dreg.  Data registers can be accessed
-     as 32-bit registers or as two independent 16-bit registers.  The
-     least significant 16 bits of each register is called the "low"
-     half and is designated with ".L" following the register name.  The
-     most significant 16 bits are called the "high" half and is
-     designated with ".H" following the name.
+     that normally contain data for manipulation.  These are abbreviated
+     as D-register or Dreg.  Data registers can be accessed as 32-bit
+     registers or as two independent 16-bit registers.  The least
+     significant 16 bits of each register is called the "low" half and
+     is designated with ".L" following the register name.  The most
+     significant 16 bits are called the "high" half and is designated
+     with ".H" following the name.
 
              R7.L, r2.h, r4.L, R0.H
 
-`Pointer Registers'
+'Pointer Registers'
      The set of 32-bit registers (P0, P1, P2, P3, P4, P5, SP and FP)
      that normally contain byte addresses of data structures.  These are
      abbreviated as P-register or Preg.
 
           p2, p5, fp, sp
 
-`Stack Pointer SP'
+'Stack Pointer SP'
      The stack pointer contains the 32-bit address of the last occupied
      byte location in the stack.  The stack grows by decrementing the
      stack pointer.
 
-`Frame Pointer FP'
+'Frame Pointer FP'
      The frame pointer contains the 32-bit address of the previous frame
      pointer in the stack.  It is located at the top of a frame.
 
-`Loop Top'
-     LT0 and LT1.  These registers contain the 32-bit address of the
-     top of a zero overhead loop.
+'Loop Top'
+     LT0 and LT1.  These registers contain the 32-bit address of the top
+     of a zero overhead loop.
 
-`Loop Count'
+'Loop Count'
      LC0 and LC1.  These registers contain the 32-bit counter of the
      zero overhead loop executions.
 
-`Loop Bottom'
+'Loop Bottom'
      LB0 and LB1.  These registers contain the 32-bit address of the
      bottom of a zero overhead loop.
 
-`Index Registers'
+'Index Registers'
      The set of 32-bit registers (I0, I1, I2, I3) that normally contain
      byte addresses of data structures.  Abbreviated I-register or Ireg.
 
-`Modify Registers'
+'Modify Registers'
      The set of 32-bit registers (M0, M1, M2, M3) that normally contain
      offset values that are added and subtracted to one of the index
      registers.  Abbreviated as Mreg.
 
-`Length Registers'
+'Length Registers'
      The set of 32-bit registers (L0, L1, L2, L3) that normally contain
      the length in bytes of the circular buffer.  Abbreviated as Lreg.
-     Clear the Lreg to disable circular addressing for the
-     corresponding Ireg.
+     Clear the Lreg to disable circular addressing for the corresponding
+     Ireg.
 
-`Base Registers'
+'Base Registers'
      The set of 32-bit registers (B0, B1, B2, B3) that normally contain
      the base address in bytes of the circular buffer.  Abbreviated as
      Breg.
 
-`Floating Point'
+'Floating Point'
      The Blackfin family has no hardware floating point but the .float
      directive generates ieee floating point numbers for use with
      software floating point libraries.
 
-`Blackfin Opcodes'
+'Blackfin Opcodes'
      For detailed information on the Blackfin machine instruction set,
      see the Blackfin(r) Processor Instruction Set Reference.
 
-
 
 File: as.info,  Node: Blackfin Directives,  Prev: Blackfin Syntax,  Up: Blackfin-Dependent
 
@@ -9017,32 +8792,27 @@ File: as.info,  Node: Blackfin Directives,  Prev: Blackfin Syntax,  Up: Blackfin
 The following directives are provided for compatibility with the VDSP
 assembler.
 
-`.byte2'
+'.byte2'
      Initializes a two byte data object.
 
-     This maps to the `.short' directive.
-
-`.byte4'
+     This maps to the '.short' directive.
+'.byte4'
      Initializes a four byte data object.
 
-     This maps to the `.int' directive.
-
-`.db'
+     This maps to the '.int' directive.
+'.db'
      Initializes a single byte data object.
 
-     This directive is a synonym for `.byte'.
-
-`.dw'
+     This directive is a synonym for '.byte'.
+'.dw'
      Initializes a two byte data object.
 
-     This directive is a synonym for `.byte2'.
-
-`.dd'
+     This directive is a synonym for '.byte2'.
+'.dd'
      Initializes a four byte data object.
 
-     This directive is a synonym for `.byte4'.
-
-`.var'
+     This directive is a synonym for '.byte4'.
+'.var'
      Define and initialize a 32 bit data object.
 
 
@@ -9062,91 +8832,85 @@ File: as.info,  Node: CR16 Operand Qualifiers,  Next: CR16 Syntax,  Up: CR16-Dep
 9.7.1 CR16 Operand Qualifiers
 -----------------------------
 
-The National Semiconductor CR16 target of `as' has a few machine
+The National Semiconductor CR16 target of 'as' has a few machine
 dependent operand qualifiers.
 
    Operand expression type qualifier is an optional field in the
 instruction operand, to determines the type of the expression field of
-an operand. The `@' is required. CR16 architecture uses one of the
+an operand.  The '@' is required.  CR16 architecture uses one of the
 following expression qualifiers:
 
-`s'
-     - `Specifies expression operand type as small'
-
-`m'
-     - `Specifies expression operand type as medium'
-
-`l'
-     - `Specifies expression operand type as large'
-
-`c'
-     - `Specifies the CR16 Assembler generates a relocation entry for
+'s'
+     - 'Specifies expression operand type as small'
+'m'
+     - 'Specifies expression operand type as medium'
+'l'
+     - 'Specifies expression operand type as large'
+'c'
+     - 'Specifies the CR16 Assembler generates a relocation entry for
      the operand, where pc has implied bit, the expression is adjusted
      accordingly. The linker uses the relocation entry to update the
      operand address at link time.'
-
-`got/GOT'
-     - `Specifies the CR16 Assembler generates a relocation entry for
+'got/GOT'
+     - 'Specifies the CR16 Assembler generates a relocation entry for
      the operand, offset from Global Offset Table. The linker uses this
      relocation entry to update the operand address at link time'
-
-`cgot/cGOT'
-     - `Specifies the CompactRISC Assembler generates a relocation
-     entry for the operand, where pc has implied bit, the expression is
+'cgot/cGOT'
+     - 'Specifies the CompactRISC Assembler generates a relocation entry
+     for the operand, where pc has implied bit, the expression is
      adjusted accordingly. The linker uses the relocation entry to
      update the operand address at link time.'
 
    CR16 target operand qualifiers and its size (in bits):
 
-`Immediate Operand: s'
+'Immediate Operand: s'
      4 bits.
 
-`Immediate Operand: m'
+'Immediate Operand: m'
      16 bits, for movb and movw instructions.
 
-`Immediate Operand: m'
+'Immediate Operand: m'
      20 bits, movd instructions.
 
-`Immediate Operand: l'
+'Immediate Operand: l'
      32 bits.
 
-`Absolute Operand: s'
+'Absolute Operand: s'
      Illegal specifier for this operand.
 
-`Absolute Operand: m'
+'Absolute Operand: m'
      20 bits, movd instructions.
 
-`Displacement Operand: s'
+'Displacement Operand: s'
      8 bits.
 
-`Displacement Operand: m'
+'Displacement Operand: m'
      16 bits.
 
-`Displacement Operand: l'
+'Displacement Operand: l'
      24 bits.
 
-
    For example:
-     1   `movw $_myfun@c,r1'
+     1   movw $_myfun@c,r1
 
          This loads the address of _myfun, shifted right by 1, into r1.
 
-     2   `movd $_myfun@c,(r2,r1)'
+     2   movd $_myfun@c,(r2,r1)
 
          This loads the address of _myfun, shifted right by 1, into register-pair r2-r1.
 
-     3   `_myfun_ptr:'
-         `.long _myfun@c'
-         `loadd _myfun_ptr, (r1,r0)'
-         `jal (r1,r0)'
+     3   _myfun_ptr:
+         .long _myfun@c
+         loadd _myfun_ptr, (r1,r0)
+         jal (r1,r0)
 
          This .long directive, the address of _myfunc, shifted right by 1 at link time.
 
-     4   `loadd  _data1@GOT(r12), (r1,r0)'
+     4   loadd  _data1@GOT(r12), (r1,r0)
 
          This loads the address of _data1, into global offset table (ie GOT) and its offset value from GOT loads into register-pair r2-r1.
 
-     5   `loadd  _myfunc@cGOT(r12), (r1,r0)'
+     5   loadd  _myfunc@cGOT(r12), (r1,r0)
 
          This loads the address of _myfun, shifted right by 1, into global offset table (ie GOT) and its offset value from GOT loads into register-pair r1-r0.
 
@@ -9166,14 +8930,13 @@ File: as.info,  Node: CR16-Chars,  Up: CR16 Syntax
 9.7.2.1 Special Characters
 ..........................
 
-The presence of a `#' on a line indicates the start of a comment that
-extends to the end of the current line.  If the `#' appears as the
-first character of a line, the whole line is treated as a comment, but
-in this case the line can also be a logical line number directive
-(*note Comments::) or a preprocessor control command (*note
-Preprocessing::).
+The presence of a '#' on a line indicates the start of a comment that
+extends to the end of the current line.  If the '#' appears as the first
+character of a line, the whole line is treated as a comment, but in this
+case the line can also be a logical line number directive (*note
+Comments::) or a preprocessor control command (*note Preprocessing::).
 
-   The `;' character can be used to separate statements on the same
+   The ';' character can be used to separate statements on the same
 line.
 
 
@@ -9195,72 +8958,73 @@ File: as.info,  Node: CRIS-Opts,  Next: CRIS-Expand,  Up: CRIS-Dependent
 9.8.1 Command-line Options
 --------------------------
 
-The CRIS version of `as' has these machine-dependent command-line
+The CRIS version of 'as' has these machine-dependent command-line
 options.
 
    The format of the generated object files can be either ELF or a.out,
-specified by the command-line options `--emulation=crisaout' and
-`--emulation=criself'.  The default is ELF (criself), unless `as' has
+specified by the command-line options '--emulation=crisaout' and
+'--emulation=criself'.  The default is ELF (criself), unless 'as' has
 been configured specifically for a.out by using the configuration name
-`cris-axis-aout'.
+'cris-axis-aout'.
 
    There are two different link-incompatible ELF object file variants
 for CRIS, for use in environments where symbols are expected to be
-prefixed by a leading `_' character and for environments without such a
+prefixed by a leading '_' character and for environments without such a
 symbol prefix.  The variant used for GNU/Linux port has no symbol
 prefix.  Which variant to produce is specified by either of the options
-`--underscore' and `--no-underscore'.  The default is `--underscore'.
-Since symbols in CRIS a.out objects are expected to have a `_' prefix,
-specifying `--no-underscore' when generating a.out objects is an error.
+'--underscore' and '--no-underscore'.  The default is '--underscore'.
+Since symbols in CRIS a.out objects are expected to have a '_' prefix,
+specifying '--no-underscore' when generating a.out objects is an error.
 Besides the object format difference, the effect of this option is to
 parse register names differently (*note crisnous::).  The
-`--no-underscore' option makes a `$' register prefix mandatory.
+'--no-underscore' option makes a '$' register prefix mandatory.
 
-   The option `--pic' must be passed to `as' in order to recognize the
+   The option '--pic' must be passed to 'as' in order to recognize the
 symbol syntax used for ELF (SVR4 PIC) position-independent-code (*note
 crispic::).  This will also affect expansion of instructions.  The
-expansion with `--pic' will use PC-relative rather than (slightly
+expansion with '--pic' will use PC-relative rather than (slightly
 faster) absolute addresses in those expansions.  This option is only
 valid when generating ELF format object files.
 
-   The option `--march=ARCHITECTURE' specifies the recognized
+   The option '--march=ARCHITECTURE' specifies the recognized
 instruction set and recognized register names.  It also controls the
 architecture type of the object file.  Valid values for ARCHITECTURE
 are:
-`v0_v10'
-     All instructions and register names for any architecture variant
-     in the set v0...v10 are recognized.  This is the default if the
-     target is configured as cris-*.
 
-`v10'
+'v0_v10'
+     All instructions and register names for any architecture variant in
+     the set v0...v10 are recognized.  This is the default if the target
+     is configured as cris-*.
+
+'v10'
      Only instructions and register names for CRIS v10 (as found in
-     ETRAX 100 LX) are recognized.  This is the default if the target
-     is configured as crisv10-*.
+     ETRAX 100 LX) are recognized.  This is the default if the target is
+     configured as crisv10-*.
 
-`v32'
+'v32'
      Only instructions and register names for CRIS v32 (code name
      Guinness) are recognized.  This is the default if the target is
-     configured as crisv32-*.  This value implies `--no-mul-bug-abort'.
-     (A subsequent `--mul-bug-abort' will turn it back on.)
+     configured as crisv32-*.  This value implies '--no-mul-bug-abort'.
+     (A subsequent '--mul-bug-abort' will turn it back on.)
 
-`common_v10_v32'
+'common_v10_v32'
      Only instructions with register names and addressing modes with
      opcodes common to the v10 and v32 are recognized.
 
-   When `-N' is specified, `as' will emit a warning when a 16-bit
-branch instruction is expanded into a 32-bit multiple-instruction
-construct (*note CRIS-Expand::).
+   When '-N' is specified, 'as' will emit a warning when a 16-bit branch
+instruction is expanded into a 32-bit multiple-instruction construct
+(*note CRIS-Expand::).
 
    Some versions of the CRIS v10, for example in the Etrax 100 LX,
 contain a bug that causes destabilizing memory accesses when a multiply
 instruction is executed with certain values in the first operand just
-before a cache-miss.  When the `--mul-bug-abort' command line option is
-active (the default value), `as' will refuse to assemble a file
+before a cache-miss.  When the '--mul-bug-abort' command line option is
+active (the default value), 'as' will refuse to assemble a file
 containing a multiply instruction at a dangerous offset, one that could
 be the last on a cache-line, or is in a section with insufficient
 alignment.  This placement checking does not catch any case where the
 multiply instruction is dangerously placed because it is located in a
-delay-slot.  The `--mul-bug-abort' command line option turns off the
+delay-slot.  The '--mul-bug-abort' command line option turns off the
 checking.
 
 
@@ -9269,25 +9033,25 @@ File: as.info,  Node: CRIS-Expand,  Next: CRIS-Symbols,  Prev: CRIS-Opts,  Up: C
 9.8.2 Instruction expansion
 ---------------------------
 
-`as' will silently choose an instruction that fits the operand size for
-`[register+constant]' operands.  For example, the offset `127' in
-`move.d [r3+127],r4' fits in an instruction using a signed-byte offset.
-Similarly, `move.d [r2+32767],r1' will generate an instruction using a
+'as' will silently choose an instruction that fits the operand size for
+'[register+constant]' operands.  For example, the offset '127' in
+'move.d [r3+127],r4' fits in an instruction using a signed-byte offset.
+Similarly, 'move.d [r2+32767],r1' will generate an instruction using a
 16-bit offset.  For symbolic expressions and constants that do not fit
 in 16 bits including the sign bit, a 32-bit offset is generated.
 
-   For branches, `as' will expand from a 16-bit branch instruction into
+   For branches, 'as' will expand from a 16-bit branch instruction into
 a sequence of instructions that can reach a full 32-bit address.  Since
 this does not correspond to a single instruction, such expansions can
 optionally be warned about.  *Note CRIS-Opts::.
 
-   If the operand is found to fit the range, a `lapc' mnemonic will
-translate to a `lapcq' instruction.  Use `lapc.d' to force the 32-bit
-`lapc' instruction.
+   If the operand is found to fit the range, a 'lapc' mnemonic will
+translate to a 'lapcq' instruction.  Use 'lapc.d' to force the 32-bit
+'lapc' instruction.
 
-   Similarly, the `addo' mnemonic will translate to the shortest
-fitting instruction of `addoq', `addo.w' and `addo.d', when used with a
-operand that is a constant known at assembly time.
+   Similarly, the 'addo' mnemonic will translate to the shortest fitting
+instruction of 'addoq', 'addo.w' and 'addo.d', when used with a operand
+that is a constant known at assembly time.
 
 
 File: as.info,  Node: CRIS-Symbols,  Next: CRIS-Syntax,  Prev: CRIS-Expand,  Up: CRIS-Dependent
@@ -9308,23 +9072,24 @@ in conditional assembly, for example:
       .endif
 
    These symbols are defined in the assembler, reflecting command-line
-options, either when specified or the default.  They are always
-defined, to 0 or 1.
-`..asm.arch.cris.any_v0_v10'
-     This symbol is non-zero when `--march=v0_v10' is specified or the
+options, either when specified or the default.  They are always defined,
+to 0 or 1.
+
+'..asm.arch.cris.any_v0_v10'
+     This symbol is non-zero when '--march=v0_v10' is specified or the
      default.
 
-`..asm.arch.cris.common_v10_v32'
-     Set according to the option `--march=common_v10_v32'.
+'..asm.arch.cris.common_v10_v32'
+     Set according to the option '--march=common_v10_v32'.
 
-`..asm.arch.cris.v10'
-     Reflects the option `--march=v10'.
+'..asm.arch.cris.v10'
+     Reflects the option '--march=v10'.
 
-`..asm.arch.cris.v32'
-     Corresponds to `--march=v10'.
+'..asm.arch.cris.v32'
+     Corresponds to '--march=v10'.
 
    Speaking of symbols, when a symbol is used in code, it can have a
-suffix modifying its value for use in position-independent code. *Note
+suffix modifying its value for use in position-independent code.  *Note
 CRIS-Pic::.
 
 
@@ -9348,13 +9113,13 @@ File: as.info,  Node: CRIS-Chars,  Next: CRIS-Pic,  Up: CRIS-Syntax
 9.8.4.1 Special Characters
 ..........................
 
-The character `#' is a line comment character.  It starts a comment if
+The character '#' is a line comment character.  It starts a comment if
 and only if it is placed at the beginning of a line.
 
-   A `;' character starts a comment anywhere on the line, causing all
+   A ';' character starts a comment anywhere on the line, causing all
 characters up to the end of the line to be ignored.
 
-   A `@' character is handled as a line separator equivalent to a
+   A '@' character is handled as a line separator equivalent to a
 logical new-line character (except in a comment), so separate
 instructions can be specified on a single line.
 
@@ -9366,71 +9131,78 @@ File: as.info,  Node: CRIS-Pic,  Next: CRIS-Regs,  Prev: CRIS-Chars,  Up: CRIS-S
 
 When generating position-independent code (SVR4 PIC) for use in
 cris-axis-linux-gnu or crisv32-axis-linux-gnu shared libraries, symbol
-suffixes are used to specify what kind of run-time symbol lookup will
-be used, expressed in the object as different _relocation types_.
-Usually, all absolute symbol values must be located in a table, the
-_global offset table_, leaving the code position-independent;
-independent of values of global symbols and independent of the address
-of the code.  The suffix modifies the value of the symbol, into for
-example an index into the global offset table where the real symbol
-value is entered, or a PC-relative value, or a value relative to the
-start of the global offset table.  All symbol suffixes start with the
-character `:' (omitted in the list below).  Every symbol use in code or
-a read-only section must therefore have a PIC suffix to enable a useful
-shared library to be created.  Usually, these constructs must not be
-used with an additive constant offset as is usually allowed, i.e. no 4
-as in `symbol + 4' is allowed.  This restriction is checked at
-link-time, not at assembly-time.
-
-`GOT'
+suffixes are used to specify what kind of run-time symbol lookup will be
+used, expressed in the object as different _relocation types_.  Usually,
+all absolute symbol values must be located in a table, the _global
+offset table_, leaving the code position-independent; independent of
+values of global symbols and independent of the address of the code.
+The suffix modifies the value of the symbol, into for example an index
+into the global offset table where the real symbol value is entered, or
+a PC-relative value, or a value relative to the start of the global
+offset table.  All symbol suffixes start with the character ':' (omitted
+in the list below).  Every symbol use in code or a read-only section
+must therefore have a PIC suffix to enable a useful shared library to be
+created.  Usually, these constructs must not be used with an additive
+constant offset as is usually allowed, i.e. no 4 as in 'symbol + 4' is
+allowed.  This restriction is checked at link-time, not at
+assembly-time.
+
+'GOT'
+
      Attaching this suffix to a symbol in an instruction causes the
      symbol to be entered into the global offset table.  The value is a
      32-bit index for that symbol into the global offset table.  The
-     name of the corresponding relocation is `R_CRIS_32_GOT'.  Example:
-     `move.d [$r0+extsym:GOT],$r9'
+     name of the corresponding relocation is 'R_CRIS_32_GOT'.  Example:
+     'move.d [$r0+extsym:GOT],$r9'
 
-`GOT16'
-     Same as for `GOT', but the value is a 16-bit index into the global
-     offset table.  The corresponding relocation is `R_CRIS_16_GOT'.
-     Example: `move.d [$r0+asymbol:GOT16],$r10'
+'GOT16'
+
+     Same as for 'GOT', but the value is a 16-bit index into the global
+     offset table.  The corresponding relocation is 'R_CRIS_16_GOT'.
+     Example: 'move.d [$r0+asymbol:GOT16],$r10'
+
+'PLT'
 
-`PLT'
      This suffix is used for function symbols.  It causes a _procedure
      linkage table_, an array of code stubs, to be created at the time
      the shared object is created or linked against, together with a
      global offset table entry.  The value is a pc-relative offset to
      the corresponding stub code in the procedure linkage table.  This
      arrangement causes the run-time symbol resolver to be called to
-     look up and set the value of the symbol the first time the
-     function is called (at latest; depending environment variables).
-     It is only safe to leave the symbol unresolved this way if all
-     references are function calls.  The name of the relocation is
-     `R_CRIS_32_PLT_PCREL'.  Example: `add.d fnname:PLT,$pc'
+     look up and set the value of the symbol the first time the function
+     is called (at latest; depending environment variables).  It is only
+     safe to leave the symbol unresolved this way if all references are
+     function calls.  The name of the relocation is
+     'R_CRIS_32_PLT_PCREL'.  Example: 'add.d fnname:PLT,$pc'
+
+'PLTG'
 
-`PLTG'
      Like PLT, but the value is relative to the beginning of the global
-     offset table.  The relocation is `R_CRIS_32_PLT_GOTREL'.  Example:
-     `move.d fnname:PLTG,$r3'
+     offset table.  The relocation is 'R_CRIS_32_PLT_GOTREL'.  Example:
+     'move.d fnname:PLTG,$r3'
 
-`GOTPLT'
-     Similar to `PLT', but the value of the symbol is a 32-bit index
+'GOTPLT'
+
+     Similar to 'PLT', but the value of the symbol is a 32-bit index
      into the global offset table.  This is somewhat of a mix between
-     the effect of the `GOT' and the `PLT' suffix; the difference to
-     `GOT' is that there will be a procedure linkage table entry
+     the effect of the 'GOT' and the 'PLT' suffix; the difference to
+     'GOT' is that there will be a procedure linkage table entry
      created, and that the symbol is assumed to be a function entry and
-     will be resolved by the run-time resolver as with `PLT'.  The
-     relocation is `R_CRIS_32_GOTPLT'.  Example: `jsr
+     will be resolved by the run-time resolver as with 'PLT'.  The
+     relocation is 'R_CRIS_32_GOTPLT'.  Example: 'jsr
      [$r0+fnname:GOTPLT]'
 
-`GOTPLT16'
-     A variant of `GOTPLT' giving a 16-bit value.  Its relocation name
-     is `R_CRIS_16_GOTPLT'.  Example: `jsr [$r0+fnname:GOTPLT16]'
+'GOTPLT16'
+
+     A variant of 'GOTPLT' giving a 16-bit value.  Its relocation name
+     is 'R_CRIS_16_GOTPLT'.  Example: 'jsr [$r0+fnname:GOTPLT16]'
+
+'GOTOFF'
 
-`GOTOFF'
      This suffix must only be attached to a local symbol, but may be
      used in an expression adding an offset.  The value is the address
      of the symbol relative to the start of the global offset table.
-     The relocation name is `R_CRIS_32_GOTREL'.  Example: `move.d
+     The relocation name is 'R_CRIS_32_GOTREL'.  Example: 'move.d
      [$r0+localsym:GOTOFF],r3'
 
 
@@ -9439,9 +9211,9 @@ File: as.info,  Node: CRIS-Regs,  Next: CRIS-Pseudos,  Prev: CRIS-Pic,  Up: CRIS
 9.8.4.3 Register names
 ......................
 
-A `$' character may always prefix a general or special register name in
+A '$' character may always prefix a general or special register name in
 an instruction operand but is mandatory when the option
-`--no-underscore' is specified or when the `.syntax register_prefix'
+'--no-underscore' is specified or when the '.syntax register_prefix'
 directive is in effect (*note crisnous::).  Register names are
 case-insensitive.
 
@@ -9453,47 +9225,51 @@ File: as.info,  Node: CRIS-Pseudos,  Prev: CRIS-Regs,  Up: CRIS-Syntax
 
 There are a few CRIS-specific pseudo-directives in addition to the
 generic ones.  *Note Pseudo Ops::.  Constants emitted by
-pseudo-directives are in little-endian order for CRIS.  There is no
+pseudo-directives are in little-endian order for CRIS. There is no
 support for floating-point-specific directives for CRIS.
 
-`.dword EXPRESSIONS'
-     The `.dword' directive is a synonym for `.int', expecting zero or
+'.dword EXPRESSIONS'
+
+     The '.dword' directive is a synonym for '.int', expecting zero or
      more EXPRESSIONS, separated by commas.  For each expression, a
      32-bit little-endian constant is emitted.
 
-`.syntax ARGUMENT'
-     The `.syntax' directive takes as ARGUMENT one of the following
+'.syntax ARGUMENT'
+     The '.syntax' directive takes as ARGUMENT one of the following
      case-sensitive choices.
 
-    `no_register_prefix'
-          The `.syntax no_register_prefix' directive makes a `$'
+     'no_register_prefix'
+
+          The '.syntax no_register_prefix' directive makes a '$'
           character prefix on all registers optional.  It overrides a
           previous setting, including the corresponding effect of the
-          option `--no-underscore'.  If this directive is used when
-          ordinary symbols do not have a `_' character prefix, care
-          must be taken to avoid ambiguities whether an operand is a
-          register or a symbol; using symbols with names the same as
-          general or special registers then invoke undefined behavior.
-
-    `register_prefix'
-          This directive makes a `$' character prefix on all registers
+          option '--no-underscore'.  If this directive is used when
+          ordinary symbols do not have a '_' character prefix, care must
+          be taken to avoid ambiguities whether an operand is a register
+          or a symbol; using symbols with names the same as general or
+          special registers then invoke undefined behavior.
+
+     'register_prefix'
+
+          This directive makes a '$' character prefix on all registers
           mandatory.  It overrides a previous setting, including the
-          corresponding effect of the option `--underscore'.
+          corresponding effect of the option '--underscore'.
+
+     'leading_underscore'
 
-    `leading_underscore'
           This is an assertion directive, emitting an error if the
-          `--no-underscore' option is in effect.
+          '--no-underscore' option is in effect.
+
+     'no_leading_underscore'
 
-    `no_leading_underscore'
-          This is the opposite of the `.syntax leading_underscore'
-          directive and emits an error if the option `--underscore' is
+          This is the opposite of the '.syntax leading_underscore'
+          directive and emits an error if the option '--underscore' is
           in effect.
 
-`.arch ARGUMENT'
+'.arch ARGUMENT'
      This is an assertion directive, giving an error if the specified
      ARGUMENT is not the same as the specified or default value for the
-     `--march=ARCHITECTURE' option (*note march-option::).
-
+     '--march=ARCHITECTURE' option (*note march-option::).
 
 
 File: as.info,  Node: D10V-Dependent,  Next: D30V-Dependent,  Prev: CRIS-Dependent,  Up: Machine Dependencies
@@ -9514,25 +9290,24 @@ File: as.info,  Node: D10V-Opts,  Next: D10V-Syntax,  Up: D10V-Dependent
 9.9.1 D10V Options
 ------------------
 
-The Mitsubishi D10V version of `as' has a few machine dependent options.
+The Mitsubishi D10V version of 'as' has a few machine dependent options.
 
-`-O'
-     The D10V can often execute two sub-instructions in parallel. When
-     this option is used, `as' will attempt to optimize its output by
+'-O'
+     The D10V can often execute two sub-instructions in parallel.  When
+     this option is used, 'as' will attempt to optimize its output by
      detecting when instructions can be executed in parallel.
-
-`--nowarnswap'
-     To optimize execution performance, `as' will sometimes swap the
-     order of instructions. Normally this generates a warning. When
-     this option is used, no warning will be generated when
-     instructions are swapped.
-
-`--gstabs-packing'
-`--no-gstabs-packing'
-     `as' packs adjacent short instructions into a single packed
-     instruction. `--no-gstabs-packing' turns instruction packing off if
-     `--gstabs' is specified as well; `--gstabs-packing' (the default)
-     turns instruction packing on even when `--gstabs' is specified.
+'--nowarnswap'
+     To optimize execution performance, 'as' will sometimes swap the
+     order of instructions.  Normally this generates a warning.  When
+     this option is used, no warning will be generated when instructions
+     are swapped.
+'--gstabs-packing'
+'--no-gstabs-packing'
+     'as' packs adjacent short instructions into a single packed
+     instruction.  '--no-gstabs-packing' turns instruction packing off
+     if '--gstabs' is specified as well; '--gstabs-packing' (the
+     default) turns instruction packing on even when '--gstabs' is
+     specified.
 
 
 File: as.info,  Node: D10V-Syntax,  Next: D10V-Float,  Prev: D10V-Opts,  Up: D10V-Dependent
@@ -9540,8 +9315,8 @@ File: as.info,  Node: D10V-Syntax,  Next: D10V-Float,  Prev: D10V-Opts,  Up: D10
 9.9.2 Syntax
 ------------
 
-The D10V syntax is based on the syntax in Mitsubishi's D10V
-architecture manual.  The differences are detailed below.
+The D10V syntax is based on the syntax in Mitsubishi's D10V architecture
+manual.  The differences are detailed below.
 
 * Menu:
 
@@ -9558,19 +9333,19 @@ File: as.info,  Node: D10V-Size,  Next: D10V-Subs,  Up: D10V-Syntax
 9.9.2.1 Size Modifiers
 ......................
 
-The D10V version of `as' uses the instruction names in the D10V
+The D10V version of 'as' uses the instruction names in the D10V
 Architecture Manual.  However, the names in the manual are sometimes
 ambiguous.  There are instruction names that can assemble to a short or
-long form opcode.  How does the assembler pick the correct form?  `as'
+long form opcode.  How does the assembler pick the correct form?  'as'
 will always pick the smallest form if it can.  When dealing with a
 symbol that is not defined yet when a line is being assembled, it will
 always use the long form.  If you need to force the assembler to use
 either the short or long form of the instruction, you can append either
-`.s' (short) or `.l' (long) to it.  For example, if you are writing an
-assembly program and you want to do a branch to a symbol that is
-defined later in your program, you can write `bra.s   foo'.  Objdump
-and GDB will always append `.s' or `.l' to instructions which have both
-short and long forms.
+'.s' (short) or '.l' (long) to it.  For example, if you are writing an
+assembly program and you want to do a branch to a symbol that is defined
+later in your program, you can write 'bra.s foo'.  Objdump and GDB will
+always append '.s' or '.l' to instructions which have both short and
+long forms.
 
 
 File: as.info,  Node: D10V-Subs,  Next: D10V-Chars,  Prev: D10V-Size,  Up: D10V-Syntax
@@ -9585,13 +9360,13 @@ sub-instructions.  These sub-instructions can be packed into a single
 instruction.  The assembler will do this automatically.  It will also
 detect when it should not pack instructions.  For example, when a label
 is defined, the next instruction will never be packaged with the
-previous one.  Whenever a branch and link instruction is called, it
-will not be packaged with the next instruction so the return address
-will be valid.  Nops are automatically inserted when necessary.
+previous one.  Whenever a branch and link instruction is called, it will
+not be packaged with the next instruction so the return address will be
+valid.  Nops are automatically inserted when necessary.
 
    If you do not want the assembler automatically making these
-decisions, you can control the packaging and execution type (parallel
-or sequential) with the special execution symbols described in the next
+decisions, you can control the packaging and execution type (parallel or
+sequential) with the special execution symbols described in the next
 section.
 
 
@@ -9600,10 +9375,10 @@ File: as.info,  Node: D10V-Chars,  Next: D10V-Regs,  Prev: D10V-Subs,  Up: D10V-
 9.9.2.3 Special Characters
 ..........................
 
-A semicolon (`;') can be used anywhere on a line to start a comment
-that extends to the end of the line.
+A semicolon (';') can be used anywhere on a line to start a comment that
+extends to the end of the line.
 
-   If a `#' appears as the first character of a line, the whole line is
+   If a '#' appears as the first character of a line, the whole line is
 treated as a comment, but in this case the line could also be a logical
 line number directive (*note Comments::) or a preprocessor control
 command (*note Preprocessing::).
@@ -9612,42 +9387,35 @@ command (*note Preprocessing::).
 parallel.  Instructions listed in the standard one-per-line format will
 be executed sequentially.  To specify the executing order, use the
 following symbols:
-`->'
+'->'
      Sequential with instruction on the left first.
-
-`<-'
+'<-'
      Sequential with instruction on the right first.
-
-`||'
+'||'
      Parallel
    The D10V syntax allows either one instruction per line, one
 instruction per line with the execution symbol, or two instructions per
 line.  For example
-`abs       a1      ->      abs     r0'
-     Execute these sequentially.  The instruction on the right is in
-     the right container and is executed second.
-
-`abs       r0      <-      abs     a1'
+'abs a1 -> abs r0'
+     Execute these sequentially.  The instruction on the right is in the
+     right container and is executed second.
+'abs r0 <- abs a1'
      Execute these reverse-sequentially.  The instruction on the right
      is in the right container, and is executed first.
-
-`ld2w    r2,@r8+         ||      mac     a0,r0,r7'
+'ld2w r2,@r8+ || mac a0,r0,r7'
      Execute these in parallel.
-
-`ld2w    r2,@r8+         ||'
-`mac     a0,r0,r7'
-     Two-line format. Execute these in parallel.
-
-`ld2w    r2,@r8+'
-`mac     a0,r0,r7'
-     Two-line format. Execute these sequentially.  Assembler will put
+'ld2w r2,@r8+ ||'
+'mac a0,r0,r7'
+     Two-line format.  Execute these in parallel.
+'ld2w r2,@r8+'
+'mac a0,r0,r7'
+     Two-line format.  Execute these sequentially.  Assembler will put
      them in the proper containers.
-
-`ld2w    r2,@r8+         ->'
-`mac     a0,r0,r7'
-     Two-line format. Execute these sequentially.  Same as above but
+'ld2w r2,@r8+ ->'
+'mac a0,r0,r7'
+     Two-line format.  Execute these sequentially.  Same as above but
      second instruction will always go into right container.
-   Since `$' has no special meaning, you may use it in symbol names.
+   Since '$' has no special meaning, you may use it in symbol names.
 
 
 File: as.info,  Node: D10V-Regs,  Next: D10V-Addressing,  Prev: D10V-Chars,  Up: D10V-Syntax
@@ -9655,68 +9423,49 @@ File: as.info,  Node: D10V-Regs,  Next: D10V-Addressing,  Prev: D10V-Chars,  Up:
 9.9.2.4 Register Names
 ......................
 
-You can use the predefined symbols `r0' through `r15' to refer to the
-D10V registers.  You can also use `sp' as an alias for `r15'.  The
-accumulators are `a0' and `a1'.  There are special register-pair names
+You can use the predefined symbols 'r0' through 'r15' to refer to the
+D10V registers.  You can also use 'sp' as an alias for 'r15'.  The
+accumulators are 'a0' and 'a1'.  There are special register-pair names
 that may optionally be used in opcodes that require even-numbered
-registers. Register names are not case sensitive.
+registers.  Register names are not case sensitive.
 
    Register Pairs
-`r0-r1'
-
-`r2-r3'
-
-`r4-r5'
-
-`r6-r7'
-
-`r8-r9'
-
-`r10-r11'
-
-`r12-r13'
-
-`r14-r15'
+'r0-r1'
+'r2-r3'
+'r4-r5'
+'r6-r7'
+'r8-r9'
+'r10-r11'
+'r12-r13'
+'r14-r15'
 
    The D10V also has predefined symbols for these control registers and
 status bits:
-`psw'
+'psw'
      Processor Status Word
-
-`bpsw'
+'bpsw'
      Backup Processor Status Word
-
-`pc'
+'pc'
      Program Counter
-
-`bpc'
+'bpc'
      Backup Program Counter
-
-`rpt_c'
+'rpt_c'
      Repeat Count
-
-`rpt_s'
+'rpt_s'
      Repeat Start address
-
-`rpt_e'
+'rpt_e'
      Repeat End address
-
-`mod_s'
+'mod_s'
      Modulo Start address
-
-`mod_e'
+'mod_e'
      Modulo End address
-
-`iba'
+'iba'
      Instruction Break Address
-
-`f0'
+'f0'
      Flag 0
-
-`f1'
+'f1'
      Flag 1
-
-`c'
+'c'
      Carry flag
 
 
@@ -9725,32 +9474,25 @@ File: as.info,  Node: D10V-Addressing,  Next: D10V-Word,  Prev: D10V-Regs,  Up:
 9.9.2.5 Addressing Modes
 ........................
 
-`as' understands the following addressing modes for the D10V.  `RN' in
+'as' understands the following addressing modes for the D10V. 'RN' in
 the following refers to any of the numbered registers, but _not_ the
 control registers.
-`RN'
+'RN'
      Register direct
-
-`@RN'
+'@RN'
      Register indirect
-
-`@RN+'
+'@RN+'
      Register indirect with post-increment
-
-`@RN-'
+'@RN-'
      Register indirect with post-decrement
-
-`@-SP'
+'@-SP'
      Register indirect with pre-decrement
-
-`@(DISP, RN)'
+'@(DISP, RN)'
      Register indirect with displacement
-
-`ADDR'
+'ADDR'
      PC relative address (for branch or rep).
-
-`#IMM'
-     Immediate data (the `#' is optional and ignored)
+'#IMM'
+     Immediate data (the '#' is optional and ignored)
 
 
 File: as.info,  Node: D10V-Word,  Prev: D10V-Addressing,  Up: D10V-Syntax
@@ -9758,11 +9500,11 @@ File: as.info,  Node: D10V-Word,  Prev: D10V-Addressing,  Up: D10V-Syntax
 9.9.2.6 @WORD Modifier
 ......................
 
-Any symbol followed by `@word' will be replaced by the symbol's value
+Any symbol followed by '@word' will be replaced by the symbol's value
 shifted right by 2.  This is used in situations such as loading a
 register with the address of a function (or any other code fragment).
 For example, if you want to load a register with the location of the
-function `main' then jump to that function, you could do it as follows:
+function 'main' then jump to that function, you could do it as follows:
      ldi     r2, main@word
      jmp     r2
 
@@ -9772,7 +9514,7 @@ File: as.info,  Node: D10V-Float,  Next: D10V-Opcodes,  Prev: D10V-Syntax,  Up:
 9.9.3 Floating Point
 --------------------
 
-The D10V has no hardware floating point, but the `.float' and `.double'
+The D10V has no hardware floating point, but the '.float' and '.double'
 directives generates IEEE floating-point numbers for compatibility with
 other development tools.
 
@@ -9782,9 +9524,9 @@ File: as.info,  Node: D10V-Opcodes,  Prev: D10V-Float,  Up: D10V-Dependent
 9.9.4 Opcodes
 -------------
 
-For detailed information on the D10V machine instruction set, see `D10V
+For detailed information on the D10V machine instruction set, see 'D10V
 Architecture: A VLIW Microprocessor for Multimedia Applications'
-(Mitsubishi Electric Corp.).  `as' implements all the standard D10V
+(Mitsubishi Electric Corp.).  'as' implements all the standard D10V
 opcodes.  The only changes are those described in the section on size
 modifiers
 
@@ -9807,19 +9549,19 @@ File: as.info,  Node: D30V-Opts,  Next: D30V-Syntax,  Up: D30V-Dependent
 9.10.1 D30V Options
 -------------------
 
-The Mitsubishi D30V version of `as' has a few machine dependent options.
+The Mitsubishi D30V version of 'as' has a few machine dependent options.
 
-`-O'
-     The D30V can often execute two sub-instructions in parallel. When
-     this option is used, `as' will attempt to optimize its output by
+'-O'
+     The D30V can often execute two sub-instructions in parallel.  When
+     this option is used, 'as' will attempt to optimize its output by
      detecting when instructions can be executed in parallel.
 
-`-n'
-     When this option is used, `as' will issue a warning every time it
+'-n'
+     When this option is used, 'as' will issue a warning every time it
      adds a nop instruction.
 
-`-N'
-     When this option is used, `as' will issue a warning if it needs to
+'-N'
+     When this option is used, 'as' will issue a warning if it needs to
      insert a nop after a 32-bit multiply before a load or 16-bit
      multiply instruction.
 
@@ -9829,8 +9571,8 @@ File: as.info,  Node: D30V-Syntax,  Next: D30V-Float,  Prev: D30V-Opts,  Up: D30
 9.10.2 Syntax
 -------------
 
-The D30V syntax is based on the syntax in Mitsubishi's D30V
-architecture manual.  The differences are detailed below.
+The D30V syntax is based on the syntax in Mitsubishi's D30V architecture
+manual.  The differences are detailed below.
 
 * Menu:
 
@@ -9847,19 +9589,19 @@ File: as.info,  Node: D30V-Size,  Next: D30V-Subs,  Up: D30V-Syntax
 9.10.2.1 Size Modifiers
 .......................
 
-The D30V version of `as' uses the instruction names in the D30V
+The D30V version of 'as' uses the instruction names in the D30V
 Architecture Manual.  However, the names in the manual are sometimes
 ambiguous.  There are instruction names that can assemble to a short or
-long form opcode.  How does the assembler pick the correct form?  `as'
+long form opcode.  How does the assembler pick the correct form?  'as'
 will always pick the smallest form if it can.  When dealing with a
 symbol that is not defined yet when a line is being assembled, it will
 always use the long form.  If you need to force the assembler to use
 either the short or long form of the instruction, you can append either
-`.s' (short) or `.l' (long) to it.  For example, if you are writing an
-assembly program and you want to do a branch to a symbol that is
-defined later in your program, you can write `bra.s foo'.  Objdump and
-GDB will always append `.s' or `.l' to instructions which have both
-short and long forms.
+'.s' (short) or '.l' (long) to it.  For example, if you are writing an
+assembly program and you want to do a branch to a symbol that is defined
+later in your program, you can write 'bra.s foo'.  Objdump and GDB will
+always append '.s' or '.l' to instructions which have both short and
+long forms.
 
 
 File: as.info,  Node: D30V-Subs,  Next: D30V-Chars,  Prev: D30V-Size,  Up: D30V-Syntax
@@ -9874,13 +9616,13 @@ sub-instructions.  These sub-instructions can be packed into a single
 instruction.  The assembler will do this automatically.  It will also
 detect when it should not pack instructions.  For example, when a label
 is defined, the next instruction will never be packaged with the
-previous one.  Whenever a branch and link instruction is called, it
-will not be packaged with the next instruction so the return address
-will be valid.  Nops are automatically inserted when necessary.
+previous one.  Whenever a branch and link instruction is called, it will
+not be packaged with the next instruction so the return address will be
+valid.  Nops are automatically inserted when necessary.
 
    If you do not want the assembler automatically making these
-decisions, you can control the packaging and execution type (parallel
-or sequential) with the special execution symbols described in the next
+decisions, you can control the packaging and execution type (parallel or
+sequential) with the special execution symbols described in the next
 section.
 
 
@@ -9889,71 +9631,71 @@ File: as.info,  Node: D30V-Chars,  Next: D30V-Guarded,  Prev: D30V-Subs,  Up: D3
 9.10.2.3 Special Characters
 ...........................
 
-A semicolon (`;') can be used anywhere on a line to start a comment
-that extends to the end of the line.
+A semicolon (';') can be used anywhere on a line to start a comment that
+extends to the end of the line.
 
-   If a `#' appears as the first character of a line, the whole line is
+   If a '#' appears as the first character of a line, the whole line is
 treated as a comment, but in this case the line could also be a logical
 line number directive (*note Comments::) or a preprocessor control
 command (*note Preprocessing::).
 
    Sub-instructions may be executed in order, in reverse-order, or in
 parallel.  Instructions listed in the standard one-per-line format will
-be executed sequentially unless you use the `-O' option.
+be executed sequentially unless you use the '-O' option.
 
    To specify the executing order, use the following symbols:
-`->'
+'->'
      Sequential with instruction on the left first.
 
-`<-'
+'<-'
      Sequential with instruction on the right first.
 
-`||'
+'||'
      Parallel
 
    The D30V syntax allows either one instruction per line, one
 instruction per line with the execution symbol, or two instructions per
 line.  For example
-`abs r2,r3 -> abs r4,r5'
-     Execute these sequentially.  The instruction on the right is in
-     the right container and is executed second.
+'abs r2,r3 -> abs r4,r5'
+     Execute these sequentially.  The instruction on the right is in the
+     right container and is executed second.
 
-`abs r2,r3 <- abs r4,r5'
+'abs r2,r3 <- abs r4,r5'
      Execute these reverse-sequentially.  The instruction on the right
      is in the right container, and is executed first.
 
-`abs r2,r3 || abs r4,r5'
+'abs r2,r3 || abs r4,r5'
      Execute these in parallel.
 
-`ldw r2,@(r3,r4) ||'
-`mulx r6,r8,r9'
-     Two-line format. Execute these in parallel.
+'ldw r2,@(r3,r4) ||'
+'mulx r6,r8,r9'
+     Two-line format.  Execute these in parallel.
 
-`mulx a0,r8,r9'
-`stw r2,@(r3,r4)'
-     Two-line format. Execute these sequentially unless `-O' option is
-     used.  If the `-O' option is used, the assembler will determine if
+'mulx a0,r8,r9'
+'stw r2,@(r3,r4)'
+     Two-line format.  Execute these sequentially unless '-O' option is
+     used.  If the '-O' option is used, the assembler will determine if
      the instructions could be done in parallel (the above two
      instructions can be done in parallel), and if so, emit them as
      parallel instructions.  The assembler will put them in the proper
-     containers.  In the above example, the assembler will put the
-     `stw' instruction in left container and the `mulx' instruction in
-     the right container.
-
-`stw r2,@(r3,r4) ->'
-`mulx a0,r8,r9'
-     Two-line format.  Execute the `stw' instruction followed by the
-     `mulx' instruction sequentially.  The first instruction goes in the
+     containers.  In the above example, the assembler will put the 'stw'
+     instruction in left container and the 'mulx' instruction in the
+     right container.
+
+'stw r2,@(r3,r4) ->'
+'mulx a0,r8,r9'
+     Two-line format.  Execute the 'stw' instruction followed by the
+     'mulx' instruction sequentially.  The first instruction goes in the
      left container and the second instruction goes into right
      container.  The assembler will give an error if the machine
      ordering constraints are violated.
 
-`stw r2,@(r3,r4) <-'
-`mulx a0,r8,r9'
-     Same as previous example, except that the `mulx' instruction is
-     executed before the `stw' instruction.
+'stw r2,@(r3,r4) <-'
+'mulx a0,r8,r9'
+     Same as previous example, except that the 'mulx' instruction is
+     executed before the 'stw' instruction.
 
-   Since `$' has no special meaning, you may use it in symbol names.
+   Since '$' has no special meaning, you may use it in symbol names.
 
 
 File: as.info,  Node: D30V-Guarded,  Next: D30V-Regs,  Prev: D30V-Chars,  Up: D30V-Syntax
@@ -9961,26 +9703,21 @@ File: as.info,  Node: D30V-Guarded,  Next: D30V-Regs,  Prev: D30V-Chars,  Up: D3
 9.10.2.4 Guarded Execution
 ..........................
 
-`as' supports the full range of guarded execution directives for each
+'as' supports the full range of guarded execution directives for each
 instruction.  Just append the directive after the instruction proper.
 The directives are:
 
-`/tx'
+'/tx'
      Execute the instruction if flag f0 is true.
-
-`/fx'
+'/fx'
      Execute the instruction if flag f0 is false.
-
-`/xt'
+'/xt'
      Execute the instruction if flag f1 is true.
-
-`/xf'
+'/xf'
      Execute the instruction if flag f1 is false.
-
-`/tt'
+'/tt'
      Execute the instruction if both flags f0 and f1 are true.
-
-`/tf'
+'/tf'
      Execute the instruction if flag f0 is true and flag f1 is false.
 
 
@@ -9989,79 +9726,57 @@ File: as.info,  Node: D30V-Regs,  Next: D30V-Addressing,  Prev: D30V-Guarded,  U
 9.10.2.5 Register Names
 .......................
 
-You can use the predefined symbols `r0' through `r63' to refer to the
-D30V registers.  You can also use `sp' as an alias for `r63' and `link'
-as an alias for `r62'.  The accumulators are `a0' and `a1'.
+You can use the predefined symbols 'r0' through 'r63' to refer to the
+D30V registers.  You can also use 'sp' as an alias for 'r63' and 'link'
+as an alias for 'r62'.  The accumulators are 'a0' and 'a1'.
 
    The D30V also has predefined symbols for these control registers and
 status bits:
-`psw'
+'psw'
      Processor Status Word
-
-`bpsw'
+'bpsw'
      Backup Processor Status Word
-
-`pc'
+'pc'
      Program Counter
-
-`bpc'
+'bpc'
      Backup Program Counter
-
-`rpt_c'
+'rpt_c'
      Repeat Count
-
-`rpt_s'
+'rpt_s'
      Repeat Start address
-
-`rpt_e'
+'rpt_e'
      Repeat End address
-
-`mod_s'
+'mod_s'
      Modulo Start address
-
-`mod_e'
+'mod_e'
      Modulo End address
-
-`iba'
+'iba'
      Instruction Break Address
-
-`f0'
+'f0'
      Flag 0
-
-`f1'
+'f1'
      Flag 1
-
-`f2'
+'f2'
      Flag 2
-
-`f3'
+'f3'
      Flag 3
-
-`f4'
+'f4'
      Flag 4
-
-`f5'
+'f5'
      Flag 5
-
-`f6'
+'f6'
      Flag 6
-
-`f7'
+'f7'
      Flag 7
-
-`s'
+'s'
      Same as flag 4 (saturation flag)
-
-`v'
+'v'
      Same as flag 5 (overflow flag)
-
-`va'
+'va'
      Same as flag 6 (sticky overflow flag)
-
-`c'
+'c'
      Same as flag 7 (carry/borrow flag)
-
-`b'
+'b'
      Same as flag 7 (carry/borrow flag)
 
 
@@ -10070,32 +9785,25 @@ File: as.info,  Node: D30V-Addressing,  Prev: D30V-Regs,  Up: D30V-Syntax
 9.10.2.6 Addressing Modes
 .........................
 
-`as' understands the following addressing modes for the D30V.  `RN' in
+'as' understands the following addressing modes for the D30V. 'RN' in
 the following refers to any of the numbered registers, but _not_ the
 control registers.
-`RN'
+'RN'
      Register direct
-
-`@RN'
+'@RN'
      Register indirect
-
-`@RN+'
+'@RN+'
      Register indirect with post-increment
-
-`@RN-'
+'@RN-'
      Register indirect with post-decrement
-
-`@-SP'
+'@-SP'
      Register indirect with pre-decrement
-
-`@(DISP, RN)'
+'@(DISP, RN)'
      Register indirect with displacement
-
-`ADDR'
+'ADDR'
      PC relative address (for branch or rep).
-
-`#IMM'
-     Immediate data (the `#' is optional and ignored)
+'#IMM'
+     Immediate data (the '#' is optional and ignored)
 
 
 File: as.info,  Node: D30V-Float,  Next: D30V-Opcodes,  Prev: D30V-Syntax,  Up: D30V-Dependent
@@ -10103,7 +9811,7 @@ File: as.info,  Node: D30V-Float,  Next: D30V-Opcodes,  Prev: D30V-Syntax,  Up:
 9.10.3 Floating Point
 ---------------------
 
-The D30V has no hardware floating point, but the `.float' and `.double'
+The D30V has no hardware floating point, but the '.float' and '.double'
 directives generates IEEE floating-point numbers for compatibility with
 other development tools.
 
@@ -10113,9 +9821,9 @@ File: as.info,  Node: D30V-Opcodes,  Prev: D30V-Float,  Up: D30V-Dependent
 9.10.4 Opcodes
 --------------
 
-For detailed information on the D30V machine instruction set, see `D30V
+For detailed information on the D30V machine instruction set, see 'D30V
 Architecture: A VLIW Microprocessor for Multimedia Applications'
-(Mitsubishi Electric Corp.).  `as' implements all the standard D30V
+(Mitsubishi Electric Corp.).  'as' implements all the standard D30V
 opcodes.  The only changes are those described in the section on size
 modifiers
 
@@ -10136,14 +9844,14 @@ File: as.info,  Node: Epiphany Options,  Next: Epiphany Syntax,  Up: Epiphany-De
 9.11.1 Options
 --------------
 
-`as' has two additional command-line options for the Epiphany
+'as' has two additional command-line options for the Epiphany
 architecture.
 
-`-mepiphany'
+'-mepiphany'
      Specifies that the both 32 and 16 bit instructions are allowed.
      This is the default behavior.
 
-`-mepiphany16'
+'-mepiphany16'
      Restricts the permitted instructions to just the 16 bit set.
 
 
@@ -10162,15 +9870,15 @@ File: as.info,  Node: Epiphany-Chars,  Up: Epiphany Syntax
 9.11.2.1 Special Characters
 ...........................
 
-The presence of a `;' on a line indicates the start of a comment that
+The presence of a ';' on a line indicates the start of a comment that
 extends to the end of the current line.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line could also be a
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line could also be a
 logical line number directive (*note Comments::) or a preprocessor
 control command (*note Preprocessing::).
 
-   The ``' character can be used to separate statements on the same
+   The '`' character can be used to separate statements on the same
 line.
 
 
@@ -10193,16 +9901,15 @@ File: as.info,  Node: H8/300 Options,  Next: H8/300 Syntax,  Up: H8/300-Dependen
 9.12.1 Options
 --------------
 
-The Renesas H8/300 version of `as' has one machine-dependent option:
+The Renesas H8/300 version of 'as' has one machine-dependent option:
 
-`-h-tick-hex'
+'-h-tick-hex'
      Support H'00 style hex constants in addition to 0x00 style.
 
-`-mach=NAME'
+'-mach=NAME'
      Sets the H8300 machine variant.  The following machine names are
-     recognised: `h8300h', `h8300hn', `h8300s', `h8300sn', `h8300sx' and
-     `h8300sxn'.
-
+     recognised: 'h8300h', 'h8300hn', 'h8300s', 'h8300sn', 'h8300sx' and
+     'h8300sxn'.
 
 
 File: as.info,  Node: H8/300 Syntax,  Next: H8/300 Floating Point,  Prev: H8/300 Options,  Up: H8/300-Dependent
@@ -10222,10 +9929,10 @@ File: as.info,  Node: H8/300-Chars,  Next: H8/300-Regs,  Up: H8/300 Syntax
 9.12.2.1 Special Characters
 ...........................
 
-`;' is the line comment character.
+';' is the line comment character.
 
-   `$' can be used instead of a newline to separate statements.
-Therefore _you may not use `$' in symbol names_ on the H8/300.
+   '$' can be used instead of a newline to separate statements.
+Therefore _you may not use '$' in symbol names_ on the H8/300.
 
 
 File: as.info,  Node: H8/300-Regs,  Next: H8/300-Addressing,  Prev: H8/300-Chars,  Up: H8/300 Syntax
@@ -10233,22 +9940,22 @@ File: as.info,  Node: H8/300-Regs,  Next: H8/300-Addressing,  Prev: H8/300-Chars
 9.12.2.2 Register Names
 .......................
 
-You can use predefined symbols of the form `rNh' and `rNl' to refer to
-the H8/300 registers as sixteen 8-bit general-purpose registers.  N is
-a digit from `0' to `7'); for instance, both `r0h' and `r7l' are valid
+You can use predefined symbols of the form 'rNh' and 'rNl' to refer to
+the H8/300 registers as sixteen 8-bit general-purpose registers.  N is a
+digit from '0' to '7'); for instance, both 'r0h' and 'r7l' are valid
 register names.
 
-   You can also use the eight predefined symbols `rN' to refer to the
+   You can also use the eight predefined symbols 'rN' to refer to the
 H8/300 registers as 16-bit registers (you must use this form for
 addressing).
 
-   On the H8/300H, you can also use the eight predefined symbols `erN'
-(`er0' ... `er7') to refer to the 32-bit general purpose registers.
+   On the H8/300H, you can also use the eight predefined symbols 'erN'
+('er0' ... 'er7') to refer to the 32-bit general purpose registers.
 
-   The two control registers are called `pc' (program counter; a 16-bit
-register, except on the H8/300H where it is 24 bits) and `ccr'
-(condition code register; an 8-bit register).  `r7' is used as the
-stack pointer, and can also be called `sp'.
+   The two control registers are called 'pc' (program counter; a 16-bit
+register, except on the H8/300H where it is 24 bits) and 'ccr'
+(condition code register; an 8-bit register).  'r7' is used as the stack
+pointer, and can also be called 'sp'.
 
 
 File: as.info,  Node: H8/300-Addressing,  Prev: H8/300-Regs,  Up: H8/300 Syntax
@@ -10257,43 +9964,43 @@ File: as.info,  Node: H8/300-Addressing,  Prev: H8/300-Regs,  Up: H8/300 Syntax
 .........................
 
 as understands the following addressing modes for the H8/300:
-`rN'
+'rN'
      Register direct
 
-`@rN'
+'@rN'
      Register indirect
 
-`@(D, rN)'
-`@(D:16, rN)'
-`@(D:24, rN)'
-     Register indirect: 16-bit or 24-bit displacement D from register
-     N.  (24-bit displacements are only meaningful on the H8/300H.)
+'@(D, rN)'
+'@(D:16, rN)'
+'@(D:24, rN)'
+     Register indirect: 16-bit or 24-bit displacement D from register N.
+     (24-bit displacements are only meaningful on the H8/300H.)
 
-`@rN+'
+'@rN+'
      Register indirect with post-increment
 
-`@-rN'
+'@-rN'
      Register indirect with pre-decrement
 
-``@'AA'
-``@'AA:8'
-``@'AA:16'
-``@'AA:24'
-     Absolute address `aa'.  (The address size `:24' only makes sense
-     on the H8/300H.)
-
-`#XX'
-`#XX:8'
-`#XX:16'
-`#XX:32'
-     Immediate data XX.  You may specify the `:8', `:16', or `:32' for
-     clarity, if you wish; but `as' neither requires this nor uses
+'@AA'
+'@AA:8'
+'@AA:16'
+'@AA:24'
+     Absolute address 'aa'.  (The address size ':24' only makes sense on
+     the H8/300H.)
+
+'#XX'
+'#XX:8'
+'#XX:16'
+'#XX:32'
+     Immediate data XX.  You may specify the ':8', ':16', or ':32' for
+     clarity, if you wish; but 'as' neither requires this nor uses
      it--the data size required is taken from context.
 
-``@'`@'AA'
-``@'`@'AA:8'
-     Memory indirect.  You may specify the `:8' for clarity, if you
-     wish; but `as' neither requires this nor uses it.
+'@@AA'
+'@@AA:8'
+     Memory indirect.  You may specify the ':8' for clarity, if you
+     wish; but 'as' neither requires this nor uses it.
 
 
 File: as.info,  Node: H8/300 Floating Point,  Next: H8/300 Directives,  Prev: H8/300 Syntax,  Up: H8/300-Dependent
@@ -10301,7 +10008,7 @@ File: as.info,  Node: H8/300 Floating Point,  Next: H8/300 Directives,  Prev: H8
 9.12.3 Floating Point
 ---------------------
 
-The H8/300 family has no hardware floating point, but the `.float'
+The H8/300 family has no hardware floating point, but the '.float'
 directive generates IEEE floating-point numbers for compatibility with
 other development tools.
 
@@ -10311,29 +10018,29 @@ File: as.info,  Node: H8/300 Directives,  Next: H8/300 Opcodes,  Prev: H8/300 Fl
 9.12.4 H8/300 Machine Directives
 --------------------------------
 
-`as' has the following machine-dependent directives for the H8/300:
+'as' has the following machine-dependent directives for the H8/300:
 
-`.h8300h'
-     Recognize and emit additional instructions for the H8/300H
-     variant, and also make `.int' emit 32-bit numbers rather than the
-     usual (16-bit) for the H8/300 family.
+'.h8300h'
+     Recognize and emit additional instructions for the H8/300H variant,
+     and also make '.int' emit 32-bit numbers rather than the usual
+     (16-bit) for the H8/300 family.
 
-`.h8300s'
+'.h8300s'
      Recognize and emit additional instructions for the H8S variant, and
-     also make `.int' emit 32-bit numbers rather than the usual (16-bit)
+     also make '.int' emit 32-bit numbers rather than the usual (16-bit)
      for the H8/300 family.
 
-`.h8300hn'
+'.h8300hn'
      Recognize and emit additional instructions for the H8/300H variant
-     in normal mode, and also make `.int' emit 32-bit numbers rather
+     in normal mode, and also make '.int' emit 32-bit numbers rather
      than the usual (16-bit) for the H8/300 family.
 
-`.h8300sn'
+'.h8300sn'
      Recognize and emit additional instructions for the H8S variant in
-     normal mode, and also make `.int' emit 32-bit numbers rather than
+     normal mode, and also make '.int' emit 32-bit numbers rather than
      the usual (16-bit) for the H8/300 family.
 
-   On the H8/300 family (including the H8/300H) `.word' directives
+   On the H8/300 family (including the H8/300H) '.word' directives
 generate 16-bit numbers.
 
 
@@ -10343,14 +10050,14 @@ File: as.info,  Node: H8/300 Opcodes,  Prev: H8/300 Directives,  Up: H8/300-Depe
 --------------
 
 For detailed information on the H8/300 machine instruction set, see
-`H8/300 Series Programming Manual'.  For information specific to the
-H8/300H, see `H8/300H Series Programming Manual' (Renesas).
+'H8/300 Series Programming Manual'.  For information specific to the
+H8/300H, see 'H8/300H Series Programming Manual' (Renesas).
 
-   `as' implements all the standard H8/300 opcodes.  No additional
+   'as' implements all the standard H8/300 opcodes.  No additional
 pseudo-instructions are needed on this family.
 
    The following table summarizes the H8/300 opcodes, and their
-arguments.  Entries marked `*' are opcodes used only on the H8/300H.
+arguments.  Entries marked '*' are opcodes used only on the H8/300H.
 
               Legend:
                  Rs   source register
@@ -10375,7 +10082,6 @@ arguments.  Entries marked `*' are opcodes used only on the H8/300H.
      *  and.w #imm,rd                 bhi  pcrel:8
      *  and.l #imm,rd              *  bhi  pcrel:16
      *  and.l rs,rd                   bls  pcrel:8
-
      *  bls  pcrel:16                 bld  #imm,rd
         bcc  pcrel:8                  bld  #imm,@rd
      *  bcc  pcrel:16                 bld  #imm,@abs:8
@@ -10426,7 +10132,6 @@ arguments.  Entries marked `*' are opcodes used only on the H8/300H.
         bixor #imm,rd              *  divxs.w rs,rd
         bixor #imm,@rd                eepmov
         bixor #imm,@abs:8          *  eepmovw
-
      *  exts.w rd                     mov.w rs,@abs:16
      *  exts.l rd                  *  mov.l #imm,rd
      *  extu.w rd                  *  mov.l rs,rd
@@ -10477,7 +10182,6 @@ arguments.  Entries marked `*' are opcodes used only on the H8/300H.
         mov.w @abs:16,rd           *  rotxl.l rs
         mov.w rs,@(disp:16,rd)        rotxr.b rs
         mov.w rs,@-rd              *  rotxr.w rs
-
      *  rotxr.l rs                 *  stc  ccr,@(disp:24,rd)
         bpt                        *  stc  ccr,@-rd
         rte                        *  stc  ccr,@abs:16
@@ -10499,18 +10203,18 @@ arguments.  Entries marked `*' are opcodes used only on the H8/300H.
      *  stc  ccr,@rs               *  xor.l rs,rd
      *  stc  ccr,@(disp:16,rd)        xorc #imm,ccr
 
-   Four H8/300 instructions (`add', `cmp', `mov', `sub') are defined
-with variants using the suffixes `.b', `.w', and `.l' to specify the
-size of a memory operand.  `as' supports these suffixes, but does not
-require them; since one of the operands is always a register, `as' can
+   Four H8/300 instructions ('add', 'cmp', 'mov', 'sub') are defined
+with variants using the suffixes '.b', '.w', and '.l' to specify the
+size of a memory operand.  'as' supports these suffixes, but does not
+require them; since one of the operands is always a register, 'as' can
 deduce the correct size.
 
-   For example, since `r0' refers to a 16-bit register,
+   For example, since 'r0' refers to a 16-bit register,
      mov    r0,@foo
 is equivalent to
      mov.w  r0,@foo
 
-   If you use the size suffixes, `as' issues a warning when the suffix
+   If you use the size suffixes, 'as' issues a warning when the suffix
 and the register size do not match.
 
 
@@ -10534,17 +10238,17 @@ File: as.info,  Node: HPPA Notes,  Next: HPPA Options,  Up: HPPA-Dependent
 9.13.1 Notes
 ------------
 
-As a back end for GNU CC `as' has been throughly tested and should work
+As a back end for GNU CC 'as' has been throughly tested and should work
 extremely well.  We have tested it only minimally on hand written
 assembly code and no one has tested it much on the assembly output from
 the HP compilers.
 
    The format of the debugging sections has changed since the original
-`as' port (version 1.3X) was released; therefore, you must rebuild all
+'as' port (version 1.3X) was released; therefore, you must rebuild all
 HPPA objects and libraries with the new assembler so that you can debug
 the final executable.
 
-   The HPPA `as' port generates a small subset of the relocations
+   The HPPA 'as' port generates a small subset of the relocations
 available in the SOM and ELF object file formats.  Additional relocation
 support will be added as it becomes necessary.
 
@@ -10554,7 +10258,7 @@ File: as.info,  Node: HPPA Options,  Next: HPPA Syntax,  Prev: HPPA Notes,  Up:
 9.13.2 Options
 --------------
 
-`as' has no machine-dependent command-line options for the HPPA.
+'as' has no machine-dependent command-line options for the HPPA.
 
 
 File: as.info,  Node: HPPA Syntax,  Next: HPPA Floating Point,  Prev: HPPA Options,  Up: HPPA-Dependent
@@ -10570,25 +10274,25 @@ assembly language reference manual, with a few noteworthy differences.
 simply for compatibility with how most assembly language programmers
 write code.
 
-   Some obscure expression parsing problems may affect hand written
-code which uses the `spop' instructions, or code which makes significant
-use of the `!' line separator.
+   Some obscure expression parsing problems may affect hand written code
+which uses the 'spop' instructions, or code which makes significant use
+of the '!' line separator.
 
-   `as' is much less forgiving about missing arguments and other
-similar oversights than the HP assembler.  `as' notifies you of missing
+   'as' is much less forgiving about missing arguments and other similar
+oversights than the HP assembler.  'as' notifies you of missing
 arguments as syntax errors; this is regarded as a feature, not a bug.
 
-   Finally, `as' allows you to use an external symbol without
-explicitly importing the symbol.  _Warning:_ in the future this will be
-an error for HPPA targets.
+   Finally, 'as' allows you to use an external symbol without explicitly
+importing the symbol.  _Warning:_ in the future this will be an error
+for HPPA targets.
 
    Special characters for HPPA targets include:
 
-   `;' is the line comment character.
+   ';' is the line comment character.
 
-   `!' can be used instead of a newline to separate statements.
+   '!' can be used instead of a newline to separate statements.
 
-   Since `$' has no special meaning, you may use it in symbol names.
+   Since '$' has no special meaning, you may use it in symbol names.
 
 
 File: as.info,  Node: HPPA Floating Point,  Next: HPPA Directives,  Prev: HPPA Syntax,  Up: HPPA-Dependent
@@ -10604,12 +10308,12 @@ File: as.info,  Node: HPPA Directives,  Next: HPPA Opcodes,  Prev: HPPA Floating
 9.13.5 HPPA Assembler Directives
 --------------------------------
 
-`as' for the HPPA supports many additional directives for compatibility
+'as' for the HPPA supports many additional directives for compatibility
 with the native assembler.  This section describes them only briefly.
 For detailed information on HPPA-specific assembler directives, see
-`HP9000 Series 800 Assembly Language Reference Manual' (HP 92432-90001).
+'HP9000 Series 800 Assembly Language Reference Manual' (HP 92432-90001).
 
-   `as' does _not_ support the following assembler directives described
+   'as' does _not_ support the following assembler directives described
 in the HP manual:
 
      .endm           .liston
@@ -10617,195 +10321,194 @@ in the HP manual:
      .leave          .macro
      .listoff
 
-   Beyond those implemented for compatibility, `as' supports one
-additional assembler directive for the HPPA: `.param'.  It conveys
+   Beyond those implemented for compatibility, 'as' supports one
+additional assembler directive for the HPPA: '.param'.  It conveys
 register argument locations for static functions.  Its syntax closely
-follows the `.export' directive.
+follows the '.export' directive.
 
-   These are the additional directives in `as' for the HPPA:
+   These are the additional directives in 'as' for the HPPA:
 
-`.block N'
-`.blockz N'
+'.block N'
+'.blockz N'
      Reserve N bytes of storage, and initialize them to zero.
 
-`.call'
-     Mark the beginning of a procedure call.  Only the special case
-     with _no arguments_ is allowed.
+'.call'
+     Mark the beginning of a procedure call.  Only the special case with
+     _no arguments_ is allowed.
 
-`.callinfo [ PARAM=VALUE, ... ]  [ FLAG, ... ]'
+'.callinfo [ PARAM=VALUE, ... ] [ FLAG, ... ]'
      Specify a number of parameters and flags that define the
      environment for a procedure.
 
-     PARAM may be any of `frame' (frame size), `entry_gr' (end of
-     general register range), `entry_fr' (end of float register range),
-     `entry_sr' (end of space register range).
+     PARAM may be any of 'frame' (frame size), 'entry_gr' (end of
+     general register range), 'entry_fr' (end of float register range),
+     'entry_sr' (end of space register range).
 
-     The values for FLAG are `calls' or `caller' (proc has
-     subroutines), `no_calls' (proc does not call subroutines),
-     `save_rp' (preserve return pointer), `save_sp' (proc preserves
-     stack pointer), `no_unwind' (do not unwind this proc), `hpux_int'
-     (proc is interrupt routine).
+     The values for FLAG are 'calls' or 'caller' (proc has subroutines),
+     'no_calls' (proc does not call subroutines), 'save_rp' (preserve
+     return pointer), 'save_sp' (proc preserves stack pointer),
+     'no_unwind' (do not unwind this proc), 'hpux_int' (proc is
+     interrupt routine).
 
-`.code'
-     Assemble into the standard section called `$TEXT$', subsection
-     `$CODE$'.
+'.code'
+     Assemble into the standard section called '$TEXT$', subsection
+     '$CODE$'.
 
-`.copyright "STRING"'
+'.copyright "STRING"'
      In the SOM object format, insert STRING into the object code,
      marked as a copyright string.
 
-`.copyright "STRING"'
+'.copyright "STRING"'
      In the ELF object format, insert STRING into the object code,
      marked as a version string.
 
-`.enter'
+'.enter'
      Not yet supported; the assembler rejects programs containing this
      directive.
 
-`.entry'
+'.entry'
      Mark the beginning of a procedure.
 
-`.exit'
+'.exit'
      Mark the end of a procedure.
 
-`.export NAME [ ,TYP ]  [ ,PARAM=R ]'
+'.export NAME [ ,TYP ] [ ,PARAM=R ]'
      Make a procedure NAME available to callers.  TYP, if present, must
-     be one of `absolute', `code' (ELF only, not SOM), `data', `entry',
-     `data', `entry', `millicode', `plabel', `pri_prog', or `sec_prog'.
+     be one of 'absolute', 'code' (ELF only, not SOM), 'data', 'entry',
+     'data', 'entry', 'millicode', 'plabel', 'pri_prog', or 'sec_prog'.
 
      PARAM, if present, provides either relocation information for the
      procedure arguments and result, or a privilege level.  PARAM may be
-     `argwN' (where N ranges from `0' to `3', and indicates one of four
-     one-word arguments); `rtnval' (the procedure's result); or
-     `priv_lev' (privilege level).  For arguments or the result, R
-     specifies how to relocate, and must be one of `no' (not
-     relocatable), `gr' (argument is in general register), `fr' (in
-     floating point register), or `fu' (upper half of float register).
-     For `priv_lev', R is an integer.
-
-`.half N'
-     Define a two-byte integer constant N; synonym for the portable
-     `as' directive `.short'.
-
-`.import NAME [ ,TYP ]'
-     Converse of `.export'; make a procedure available to call.  The
+     'argwN' (where N ranges from '0' to '3', and indicates one of four
+     one-word arguments); 'rtnval' (the procedure's result); or
+     'priv_lev' (privilege level).  For arguments or the result, R
+     specifies how to relocate, and must be one of 'no' (not
+     relocatable), 'gr' (argument is in general register), 'fr' (in
+     floating point register), or 'fu' (upper half of float register).
+     For 'priv_lev', R is an integer.
+
+'.half N'
+     Define a two-byte integer constant N; synonym for the portable 'as'
+     directive '.short'.
+
+'.import NAME [ ,TYP ]'
+     Converse of '.export'; make a procedure available to call.  The
      arguments use the same conventions as the first two arguments for
-     `.export'.
+     '.export'.
 
-`.label NAME'
+'.label NAME'
      Define NAME as a label for the current assembly location.
 
-`.leave'
+'.leave'
      Not yet supported; the assembler rejects programs containing this
      directive.
 
-`.origin LC'
-     Advance location counter to LC. Synonym for the `as' portable
-     directive `.org'.
+'.origin LC'
+     Advance location counter to LC.  Synonym for the 'as' portable
+     directive '.org'.
 
-`.param NAME [ ,TYP ]  [ ,PARAM=R ]'
-     Similar to `.export', but used for static procedures.
+'.param NAME [ ,TYP ] [ ,PARAM=R ]'
+     Similar to '.export', but used for static procedures.
 
-`.proc'
+'.proc'
      Use preceding the first statement of a procedure.
 
-`.procend'
+'.procend'
      Use following the last statement of a procedure.
 
-`LABEL .reg EXPR'
-     Synonym for `.equ'; define LABEL with the absolute expression EXPR
+'LABEL .reg EXPR'
+     Synonym for '.equ'; define LABEL with the absolute expression EXPR
      as its value.
 
-`.space SECNAME [ ,PARAMS ]'
+'.space SECNAME [ ,PARAMS ]'
      Switch to section SECNAME, creating a new section by that name if
      necessary.  You may only use PARAMS when creating a new section,
      not when switching to an existing one.  SECNAME may identify a
      section by number rather than by name.
 
      If specified, the list PARAMS declares attributes of the section,
-     identified by keywords.  The keywords recognized are `spnum=EXP'
+     identified by keywords.  The keywords recognized are 'spnum=EXP'
      (identify this section by the number EXP, an absolute expression),
-     `sort=EXP' (order sections according to this sort key when linking;
-     EXP is an absolute expression), `unloadable' (section contains no
-     loadable data), `notdefined' (this section defined elsewhere), and
-     `private' (data in this section not available to other programs).
+     'sort=EXP' (order sections according to this sort key when linking;
+     EXP is an absolute expression), 'unloadable' (section contains no
+     loadable data), 'notdefined' (this section defined elsewhere), and
+     'private' (data in this section not available to other programs).
 
-`.spnum SECNAM'
+'.spnum SECNAM'
      Allocate four bytes of storage, and initialize them with the
      section number of the section named SECNAM.  (You can define the
-     section number with the HPPA `.space' directive.)
+     section number with the HPPA '.space' directive.)
 
-`.string "STR"'
+'.string "STR"'
      Copy the characters in the string STR to the object file.  *Note
      Strings: Strings, for information on escape sequences you can use
-     in `as' strings.
+     in 'as' strings.
 
-     _Warning!_ The HPPA version of `.string' differs from the usual
-     `as' definition: it does _not_ write a zero byte after copying STR.
+     _Warning!_  The HPPA version of '.string' differs from the usual
+     'as' definition: it does _not_ write a zero byte after copying STR.
 
-`.stringz "STR"'
-     Like `.string', but appends a zero byte after copying STR to object
+'.stringz "STR"'
+     Like '.string', but appends a zero byte after copying STR to object
      file.
 
-`.subspa NAME [ ,PARAMS ]'
-`.nsubspa NAME [ ,PARAMS ]'
-     Similar to `.space', but selects a subsection NAME within the
+'.subspa NAME [ ,PARAMS ]'
+'.nsubspa NAME [ ,PARAMS ]'
+     Similar to '.space', but selects a subsection NAME within the
      current section.  You may only specify PARAMS when you create a
-     subsection (in the first instance of `.subspa' for this NAME).
+     subsection (in the first instance of '.subspa' for this NAME).
 
      If specified, the list PARAMS declares attributes of the
      subsection, identified by keywords.  The keywords recognized are
-     `quad=EXPR' ("quadrant" for this subsection), `align=EXPR'
+     'quad=EXPR' ("quadrant" for this subsection), 'align=EXPR'
      (alignment for beginning of this subsection; a power of two),
-     `access=EXPR' (value for "access rights" field), `sort=EXPR'
-     (sorting order for this subspace in link), `code_only' (subsection
-     contains only code), `unloadable' (subsection cannot be loaded
-     into memory), `comdat' (subsection is comdat), `common'
-     (subsection is common block), `dup_comm' (subsection may have
-     duplicate names), or `zero' (subsection is all zeros, do not write
-     in object file).
-
-     `.nsubspa' always creates a new subspace with the given name, even
+     'access=EXPR' (value for "access rights" field), 'sort=EXPR'
+     (sorting order for this subspace in link), 'code_only' (subsection
+     contains only code), 'unloadable' (subsection cannot be loaded into
+     memory), 'comdat' (subsection is comdat), 'common' (subsection is
+     common block), 'dup_comm' (subsection may have duplicate names), or
+     'zero' (subsection is all zeros, do not write in object file).
+
+     '.nsubspa' always creates a new subspace with the given name, even
      if one with the same name already exists.
 
-     `comdat', `common' and `dup_comm' can be used to implement various
+     'comdat', 'common' and 'dup_comm' can be used to implement various
      flavors of one-only support when using the SOM linker.  The SOM
      linker only supports specific combinations of these flags.  The
      details are not documented.  A brief description is provided here.
 
-     `comdat' provides a form of linkonce support.  It is useful for
-     both code and data subspaces.  A `comdat' subspace has a key symbol
-     marked by the `is_comdat' flag or `ST_COMDAT'.  Only the first
+     'comdat' provides a form of linkonce support.  It is useful for
+     both code and data subspaces.  A 'comdat' subspace has a key symbol
+     marked by the 'is_comdat' flag or 'ST_COMDAT'.  Only the first
      subspace for any given key is selected.  The key symbol becomes
      universal in shared links.  This is similar to the behavior of
-     `secondary_def' symbols.
+     'secondary_def' symbols.
 
-     `common' provides Fortran named common support.  It is only useful
-     for data subspaces.  Symbols with the flag `is_common' retain this
-     flag in shared links.  Referencing a `is_common' symbol in a shared
-     library from outside the library doesn't work.  Thus, `is_common'
+     'common' provides Fortran named common support.  It is only useful
+     for data subspaces.  Symbols with the flag 'is_common' retain this
+     flag in shared links.  Referencing a 'is_common' symbol in a shared
+     library from outside the library doesn't work.  Thus, 'is_common'
      symbols must be output whenever they are needed.
 
-     `common' and `dup_comm' together provide Cobol common support.
-     The subspaces in this case must all be the same length.
-     Otherwise, this support is similar to the Fortran common support.
+     'common' and 'dup_comm' together provide Cobol common support.  The
+     subspaces in this case must all be the same length.  Otherwise,
+     this support is similar to the Fortran common support.
 
-     `dup_comm' by itself provides a type of one-only support for code.
-     Only the first `dup_comm' subspace is selected.  There is a rather
+     'dup_comm' by itself provides a type of one-only support for code.
+     Only the first 'dup_comm' subspace is selected.  There is a rather
      complex algorithm to compare subspaces.  Code symbols marked with
-     the `dup_common' flag are hidden.  This support was intended for
+     the 'dup_common' flag are hidden.  This support was intended for
      "C++ duplicate inlines".
 
      A simplified technique is used to mark the flags of symbols based
      on the flags of their subspace.  A symbol with the scope
      SS_UNIVERSAL and type ST_ENTRY, ST_CODE or ST_DATA is marked with
-     the corresponding settings of `comdat', `common' and `dup_comm'
+     the corresponding settings of 'comdat', 'common' and 'dup_comm'
      from the subspace, respectively.  This avoids having to introduce
-     additional directives to mark these symbols.  The HP assembler
-     sets `is_common' from `common'.  However, it doesn't set the
-     `dup_common' from `dup_comm'.  It doesn't have `comdat' support.
+     additional directives to mark these symbols.  The HP assembler sets
+     'is_common' from 'common'.  However, it doesn't set the
+     'dup_common' from 'dup_comm'.  It doesn't have 'comdat' support.
 
-`.version "STR"'
+'.version "STR"'
      Write STR as version identifier in object code.
 
 
@@ -10815,7 +10518,7 @@ File: as.info,  Node: HPPA Opcodes,  Prev: HPPA Directives,  Up: HPPA-Dependent
 --------------
 
 For detailed information on the HPPA machine instruction set, see
-`PA-RISC Architecture and Instruction Set Reference Manual' (HP
+'PA-RISC Architecture and Instruction Set Reference Manual' (HP
 09740-90039).
 
 
@@ -10839,13 +10542,13 @@ File: as.info,  Node: ESA/390 Notes,  Next: ESA/390 Options,  Up: ESA/390-Depend
 9.14.1 Notes
 ------------
 
-The ESA/390 `as' port is currently intended to be a back-end for the
-GNU CC compiler.  It is not HLASM compatible, although it does support
-a subset of some of the HLASM directives.  The only supported binary
-file format is ELF; none of the usual MVS/VM/OE/USS object file
-formats, such as ESD or XSD, are supported.
+The ESA/390 'as' port is currently intended to be a back-end for the GNU
+CC compiler.  It is not HLASM compatible, although it does support a
+subset of some of the HLASM directives.  The only supported binary file
+format is ELF; none of the usual MVS/VM/OE/USS object file formats, such
+as ESD or XSD, are supported.
 
-   When used with the GNU CC compiler, the ESA/390 `as' will produce
+   When used with the GNU CC compiler, the ESA/390 'as' will produce
 correct, fully relocated, functional binaries, and has been used to
 compile and execute large projects.  However, many aspects should still
 be considered experimental; these include shared library support,
@@ -10858,7 +10561,7 @@ File: as.info,  Node: ESA/390 Options,  Next: ESA/390 Syntax,  Prev: ESA/390 Not
 9.14.2 Options
 --------------
 
-`as' has no machine-dependent command-line options for the ESA/390.
+'as' has no machine-dependent command-line options for the ESA/390.
 
 
 File: as.info,  Node: ESA/390 Syntax,  Next: ESA/390 Floating Point,  Prev: ESA/390 Options,  Up: ESA/390-Dependent
@@ -10880,24 +10583,24 @@ effect.
 for compatibility with how most assembly language programmers write
 code.
 
-   `#' is the line comment character.
+   '#' is the line comment character.
 
-   `;' can be used instead of a newline to separate statements.
+   ';' can be used instead of a newline to separate statements.
 
-   Since `$' has no special meaning, you may use it in symbol names.
+   Since '$' has no special meaning, you may use it in symbol names.
 
    Registers can be given the symbolic names r0..r15, fp0, fp2, fp4,
-fp6.  By using thesse symbolic names, `as' can detect simple syntax
-errors. The name rarg or r.arg is a synonym for r11, rtca or r.tca for
+fp6.  By using thesse symbolic names, 'as' can detect simple syntax
+errors.  The name rarg or r.arg is a synonym for r11, rtca or r.tca for
 r12, sp, r.sp, dsa r.dsa for r13, lr or r.lr for r14, rbase or r.base
 for r3 and rpgt or r.pgt for r4.
 
-   `*' is the current location counter.  Unlike `.' it is always
+   '*' is the current location counter.  Unlike '.' it is always
 relative to the last USING directive.  Note that this means that
-expressions cannot use multiplication, as any occurrence of `*' will be
+expressions cannot use multiplication, as any occurrence of '*' will be
 interpreted as a location counter.
 
-   All labels are relative to the last USING.  Thus, branches to a label
+   All labels are relative to the last USING. Thus, branches to a label
 always imply the use of base+displacement.
 
    Many of the usual forms of address constants / address literals are
@@ -10914,7 +10617,7 @@ supported.  Thus,
    should all behave as expected: that is, an entry in the literal pool
 will be created (or reused if it already exists), and the instruction
 operands will be the displacement into the literal pool using the
-current base register (as last declared with the `.using' directive).
+current base register (as last declared with the '.using' directive).
 
 
 File: as.info,  Node: ESA/390 Floating Point,  Next: ESA/390 Directives,  Prev: ESA/390 Syntax,  Up: ESA/390-Dependent
@@ -10931,59 +10634,59 @@ File: as.info,  Node: ESA/390 Directives,  Next: ESA/390 Opcodes,  Prev: ESA/390
 9.14.5 ESA/390 Assembler Directives
 -----------------------------------
 
-`as' for the ESA/390 supports all of the standard ELF/SVR4 assembler
+'as' for the ESA/390 supports all of the standard ELF/SVR4 assembler
 directives that are documented in the main part of this documentation.
 Several additional directives are supported in order to implement the
-ESA/390 addressing model.  The most important of these are `.using' and
-`.ltorg'
+ESA/390 addressing model.  The most important of these are '.using' and
+'.ltorg'
 
-   These are the additional directives in `as' for the ESA/390:
+   These are the additional directives in 'as' for the ESA/390:
 
-`.dc'
+'.dc'
      A small subset of the usual DC directive is supported.
 
-`.drop REGNO'
+'.drop REGNO'
      Stop using REGNO as the base register.  The REGNO must have been
-     previously declared with a `.using' directive in the same section
+     previously declared with a '.using' directive in the same section
      as the current section.
 
-`.ebcdic STRING'
+'.ebcdic STRING'
      Emit the EBCDIC equivalent of the indicated string.  The emitted
-     string will be null terminated.  Note that the directives
-     `.string' etc. emit ascii strings by default.
+     string will be null terminated.  Note that the directives '.string'
+     etc.  emit ascii strings by default.
 
-`EQU'
+'EQU'
      The standard HLASM-style EQU directive is not supported; however,
-     the standard `as' directive .equ can be used to the same effect.
+     the standard 'as' directive .equ can be used to the same effect.
 
-`.ltorg'
+'.ltorg'
      Dump the literal pool accumulated so far; begin a new literal pool.
      The literal pool will be written in the current section; in order
-     to generate correct assembly, a `.using' must have been previously
+     to generate correct assembly, a '.using' must have been previously
      specified in the same section.
 
-`.using EXPR,REGNO'
+'.using EXPR,REGNO'
      Use REGNO as the base register for all subsequent RX, RS, and SS
-     form instructions. The EXPR will be evaluated to obtain the base
-     address; usually, EXPR will merely be `*'.
+     form instructions.  The EXPR will be evaluated to obtain the base
+     address; usually, EXPR will merely be '*'.
 
-     This assembler allows two `.using' directives to be simultaneously
-     outstanding, one in the `.text' section, and one in another section
-     (typically, the `.data' section).  This feature allows dynamically
+     This assembler allows two '.using' directives to be simultaneously
+     outstanding, one in the '.text' section, and one in another section
+     (typically, the '.data' section).  This feature allows dynamically
      loaded objects to be implemented in a relatively straightforward
-     way.  A `.using' directive must always be specified in the `.text'
+     way.  A '.using' directive must always be specified in the '.text'
      section; this will specify the base register that will be used for
-     branches in the `.text' section.  A second `.using' may be
+     branches in the '.text' section.  A second '.using' may be
      specified in another section; this will specify the base register
      that is used for non-label address literals.  When a second
-     `.using' is specified, then the subsequent `.ltorg' must be put in
+     '.using' is specified, then the subsequent '.ltorg' must be put in
      the same section; otherwise an error will result.
 
-     Thus, for example, the following code uses `r3' to address branch
-     targets and `r4' to address the literal pool, which has been
-     written to the `.data' section.  The is, the constants
-     `=A(some_routine)', `=H'42'' and `=E'3.1416'' will all appear in
-     the `.data' section.
+     Thus, for example, the following code uses 'r3' to address branch
+     targets and 'r4' to address the literal pool, which has been
+     written to the '.data' section.  The is, the constants
+     '=A(some_routine)', '=H'42'' and '=E'3.1416'' will all appear in
+     the '.data' section.
 
           .data
           	.using  LITPOOL,r4
@@ -11004,11 +10707,10 @@ ESA/390 addressing model.  The most important of these are `.using' and
           LITPOOL:
           	.ltorg
 
-     Note that this dual-`.using' directive semantics extends and is
-     not compatible with HLASM semantics.  Note that this assembler
+     Note that this dual-'.using' directive semantics extends and is not
+     compatible with HLASM semantics.  Note that this assembler
      directive does not support the full range of HLASM semantics.
 
-
 
 File: as.info,  Node: ESA/390 Opcodes,  Prev: ESA/390 Directives,  Up: ESA/390-Dependent
 
@@ -11016,7 +10718,7 @@ File: as.info,  Node: ESA/390 Opcodes,  Prev: ESA/390 Directives,  Up: ESA/390-D
 --------------
 
 For detailed information on the ESA/390 machine instruction set, see
-`ESA/390 Principles of Operation' (IBM Publication Number DZ9AR004).
+'ESA/390 Principles of Operation' (IBM Publication Number DZ9AR004).
 
 
 File: as.info,  Node: i386-Dependent,  Next: i860-Dependent,  Prev: ESA/390-Dependent,  Up: Machine Dependencies
@@ -11024,9 +10726,9 @@ File: as.info,  Node: i386-Dependent,  Next: i860-Dependent,  Prev: ESA/390-Depe
 9.15 80386 Dependent Features
 =============================
 
-   The i386 version `as' supports both the original Intel 386
-architecture in both 16 and 32-bit mode as well as AMD x86-64
-architecture extending the Intel architecture to 64-bits.
+The i386 version 'as' supports both the original Intel 386 architecture
+in both 16 and 32-bit mode as well as AMD x86-64 architecture extending
+the Intel architecture to 64-bits.
 
 * Menu:
 
@@ -11054,11 +10756,11 @@ File: as.info,  Node: i386-Options,  Next: i386-Directives,  Up: i386-Dependent
 9.15.1 Options
 --------------
 
-The i386 version of `as' has a few machine dependent options:
+The i386 version of 'as' has a few machine dependent options:
 
-`--32 | --x32 | --64'
-     Select the word size, either 32 bits or 64 bits.  `--32' implies
-     Intel i386 architecture, while `--x32' and `--64' imply AMD x86-64
+'--32 | --x32 | --64'
+     Select the word size, either 32 bits or 64 bits.  '--32' implies
+     Intel i386 architecture, while '--x32' and '--64' imply AMD x86-64
      architecture with 32-bit or 64-bit word-size respectively.
 
      These options are only available with the ELF object file format,
@@ -11066,202 +10768,200 @@ The i386 version of `as' has a few machine dependent options:
      32-bit platform you have to add -enable-64-bit-bfd to configure
      enable 64-bit usage and use x86-64 as target platform).
 
-`-n'
+'-n'
      By default, x86 GAS replaces multiple nop instructions used for
      alignment within code sections with multi-byte nop instructions
      such as leal 0(%esi,1),%esi.  This switch disables the
      optimization.
 
-`--divide'
-     On SVR4-derived platforms, the character `/' is treated as a
+'--divide'
+     On SVR4-derived platforms, the character '/' is treated as a
      comment character, which means that it cannot be used in
-     expressions.  The `--divide' option turns `/' into a normal
-     character.  This does not disable `/' at the beginning of a line
-     starting a comment, or affect using `#' for starting a comment.
+     expressions.  The '--divide' option turns '/' into a normal
+     character.  This does not disable '/' at the beginning of a line
+     starting a comment, or affect using '#' for starting a comment.
 
-`-march=CPU[+EXTENSION...]'
+'-march=CPU[+EXTENSION...]'
      This option specifies the target processor.  The assembler will
      issue an error message if an attempt is made to assemble an
      instruction which will not execute on the target processor.  The
-     following processor names are recognized: `i8086', `i186', `i286',
-     `i386', `i486', `i586', `i686', `pentium', `pentiumpro',
-     `pentiumii', `pentiumiii', `pentium4', `prescott', `nocona',
-     `core', `core2', `corei7', `l1om', `k1om', `iamcu', `k6', `k6_2',
-     `athlon', `opteron', `k8', `amdfam10', `bdver1', `bdver2',
-     `bdver3', `bdver4', `znver1', `btver1', `btver2', `generic32' and
-     `generic64'.
-
-     In addition to the basic instruction set, the assembler can be
-     told to accept various extension mnemonics.  For example,
-     `-march=i686+sse4+vmx' extends I686 with SSE4 and VMX.  The
-     following extensions are currently supported: `8087', `287', `387',
-     `687', `no87', `no287', `no387', `no687', `mmx', `nommx', `sse',
-     `sse2', `sse3', `ssse3', `sse4.1', `sse4.2', `sse4', `nosse',
-     `nosse2', `nosse3', `nossse3', `nosse4.1', `nosse4.2', `nosse4',
-     `avx', `avx2', `noavx', `noavx2', `adx', `rdseed', `prfchw',
-     `smap', `mpx', `sha', `rdpid', `ptwrite', `prefetchwt1',
-     `clflushopt', `se1', `clwb', `avx512f', `avx512cd', `avx512er',
-     `avx512pf', `avx512vl', `avx512bw', `avx512dq', `avx512ifma',
-     `avx512vbmi', `avx512_4fmaps', `avx512_4vnniw', `avx512_vpopcntdq',
-     `noavx512f', `noavx512cd', `noavx512er', `noavx512pf',
-     `noavx512vl', `noavx512bw', `noavx512dq', `noavx512ifma',
-     `noavx512vbmi', `noavx512_4fmaps', `noavx512_4vnniw',
-     `noavx512_vpopcntdq', `vmx', `vmfunc', `smx', `xsave', `xsaveopt',
-     `xsavec', `xsaves', `aes', `pclmul', `fsgsbase', `rdrnd', `f16c',
-     `bmi2', `fma', `movbe', `ept', `lzcnt', `hle', `rtm', `invpcid',
-     `clflush', `mwaitx', `clzero', `lwp', `fma4', `xop', `cx16',
-     `syscall', `rdtscp', `3dnow', `3dnowa', `sse4a', `sse5', `svme',
-     `abm' and `padlock'.  Note that rather than extending a basic
-     instruction set, the extension mnemonics starting with `no' revoke
+     following processor names are recognized: 'i8086', 'i186', 'i286',
+     'i386', 'i486', 'i586', 'i686', 'pentium', 'pentiumpro',
+     'pentiumii', 'pentiumiii', 'pentium4', 'prescott', 'nocona',
+     'core', 'core2', 'corei7', 'l1om', 'k1om', 'iamcu', 'k6', 'k6_2',
+     'athlon', 'opteron', 'k8', 'amdfam10', 'bdver1', 'bdver2',
+     'bdver3', 'bdver4', 'znver1', 'btver1', 'btver2', 'generic32' and
+     'generic64'.
+
+     In addition to the basic instruction set, the assembler can be told
+     to accept various extension mnemonics.  For example,
+     '-march=i686+sse4+vmx' extends I686 with SSE4 and VMX.  The
+     following extensions are currently supported: '8087', '287', '387',
+     '687', 'no87', 'no287', 'no387', 'no687', 'mmx', 'nommx', 'sse',
+     'sse2', 'sse3', 'ssse3', 'sse4.1', 'sse4.2', 'sse4', 'nosse',
+     'nosse2', 'nosse3', 'nossse3', 'nosse4.1', 'nosse4.2', 'nosse4',
+     'avx', 'avx2', 'noavx', 'noavx2', 'adx', 'rdseed', 'prfchw',
+     'smap', 'mpx', 'sha', 'rdpid', 'ptwrite', 'prefetchwt1',
+     'clflushopt', 'se1', 'clwb', 'avx512f', 'avx512cd', 'avx512er',
+     'avx512pf', 'avx512vl', 'avx512bw', 'avx512dq', 'avx512ifma',
+     'avx512vbmi', 'avx512_4fmaps', 'avx512_4vnniw', 'avx512_vpopcntdq',
+     'noavx512f', 'noavx512cd', 'noavx512er', 'noavx512pf',
+     'noavx512vl', 'noavx512bw', 'noavx512dq', 'noavx512ifma',
+     'noavx512vbmi', 'noavx512_4fmaps', 'noavx512_4vnniw',
+     'noavx512_vpopcntdq', 'vmx', 'vmfunc', 'smx', 'xsave', 'xsaveopt',
+     'xsavec', 'xsaves', 'aes', 'pclmul', 'fsgsbase', 'rdrnd', 'f16c',
+     'bmi2', 'fma', 'movbe', 'ept', 'lzcnt', 'hle', 'rtm', 'invpcid',
+     'clflush', 'mwaitx', 'clzero', 'lwp', 'fma4', 'xop', 'cx16',
+     'syscall', 'rdtscp', '3dnow', '3dnowa', 'sse4a', 'sse5', 'svme',
+     'abm' and 'padlock'.  Note that rather than extending a basic
+     instruction set, the extension mnemonics starting with 'no' revoke
      the respective functionality.
 
-     When the `.arch' directive is used with `-march', the `.arch'
+     When the '.arch' directive is used with '-march', the '.arch'
      directive will take precedent.
 
-`-mtune=CPU'
-     This option specifies a processor to optimize for. When used in
-     conjunction with the `-march' option, only instructions of the
-     processor specified by the `-march' option will be generated.
+'-mtune=CPU'
+     This option specifies a processor to optimize for.  When used in
+     conjunction with the '-march' option, only instructions of the
+     processor specified by the '-march' option will be generated.
 
      Valid CPU values are identical to the processor list of
-     `-march=CPU'.
+     '-march=CPU'.
 
-`-msse2avx'
+'-msse2avx'
      This option specifies that the assembler should encode SSE
      instructions with VEX prefix.
 
-`-msse-check=NONE'
-`-msse-check=WARNING'
-`-msse-check=ERROR'
+'-msse-check=NONE'
+'-msse-check=WARNING'
+'-msse-check=ERROR'
      These options control if the assembler should check SSE
-     instructions.  `-msse-check=NONE' will make the assembler not to
-     check SSE instructions,  which is the default.
-     `-msse-check=WARNING' will make the assembler issue a warning for
-     any SSE instruction.  `-msse-check=ERROR' will make the assembler
+     instructions.  '-msse-check=NONE' will make the assembler not to
+     check SSE instructions, which is the default.
+     '-msse-check=WARNING' will make the assembler issue a warning for
+     any SSE instruction.  '-msse-check=ERROR' will make the assembler
      issue an error for any SSE instruction.
 
-`-mavxscalar=128'
-`-mavxscalar=256'
+'-mavxscalar=128'
+'-mavxscalar=256'
      These options control how the assembler should encode scalar AVX
-     instructions.  `-mavxscalar=128' will encode scalar AVX
+     instructions.  '-mavxscalar=128' will encode scalar AVX
      instructions with 128bit vector length, which is the default.
-     `-mavxscalar=256' will encode scalar AVX instructions with 256bit
+     '-mavxscalar=256' will encode scalar AVX instructions with 256bit
      vector length.
 
-`-mevexlig=128'
-`-mevexlig=256'
-`-mevexlig=512'
+'-mevexlig=128'
+'-mevexlig=256'
+'-mevexlig=512'
      These options control how the assembler should encode
-     length-ignored (LIG) EVEX instructions.  `-mevexlig=128' will
+     length-ignored (LIG) EVEX instructions.  '-mevexlig=128' will
      encode LIG EVEX instructions with 128bit vector length, which is
-     the default.  `-mevexlig=256' and `-mevexlig=512' will encode LIG
+     the default.  '-mevexlig=256' and '-mevexlig=512' will encode LIG
      EVEX instructions with 256bit and 512bit vector length,
      respectively.
 
-`-mevexwig=0'
-`-mevexwig=1'
+'-mevexwig=0'
+'-mevexwig=1'
      These options control how the assembler should encode w-ignored
-     (WIG) EVEX instructions.  `-mevexwig=0' will encode WIG EVEX
-     instructions with evex.w = 0, which is the default.  `-mevexwig=1'
+     (WIG) EVEX instructions.  '-mevexwig=0' will encode WIG EVEX
+     instructions with evex.w = 0, which is the default.  '-mevexwig=1'
      will encode WIG EVEX instructions with evex.w = 1.
 
-`-mmnemonic=ATT'
-`-mmnemonic=INTEL'
+'-mmnemonic=ATT'
+'-mmnemonic=INTEL'
      This option specifies instruction mnemonic for matching
-     instructions.  The `.att_mnemonic' and `.intel_mnemonic'
-     directives will take precedent.
+     instructions.  The '.att_mnemonic' and '.intel_mnemonic' directives
+     will take precedent.
 
-`-msyntax=ATT'
-`-msyntax=INTEL'
+'-msyntax=ATT'
+'-msyntax=INTEL'
      This option specifies instruction syntax when processing
-     instructions.  The `.att_syntax' and `.intel_syntax' directives
+     instructions.  The '.att_syntax' and '.intel_syntax' directives
      will take precedent.
 
-`-mnaked-reg'
-     This opetion specifies that registers don't require a `%' prefix.
-     The `.att_syntax' and `.intel_syntax' directives will take
+'-mnaked-reg'
+     This opetion specifies that registers don't require a '%' prefix.
+     The '.att_syntax' and '.intel_syntax' directives will take
      precedent.
 
-`-madd-bnd-prefix'
-     This option forces the assembler to add BND prefix to all
-     branches, even if such prefix was not explicitly specified in the
-     source code.
+'-madd-bnd-prefix'
+     This option forces the assembler to add BND prefix to all branches,
+     even if such prefix was not explicitly specified in the source
+     code.
 
-`-mno-shared'
+'-mno-shared'
      On ELF target, the assembler normally optimizes out non-PLT
      relocations against defined non-weak global branch targets with
-     default visibility.  The `-mshared' option tells the assembler to
-     generate code which may go into a shared library where all
-     non-weak global branch targets with default visibility can be
-     preempted.  The resulting code is slightly bigger.  This option
-     only affects the handling of branch instructions.
+     default visibility.  The '-mshared' option tells the assembler to
+     generate code which may go into a shared library where all non-weak
+     global branch targets with default visibility can be preempted.
+     The resulting code is slightly bigger.  This option only affects
+     the handling of branch instructions.
 
-`-mbig-obj'
+'-mbig-obj'
      On x86-64 PE/COFF target this option forces the use of big object
      file format, which allows more than 32768 sections.
 
-`-momit-lock-prefix=NO'
-`-momit-lock-prefix=YES'
+'-momit-lock-prefix=NO'
+'-momit-lock-prefix=YES'
      These options control how the assembler should encode lock prefix.
      This option is intended as a workaround for processors, that fail
-     on lock prefix. This option can only be safely used with
-     single-core, single-thread computers `-momit-lock-prefix=YES' will
-     omit all lock prefixes.  `-momit-lock-prefix=NO' will encode lock
+     on lock prefix.  This option can only be safely used with
+     single-core, single-thread computers '-momit-lock-prefix=YES' will
+     omit all lock prefixes.  '-momit-lock-prefix=NO' will encode lock
      prefix as usual, which is the default.
 
-`-mfence-as-lock-add=NO'
-`-mfence-as-lock-add=YES'
+'-mfence-as-lock-add=NO'
+'-mfence-as-lock-add=YES'
      These options control how the assembler should encode lfence,
-     mfence and sfence.  `-mfence-as-lock-add=YES' will encode lfence,
-     mfence and sfence as `lock addl $0x0, (%rsp)' in 64-bit mode and
-     `lock addl $0x0, (%esp)' in 32-bit mode.  `-mfence-as-lock-add=NO'
+     mfence and sfence.  '-mfence-as-lock-add=YES' will encode lfence,
+     mfence and sfence as 'lock addl $0x0, (%rsp)' in 64-bit mode and
+     'lock addl $0x0, (%esp)' in 32-bit mode.  '-mfence-as-lock-add=NO'
      will encode lfence, mfence and sfence as usual, which is the
      default.
 
-`-mrelax-relocations=NO'
-`-mrelax-relocations=YES'
+'-mrelax-relocations=NO'
+'-mrelax-relocations=YES'
      These options control whether the assembler should generate relax
      relocations, R_386_GOT32X, in 32-bit mode, or R_X86_64_GOTPCRELX
      and R_X86_64_REX_GOTPCRELX, in 64-bit mode.
-     `-mrelax-relocations=YES' will generate relax relocations.
-     `-mrelax-relocations=NO' will not generate relax relocations.  The
+     '-mrelax-relocations=YES' will generate relax relocations.
+     '-mrelax-relocations=NO' will not generate relax relocations.  The
      default can be controlled by a configure option
-     `--enable-x86-relax-relocations'.
-
-`-mevexrcig=RNE'
-`-mevexrcig=RD'
-`-mevexrcig=RU'
-`-mevexrcig=RZ'
-     These options control how the assembler should encode SAE-only
-     EVEX instructions.  `-mevexrcig=RNE' will encode RC bits of EVEX
-     instruction with 00, which is the default.  `-mevexrcig=RD',
-     `-mevexrcig=RU' and `-mevexrcig=RZ' will encode SAE-only EVEX
+     '--enable-x86-relax-relocations'.
+
+'-mevexrcig=RNE'
+'-mevexrcig=RD'
+'-mevexrcig=RU'
+'-mevexrcig=RZ'
+     These options control how the assembler should encode SAE-only EVEX
+     instructions.  '-mevexrcig=RNE' will encode RC bits of EVEX
+     instruction with 00, which is the default.  '-mevexrcig=RD',
+     '-mevexrcig=RU' and '-mevexrcig=RZ' will encode SAE-only EVEX
      instructions with 01, 10 and 11 RC bits, respectively.
 
-`-mamd64'
-`-mintel64'
+'-mamd64'
+'-mintel64'
      This option specifies that the assembler should accept only AMD64
      or Intel64 ISA in 64-bit mode.  The default is to accept both.
 
-
 
 File: as.info,  Node: i386-Directives,  Next: i386-Syntax,  Prev: i386-Options,  Up: i386-Dependent
 
 9.15.2 x86 specific Directives
 ------------------------------
 
-`.lcomm SYMBOL , LENGTH[, ALIGNMENT]'
+'.lcomm SYMBOL , LENGTH[, ALIGNMENT]'
      Reserve LENGTH (an absolute expression) bytes for a local common
      denoted by SYMBOL.  The section and value of SYMBOL are those of
      the new local common.  The addresses are allocated in the bss
      section, so that at run-time the bytes start off zeroed.  Since
-     SYMBOL is not declared global, it is normally not visible to `ld'.
+     SYMBOL is not declared global, it is normally not visible to 'ld'.
      The optional third parameter, ALIGNMENT, specifies the desired
      alignment of the symbol in the bss section.
 
      This directive is only available for COFF based x86 targets.
 
-
 
 File: as.info,  Node: i386-Syntax,  Next: i386-Mnemonics,  Prev: i386-Directives,  Up: i386-Dependent
 
@@ -11279,45 +10979,44 @@ File: as.info,  Node: i386-Variations,  Next: i386-Chars,  Up: i386-Syntax
 9.15.3.1 AT&T Syntax versus Intel Syntax
 ........................................
 
-`as' now supports assembly using Intel assembler syntax.
-`.intel_syntax' selects Intel mode, and `.att_syntax' switches back to
-the usual AT&T mode for compatibility with the output of `gcc'.  Either
-of these directives may have an optional argument, `prefix', or
-`noprefix' specifying whether registers require a `%' prefix.  AT&T
+'as' now supports assembly using Intel assembler syntax.
+'.intel_syntax' selects Intel mode, and '.att_syntax' switches back to
+the usual AT&T mode for compatibility with the output of 'gcc'.  Either
+of these directives may have an optional argument, 'prefix', or
+'noprefix' specifying whether registers require a '%' prefix.  AT&T
 System V/386 assembler syntax is quite different from Intel syntax.  We
 mention these differences because almost all 80386 documents use Intel
 syntax.  Notable differences between the two syntaxes are:
 
-   * AT&T immediate operands are preceded by `$'; Intel immediate
-     operands are undelimited (Intel `push 4' is AT&T `pushl $4').
-     AT&T register operands are preceded by `%'; Intel register operands
-     are undelimited.  AT&T absolute (as opposed to PC relative)
-     jump/call operands are prefixed by `*'; they are undelimited in
-     Intel syntax.
+   * AT&T immediate operands are preceded by '$'; Intel immediate
+     operands are undelimited (Intel 'push 4' is AT&T 'pushl $4').  AT&T
+     register operands are preceded by '%'; Intel register operands are
+     undelimited.  AT&T absolute (as opposed to PC relative) jump/call
+     operands are prefixed by '*'; they are undelimited in Intel syntax.
 
    * AT&T and Intel syntax use the opposite order for source and
-     destination operands.  Intel `add eax, 4' is `addl $4, %eax'.  The
-     `source, dest' convention is maintained for compatibility with
-     previous Unix assemblers.  Note that `bound', `invlpga', and
-     instructions with 2 immediate operands, such as the `enter'
-     instruction, do _not_ have reversed order.  *Note i386-Bugs::.
+     destination operands.  Intel 'add eax, 4' is 'addl $4, %eax'.  The
+     'source, dest' convention is maintained for compatibility with
+     previous Unix assemblers.  Note that 'bound', 'invlpga', and
+     instructions with 2 immediate operands, such as the 'enter'
+     instruction, do _not_ have reversed order.  *note i386-Bugs::.
 
    * In AT&T syntax the size of memory operands is determined from the
      last character of the instruction mnemonic.  Mnemonic suffixes of
-     `b', `w', `l' and `q' specify byte (8-bit), word (16-bit), long
+     'b', 'w', 'l' and 'q' specify byte (8-bit), word (16-bit), long
      (32-bit) and quadruple word (64-bit) memory references.  Intel
      syntax accomplishes this by prefixing memory operands (_not_ the
-     instruction mnemonics) with `byte ptr', `word ptr', `dword ptr'
-     and `qword ptr'.  Thus, Intel `mov al, byte ptr FOO' is `movb FOO,
-     %al' in AT&T syntax.
+     instruction mnemonics) with 'byte ptr', 'word ptr', 'dword ptr' and
+     'qword ptr'.  Thus, Intel 'mov al, byte ptr FOO' is 'movb FOO, %al'
+     in AT&T syntax.
 
-     In 64-bit code, `movabs' can be used to encode the `mov'
+     In 64-bit code, 'movabs' can be used to encode the 'mov'
      instruction with the 64-bit displacement or immediate operand.
 
-   * Immediate form long jumps and calls are `lcall/ljmp $SECTION,
-     $OFFSET' in AT&T syntax; the Intel syntax is `call/jmp far
-     SECTION:OFFSET'.  Also, the far return instruction is `lret
-     $STACK-ADJUST' in AT&T syntax; Intel syntax is `ret far
+   * Immediate form long jumps and calls are 'lcall/ljmp $SECTION,
+     $OFFSET' in AT&T syntax; the Intel syntax is 'call/jmp far
+     SECTION:OFFSET'.  Also, the far return instruction is 'lret
+     $STACK-ADJUST' in AT&T syntax; Intel syntax is 'ret far
      STACK-ADJUST'.
 
    * The AT&T assembler does not provide support for multiple section
@@ -11330,19 +11029,19 @@ File: as.info,  Node: i386-Chars,  Prev: i386-Variations,  Up: i386-Syntax
 9.15.3.2 Special Characters
 ...........................
 
-The presence of a `#' appearing anywhere on a line indicates the start
+The presence of a '#' appearing anywhere on a line indicates the start
 of a comment that extends to the end of that line.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line can also be a
-logical line number directive (*note Comments::) or a preprocessor
-control command (*note Preprocessing::).
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line can also be a logical
+line number directive (*note Comments::) or a preprocessor control
+command (*note Preprocessing::).
 
-   If the `--divide' command line option has not been specified then
-the `/' character appearing anywhere on a line also introduces a line
+   If the '--divide' command line option has not been specified then the
+'/' character appearing anywhere on a line also introduces a line
 comment.
 
-   The `;' character can be used to separate statements on the same
+   The ';' character can be used to separate statements on the same
 line.
 
 
@@ -11355,69 +11054,68 @@ File: as.info,  Node: i386-Mnemonics,  Next: i386-Regs,  Prev: i386-Syntax,  Up:
 ...........................
 
 Instruction mnemonics are suffixed with one character modifiers which
-specify the size of operands.  The letters `b', `w', `l' and `q'
-specify byte, word, long and quadruple word operands.  If no suffix is
-specified by an instruction then `as' tries to fill in the missing
-suffix based on the destination register operand (the last one by
-convention).  Thus, `mov %ax, %bx' is equivalent to `movw %ax, %bx';
-also, `mov $1, %bx' is equivalent to `movw $1, bx'.  Note that this is
-incompatible with the AT&T Unix assembler which assumes that a missing
-mnemonic suffix implies long operand size.  (This incompatibility does
-not affect compiler output since compilers always explicitly specify
-the mnemonic suffix.)
+specify the size of operands.  The letters 'b', 'w', 'l' and 'q' specify
+byte, word, long and quadruple word operands.  If no suffix is specified
+by an instruction then 'as' tries to fill in the missing suffix based on
+the destination register operand (the last one by convention).  Thus,
+'mov %ax, %bx' is equivalent to 'movw %ax, %bx'; also, 'mov $1, %bx' is
+equivalent to 'movw $1, bx'.  Note that this is incompatible with the
+AT&T Unix assembler which assumes that a missing mnemonic suffix implies
+long operand size.  (This incompatibility does not affect compiler
+output since compilers always explicitly specify the mnemonic suffix.)
 
    Almost all instructions have the same names in AT&T and Intel format.
 There are a few exceptions.  The sign extend and zero extend
 instructions need two sizes to specify them.  They need a size to
 sign/zero extend _from_ and a size to zero extend _to_.  This is
 accomplished by using two instruction mnemonic suffixes in AT&T syntax.
-Base names for sign extend and zero extend are `movs...' and `movz...'
-in AT&T syntax (`movsx' and `movzx' in Intel syntax).  The instruction
+Base names for sign extend and zero extend are 'movs...' and 'movz...'
+in AT&T syntax ('movsx' and 'movzx' in Intel syntax).  The instruction
 mnemonic suffixes are tacked on to this base name, the _from_ suffix
-before the _to_ suffix.  Thus, `movsbl %al, %edx' is AT&T syntax for
+before the _to_ suffix.  Thus, 'movsbl %al, %edx' is AT&T syntax for
 "move sign extend _from_ %al _to_ %edx."  Possible suffixes, thus, are
-`bl' (from byte to long), `bw' (from byte to word), `wl' (from word to
-long), `bq' (from byte to quadruple word), `wq' (from word to quadruple
-word), and `lq' (from long to quadruple word).
+'bl' (from byte to long), 'bw' (from byte to word), 'wl' (from word to
+long), 'bq' (from byte to quadruple word), 'wq' (from word to quadruple
+word), and 'lq' (from long to quadruple word).
 
    Different encoding options can be specified via optional mnemonic
-suffix.  `.s' suffix swaps 2 register operands in encoding when moving
-from one register to another.  `.d8' or `.d32' suffix prefers 8bit or
+suffix.  '.s' suffix swaps 2 register operands in encoding when moving
+from one register to another.  '.d8' or '.d32' suffix prefers 8bit or
 32bit displacement in encoding.
 
    The Intel-syntax conversion instructions
 
-   * `cbw' -- sign-extend byte in `%al' to word in `%ax',
+   * 'cbw' -- sign-extend byte in '%al' to word in '%ax',
 
-   * `cwde' -- sign-extend word in `%ax' to long in `%eax',
+   * 'cwde' -- sign-extend word in '%ax' to long in '%eax',
 
-   * `cwd' -- sign-extend word in `%ax' to long in `%dx:%ax',
+   * 'cwd' -- sign-extend word in '%ax' to long in '%dx:%ax',
 
-   * `cdq' -- sign-extend dword in `%eax' to quad in `%edx:%eax',
+   * 'cdq' -- sign-extend dword in '%eax' to quad in '%edx:%eax',
 
-   * `cdqe' -- sign-extend dword in `%eax' to quad in `%rax' (x86-64
+   * 'cdqe' -- sign-extend dword in '%eax' to quad in '%rax' (x86-64
      only),
 
-   * `cqo' -- sign-extend quad in `%rax' to octuple in `%rdx:%rax'
+   * 'cqo' -- sign-extend quad in '%rax' to octuple in '%rdx:%rax'
      (x86-64 only),
 
-are called `cbtw', `cwtl', `cwtd', `cltd', `cltq', and `cqto' in AT&T
-naming.  `as' accepts either naming for these instructions.
+are called 'cbtw', 'cwtl', 'cwtd', 'cltd', 'cltq', and 'cqto' in AT&T
+naming.  'as' accepts either naming for these instructions.
 
-   Far call/jump instructions are `lcall' and `ljmp' in AT&T syntax,
-but are `call far' and `jump far' in Intel convention.
+   Far call/jump instructions are 'lcall' and 'ljmp' in AT&T syntax, but
+are 'call far' and 'jump far' in Intel convention.
 
 9.15.4.2 AT&T Mnemonic versus Intel Mnemonic
 ............................................
 
-`as' supports assembly using Intel mnemonic.  `.intel_mnemonic' selects
-Intel mnemonic with Intel syntax, and `.att_mnemonic' switches back to
+'as' supports assembly using Intel mnemonic.  '.intel_mnemonic' selects
+Intel mnemonic with Intel syntax, and '.att_mnemonic' switches back to
 the usual AT&T mnemonic with AT&T syntax for compatibility with the
-output of `gcc'.  Several x87 instructions, `fadd', `fdiv', `fdivp',
-`fdivr', `fdivrp', `fmul', `fsub', `fsubp', `fsubr' and `fsubrp',  are
-implemented in AT&T System V/386 assembler with different mnemonics
-from those in Intel IA32 specification.  `gcc' generates those
-instructions with AT&T mnemonic.
+output of 'gcc'.  Several x87 instructions, 'fadd', 'fdiv', 'fdivp',
+'fdivr', 'fdivrp', 'fmul', 'fsub', 'fsubp', 'fsubr' and 'fsubrp', are
+implemented in AT&T System V/386 assembler with different mnemonics from
+those in Intel IA32 specification.  'gcc' generates those instructions
+with AT&T mnemonic.
 
 
 File: as.info,  Node: i386-Regs,  Next: i386-Prefixes,  Prev: i386-Mnemonics,  Up: i386-Dependent
@@ -11425,82 +11123,78 @@ File: as.info,  Node: i386-Regs,  Next: i386-Prefixes,  Prev: i386-Mnemonics,  U
 9.15.5 Register Naming
 ----------------------
 
-Register operands are always prefixed with `%'.  The 80386 registers
+Register operands are always prefixed with '%'.  The 80386 registers
 consist of
 
-   * the 8 32-bit registers `%eax' (the accumulator), `%ebx', `%ecx',
-     `%edx', `%edi', `%esi', `%ebp' (the frame pointer), and `%esp'
-     (the stack pointer).
+   * the 8 32-bit registers '%eax' (the accumulator), '%ebx', '%ecx',
+     '%edx', '%edi', '%esi', '%ebp' (the frame pointer), and '%esp' (the
+     stack pointer).
 
-   * the 8 16-bit low-ends of these: `%ax', `%bx', `%cx', `%dx', `%di',
-     `%si', `%bp', and `%sp'.
+   * the 8 16-bit low-ends of these: '%ax', '%bx', '%cx', '%dx', '%di',
+     '%si', '%bp', and '%sp'.
 
-   * the 8 8-bit registers: `%ah', `%al', `%bh', `%bl', `%ch', `%cl',
-     `%dh', and `%dl' (These are the high-bytes and low-bytes of `%ax',
-     `%bx', `%cx', and `%dx')
+   * the 8 8-bit registers: '%ah', '%al', '%bh', '%bl', '%ch', '%cl',
+     '%dh', and '%dl' (These are the high-bytes and low-bytes of '%ax',
+     '%bx', '%cx', and '%dx')
 
-   * the 6 section registers `%cs' (code section), `%ds' (data
-     section), `%ss' (stack section), `%es', `%fs', and `%gs'.
+   * the 6 section registers '%cs' (code section), '%ds' (data section),
+     '%ss' (stack section), '%es', '%fs', and '%gs'.
 
-   * the 5 processor control registers `%cr0', `%cr2', `%cr3', `%cr4',
-     and `%cr8'.
+   * the 5 processor control registers '%cr0', '%cr2', '%cr3', '%cr4',
+     and '%cr8'.
 
-   * the 6 debug registers `%db0', `%db1', `%db2', `%db3', `%db6', and
-     `%db7'.
+   * the 6 debug registers '%db0', '%db1', '%db2', '%db3', '%db6', and
+     '%db7'.
 
-   * the 2 test registers `%tr6' and `%tr7'.
+   * the 2 test registers '%tr6' and '%tr7'.
 
-   * the 8 floating point register stack `%st' or equivalently
-     `%st(0)', `%st(1)', `%st(2)', `%st(3)', `%st(4)', `%st(5)',
-     `%st(6)', and `%st(7)'.  These registers are overloaded by 8 MMX
-     registers `%mm0', `%mm1', `%mm2', `%mm3', `%mm4', `%mm5', `%mm6'
-     and `%mm7'.
+   * the 8 floating point register stack '%st' or equivalently '%st(0)',
+     '%st(1)', '%st(2)', '%st(3)', '%st(4)', '%st(5)', '%st(6)', and
+     '%st(7)'.  These registers are overloaded by 8 MMX registers
+     '%mm0', '%mm1', '%mm2', '%mm3', '%mm4', '%mm5', '%mm6' and '%mm7'.
 
-   * the 8 128-bit SSE registers registers `%xmm0', `%xmm1', `%xmm2',
-     `%xmm3', `%xmm4', `%xmm5', `%xmm6' and `%xmm7'.
+   * the 8 128-bit SSE registers registers '%xmm0', '%xmm1', '%xmm2',
+     '%xmm3', '%xmm4', '%xmm5', '%xmm6' and '%xmm7'.
 
    The AMD x86-64 architecture extends the register set by:
 
-   * enhancing the 8 32-bit registers to 64-bit: `%rax' (the
-     accumulator), `%rbx', `%rcx', `%rdx', `%rdi', `%rsi', `%rbp' (the
-     frame pointer), `%rsp' (the stack pointer)
+   * enhancing the 8 32-bit registers to 64-bit: '%rax' (the
+     accumulator), '%rbx', '%rcx', '%rdx', '%rdi', '%rsi', '%rbp' (the
+     frame pointer), '%rsp' (the stack pointer)
 
-   * the 8 extended registers `%r8'-`%r15'.
+   * the 8 extended registers '%r8'-'%r15'.
 
-   * the 8 32-bit low ends of the extended registers: `%r8d'-`%r15d'.
+   * the 8 32-bit low ends of the extended registers: '%r8d'-'%r15d'.
 
-   * the 8 16-bit low ends of the extended registers: `%r8w'-`%r15w'.
+   * the 8 16-bit low ends of the extended registers: '%r8w'-'%r15w'.
 
-   * the 8 8-bit low ends of the extended registers: `%r8b'-`%r15b'.
+   * the 8 8-bit low ends of the extended registers: '%r8b'-'%r15b'.
 
-   * the 4 8-bit registers: `%sil', `%dil', `%bpl', `%spl'.
+   * the 4 8-bit registers: '%sil', '%dil', '%bpl', '%spl'.
 
-   * the 8 debug registers: `%db8'-`%db15'.
+   * the 8 debug registers: '%db8'-'%db15'.
 
-   * the 8 128-bit SSE registers: `%xmm8'-`%xmm15'.
+   * the 8 128-bit SSE registers: '%xmm8'-'%xmm15'.
 
    With the AVX extensions more registers were made available:
 
-   * the 16 256-bit SSE `%ymm0'-`%ymm15' (only the first 8 available in
+   * the 16 256-bit SSE '%ymm0'-'%ymm15' (only the first 8 available in
      32-bit mode).  The bottom 128 bits are overlaid with the
-     `xmm0'-`xmm15' registers.
-
+     'xmm0'-'xmm15' registers.
 
    The AVX2 extensions made in 64-bit mode more registers available:
 
-   * the 16 128-bit registers `%xmm16'-`%xmm31' and the 16 256-bit
-     registers `%ymm16'-`%ymm31'.
-
+   * the 16 128-bit registers '%xmm16'-'%xmm31' and the 16 256-bit
+     registers '%ymm16'-'%ymm31'.
 
    The AVX512 extensions added the following registers:
 
-   * the 32 512-bit registers `%zmm0'-`%zmm31' (only the first 8
+   * the 32 512-bit registers '%zmm0'-'%zmm31' (only the first 8
      available in 32-bit mode).  The bottom 128 bits are overlaid with
-     the `%xmm0'-`%xmm31' registers and the first 256 bits are overlaid
-     with the `%ymm0'-`%ymm31' registers.
-
-   * the 8 mask registers `%k0'-`%k7'.
+     the '%xmm0'-'%xmm31' registers and the first 256 bits are overlaid
+     with the '%ymm0'-'%ymm31' registers.
 
+   * the 8 mask registers '%k0'-'%k7'.
 
 
 File: as.info,  Node: i386-Prefixes,  Next: i386-Memory,  Prev: i386-Regs,  Up: i386-Dependent
@@ -11514,51 +11208,50 @@ perform bus lock operations, and to change operand and address sizes.
 (Most instructions that normally operate on 32-bit operands will use
 16-bit operands if the instruction has an "operand size" prefix.)
 Instruction prefixes are best written on the same line as the
-instruction they act upon. For example, the `scas' (scan string)
+instruction they act upon.  For example, the 'scas' (scan string)
 instruction is repeated with:
 
              repne scas %es:(%edi),%al
 
    You may also place prefixes on the lines immediately preceding the
-instruction, but this circumvents checks that `as' does with prefixes,
+instruction, but this circumvents checks that 'as' does with prefixes,
 and will not work with all prefixes.
 
    Here is a list of instruction prefixes:
 
-   * Section override prefixes `cs', `ds', `ss', `es', `fs', `gs'.
+   * Section override prefixes 'cs', 'ds', 'ss', 'es', 'fs', 'gs'.
      These are automatically added by specifying using the
      SECTION:MEMORY-OPERAND form for memory references.
 
-   * Operand/Address size prefixes `data16' and `addr16' change 32-bit
-     operands/addresses into 16-bit operands/addresses, while `data32'
-     and `addr32' change 16-bit ones (in a `.code16' section) into
+   * Operand/Address size prefixes 'data16' and 'addr16' change 32-bit
+     operands/addresses into 16-bit operands/addresses, while 'data32'
+     and 'addr32' change 16-bit ones (in a '.code16' section) into
      32-bit operands/addresses.  These prefixes _must_ appear on the
-     same line of code as the instruction they modify. For example, in
-     a 16-bit `.code16' section, you might write:
+     same line of code as the instruction they modify.  For example, in
+     a 16-bit '.code16' section, you might write:
 
                   addr32 jmpl *(%ebx)
 
-   * The bus lock prefix `lock' inhibits interrupts during execution of
+   * The bus lock prefix 'lock' inhibits interrupts during execution of
      the instruction it precedes.  (This is only valid with certain
      instructions; see a 80386 manual for details).
 
-   * The wait for coprocessor prefix `wait' waits for the coprocessor to
+   * The wait for coprocessor prefix 'wait' waits for the coprocessor to
      complete the current instruction.  This should never be needed for
      the 80386/80387 combination.
 
-   * The `rep', `repe', and `repne' prefixes are added to string
-     instructions to make them repeat `%ecx' times (`%cx' times if the
-     current address size is 16-bits).  
-
-   * The `rex' family of prefixes is used by x86-64 to encode
-     extensions to i386 instruction set.  The `rex' prefix has four
-     bits -- an operand size overwrite (`64') used to change operand
-     size from 32-bit to 64-bit and X, Y and Z extensions bits used to
-     extend the register set.
-
-     You may write the `rex' prefixes directly. The `rex64xyz'
-     instruction emits `rex' prefix with all the bits set.  By omitting
-     the `64', `x', `y' or `z' you may write other prefixes as well.
+   * The 'rep', 'repe', and 'repne' prefixes are added to string
+     instructions to make them repeat '%ecx' times ('%cx' times if the
+     current address size is 16-bits).
+   * The 'rex' family of prefixes is used by x86-64 to encode extensions
+     to i386 instruction set.  The 'rex' prefix has four bits -- an
+     operand size overwrite ('64') used to change operand size from
+     32-bit to 64-bit and X, Y and Z extensions bits used to extend the
+     register set.
+
+     You may write the 'rex' prefixes directly.  The 'rex64xyz'
+     instruction emits 'rex' prefix with all the bits set.  By omitting
+     the '64', 'x', 'y' or 'z' you may write other prefixes as well.
      Normally, there is no need to write the prefixes explicitly, since
      gas will automatically generate them based on the instruction
      operands.
@@ -11578,56 +11271,56 @@ is translated into the AT&T syntax
      SECTION:DISP(BASE, INDEX, SCALE)
 
 where BASE and INDEX are the optional 32-bit base and index registers,
-DISP is the optional displacement, and SCALE, taking the values 1, 2,
-4, and 8, multiplies INDEX to calculate the address of the operand.  If
-no SCALE is specified, SCALE is taken to be 1.  SECTION specifies the
+DISP is the optional displacement, and SCALE, taking the values 1, 2, 4,
+and 8, multiplies INDEX to calculate the address of the operand.  If no
+SCALE is specified, SCALE is taken to be 1.  SECTION specifies the
 optional section register for the memory operand, and may override the
 default section register (see a 80386 manual for section register
-defaults). Note that section overrides in AT&T syntax _must_ be
-preceded by a `%'.  If you specify a section override which coincides
-with the default section register, `as' does _not_ output any section
+defaults).  Note that section overrides in AT&T syntax _must_ be
+preceded by a '%'.  If you specify a section override which coincides
+with the default section register, 'as' does _not_ output any section
 register override prefixes to assemble the given instruction.  Thus,
 section overrides can be specified to emphasize which section register
 is used for a given memory operand.
 
    Here are some examples of Intel and AT&T style memory references:
 
-AT&T: `-4(%ebp)', Intel:  `[ebp - 4]'
-     BASE is `%ebp'; DISP is `-4'. SECTION is missing, and the default
-     section is used (`%ss' for addressing with `%ebp' as the base
+AT&T: '-4(%ebp)', Intel: '[ebp - 4]'
+     BASE is '%ebp'; DISP is '-4'.  SECTION is missing, and the default
+     section is used ('%ss' for addressing with '%ebp' as the base
      register).  INDEX, SCALE are both missing.
 
-AT&T: `foo(,%eax,4)', Intel: `[foo + eax*4]'
-     INDEX is `%eax' (scaled by a SCALE 4); DISP is `foo'.  All other
-     fields are missing.  The section register here defaults to `%ds'.
+AT&T: 'foo(,%eax,4)', Intel: '[foo + eax*4]'
+     INDEX is '%eax' (scaled by a SCALE 4); DISP is 'foo'.  All other
+     fields are missing.  The section register here defaults to '%ds'.
 
-AT&T: `foo(,1)'; Intel `[foo]'
-     This uses the value pointed to by `foo' as a memory operand.  Note
-     that BASE and INDEX are both missing, but there is only _one_ `,'.
+AT&T: 'foo(,1)'; Intel '[foo]'
+     This uses the value pointed to by 'foo' as a memory operand.  Note
+     that BASE and INDEX are both missing, but there is only _one_ ','.
      This is a syntactic exception.
 
-AT&T: `%gs:foo'; Intel `gs:foo'
-     This selects the contents of the variable `foo' with section
-     register SECTION being `%gs'.
+AT&T: '%gs:foo'; Intel 'gs:foo'
+     This selects the contents of the variable 'foo' with section
+     register SECTION being '%gs'.
 
    Absolute (as opposed to PC relative) call and jump operands must be
-prefixed with `*'.  If no `*' is specified, `as' always chooses PC
+prefixed with '*'.  If no '*' is specified, 'as' always chooses PC
 relative addressing for jump/call labels.
 
    Any instruction that has a memory operand, but no register operand,
 _must_ specify its size (byte, word, long, or quadruple) with an
-instruction mnemonic suffix (`b', `w', `l' or `q', respectively).
+instruction mnemonic suffix ('b', 'w', 'l' or 'q', respectively).
 
    The x86-64 architecture adds an RIP (instruction pointer relative)
-addressing.  This addressing mode is specified by using `rip' as a base
-register.  Only constant offsets are valid. For example:
+addressing.  This addressing mode is specified by using 'rip' as a base
+register.  Only constant offsets are valid.  For example:
 
-AT&T: `1234(%rip)', Intel: `[rip + 1234]'
+AT&T: '1234(%rip)', Intel: '[rip + 1234]'
      Points to the address 1234 bytes past the end of the current
      instruction.
 
-AT&T: `symbol(%rip)', Intel: `[rip + symbol]'
-     Points to the `symbol' in RIP relative way, this is shorter than
+AT&T: 'symbol(%rip)', Intel: '[rip + symbol]'
+     Points to the 'symbol' in RIP relative way, this is shorter than
      the default absolute addressing.
 
    Other addressing modes remain unchanged in x86-64 architecture,
@@ -11643,16 +11336,16 @@ Jump instructions are always optimized to use the smallest possible
 displacements.  This is accomplished by using byte (8-bit) displacement
 jumps whenever the target is sufficiently close.  If a byte displacement
 is insufficient a long displacement is used.  We do not support word
-(16-bit) displacement jumps in 32-bit mode (i.e. prefixing the jump
-instruction with the `data16' instruction prefix), since the 80386
-insists upon masking `%eip' to 16 bits after the word displacement is
-added. (See also *note i386-Arch::)
+(16-bit) displacement jumps in 32-bit mode (i.e.  prefixing the jump
+instruction with the 'data16' instruction prefix), since the 80386
+insists upon masking '%eip' to 16 bits after the word displacement is
+added.  (See also *note i386-Arch::)
 
-   Note that the `jcxz', `jecxz', `loop', `loopz', `loope', `loopnz'
-and `loopne' instructions only come in byte displacements, so that if
-you use these instructions (`gcc' does not use them) you may get an
-error message (and incorrect code).  The AT&T 80386 assembler tries to
-get around this problem by expanding `jcxz foo' to
+   Note that the 'jcxz', 'jecxz', 'loop', 'loopz', 'loope', 'loopnz' and
+'loopne' instructions only come in byte displacements, so that if you
+use these instructions ('gcc' does not use them) you may get an error
+message (and incorrect code).  The AT&T 80386 assembler tries to get
+around this problem by expanding 'jcxz foo' to
 
               jcxz cx_zero
               jmp cx_nonzero
@@ -11668,31 +11361,31 @@ File: as.info,  Node: i386-Float,  Next: i386-SIMD,  Prev: i386-Jumps,  Up: i386
 All 80387 floating point types except packed BCD are supported.  (BCD
 support may be added without much difficulty).  These data types are
 16-, 32-, and 64- bit integers, and single (32-bit), double (64-bit),
-and extended (80-bit) precision floating point.  Each supported type
-has an instruction mnemonic suffix and a constructor associated with
-it.  Instruction mnemonic suffixes specify the operand's data type.
+and extended (80-bit) precision floating point.  Each supported type has
+an instruction mnemonic suffix and a constructor associated with it.
+Instruction mnemonic suffixes specify the operand's data type.
 Constructors build these data types into memory.
 
-   * Floating point constructors are `.float' or `.single', `.double',
-     and `.tfloat' for 32-, 64-, and 80-bit formats.  These correspond
-     to instruction mnemonic suffixes `s', `l', and `t'. `t' stands for
+   * Floating point constructors are '.float' or '.single', '.double',
+     and '.tfloat' for 32-, 64-, and 80-bit formats.  These correspond
+     to instruction mnemonic suffixes 's', 'l', and 't'.  't' stands for
      80-bit (ten byte) real.  The 80387 only supports this format via
-     the `fldt' (load 80-bit real to stack top) and `fstpt' (store
+     the 'fldt' (load 80-bit real to stack top) and 'fstpt' (store
      80-bit real and pop stack) instructions.
 
-   * Integer constructors are `.word', `.long' or `.int', and `.quad'
+   * Integer constructors are '.word', '.long' or '.int', and '.quad'
      for the 16-, 32-, and 64-bit integer formats.  The corresponding
-     instruction mnemonic suffixes are `s' (single), `l' (long), and
-     `q' (quad).  As with the 80-bit real format, the 64-bit `q' format
-     is only present in the `fildq' (load quad integer to stack top)
-     and `fistpq' (store quad integer and pop stack) instructions.
+     instruction mnemonic suffixes are 's' (single), 'l' (long), and 'q'
+     (quad).  As with the 80-bit real format, the 64-bit 'q' format is
+     only present in the 'fildq' (load quad integer to stack top) and
+     'fistpq' (store quad integer and pop stack) instructions.
 
    Register to register operations should not use instruction mnemonic
-suffixes.  `fstl %st, %st(1)' will give a warning, and be assembled as
-if you wrote `fst %st, %st(1)', since all register to register
-operations use 80-bit floating point operands. (Contrast this with
-`fstl %st, mem', which converts `%st' from 80-bit to 64-bit floating
-point format, then stores the result in the 4 byte location `mem')
+suffixes.  'fstl %st, %st(1)' will give a warning, and be assembled as
+if you wrote 'fst %st, %st(1)', since all register to register
+operations use 80-bit floating point operands.  (Contrast this with
+'fstl %st, mem', which converts '%st' from 80-bit to 64-bit floating
+point format, then stores the result in the 4 byte location 'mem')
 
 
 File: as.info,  Node: i386-SIMD,  Next: i386-LWP,  Prev: i386-Float,  Up: i386-Dependent
@@ -11700,18 +11393,18 @@ File: as.info,  Node: i386-SIMD,  Next: i386-LWP,  Prev: i386-Float,  Up: i386-D
 9.15.10 Intel's MMX and AMD's 3DNow! SIMD Operations
 ----------------------------------------------------
 
-`as' supports Intel's MMX instruction set (SIMD instructions for
-integer data), available on Intel's Pentium MMX processors and Pentium
-II processors, AMD's K6 and K6-2 processors, Cyrix' M2 processor, and
-probably others.  It also supports AMD's 3DNow!  instruction set (SIMD
+'as' supports Intel's MMX instruction set (SIMD instructions for integer
+data), available on Intel's Pentium MMX processors and Pentium II
+processors, AMD's K6 and K6-2 processors, Cyrix' M2 processor, and
+probably others.  It also supports AMD's 3DNow! instruction set (SIMD
 instructions for 32-bit floating point data) available on AMD's K6-2
 processor and possibly others in the future.
 
-   Currently, `as' does not support Intel's floating point SIMD, Katmai
+   Currently, 'as' does not support Intel's floating point SIMD, Katmai
 (KNI).
 
    The eight 64-bit MMX operands, also used by 3DNow!, are called
-`%mm0', `%mm1', ... `%mm7'.  They contain eight 8-bit integers, four
+'%mm0', '%mm1', ...  '%mm7'.  They contain eight 8-bit integers, four
 16-bit integers, two 32-bit integers, one 64-bit integer, or two 32-bit
 floating point values.  The MMX registers cannot be used at the same
 time as the floating point stack.
@@ -11725,7 +11418,7 @@ File: as.info,  Node: i386-LWP,  Next: i386-BMI,  Prev: i386-SIMD,  Up: i386-Dep
 9.15.11 AMD's Lightweight Profiling Instructions
 ------------------------------------------------
 
-`as' supports AMD's Lightweight Profiling (LWP) instruction set,
+'as' supports AMD's Lightweight Profiling (LWP) instruction set,
 available on AMD's Family 15h (Orochi) processors.
 
    LWP enables applications to collect and manage performance data, and
@@ -11734,7 +11427,7 @@ requires no context switches.  LWP runs in the context of a thread and
 so several counters can be used independently across multiple threads.
 LWP can be used in both 64-bit and legacy 32-bit modes.
 
-   For detailed information on the LWP instruction set, see the `AMD
+   For detailed information on the LWP instruction set, see the 'AMD
 Lightweight Profiling Specification' available at Lightweight Profiling
 Specification (http://developer.amd.com/cpu/LWP).
 
@@ -11744,7 +11437,7 @@ File: as.info,  Node: i386-BMI,  Next: i386-TBM,  Prev: i386-LWP,  Up: i386-Depe
 9.15.12 Bit Manipulation Instructions
 -------------------------------------
 
-`as' supports the Bit Manipulation (BMI) instruction set.
+'as' supports the Bit Manipulation (BMI) instruction set.
 
    BMI instructions provide several instructions implementing individual
 bit manipulation operations such as isolation, masking, setting, or
@@ -11756,7 +11449,7 @@ File: as.info,  Node: i386-TBM,  Next: i386-16bit,  Prev: i386-BMI,  Up: i386-De
 9.15.13 AMD's Trailing Bit Manipulation Instructions
 ----------------------------------------------------
 
-`as' supports AMD's Trailing Bit Manipulation (TBM) instruction set,
+'as' supports AMD's Trailing Bit Manipulation (TBM) instruction set,
 available on AMD's BDVER2 processors (Trinity and Viperfish).
 
    TBM instructions provide instructions implementing individual bit
@@ -11769,39 +11462,39 @@ File: as.info,  Node: i386-16bit,  Next: i386-Arch,  Prev: i386-TBM,  Up: i386-D
 9.15.14 Writing 16-bit Code
 ---------------------------
 
-While `as' normally writes only "pure" 32-bit i386 code or 64-bit
-x86-64 code depending on the default configuration, it also supports
-writing code to run in real mode or in 16-bit protected mode code
-segments.  To do this, put a `.code16' or `.code16gcc' directive before
-the assembly language instructions to be run in 16-bit mode.  You can
-switch `as' to writing 32-bit code with the `.code32' directive or
-64-bit code with the `.code64' directive.
-
-   `.code16gcc' provides experimental support for generating 16-bit
-code from gcc, and differs from `.code16' in that `call', `ret',
-`enter', `leave', `push', `pop', `pusha', `popa', `pushf', and `popf'
+While 'as' normally writes only "pure" 32-bit i386 code or 64-bit x86-64
+code depending on the default configuration, it also supports writing
+code to run in real mode or in 16-bit protected mode code segments.  To
+do this, put a '.code16' or '.code16gcc' directive before the assembly
+language instructions to be run in 16-bit mode.  You can switch 'as' to
+writing 32-bit code with the '.code32' directive or 64-bit code with the
+'.code64' directive.
+
+   '.code16gcc' provides experimental support for generating 16-bit code
+from gcc, and differs from '.code16' in that 'call', 'ret', 'enter',
+'leave', 'push', 'pop', 'pusha', 'popa', 'pushf', and 'popf'
 instructions default to 32-bit size.  This is so that the stack pointer
 is manipulated in the same way over function calls, allowing access to
 function parameters at the same stack offsets as in 32-bit mode.
-`.code16gcc' also automatically adds address size prefixes where
+'.code16gcc' also automatically adds address size prefixes where
 necessary to use the 32-bit addressing modes that gcc generates.
 
-   The code which `as' generates in 16-bit mode will not necessarily
-run on a 16-bit pre-80386 processor.  To write code that runs on such a
+   The code which 'as' generates in 16-bit mode will not necessarily run
+on a 16-bit pre-80386 processor.  To write code that runs on such a
 processor, you must refrain from using _any_ 32-bit constructs which
-require `as' to output address or operand size prefixes.
+require 'as' to output address or operand size prefixes.
 
    Note that writing 16-bit code instructions by explicitly specifying a
 prefix or an instruction mnemonic suffix within a 32-bit code section
 generates different machine instructions than those generated for a
 16-bit code segment.  In a 32-bit code section, the following code
-generates the machine opcode bytes `66 6a 04', which pushes the value
-`4' onto the stack, decrementing `%esp' by 2.
+generates the machine opcode bytes '66 6a 04', which pushes the value
+'4' onto the stack, decrementing '%esp' by 2.
 
              pushw $4
 
    The same code in a 16-bit code section would generate the machine
-opcode bytes `6a 04' (i.e., without the operand size prefix), which is
+opcode bytes '6a 04' (i.e., without the operand size prefix), which is
 correct since the processor default operand size is assumed to be 16
 bits in a 16-bit code section.
 
@@ -11811,59 +11504,60 @@ File: as.info,  Node: i386-Arch,  Next: i386-Bugs,  Prev: i386-16bit,  Up: i386-
 9.15.15 Specifying CPU Architecture
 -----------------------------------
 
-`as' may be told to assemble for a particular CPU (sub-)architecture
-with the `.arch CPU_TYPE' directive.  This directive enables a warning
+'as' may be told to assemble for a particular CPU (sub-)architecture
+with the '.arch CPU_TYPE' directive.  This directive enables a warning
 when gas detects an instruction that is not supported on the CPU
 specified.  The choices for CPU_TYPE are:
 
-`i8086'        `i186'         `i286'         `i386'
-`i486'         `i586'         `i686'         `pentium'
-`pentiumpro'   `pentiumii'    `pentiumiii'   `pentium4'
-`prescott'     `nocona'       `core'         `core2'
-`corei7'       `l1om'         `k1om' `iamcu' 
-`k6'           `k6_2'         `athlon'       `k8'
-`amdfam10'     `bdver1'       `bdver2'       `bdver3'
-`bdver4'       `znver1'       `btver1'       `btver2'
-`generic32'    `generic64'                   
-`.mmx'         `.sse'         `.sse2'        `.sse3'
-`.ssse3'       `.sse4.1'      `.sse4.2'      `.sse4'
-`.avx'         `.vmx'         `.smx'         `.ept'
-`.clflush'     `.movbe'       `.xsave'       `.xsaveopt'
-`.aes'         `.pclmul'      `.fma'         `.fsgsbase'
-`.rdrnd'       `.f16c'        `.avx2'        `.bmi2'
-`.lzcnt'       `.invpcid'     `.vmfunc'      `.hle'
-`.rtm'         `.adx'         `.rdseed'      `.prfchw'
-`.smap'        `.mpx'         `.sha'         `.prefetchwt1'
-`.clflushopt'  `.xsavec'      `.xsaves'      `.se1'
-`.avx512f'     `.avx512cd'    `.avx512er'    `.avx512pf'
-`.avx512vl'    `.avx512bw'    `.avx512dq'    `.avx512ifma'
-`.avx512vbmi'  `.avx512_4fmaps'`.avx512_4vnniw'
-`.avx512_vpopcntdq'`.clwb'        `.rdpid'       `.ptwrite'
-`.3dnow'       `.3dnowa'      `.sse4a'       `.sse5'
-`.syscall'     `.rdtscp'      `.svme'        `.abm'
-`.lwp'         `.fma4'        `.xop'         `.cx16'
-`.padlock'     `.clzero'      `.mwaitx'      
-
-   Apart from the warning, there are only two other effects on `as'
-operation;  Firstly, if you specify a CPU other than `i486', then shift
-by one instructions such as `sarl $1, %eax' will automatically use a
-two byte opcode sequence.  The larger three byte opcode sequence is
-used on the 486 (and when no architecture is specified) because it
-executes faster on the 486.  Note that you can explicitly request the
-two byte opcode by writing `sarl %eax'.  Secondly, if you specify
-`i8086', `i186', or `i286', _and_ `.code16' or `.code16gcc' then byte
-offset conditional jumps will be promoted when necessary to a two
-instruction sequence consisting of a conditional jump of the opposite
-sense around an unconditional jump to the target.
-
-   Following the CPU architecture (but not a sub-architecture, which
-are those starting with a dot), you may specify `jumps' or `nojumps' to
-control automatic promotion of conditional jumps. `jumps' is the
-default, and enables jump promotion;  All external jumps will be of the
+'i8086'        'i186'         'i286'         'i386'
+'i486'         'i586'         'i686'         'pentium'
+'pentiumpro'   'pentiumii'    'pentiumiii'   'pentium4'
+'prescott'     'nocona'       'core'         'core2'
+'corei7'       'l1om'         'k1om'
+                              'iamcu'
+'k6'           'k6_2'         'athlon'       'k8'
+'amdfam10'     'bdver1'       'bdver2'       'bdver3'
+'bdver4'       'znver1'       'btver1'       'btver2'
+'generic32'    'generic64'
+'.mmx'         '.sse'         '.sse2'        '.sse3'
+'.ssse3'       '.sse4.1'      '.sse4.2'      '.sse4'
+'.avx'         '.vmx'         '.smx'         '.ept'
+'.clflush'     '.movbe'       '.xsave'       '.xsaveopt'
+'.aes'         '.pclmul'      '.fma'         '.fsgsbase'
+'.rdrnd'       '.f16c'        '.avx2'        '.bmi2'
+'.lzcnt'       '.invpcid'     '.vmfunc'      '.hle'
+'.rtm'         '.adx'         '.rdseed'      '.prfchw'
+'.smap'        '.mpx'         '.sha'         '.prefetchwt1'
+'.clflushopt'  '.xsavec'      '.xsaves'      '.se1'
+'.avx512f'     '.avx512cd'    '.avx512er'    '.avx512pf'
+'.avx512vl'    '.avx512bw'    '.avx512dq'    '.avx512ifma'
+'.avx512vbmi'  '.avx512_4fmaps''.avx512_4vnniw'
+'.avx512_vpopcntdq''.clwb'    '.rdpid'       '.ptwrite'
+'.3dnow'       '.3dnowa'      '.sse4a'       '.sse5'
+'.syscall'     '.rdtscp'      '.svme'        '.abm'
+'.lwp'         '.fma4'        '.xop'         '.cx16'
+'.padlock'     '.clzero'      '.mwaitx'
+
+   Apart from the warning, there are only two other effects on 'as'
+operation; Firstly, if you specify a CPU other than 'i486', then shift
+by one instructions such as 'sarl $1, %eax' will automatically use a two
+byte opcode sequence.  The larger three byte opcode sequence is used on
+the 486 (and when no architecture is specified) because it executes
+faster on the 486.  Note that you can explicitly request the two byte
+opcode by writing 'sarl %eax'.  Secondly, if you specify 'i8086',
+'i186', or 'i286', _and_ '.code16' or '.code16gcc' then byte offset
+conditional jumps will be promoted when necessary to a two instruction
+sequence consisting of a conditional jump of the opposite sense around
+an unconditional jump to the target.
+
+   Following the CPU architecture (but not a sub-architecture, which are
+those starting with a dot), you may specify 'jumps' or 'nojumps' to
+control automatic promotion of conditional jumps.  'jumps' is the
+default, and enables jump promotion; All external jumps will be of the
 long variety, and file-local jumps will be promoted as necessary.
-(*note i386-Jumps::)  `nojumps' leaves external conditional jumps as
-byte offset jumps, and warns about file-local conditional jumps that
-`as' promotes.  Unconditional jumps are treated as for `jumps'.
+(*note i386-Jumps::) 'nojumps' leaves external conditional jumps as byte
+offset jumps, and warns about file-local conditional jumps that 'as'
+promotes.  Unconditional jumps are treated as for 'jumps'.
 
    For example
 
@@ -11884,10 +11578,10 @@ with it.
    For example
 
              fsub %st,%st(3)
-   results in `%st(3)' being updated to `%st - %st(3)' rather than the
-expected `%st(3) - %st'.  This happens with all the non-commutative
+results in '%st(3)' being updated to '%st - %st(3)' rather than the
+expected '%st(3) - %st'.  This happens with all the non-commutative
 arithmetic floating point operations with two register operands where
-the source register is `%st' and the destination register is `%st(i)'.
+the source register is '%st' and the destination register is '%st(i)'.
 
 
 File: as.info,  Node: i386-Notes,  Prev: i386-Bugs,  Up: i386-Dependent
@@ -11895,19 +11589,18 @@ File: as.info,  Node: i386-Notes,  Prev: i386-Bugs,  Up: i386-Dependent
 9.15.17 Notes
 -------------
 
-There is some trickery concerning the `mul' and `imul' instructions
-that deserves mention.  The 16-, 32-, 64- and 128-bit expanding
-multiplies (base opcode `0xf6'; extension 4 for `mul' and 5 for `imul')
-can be output only in the one operand form.  Thus, `imul %ebx, %eax'
-does _not_ select the expanding multiply; the expanding multiply would
-clobber the `%edx' register, and this would confuse `gcc' output.  Use
-`imul %ebx' to get the 64-bit product in `%edx:%eax'.
+There is some trickery concerning the 'mul' and 'imul' instructions that
+deserves mention.  The 16-, 32-, 64- and 128-bit expanding multiplies
+(base opcode '0xf6'; extension 4 for 'mul' and 5 for 'imul') can be
+output only in the one operand form.  Thus, 'imul %ebx, %eax' does _not_
+select the expanding multiply; the expanding multiply would clobber the
+'%edx' register, and this would confuse 'gcc' output.  Use 'imul %ebx'
+to get the 64-bit product in '%edx:%eax'.
 
-   We have added a two operand form of `imul' when the first operand is
-an immediate mode expression and the second operand is a register.
-This is just a shorthand, so that, multiplying `%eax' by 69, for
-example, can be done with `imul $69, %eax' rather than `imul $69, %eax,
-%eax'.
+   We have added a two operand form of 'imul' when the first operand is
+an immediate mode expression and the second operand is a register.  This
+is just a shorthand, so that, multiplying '%eax' by 69, for example, can
+be done with 'imul $69, %eax' rather than 'imul $69, %eax, %eax'.
 
 
 File: as.info,  Node: i860-Dependent,  Next: i960-Dependent,  Prev: i386-Dependent,  Up: Machine Dependencies
@@ -11930,19 +11623,19 @@ File: as.info,  Node: Notes-i860,  Next: Options-i860,  Up: i860-Dependent
 -----------------
 
 This is a fairly complete i860 assembler which is compatible with the
-UNIX System V/860 Release 4 assembler. However, it does not currently
-support SVR4 PIC (i.e., `@GOT, @GOTOFF, @PLT').
+UNIX System V/860 Release 4 assembler.  However, it does not currently
+support SVR4 PIC (i.e., '@GOT, @GOTOFF, @PLT').
 
    Like the SVR4/860 assembler, the output object format is ELF32.
-Currently, this is the only supported object format. If there is
+Currently, this is the only supported object format.  If there is
 sufficient interest, other formats such as COFF may be implemented.
 
    Both the Intel and AT&T/SVR4 syntaxes are supported, with the latter
 being the default.  One difference is that AT&T syntax requires the '%'
 prefix on register names while Intel syntax does not.  Another
 difference is in the specification of relocatable expressions.  The
-Intel syntax is `ha%expression' whereas the SVR4 syntax is
-`[expression]@ha' (and similarly for the "l" and "h" selectors).
+Intel syntax is 'ha%expression' whereas the SVR4 syntax is
+'[expression]@ha' (and similarly for the "l" and "h" selectors).
 
 
 File: as.info,  Node: Options-i860,  Next: Directives-i860,  Prev: Notes-i860,  Up: i860-Dependent
@@ -11953,41 +11646,35 @@ File: as.info,  Node: Options-i860,  Next: Directives-i860,  Prev: Notes-i860,
 9.16.2.1 SVR4 compatibility options
 ...................................
 
-`-V'
+'-V'
      Print assembler version.
-
-`-Qy'
+'-Qy'
      Ignored.
-
-`-Qn'
+'-Qn'
      Ignored.
 
 9.16.2.2 Other options
 ......................
 
-`-EL'
+'-EL'
      Select little endian output (this is the default).
-
-`-EB'
-     Select big endian output. Note that the i860 always reads
+'-EB'
+     Select big endian output.  Note that the i860 always reads
      instructions as little endian data, so this option only effects
      data and not instructions.
-
-`-mwarn-expand'
+'-mwarn-expand'
      Emit a warning message if any pseudo-instruction expansions
-     occurred.  For example, a `or' instruction with an immediate
-     larger than 16-bits will be expanded into two instructions. This
-     is a very undesirable feature to rely on, so this flag can help
-     detect any code where it happens. One use of it, for instance, has
-     been to find and eliminate any place where `gcc' may emit these
+     occurred.  For example, a 'or' instruction with an immediate larger
+     than 16-bits will be expanded into two instructions.  This is a
+     very undesirable feature to rely on, so this flag can help detect
+     any code where it happens.  One use of it, for instance, has been
+     to find and eliminate any place where 'gcc' may emit these
      pseudo-instructions.
-
-`-mxp'
+'-mxp'
      Enable support for the i860XP instructions and control registers.
      By default, this option is disabled so that only the base
      instruction set (i.e., i860XR) is supported.
-
-`-mintel-syntax'
+'-mintel-syntax'
      The i860 assembler defaults to AT&T/SVR4 syntax.  This option
      enables the Intel syntax.
 
@@ -11997,27 +11684,27 @@ File: as.info,  Node: Directives-i860,  Next: Opcodes for i860,  Prev: Options-i
 9.16.3 i860 Machine Directives
 ------------------------------
 
-`.dual'
-     Enter dual instruction mode. While this directive is supported, the
-     preferred way to use dual instruction mode is to explicitly code
-     the dual bit with the `d.' prefix.
+'.dual'
+     Enter dual instruction mode.  While this directive is supported,
+     the preferred way to use dual instruction mode is to explicitly
+     code the dual bit with the 'd.' prefix.
 
-`.enddual'
-     Exit dual instruction mode. While this directive is supported, the
+'.enddual'
+     Exit dual instruction mode.  While this directive is supported, the
      preferred way to use dual instruction mode is to explicitly code
-     the dual bit with the `d.' prefix.
+     the dual bit with the 'd.' prefix.
 
-`.atmp'
+'.atmp'
      Change the temporary register used when expanding pseudo
-     operations. The default register is `r31'.
+     operations.  The default register is 'r31'.
 
-   The `.dual', `.enddual', and `.atmp' directives are available only
-in the Intel syntax mode.
+   The '.dual', '.enddual', and '.atmp' directives are available only in
+the Intel syntax mode.
 
-   Both syntaxes allow for the standard `.align' directive.  However,
+   Both syntaxes allow for the standard '.align' directive.  However,
 the Intel syntax additionally allows keywords for the alignment
-parameter: "`.align type'", where `type' is one of `.short', `.long',
-`.quad', `.single', `.double' representing alignments of 2, 4, 16, 4,
+parameter: "'.align type'", where 'type' is one of '.short', '.long',
+'.quad', '.single', '.double' representing alignments of 2, 4, 16, 4,
 and 8, respectively.
 
 
@@ -12027,53 +11714,50 @@ File: as.info,  Node: Opcodes for i860,  Next: Syntax of i860,  Prev: Directives
 -------------------
 
 All of the Intel i860XR and i860XP machine instructions are supported.
-Please see either _i860 Microprocessor Programmer's Reference Manual_
-or _i860 Microprocessor Architecture_ for more information.
+Please see either _i860 Microprocessor Programmer's Reference Manual_ or
+_i860 Microprocessor Architecture_ for more information.
 
 9.16.4.1 Other instruction support (pseudo-instructions)
 ........................................................
 
 For compatibility with some other i860 assemblers, a number of
-pseudo-instructions are supported. While these are supported, they are
+pseudo-instructions are supported.  While these are supported, they are
 a very undesirable feature that should be avoided - in particular, when
-they result in an expansion to multiple actual i860 instructions. Below
+they result in an expansion to multiple actual i860 instructions.  Below
 are the pseudo-instructions that result in expansions.
    * Load large immediate into general register:
 
-     The pseudo-instruction `mov imm,%rn' (where the immediate does not
+     The pseudo-instruction 'mov imm,%rn' (where the immediate does not
      fit within a signed 16-bit field) will be expanded into:
           orh large_imm@h,%r0,%rn
           or large_imm@l,%rn,%rn
-
    * Load/store with relocatable address expression:
 
-     For example, the pseudo-instruction `ld.b addr_exp(%rx),%rn' will
+     For example, the pseudo-instruction 'ld.b addr_exp(%rx),%rn' will
      be expanded into:
           orh addr_exp@ha,%rx,%r31
           ld.l addr_exp@l(%r31),%rn
 
-     The analogous expansions apply to `ld.x, st.x, fld.x, pfld.x,
-     fst.x', and `pst.x' as well.
-
+     The analogous expansions apply to 'ld.x, st.x, fld.x, pfld.x,
+     fst.x', and 'pst.x' as well.
    * Signed large immediate with add/subtract:
 
-     If any of the arithmetic operations `adds, addu, subs, subu' are
-     used with an immediate larger than 16-bits (signed), then they
-     will be expanded.  For instance, the pseudo-instruction `adds
+     If any of the arithmetic operations 'adds, addu, subs, subu' are
+     used with an immediate larger than 16-bits (signed), then they will
+     be expanded.  For instance, the pseudo-instruction 'adds
      large_imm,%rx,%rn' expands to:
           orh large_imm@h,%r0,%r31
           or large_imm@l,%r31,%r31
           adds %r31,%rx,%rn
-
    * Unsigned large immediate with logical operations:
 
-     Logical operations (`or, andnot, or, xor') also result in
-     expansions.  The pseudo-instruction `or large_imm,%rx,%rn' results
+     Logical operations ('or, andnot, or, xor') also result in
+     expansions.  The pseudo-instruction 'or large_imm,%rx,%rn' results
      in:
           orh large_imm@h,%rx,%r31
           or large_imm@l,%r31,%rn
 
-     Similarly for the others, except for `and' which expands to:
+     Similarly for the others, except for 'and' which expands to:
           andnot (-1 - large_imm)@h,%rx,%r31
           andnot (-1 - large_imm)@l,%r31,%rn
 
@@ -12093,15 +11777,15 @@ File: as.info,  Node: i860-Chars,  Up: Syntax of i860
 9.16.5.1 Special Characters
 ...........................
 
-The presence of a `#' appearing anywhere on a line indicates the start
+The presence of a '#' appearing anywhere on a line indicates the start
 of a comment that extends to the end of that line.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line can also be a
-logical line number directive (*note Comments::) or a preprocessor
-control command (*note Preprocessing::).
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line can also be a logical
+line number directive (*note Comments::) or a preprocessor control
+command (*note Preprocessing::).
 
-   The `;' character can be used to separate statements on the same
+   The ';' character can be used to separate statements on the same
 line.
 
 
@@ -12124,29 +11808,29 @@ File: as.info,  Node: Options-i960,  Next: Floating Point-i960,  Up: i960-Depend
 9.17.1 i960 Command-line Options
 --------------------------------
 
-`-ACA | -ACA_A | -ACB | -ACC | -AKA | -AKB | -AKC | -AMC'
+'-ACA | -ACA_A | -ACB | -ACC | -AKA | -AKB | -AKC | -AMC'
      Select the 80960 architecture.  Instructions or features not
      supported by the selected architecture cause fatal errors.
 
-     `-ACA' is equivalent to `-ACA_A'; `-AKC' is equivalent to `-AMC'.
+     '-ACA' is equivalent to '-ACA_A'; '-AKC' is equivalent to '-AMC'.
      Synonyms are provided for compatibility with other tools.
 
-     If you do not specify any of these options, `as' generates code
-     for any instruction or feature that is supported by _some_ version
-     of the 960 (even if this means mixing architectures!).  In
-     principle, `as' attempts to deduce the minimal sufficient
-     processor type if none is specified; depending on the object code
-     format, the processor type may be recorded in the object file.  If
-     it is critical that the `as' output match a specific architecture,
+     If you do not specify any of these options, 'as' generates code for
+     any instruction or feature that is supported by _some_ version of
+     the 960 (even if this means mixing architectures!).  In principle,
+     'as' attempts to deduce the minimal sufficient processor type if
+     none is specified; depending on the object code format, the
+     processor type may be recorded in the object file.  If it is
+     critical that the 'as' output match a specific architecture,
      specify that architecture explicitly.
 
-`-b'
+'-b'
      Add code to collect information about conditional branches taken,
      for later optimization using branch prediction bits.  (The
      conditional branch instructions have branch prediction bits in the
      CA, CB, and CC architectures.)  If BR represents a conditional
      branch instruction, the following represents the code generated by
-     the assembler when `-b' is specified:
+     the assembler when '-b' is specified:
 
                   call    INCREMENT ROUTINE
                   .word   0       # pre-counter
@@ -12158,9 +11842,9 @@ File: as.info,  Node: Options-i960,  Next: Floating Point-i960,  Up: i960-Depend
      branch was _not_ taken; the difference between the two counters is
      the number of times the branch _was_ taken.
 
-     A table of every such `Label' is also generated, so that the
-     external postprocessor `gbr960' (supplied by Intel) can locate all
-     the counters.  This table is always labeled `__BRANCH_TABLE__';
+     A table of every such 'Label' is also generated, so that the
+     external postprocessor 'gbr960' (supplied by Intel) can locate all
+     the counters.  This table is always labeled '__BRANCH_TABLE__';
      this is a local symbol to permit collecting statistics for many
      separate object files.  The table is word aligned, and begins with
      a two-word header.  The first word, initialized to 0, is used in
@@ -12178,24 +11862,24 @@ File: as.info,  Node: Options-i960,  Next: Floating Point-i960,  Up: i960-Depend
                          __BRANCH_TABLE__ layout
 
      The first word of the header is used to locate multiple branch
-     tables, since each object file may contain one. Normally the links
+     tables, since each object file may contain one.  Normally the links
      are maintained with a call to an initialization routine, placed at
      the beginning of each function in the file.  The GNU C compiler
-     generates these calls automatically when you give it a `-b' option.
-     For further details, see the documentation of `gbr960'.
+     generates these calls automatically when you give it a '-b' option.
+     For further details, see the documentation of 'gbr960'.
 
-`-no-relax'
+'-no-relax'
      Normally, Compare-and-Branch instructions with targets that require
      displacements greater than 13 bits (or that have external targets)
-     are replaced with the corresponding compare (or `chkbit') and
-     branch instructions.  You can use the `-no-relax' option to
-     specify that `as' should generate errors instead, if the target
+     are replaced with the corresponding compare (or 'chkbit') and
+     branch instructions.  You can use the '-no-relax' option to specify
+     that 'as' should generate errors instead, if the target
      displacement is larger than 13 bits.
 
      This option does not affect the Compare-and-Jump instructions; the
      code emitted for them is _always_ adjusted when necessary
      (depending on displacement size), regardless of whether you use
-     `-no-relax'.
+     '-no-relax'.
 
 
 File: as.info,  Node: Floating Point-i960,  Next: Directives-i960,  Prev: Options-i960,  Up: i960-Dependent
@@ -12203,8 +11887,8 @@ File: as.info,  Node: Floating Point-i960,  Next: Directives-i960,  Prev: Option
 9.17.2 Floating Point
 ---------------------
 
-`as' generates IEEE floating-point numbers for the directives `.float',
-`.double', `.extended', and `.single'.
+'as' generates IEEE floating-point numbers for the directives '.float',
+'.double', '.extended', and '.single'.
 
 
 File: as.info,  Node: Directives-i960,  Next: Opcodes for i960,  Prev: Floating Point-i960,  Up: i960-Dependent
@@ -12212,42 +11896,42 @@ File: as.info,  Node: Directives-i960,  Next: Opcodes for i960,  Prev: Floating
 9.17.3 i960 Machine Directives
 ------------------------------
 
-`.bss SYMBOL, LENGTH, ALIGN'
-     Reserve LENGTH bytes in the bss section for a local SYMBOL,
-     aligned to the power of two specified by ALIGN.  LENGTH and ALIGN
-     must be positive absolute expressions.  This directive differs
-     from `.lcomm' only in that it permits you to specify an alignment.
-     *Note `.lcomm': Lcomm.
+'.bss SYMBOL, LENGTH, ALIGN'
+     Reserve LENGTH bytes in the bss section for a local SYMBOL, aligned
+     to the power of two specified by ALIGN.  LENGTH and ALIGN must be
+     positive absolute expressions.  This directive differs from
+     '.lcomm' only in that it permits you to specify an alignment.
+     *Note '.lcomm': Lcomm.
 
-`.extended FLONUMS'
-     `.extended' expects zero or more flonums, separated by commas; for
-     each flonum, `.extended' emits an IEEE extended-format (80-bit)
+'.extended FLONUMS'
+     '.extended' expects zero or more flonums, separated by commas; for
+     each flonum, '.extended' emits an IEEE extended-format (80-bit)
      floating-point number.
 
-`.leafproc CALL-LAB, BAL-LAB'
-     You can use the `.leafproc' directive in conjunction with the
-     optimized `callj' instruction to enable faster calls of leaf
+'.leafproc CALL-LAB, BAL-LAB'
+     You can use the '.leafproc' directive in conjunction with the
+     optimized 'callj' instruction to enable faster calls of leaf
      procedures.  If a procedure is known to call no other procedures,
-     you may define an entry point that skips procedure prolog code
-     (and that does not depend on system-supplied saved context), and
-     declare it as the BAL-LAB using `.leafproc'.  If the procedure
-     also has an entry point that goes through the normal prolog, you
-     can specify that entry point as CALL-LAB.
+     you may define an entry point that skips procedure prolog code (and
+     that does not depend on system-supplied saved context), and declare
+     it as the BAL-LAB using '.leafproc'.  If the procedure also has an
+     entry point that goes through the normal prolog, you can specify
+     that entry point as CALL-LAB.
 
-     A `.leafproc' declaration is meant for use in conjunction with the
-     optimized call instruction `callj'; the directive records the data
-     needed later to choose between converting the `callj' into a `bal'
-     or a `call'.
+     A '.leafproc' declaration is meant for use in conjunction with the
+     optimized call instruction 'callj'; the directive records the data
+     needed later to choose between converting the 'callj' into a 'bal'
+     or a 'call'.
 
      CALL-LAB is optional; if only one argument is present, or if the
      two arguments are identical, the single argument is assumed to be
-     the `bal' entry point.
+     the 'bal' entry point.
 
-`.sysproc NAME, INDEX'
-     The `.sysproc' directive defines a name for a system procedure.
-     After you define it using `.sysproc', you can use NAME to refer to
+'.sysproc NAME, INDEX'
+     The '.sysproc' directive defines a name for a system procedure.
+     After you define it using '.sysproc', you can use NAME to refer to
      the system procedure identified by INDEX when calling procedures
-     with the optimized call instruction `callj'.
+     with the optimized call instruction 'callj'.
 
      Both arguments are required; INDEX must be between 0 and 31
      (inclusive).
@@ -12263,26 +11947,26 @@ Command-line Options: Options-i960. for a discussion of selecting the
 instruction subset for a particular 960 architecture.
 
    Some opcodes are processed beyond simply emitting a single
-corresponding instruction: `callj', and Compare-and-Branch or
+corresponding instruction: 'callj', and Compare-and-Branch or
 Compare-and-Jump instructions with target displacements larger than 13
 bits.
 
 * Menu:
 
-* callj-i960::                  `callj'
+* callj-i960::                  'callj'
 * Compare-and-branch-i960::     Compare-and-Branch
 
 
 File: as.info,  Node: callj-i960,  Next: Compare-and-branch-i960,  Up: Opcodes for i960
 
-9.17.4.1 `callj'
+9.17.4.1 'callj'
 ................
 
-You can write `callj' to have the assembler or the linker determine the
-most appropriate form of subroutine call: `call', `bal', or `calls'.
-If the assembly source contains enough information--a `.leafproc' or
-`.sysproc' directive defining the operand--then `as' translates the
-`callj'; if not, it simply emits the `callj', leaving it for the linker
+You can write 'callj' to have the assembler or the linker determine the
+most appropriate form of subroutine call: 'call', 'bal', or 'calls'.  If
+the assembly source contains enough information--a '.leafproc' or
+'.sysproc' directive defining the operand--then 'as' translates the
+'callj'; if not, it simply emits the 'callj', leaving it for the linker
 to resolve.
 
 
@@ -12298,12 +11982,12 @@ enough away that its address won't fit in 13 bits, the assembler can
 either issue an error, or convert your Compare-and-Branch instruction
 into separate instructions to do the compare and the branch.
 
-   Whether `as' gives an error or expands the instruction depends on
-two choices you can make: whether you use the `-no-relax' option, and
+   Whether 'as' gives an error or expands the instruction depends on two
+choices you can make: whether you use the '-no-relax' option, and
 whether you use a "Compare and Branch" instruction or a "Compare and
 Jump" instruction.  The "Jump" instructions are _always_ expanded if
 necessary; the "Branch" instructions are expanded when necessary
-_unless_ you specify `-no-relax'--in which case `as' gives an error
+_unless_ you specify '-no-relax'--in which case 'as' gives an error
 instead.
 
    These are the Compare-and-Branch instructions, their "Jump" variants,
@@ -12345,15 +12029,15 @@ File: as.info,  Node: i960-Chars,  Up: Syntax of i960
 9.17.5.1 Special Characters
 ...........................
 
-The presence of a `#' on a line indicates the start of a comment that
+The presence of a '#' on a line indicates the start of a comment that
 extends to the end of the current line.
 
-   If a `#' appears as the first character of a line, the whole line is
+   If a '#' appears as the first character of a line, the whole line is
 treated as a comment, but in this case the line can also be a logical
 line number directive (*note Comments::) or a preprocessor control
 command (*note Preprocessing::).
 
-   The `;' character can be used to separate statements on the same
+   The ';' character can be used to separate statements on the same
 line.
 
 
@@ -12374,7 +12058,7 @@ File: as.info,  Node: IA-64 Options,  Next: IA-64 Syntax,  Up: IA-64-Dependent
 9.18.1 Options
 --------------
 
-`-mconstant-gp'
+'-mconstant-gp'
      This option instructs the assembler to mark the resulting object
      file as using the "constant GP" model.  With this model, it is
      assumed that the entire program uses a single global pointer (GP)
@@ -12382,79 +12066,78 @@ File: as.info,  Node: IA-64 Options,  Next: IA-64 Syntax,  Up: IA-64-Dependent
      machine code emitted by the assembler.  All it does is turn on the
      EF_IA_64_CONS_GP flag in the ELF file header.
 
-`-mauto-pic'
+'-mauto-pic'
      This option instructs the assembler to mark the resulting object
      file as using the "constant GP without function descriptor" data
      model.  This model is like the "constant GP" model, except that it
      additionally does away with function descriptors.  What this means
-     is that the address of a function refers directly to the
-     function's code entry-point.  Normally, such an address would
-     refer to a function descriptor, which contains both the code
-     entry-point and the GP-value needed by the function.  Note that
-     this option does not in any fashion affect the machine code
-     emitted by the assembler.  All it does is turn on the
-     EF_IA_64_NOFUNCDESC_CONS_GP flag in the ELF file header.
-
-`-milp32'
-`-milp64'
-`-mlp64'
-`-mp64'
+     is that the address of a function refers directly to the function's
+     code entry-point.  Normally, such an address would refer to a
+     function descriptor, which contains both the code entry-point and
+     the GP-value needed by the function.  Note that this option does
+     not in any fashion affect the machine code emitted by the
+     assembler.  All it does is turn on the EF_IA_64_NOFUNCDESC_CONS_GP
+     flag in the ELF file header.
+
+'-milp32'
+'-milp64'
+'-mlp64'
+'-mp64'
      These options select the data model.  The assembler defaults to
-     `-mlp64' (LP64 data model).
-
-`-mle'
-`-mbe'
-     These options select the byte order.  The `-mle' option selects
-     little-endian byte order (default) and `-mbe' selects big-endian
-     byte order.  Note that IA-64 machine code always uses
-     little-endian byte order.
-
-`-mtune=itanium1'
-`-mtune=itanium2'
-     Tune for a particular IA-64 CPU, ITANIUM1 or ITANIUM2. The default
+     '-mlp64' (LP64 data model).
+
+'-mle'
+'-mbe'
+     These options select the byte order.  The '-mle' option selects
+     little-endian byte order (default) and '-mbe' selects big-endian
+     byte order.  Note that IA-64 machine code always uses little-endian
+     byte order.
+
+'-mtune=itanium1'
+'-mtune=itanium2'
+     Tune for a particular IA-64 CPU, ITANIUM1 or ITANIUM2.  The default
      is ITANIUM2.
 
-`-munwind-check=warning'
-`-munwind-check=error'
+'-munwind-check=warning'
+'-munwind-check=error'
      These options control what the assembler will do when performing
-     consistency checks on unwind directives.  `-munwind-check=warning'
+     consistency checks on unwind directives.  '-munwind-check=warning'
      will make the assembler issue a warning when an unwind directive
-     check fails.  This is the default.  `-munwind-check=error' will
+     check fails.  This is the default.  '-munwind-check=error' will
      make the assembler issue an error when an unwind directive check
      fails.
 
-`-mhint.b=ok'
-`-mhint.b=warning'
-`-mhint.b=error'
-     These options control what the assembler will do when the `hint.b'
-     instruction is used.  `-mhint.b=ok' will make the assembler accept
-     `hint.b'.  `-mint.b=warning' will make the assembler issue a
-     warning when `hint.b' is used.  `-mhint.b=error' will make the
-     assembler treat `hint.b' as an error, which is the default.
-
-`-x'
-`-xexplicit'
+'-mhint.b=ok'
+'-mhint.b=warning'
+'-mhint.b=error'
+     These options control what the assembler will do when the 'hint.b'
+     instruction is used.  '-mhint.b=ok' will make the assembler accept
+     'hint.b'.  '-mint.b=warning' will make the assembler issue a
+     warning when 'hint.b' is used.  '-mhint.b=error' will make the
+     assembler treat 'hint.b' as an error, which is the default.
+
+'-x'
+'-xexplicit'
      These options turn on dependency violation checking.
 
-`-xauto'
+'-xauto'
      This option instructs the assembler to automatically insert stop
      bits where necessary to remove dependency violations.  This is the
      default mode.
 
-`-xnone'
+'-xnone'
      This option turns off dependency violation checking.
 
-`-xdebug'
+'-xdebug'
      This turns on debug output intended to help tracking down bugs in
      the dependency violation checker.
 
-`-xdebugn'
+'-xdebugn'
      This is a shortcut for -xnone -xdebug.
 
-`-xdebugx'
+'-xdebugx'
      This is a shortcut for -xexplicit -xdebug.
 
-
 
 File: as.info,  Node: IA-64 Syntax,  Next: IA-64 Opcodes,  Prev: IA-64 Options,  Up: IA-64-Dependent
 
@@ -12477,9 +12160,9 @@ File: as.info,  Node: IA-64-Chars,  Next: IA-64-Regs,  Up: IA-64 Syntax
 9.18.2.1 Special Characters
 ...........................
 
-`//' is the line comment token.
+'//' is the line comment token.
 
-   `;' can be used instead of a newline to separate statements.
+   ';' can be used instead of a newline to separate statements.
 
 
 File: as.info,  Node: IA-64-Regs,  Next: IA-64-Bits,  Prev: IA-64-Chars,  Up: IA-64 Syntax
@@ -12487,19 +12170,19 @@ File: as.info,  Node: IA-64-Regs,  Next: IA-64-Bits,  Prev: IA-64-Chars,  Up: IA
 9.18.2.2 Register Names
 .......................
 
-The 128 integer registers are referred to as `rN'.  The 128
-floating-point registers are referred to as `fN'.  The 128 application
-registers are referred to as `arN'.  The 128 control registers are
-referred to as `crN'.  The 64 one-bit predicate registers are referred
-to as `pN'.  The 8 branch registers are referred to as `bN'.  In
-addition, the assembler defines a number of aliases: `gp' (`r1'), `sp'
-(`r12'), `rp' (`b0'), `ret0' (`r8'), `ret1' (`r9'), `ret2' (`r10'),
-`ret3' (`r9'), `fargN' (`f8+N'), and `fretN' (`f8+N').
+The 128 integer registers are referred to as 'rN'.  The 128
+floating-point registers are referred to as 'fN'.  The 128 application
+registers are referred to as 'arN'.  The 128 control registers are
+referred to as 'crN'.  The 64 one-bit predicate registers are referred
+to as 'pN'.  The 8 branch registers are referred to as 'bN'.  In
+addition, the assembler defines a number of aliases: 'gp' ('r1'), 'sp'
+('r12'), 'rp' ('b0'), 'ret0' ('r8'), 'ret1' ('r9'), 'ret2' ('r10'),
+'ret3' ('r9'), 'fargN' ('f8+N'), and 'fretN' ('f8+N').
 
    For convenience, the assembler also defines aliases for all named
-application and control registers.  For example, `ar.bsp' refers to the
-register backing store pointer (`ar17').  Similarly, `cr.eoi' refers to
-the end-of-interrupt register (`cr67').
+application and control registers.  For example, 'ar.bsp' refers to the
+register backing store pointer ('ar17').  Similarly, 'cr.eoi' refers to
+the end-of-interrupt register ('cr67').
 
 
 File: as.info,  Node: IA-64-Bits,  Next: IA-64-Relocs,  Prev: IA-64-Regs,  Up: IA-64 Syntax
@@ -12508,9 +12191,9 @@ File: as.info,  Node: IA-64-Bits,  Next: IA-64-Relocs,  Prev: IA-64-Regs,  Up: I
 ........................................................
 
 The assembler defines bit masks for each of the bits in the IA-64
-processor status register.  For example, `psr.ic' corresponds to a
-value of 0x2000.  These masks are primarily intended for use with the
-`ssm'/`sum' and `rsm'/`rum' instructions, but they can be used anywhere
+processor status register.  For example, 'psr.ic' corresponds to a value
+of 0x2000.  These masks are primarily intended for use with the
+'ssm'/'sum' and 'rsm'/'rum' instructions, but they can be used anywhere
 else where an integer constant is expected.
 
 
@@ -12519,12 +12202,12 @@ File: as.info,  Node: IA-64-Relocs,  Prev: IA-64-Bits,  Up: IA-64 Syntax
 9.18.2.4 Relocations
 ....................
 
-In addition to the standard IA-64 relocations, the following
-relocations are implemented by `as':
+In addition to the standard IA-64 relocations, the following relocations
+are implemented by 'as':
 
-`@slotcount(V)'
+'@slotcount(V)'
      Convert the address offset V into a slot count.  This pseudo
-     function is available only on VMS.  The expression V must be known
+     function is available only on VMS. The expression V must be known
      at assembly time: it can't reference undefined symbols or symbols
      in different sections.
 
@@ -12555,18 +12238,17 @@ File: as.info,  Node: IP2K-Opts,  Next: IP2K-Syntax,  Up: IP2K-Dependent
 9.19.1 IP2K Options
 -------------------
 
-The Ubicom IP2K version of `as' has a few machine dependent options:
+The Ubicom IP2K version of 'as' has a few machine dependent options:
 
-`-mip2022ext'
-     `as' can assemble the extended IP2022 instructions, but it will
+'-mip2022ext'
+     'as' can assemble the extended IP2022 instructions, but it will
      only do so if this is specifically allowed via this command line
      option.
 
-`-mip2022'
+'-mip2022'
      This option restores the assembler's default behaviour of not
      permitting the extended IP2022 instructions to be assembled.
 
-
 
 File: as.info,  Node: IP2K-Syntax,  Prev: IP2K-Opts,  Up: IP2K-Dependent
 
@@ -12583,10 +12265,10 @@ File: as.info,  Node: IP2K-Chars,  Up: IP2K-Syntax
 9.19.2.1 Special Characters
 ...........................
 
-The presence of a `;' on a line indicates the start of a comment that
+The presence of a ';' on a line indicates the start of a comment that
 extends to the end of the current line.
 
-   If a `#' appears as the first character of a line, the whole line is
+   If a '#' appears as the first character of a line, the whole line is
 treated as a comment, but in this case the line can also be a logical
 line number directive (*note Comments::) or a preprocessor control
 command (*note Preprocessing::).
@@ -12612,34 +12294,33 @@ File: as.info,  Node: LM32 Options,  Next: LM32 Syntax,  Up: LM32-Dependent
 9.20.1 Options
 --------------
 
-`-mmultiply-enabled'
+'-mmultiply-enabled'
      Enable multiply instructions.
 
-`-mdivide-enabled'
+'-mdivide-enabled'
      Enable divide instructions.
 
-`-mbarrel-shift-enabled'
+'-mbarrel-shift-enabled'
      Enable barrel-shift instructions.
 
-`-msign-extend-enabled'
+'-msign-extend-enabled'
      Enable sign extend instructions.
 
-`-muser-enabled'
+'-muser-enabled'
      Enable user defined instructions.
 
-`-micache-enabled'
+'-micache-enabled'
      Enable instruction cache related CSRs.
 
-`-mdcache-enabled'
+'-mdcache-enabled'
      Enable data cache related CSRs.
 
-`-mbreak-enabled'
+'-mbreak-enabled'
      Enable break instructions.
 
-`-mall-enabled'
+'-mall-enabled'
      Enable all instructions and CSRs.
 
-
 
 File: as.info,  Node: LM32 Syntax,  Next: LM32 Opcodes,  Prev: LM32 Options,  Up: LM32-Dependent
 
@@ -12658,71 +12339,52 @@ File: as.info,  Node: LM32-Regs,  Next: LM32-Modifiers,  Up: LM32 Syntax
 9.20.2.1 Register Names
 .......................
 
-LM32 has 32 x 32-bit general purpose registers `r0', `r1', ... `r31'.
+LM32 has 32 x 32-bit general purpose registers 'r0', 'r1', ...  'r31'.
 
-   The following aliases are defined: `gp' - `r26', `fp' - `r27', `sp'
-- `r28', `ra' - `r29', `ea' - `r30', `ba' - `r31'.
+   The following aliases are defined: 'gp' - 'r26', 'fp' - 'r27', 'sp' -
+'r28', 'ra' - 'r29', 'ea' - 'r30', 'ba' - 'r31'.
 
    LM32 has the following Control and Status Registers (CSRs).
 
-`IE'
+'IE'
      Interrupt enable.
-
-`IM'
+'IM'
      Interrupt mask.
-
-`IP'
+'IP'
      Interrupt pending.
-
-`ICC'
+'ICC'
      Instruction cache control.
-
-`DCC'
+'DCC'
      Data cache control.
-
-`CC'
+'CC'
      Cycle counter.
-
-`CFG'
+'CFG'
      Configuration.
-
-`EBA'
+'EBA'
      Exception base address.
-
-`DC'
+'DC'
      Debug control.
-
-`DEBA'
+'DEBA'
      Debug exception base address.
-
-`JTX'
+'JTX'
      JTAG transmit.
-
-`JRX'
+'JRX'
      JTAG receive.
-
-`BP0'
+'BP0'
      Breakpoint 0.
-
-`BP1'
+'BP1'
      Breakpoint 1.
-
-`BP2'
+'BP2'
      Breakpoint 2.
-
-`BP3'
+'BP3'
      Breakpoint 3.
-
-`WP0'
+'WP0'
      Watchpoint 0.
-
-`WP1'
+'WP1'
      Watchpoint 1.
-
-`WP2'
+'WP2'
      Watchpoint 2.
-
-`WP3'
+'WP3'
      Watchpoint 3.
 
 
@@ -12737,11 +12399,13 @@ following:
 
      modifier(relocatable-expression)
 
-`lo'
+'lo'
+
      This modifier allows you to use bits 0 through 15 of an address
      expression as 16 bit relocatable expression.
 
-`hi'
+'hi'
+
      This modifier allows you to use bits 16 through 23 of an address
      expression as 16 bit relocatable expression.
 
@@ -12750,44 +12414,47 @@ following:
           ori  r4, r4, lo(sym+10)
           orhi r4, r4, hi(sym+10)
 
-`gp'
+'gp'
+
      This modified creates a 16-bit relocatable expression that is the
      offset of the symbol from the global pointer.
 
           mva r4, gp(sym)
 
-`got'
+'got'
+
      This modifier places a symbol in the GOT and creates a 16-bit
      relocatable expression that is the offset into the GOT of this
      symbol.
 
           lw r4, (gp+got(sym))
 
-`gotofflo16'
-     This modifier allows you to use the bits 0 through 15 of an
-     address which is an offset from the GOT.
+'gotofflo16'
+
+     This modifier allows you to use the bits 0 through 15 of an address
+     which is an offset from the GOT.
+
+'gotoffhi16'
 
-`gotoffhi16'
      This modifier allows you to use the bits 16 through 31 of an
      address which is an offset from the GOT.
 
           orhi r4, r4, gotoffhi16(lsym)
           addi r4, r4, gotofflo16(lsym)
 
-
 
 File: as.info,  Node: LM32-Chars,  Prev: LM32-Modifiers,  Up: LM32 Syntax
 
 9.20.2.3 Special Characters
 ...........................
 
-The presence of a `#' on a line indicates the start of a comment that
-extends to the end of the current line.  Note that if a line starts
-with a `#' character then it can also be a logical line number
-directive (*note Comments::) or a preprocessor control command (*note
+The presence of a '#' on a line indicates the start of a comment that
+extends to the end of the current line.  Note that if a line starts with
+a '#' character then it can also be a logical line number directive
+(*note Comments::) or a preprocessor control command (*note
 Preprocessing::).
 
-   A semicolon (`;') can be used to separate multiple statements on the
+   A semicolon (';') can be used to separate multiple statements on the
 same line.
 
 
@@ -12797,9 +12464,9 @@ File: as.info,  Node: LM32 Opcodes,  Prev: LM32 Syntax,  Up: LM32-Dependent
 --------------
 
 For detailed information on the LM32 machine instruction set, see
-`http://www.latticesemi.com/products/intellectualproperty/ipcores/mico32/'.
+<http://www.latticesemi.com/products/intellectualproperty/ipcores/mico32/>.
 
-   `as' implements all the standard LM32 opcodes.
+   'as' implements all the standard LM32 opcodes.
 
 
 File: as.info,  Node: M32C-Dependent,  Next: M32R-Dependent,  Prev: LM32-Dependent,  Up: Machine Dependencies
@@ -12807,10 +12474,10 @@ File: as.info,  Node: M32C-Dependent,  Next: M32R-Dependent,  Prev: LM32-Depende
 9.21 M32C Dependent Features
 ============================
 
-   `as' can assemble code for several different members of the Renesas
-M32C family.  Normally the default is to assemble code for the M16C
-microprocessor.  The `-m32c' option may be used to change the default
-to the M32C microprocessor.
+'as' can assemble code for several different members of the Renesas M32C
+family.  Normally the default is to assemble code for the M16C
+microprocessor.  The '-m32c' option may be used to change the default to
+the M32C microprocessor.
 
 * Menu:
 
@@ -12823,21 +12490,20 @@ File: as.info,  Node: M32C-Opts,  Next: M32C-Syntax,  Up: M32C-Dependent
 9.21.1 M32C Options
 -------------------
 
-The Renesas M32C version of `as' has these machine-dependent options:
+The Renesas M32C version of 'as' has these machine-dependent options:
 
-`-m32c'
+'-m32c'
      Assemble M32C instructions.
 
-`-m16c'
+'-m16c'
      Assemble M16C instructions (default).
 
-`-relax'
+'-relax'
      Enable support for link-time relaxations.
 
-`-h-tick-hex'
+'-h-tick-hex'
      Support H'00 style hex constants in addition to 0x00 style.
 
-
 
 File: as.info,  Node: M32C-Syntax,  Prev: M32C-Opts,  Up: M32C-Dependent
 
@@ -12860,12 +12526,13 @@ M32C instruction operands.  The general syntax is the following:
 
      %modifier(symbol)
 
-`%dsp8'
-`%dsp16'
+'%dsp8'
+'%dsp16'
+
      These modifiers override the assembler's assumptions about how big
      a symbol's address is.  Normally, when it sees an operand like
-     `sym[a0]' it assumes `sym' may require the widest displacement
-     field (16 bits for `-m16c', 24 bits for `-m32c').  These modifiers
+     'sym[a0]' it assumes 'sym' may require the widest displacement
+     field (16 bits for '-m16c', 24 bits for '-m32c').  These modifiers
      tell it to assume the address will fit in an 8 or 16 bit
      (respectively) unsigned displacement.  Note that, of course, if it
      doesn't actually fit you will get linker errors.  Example:
@@ -12873,25 +12540,28 @@ M32C instruction operands.  The general syntax is the following:
           mov.w %dsp8(sym)[a0],r1
           mov.b #0,%dsp8(sym)[a0]
 
-`%hi8'
+'%hi8'
+
      This modifier allows you to load bits 16 through 23 of a 24 bit
      address into an 8 bit register.  This is useful with, for example,
-     the M16C `smovf' instruction, which expects a 20 bit address in
-     `r1h' and `a0'.  Example:
+     the M16C 'smovf' instruction, which expects a 20 bit address in
+     'r1h' and 'a0'.  Example:
 
           mov.b #%hi8(sym),r1h
           mov.w #%lo16(sym),a0
           smovf.b
 
-`%lo16'
+'%lo16'
+
      Likewise, this modifier allows you to load bits 0 through 15 of a
      24 bit address into a 16 bit register.
 
-`%hi16'
+'%hi16'
+
      This modifier allows you to load bits 16 through 31 of a 32 bit
      address into a 16 bit register.  While the M32C family only has 24
      bits of address space, it does support addresses in pairs of 16 bit
-     registers (like `a1a0' for the `lde' instruction).  This modifier
+     registers (like 'a1a0' for the 'lde' instruction).  This modifier
      is for loading the upper half in such cases.  Example:
 
           mov.w #%hi16(sym),a1
@@ -12899,22 +12569,21 @@ M32C instruction operands.  The general syntax is the following:
           ...
           lde.w [a1a0],r1
 
-
 
 File: as.info,  Node: M32C-Chars,  Prev: M32C-Modifiers,  Up: M32C-Syntax
 
 9.21.2.2 Special Characters
 ...........................
 
-The presence of a `;' character on a line indicates the start of a
+The presence of a ';' character on a line indicates the start of a
 comment that extends to the end of that line.
 
-   If a `#' appears as the first character of a line, the whole line is
+   If a '#' appears as the first character of a line, the whole line is
 treated as a comment, but in this case the line can also be a logical
 line number directive (*note Comments::) or a preprocessor control
 command (*note Preprocessing::).
 
-   The `|' character can be used to separate statements on the same
+   The '|' character can be used to separate statements on the same
 line.
 
 
@@ -12935,153 +12604,152 @@ File: as.info,  Node: M32R-Opts,  Next: M32R-Directives,  Up: M32R-Dependent
 9.22.1 M32R Options
 -------------------
 
-The Renease M32R version of `as' has a few machine dependent options:
+The Renease M32R version of 'as' has a few machine dependent options:
 
-`-m32rx'
-     `as' can assemble code for several different members of the
-     Renesas M32R family.  Normally the default is to assemble code for
-     the M32R microprocessor.  This option may be used to change the
-     default to the M32RX microprocessor, which adds some more
-     instructions to the basic M32R instruction set, and some
-     additional parameters to some of the original instructions.
+'-m32rx'
+     'as' can assemble code for several different members of the Renesas
+     M32R family.  Normally the default is to assemble code for the M32R
+     microprocessor.  This option may be used to change the default to
+     the M32RX microprocessor, which adds some more instructions to the
+     basic M32R instruction set, and some additional parameters to some
+     of the original instructions.
 
-`-m32r2'
+'-m32r2'
      This option changes the target processor to the M32R2
      microprocessor.
 
-`-m32r'
+'-m32r'
      This option can be used to restore the assembler's default
      behaviour of assembling for the M32R microprocessor.  This can be
      useful if the default has been changed by a previous command line
      option.
 
-`-little'
+'-little'
      This option tells the assembler to produce little-endian code and
      data.  The default is dependent upon how the toolchain was
      configured.
 
-`-EL'
+'-EL'
      This is a synonym for _-little_.
 
-`-big'
+'-big'
      This option tells the assembler to produce big-endian code and
      data.
 
-`-EB'
+'-EB'
      This is a synonum for _-big_.
 
-`-KPIC'
+'-KPIC'
      This option specifies that the output of the assembler should be
      marked as position-independent code (PIC).
 
-`-parallel'
+'-parallel'
      This option tells the assembler to attempts to combine two
      sequential instructions into a single, parallel instruction, where
      it is legal to do so.
 
-`-no-parallel'
+'-no-parallel'
      This option disables a previously enabled _-parallel_ option.
 
-`-no-bitinst'
+'-no-bitinst'
      This option disables the support for the extended bit-field
      instructions provided by the M32R2.  If this support needs to be
      re-enabled the _-bitinst_ switch can be used to restore it.
 
-`-O'
+'-O'
      This option tells the assembler to attempt to optimize the
      instructions that it produces.  This includes filling delay slots
      and converting sequential instructions into parallel ones.  This
      option implies _-parallel_.
 
-`-warn-explicit-parallel-conflicts'
-     Instructs `as' to produce warning messages when questionable
+'-warn-explicit-parallel-conflicts'
+     Instructs 'as' to produce warning messages when questionable
      parallel instructions are encountered.  This option is enabled by
-     default, but `gcc' disables it when it invokes `as' directly.
+     default, but 'gcc' disables it when it invokes 'as' directly.
      Questionable instructions are those whose behaviour would be
-     different if they were executed sequentially.  For example the
-     code fragment `mv r1, r2 || mv r3, r1' produces a different result
-     from `mv r1, r2 \n mv r3, r1' since the former moves r1 into r3
-     and then r2 into r1, whereas the later moves r2 into r1 and r3.
+     different if they were executed sequentially.  For example the code
+     fragment 'mv r1, r2 || mv r3, r1' produces a different result from
+     'mv r1, r2 \n mv r3, r1' since the former moves r1 into r3 and then
+     r2 into r1, whereas the later moves r2 into r1 and r3.
 
-`-Wp'
+'-Wp'
      This is a shorter synonym for the
      _-warn-explicit-parallel-conflicts_ option.
 
-`-no-warn-explicit-parallel-conflicts'
-     Instructs `as' not to produce warning messages when questionable
+'-no-warn-explicit-parallel-conflicts'
+     Instructs 'as' not to produce warning messages when questionable
      parallel instructions are encountered.
 
-`-Wnp'
+'-Wnp'
      This is a shorter synonym for the
      _-no-warn-explicit-parallel-conflicts_ option.
 
-`-ignore-parallel-conflicts'
+'-ignore-parallel-conflicts'
      This option tells the assembler's to stop checking parallel
      instructions for constraint violations.  This ability is provided
      for hardware vendors testing chip designs and should not be used
      under normal circumstances.
 
-`-no-ignore-parallel-conflicts'
+'-no-ignore-parallel-conflicts'
      This option restores the assembler's default behaviour of checking
      parallel instructions to detect constraint violations.
 
-`-Ip'
+'-Ip'
      This is a shorter synonym for the _-ignore-parallel-conflicts_
      option.
 
-`-nIp'
+'-nIp'
      This is a shorter synonym for the _-no-ignore-parallel-conflicts_
      option.
 
-`-warn-unmatched-high'
+'-warn-unmatched-high'
      This option tells the assembler to produce a warning message if a
-     `.high' pseudo op is encountered without a matching `.low' pseudo
+     '.high' pseudo op is encountered without a matching '.low' pseudo
      op.  The presence of such an unmatched pseudo op usually indicates
      a programming error.
 
-`-no-warn-unmatched-high'
+'-no-warn-unmatched-high'
      Disables a previously enabled _-warn-unmatched-high_ option.
 
-`-Wuh'
+'-Wuh'
      This is a shorter synonym for the _-warn-unmatched-high_ option.
 
-`-Wnuh'
+'-Wnuh'
      This is a shorter synonym for the _-no-warn-unmatched-high_ option.
 
-
 
 File: as.info,  Node: M32R-Directives,  Next: M32R-Warnings,  Prev: M32R-Opts,  Up: M32R-Dependent
 
 9.22.2 M32R Directives
 ----------------------
 
-The Renease M32R version of `as' has a few architecture specific
+The Renease M32R version of 'as' has a few architecture specific
 directives:
 
-`low EXPRESSION'
-     The `low' directive computes the value of its expression and
-     places the lower 16-bits of the result into the immediate-field of
-     the instruction.  For example:
+'low EXPRESSION'
+     The 'low' directive computes the value of its expression and places
+     the lower 16-bits of the result into the immediate-field of the
+     instruction.  For example:
 
              or3   r0, r0, #low(0x12345678) ; compute r0 = r0 | 0x5678
              add3, r0, r0, #low(fred)   ; compute r0 = r0 + low 16-bits of address of fred
 
-`high EXPRESSION'
-     The `high' directive computes the value of its expression and
+'high EXPRESSION'
+     The 'high' directive computes the value of its expression and
      places the upper 16-bits of the result into the immediate-field of
      the instruction.  For example:
 
              seth  r0, #high(0x12345678) ; compute r0 = 0x12340000
              seth, r0, #high(fred)       ; compute r0 = upper 16-bits of address of fred
 
-`shigh EXPRESSION'
-     The `shigh' directive is very similar to the `high' directive.  It
+'shigh EXPRESSION'
+     The 'shigh' directive is very similar to the 'high' directive.  It
      also computes the value of its expression and places the upper
      16-bits of the result into the immediate-field of the instruction.
-     The difference is that `shigh' also checks to see if the lower
+     The difference is that 'shigh' also checks to see if the lower
      16-bits could be interpreted as a signed number, and if so it
      assumes that a borrow will occur from the upper-16 bits.  To
-     compensate for this the `shigh' directive pre-biases the upper 16
+     compensate for this the 'shigh' directive pre-biases the upper 16
      bit value by adding one to it.  For example:
 
      For example:
@@ -13094,10 +12762,10 @@ directives:
      value becomes 0xffff8000.  If this value is then added to
      0x00010000 then the result is 0x00008000.
 
-     This behaviour is to allow for the different semantics of the
-     `or3' and `add3' instructions.  The `or3' instruction treats its
-     16-bit immediate argument as unsigned whereas the `add3' treats
-     its 16-bit immediate as a signed value.  So for example:
+     This behaviour is to allow for the different semantics of the 'or3'
+     and 'add3' instructions.  The 'or3' instruction treats its 16-bit
+     immediate argument as unsigned whereas the 'add3' treats its 16-bit
+     immediate as a signed value.  So for example:
 
              seth  r0, #shigh(0x00008000)
              add3  r0, r0, #low(0x00008000)
@@ -13109,41 +12777,40 @@ directives:
 
      Stores 0xffff8000 into r0.
 
-     Note - the `shigh' directive does not know where in the assembly
+     Note - the 'shigh' directive does not know where in the assembly
      source code the lower 16-bits of the value are going set, so it
-     cannot check to make sure that an `or3' instruction is being used
-     rather than an `add3' instruction.  It is up to the programmer to
+     cannot check to make sure that an 'or3' instruction is being used
+     rather than an 'add3' instruction.  It is up to the programmer to
      make sure that correct directives are used.
 
-`.m32r'
+'.m32r'
      The directive performs a similar thing as the _-m32r_ command line
      option.  It tells the assembler to only accept M32R instructions
      from now on.  An instructions from later M32R architectures are
      refused.
 
-`.m32rx'
-     The directive performs a similar thing as the _-m32rx_ command
-     line option.  It tells the assembler to start accepting the extra
+'.m32rx'
+     The directive performs a similar thing as the _-m32rx_ command line
+     option.  It tells the assembler to start accepting the extra
      instructions in the M32RX ISA as well as the ordinary M32R ISA.
 
-`.m32r2'
-     The directive performs a similar thing as the _-m32r2_ command
-     line option.  It tells the assembler to start accepting the extra
+'.m32r2'
+     The directive performs a similar thing as the _-m32r2_ command line
+     option.  It tells the assembler to start accepting the extra
      instructions in the M32R2 ISA as well as the ordinary M32R ISA.
 
-`.little'
+'.little'
      The directive performs a similar thing as the _-little_ command
      line option.  It tells the assembler to start producing
      little-endian code and data.  This option should be used with care
      as producing mixed-endian binary files is fraught with danger.
 
-`.big'
+'.big'
      The directive performs a similar thing as the _-big_ command line
      option.  It tells the assembler to start producing big-endian code
      and data.  This option should be used with care as producing
      mixed-endian binary files is fraught with danger.
 
-
 
 File: as.info,  Node: M32R-Warnings,  Prev: M32R-Directives,  Up: M32R-Dependent
 
@@ -13151,60 +12818,59 @@ File: as.info,  Node: M32R-Warnings,  Prev: M32R-Directives,  Up: M32R-Dependent
 --------------------
 
 There are several warning and error messages that can be produced by
-`as' which are specific to the M32R:
+'as' which are specific to the M32R:
 
-`output of 1st instruction is the same as an input to 2nd instruction - is this intentional ?'
+'output of 1st instruction is the same as an input to 2nd instruction - is this intentional ?'
      This message is only produced if warnings for explicit parallel
      conflicts have been enabled.  It indicates that the assembler has
      encountered a parallel instruction in which the destination
      register of the left hand instruction is used as an input register
      in the right hand instruction.  For example in this code fragment
-     `mv r1, r2 || neg r3, r1' register r1 is the destination of the
+     'mv r1, r2 || neg r3, r1' register r1 is the destination of the
      move instruction and the input to the neg instruction.
 
-`output of 2nd instruction is the same as an input to 1st instruction - is this intentional ?'
+'output of 2nd instruction is the same as an input to 1st instruction - is this intentional ?'
      This message is only produced if warnings for explicit parallel
      conflicts have been enabled.  It indicates that the assembler has
      encountered a parallel instruction in which the destination
-     register of the right hand instruction is used as an input
-     register in the left hand instruction.  For example in this code
-     fragment `mv r1, r2 || neg r2, r3' register r2 is the destination
-     of the neg instruction and the input to the move instruction.
+     register of the right hand instruction is used as an input register
+     in the left hand instruction.  For example in this code fragment
+     'mv r1, r2 || neg r2, r3' register r2 is the destination of the neg
+     instruction and the input to the move instruction.
 
-`instruction `...' is for the M32RX only'
+'instruction '...' is for the M32RX only'
      This message is produced when the assembler encounters an
-     instruction which is only supported by the M32Rx processor, and
-     the `-m32rx' command line flag has not been specified to allow
-     assembly of such instructions.
+     instruction which is only supported by the M32Rx processor, and the
+     '-m32rx' command line flag has not been specified to allow assembly
+     of such instructions.
 
-`unknown instruction `...''
+'unknown instruction '...''
      This message is produced when the assembler encounters an
      instruction which it does not recognize.
 
-`only the NOP instruction can be issued in parallel on the m32r'
+'only the NOP instruction can be issued in parallel on the m32r'
      This message is produced when the assembler encounters a parallel
      instruction which does not involve a NOP instruction and the
-     `-m32rx' command line flag has not been specified.  Only the M32Rx
+     '-m32rx' command line flag has not been specified.  Only the M32Rx
      processor is able to execute two instructions in parallel.
 
-`instruction `...' cannot be executed in parallel.'
+'instruction '...' cannot be executed in parallel.'
      This message is produced when the assembler encounters a parallel
      instruction which is made up of one or two instructions which
      cannot be executed in parallel.
 
-`Instructions share the same execution pipeline'
+'Instructions share the same execution pipeline'
      This message is produced when the assembler encounters a parallel
      instruction whoes components both use the same execution pipeline.
 
-`Instructions write to the same destination register.'
+'Instructions write to the same destination register.'
      This message is produced when the assembler encounters a parallel
      instruction where both components attempt to modify the same
      register.  For example these code fragments will produce this
-     message: `mv r1, r2 || neg r1, r3' `jl r0 || mv r14, r1' `st r2,
-     @-r1 || mv r1, r3' `mv r1, r2 || ld r0, @r1+' `cmp r1, r2 || addx
+     message: 'mv r1, r2 || neg r1, r3' 'jl r0 || mv r14, r1' 'st r2,
+     @-r1 || mv r1, r3' 'mv r1, r2 || ld r0, @r1+' 'cmp r1, r2 || addx
      r3, r4' (Both write to the condition bit)
 
-
 
 File: as.info,  Node: M68K-Dependent,  Next: M68HC11-Dependent,  Prev: M32R-Dependent,  Up: Machine Dependencies
 
@@ -13226,90 +12892,91 @@ File: as.info,  Node: M68K-Opts,  Next: M68K-Syntax,  Up: M68K-Dependent
 9.23.1 M680x0 Options
 ---------------------
 
-The Motorola 680x0 version of `as' has a few machine dependent options:
+The Motorola 680x0 version of 'as' has a few machine dependent options:
 
-`-march=ARCHITECTURE'
+'-march=ARCHITECTURE'
      This option specifies a target architecture.  The following
-     architectures are recognized: `68000', `68010', `68020', `68030',
-     `68040', `68060', `cpu32', `isaa', `isaaplus', `isab', `isac' and
-     `cfv4e'.
+     architectures are recognized: '68000', '68010', '68020', '68030',
+     '68040', '68060', 'cpu32', 'isaa', 'isaaplus', 'isab', 'isac' and
+     'cfv4e'.
 
-`-mcpu=CPU'
+'-mcpu=CPU'
      This option specifies a target cpu.  When used in conjunction with
-     the `-march' option, the cpu must be within the specified
+     the '-march' option, the cpu must be within the specified
      architecture.  Also, the generic features of the architecture are
      used for instruction generation, rather than those of the specific
      chip.
 
-`-m[no-]68851'
-`-m[no-]68881'
-`-m[no-]div'
-`-m[no-]usp'
-`-m[no-]float'
-`-m[no-]mac'
-`-m[no-]emac'
+'-m[no-]68851'
+'-m[no-]68881'
+'-m[no-]div'
+'-m[no-]usp'
+'-m[no-]float'
+'-m[no-]mac'
+'-m[no-]emac'
+
      Enable or disable various architecture specific features.  If a
      chip or architecture by default supports an option (for instance
-     `-march=isaaplus' includes the `-mdiv' option), explicitly
+     '-march=isaaplus' includes the '-mdiv' option), explicitly
      disabling the option will override the default.
 
-`-l'
-     You can use the `-l' option to shorten the size of references to
-     undefined symbols.  If you do not use the `-l' option, references
-     to undefined symbols are wide enough for a full `long' (32 bits).
-     (Since `as' cannot know where these symbols end up, `as' can only
-     allocate space for the linker to fill in later.  Since `as' does
-     not know how far away these symbols are, it allocates as much
-     space as it can.)  If you use this option, the references are only
-     one word wide (16 bits).  This may be useful if you want the
-     object file to be as small as possible, and you know that the
-     relevant symbols are always less than 17 bits away.
-
-`--register-prefix-optional'
+'-l'
+     You can use the '-l' option to shorten the size of references to
+     undefined symbols.  If you do not use the '-l' option, references
+     to undefined symbols are wide enough for a full 'long' (32 bits).
+     (Since 'as' cannot know where these symbols end up, 'as' can only
+     allocate space for the linker to fill in later.  Since 'as' does
+     not know how far away these symbols are, it allocates as much space
+     as it can.)  If you use this option, the references are only one
+     word wide (16 bits).  This may be useful if you want the object
+     file to be as small as possible, and you know that the relevant
+     symbols are always less than 17 bits away.
+
+'--register-prefix-optional'
      For some configurations, especially those where the compiler
      normally does not prepend an underscore to the names of user
-     variables, the assembler requires a `%' before any use of a
+     variables, the assembler requires a '%' before any use of a
      register name.  This is intended to let the assembler distinguish
-     between C variables and functions named `a0' through `a7', and so
-     on.  The `%' is always accepted, but is not required for certain
-     configurations, notably `sun3'.  The `--register-prefix-optional'
-     option may be used to permit omitting the `%' even for
-     configurations for which it is normally required.  If this is
-     done, it will generally be impossible to refer to C variables and
+     between C variables and functions named 'a0' through 'a7', and so
+     on.  The '%' is always accepted, but is not required for certain
+     configurations, notably 'sun3'.  The '--register-prefix-optional'
+     option may be used to permit omitting the '%' even for
+     configurations for which it is normally required.  If this is done,
+     it will generally be impossible to refer to C variables and
      functions with the same names as register names.
 
-`--bitwise-or'
-     Normally the character `|' is treated as a comment character, which
-     means that it can not be used in expressions.  The `--bitwise-or'
-     option turns `|' into a normal character.  In this mode, you must
-     either use C style comments, or start comments with a `#' character
+'--bitwise-or'
+     Normally the character '|' is treated as a comment character, which
+     means that it can not be used in expressions.  The '--bitwise-or'
+     option turns '|' into a normal character.  In this mode, you must
+     either use C style comments, or start comments with a '#' character
      at the beginning of a line.
 
-`--base-size-default-16  --base-size-default-32'
+'--base-size-default-16 --base-size-default-32'
      If you use an addressing mode with a base register without
-     specifying the size, `as' will normally use the full 32 bit value.
-     For example, the addressing mode `%a0@(%d0)' is equivalent to
-     `%a0@(%d0:l)'.  You may use the `--base-size-default-16' option to
-     tell `as' to default to using the 16 bit value.  In this case,
-     `%a0@(%d0)' is equivalent to `%a0@(%d0:w)'.  You may use the
-     `--base-size-default-32' option to restore the default behaviour.
-
-`--disp-size-default-16  --disp-size-default-32'
-     If you use an addressing mode with a displacement, and the value
-     of the displacement is not known, `as' will normally assume that
-     the value is 32 bits.  For example, if the symbol `disp' has not
-     been defined, `as' will assemble the addressing mode
-     `%a0@(disp,%d0)' as though `disp' is a 32 bit value.  You may use
-     the `--disp-size-default-16' option to tell `as' to instead assume
-     that the displacement is 16 bits.  In this case, `as' will
-     assemble `%a0@(disp,%d0)' as though `disp' is a 16 bit value.  You
-     may use the `--disp-size-default-32' option to restore the default
+     specifying the size, 'as' will normally use the full 32 bit value.
+     For example, the addressing mode '%a0@(%d0)' is equivalent to
+     '%a0@(%d0:l)'.  You may use the '--base-size-default-16' option to
+     tell 'as' to default to using the 16 bit value.  In this case,
+     '%a0@(%d0)' is equivalent to '%a0@(%d0:w)'.  You may use the
+     '--base-size-default-32' option to restore the default behaviour.
+
+'--disp-size-default-16 --disp-size-default-32'
+     If you use an addressing mode with a displacement, and the value of
+     the displacement is not known, 'as' will normally assume that the
+     value is 32 bits.  For example, if the symbol 'disp' has not been
+     defined, 'as' will assemble the addressing mode '%a0@(disp,%d0)' as
+     though 'disp' is a 32 bit value.  You may use the
+     '--disp-size-default-16' option to tell 'as' to instead assume that
+     the displacement is 16 bits.  In this case, 'as' will assemble
+     '%a0@(disp,%d0)' as though 'disp' is a 16 bit value.  You may use
+     the '--disp-size-default-32' option to restore the default
      behaviour.
 
-`--pcrel'
+'--pcrel'
      Always keep branches PC-relative.  In the M680x0 architecture all
      branches are defined as PC-relative.  However, on some processors
-     they are limited to word displacements maximum.  When `as' needs a
+     they are limited to word displacements maximum.  When 'as' needs a
      long branch that is not available, it normally emits an absolute
      jump instead.  This option disables this substitution.  When this
      option is given and no long branches are available, only word
@@ -13318,9 +12985,9 @@ The Motorola 680x0 version of `as' has a few machine dependent options:
      68020 and other processors that have long branches.  *note Branch
      Improvement: M68K-Branch.
 
-`-m68000'
-     `as' can assemble code for several different members of the
-     Motorola 680x0 family.  The default depends upon how `as' was
+'-m68000'
+     'as' can assemble code for several different members of the
+     Motorola 680x0 family.  The default depends upon how 'as' was
      configured when it was built; normally, the default is to assemble
      code for the 68020 microprocessor.  The following options may be
      used to change the default.  These options control which
@@ -13328,87 +12995,87 @@ The Motorola 680x0 version of `as' has a few machine dependent options:
      the 680x0 family are very similar.  For detailed information about
      the differences, see the Motorola manuals.
 
-    `-m68000'
-    `-m68ec000'
-    `-m68hc000'
-    `-m68hc001'
-    `-m68008'
-    `-m68302'
-    `-m68306'
-    `-m68307'
-    `-m68322'
-    `-m68356'
-          Assemble for the 68000. `-m68008', `-m68302', and so on are
-          synonyms for `-m68000', since the chips are the same from the
+     '-m68000'
+     '-m68ec000'
+     '-m68hc000'
+     '-m68hc001'
+     '-m68008'
+     '-m68302'
+     '-m68306'
+     '-m68307'
+     '-m68322'
+     '-m68356'
+          Assemble for the 68000.  '-m68008', '-m68302', and so on are
+          synonyms for '-m68000', since the chips are the same from the
           point of view of the assembler.
 
-    `-m68010'
+     '-m68010'
           Assemble for the 68010.
 
-    `-m68020'
-    `-m68ec020'
+     '-m68020'
+     '-m68ec020'
           Assemble for the 68020.  This is normally the default.
 
-    `-m68030'
-    `-m68ec030'
+     '-m68030'
+     '-m68ec030'
           Assemble for the 68030.
 
-    `-m68040'
-    `-m68ec040'
+     '-m68040'
+     '-m68ec040'
           Assemble for the 68040.
 
-    `-m68060'
-    `-m68ec060'
+     '-m68060'
+     '-m68ec060'
           Assemble for the 68060.
 
-    `-mcpu32'
-    `-m68330'
-    `-m68331'
-    `-m68332'
-    `-m68333'
-    `-m68334'
-    `-m68336'
-    `-m68340'
-    `-m68341'
-    `-m68349'
-    `-m68360'
+     '-mcpu32'
+     '-m68330'
+     '-m68331'
+     '-m68332'
+     '-m68333'
+     '-m68334'
+     '-m68336'
+     '-m68340'
+     '-m68341'
+     '-m68349'
+     '-m68360'
           Assemble for the CPU32 family of chips.
 
-    `-m5200'
-    `-m5202'
-    `-m5204'
-    `-m5206'
-    `-m5206e'
-    `-m521x'
-    `-m5249'
-    `-m528x'
-    `-m5307'
-    `-m5407'
-    `-m547x'
-    `-m548x'
-    `-mcfv4'
-    `-mcfv4e'
+     '-m5200'
+     '-m5202'
+     '-m5204'
+     '-m5206'
+     '-m5206e'
+     '-m521x'
+     '-m5249'
+     '-m528x'
+     '-m5307'
+     '-m5407'
+     '-m547x'
+     '-m548x'
+     '-mcfv4'
+     '-mcfv4e'
           Assemble for the ColdFire family of chips.
 
-    `-m68881'
-    `-m68882'
+     '-m68881'
+     '-m68882'
           Assemble 68881 floating point instructions.  This is the
           default for the 68020, 68030, and the CPU32.  The 68040 and
           68060 always support floating point instructions.
 
-    `-mno-68881'
+     '-mno-68881'
           Do not assemble 68881 floating point instructions.  This is
           the default for 68000 and the 68010.  The 68040 and 68060
           always support floating point instructions, even if this
           option is used.
 
-    `-m68851'
+     '-m68851'
           Assemble 68851 MMU instructions.  This is the default for the
           68020, 68030, and 68060.  The 68040 accepts a somewhat
-          different set of MMU instructions; `-m68851' and `-m68040'
+          different set of MMU instructions; '-m68851' and '-m68040'
           should not be used together.
 
-    `-mno-68851'
+     '-mno-68851'
           Do not assemble 68851 MMU instructions.  This is the default
           for the 68000, 68010, and the CPU32.  The 68040 accepts a
           somewhat different set of MMU instructions.
@@ -13421,61 +13088,61 @@ File: as.info,  Node: M68K-Syntax,  Next: M68K-Moto-Syntax,  Prev: M68K-Opts,  U
 
 This syntax for the Motorola 680x0 was developed at MIT.
 
-   The 680x0 version of `as' uses instructions names and syntax
-compatible with the Sun assembler.  Intervening periods are ignored;
-for example, `movl' is equivalent to `mov.l'.
+   The 680x0 version of 'as' uses instructions names and syntax
+compatible with the Sun assembler.  Intervening periods are ignored; for
+example, 'movl' is equivalent to 'mov.l'.
 
    In the following table APC stands for any of the address registers
-(`%a0' through `%a7'), the program counter (`%pc'), the zero-address
-relative to the program counter (`%zpc'), a suppressed address register
-(`%za0' through `%za7'), or it may be omitted entirely.  The use of
-SIZE means one of `w' or `l', and it may be omitted, along with the
-leading colon, unless a scale is also specified.  The use of SCALE
-means one of `1', `2', `4', or `8', and it may always be omitted along
-with the leading colon.
+('%a0' through '%a7'), the program counter ('%pc'), the zero-address
+relative to the program counter ('%zpc'), a suppressed address register
+('%za0' through '%za7'), or it may be omitted entirely.  The use of SIZE
+means one of 'w' or 'l', and it may be omitted, along with the leading
+colon, unless a scale is also specified.  The use of SCALE means one of
+'1', '2', '4', or '8', and it may always be omitted along with the
+leading colon.
 
    The following addressing modes are understood:
 "Immediate"
-     `#NUMBER'
+     '#NUMBER'
 
 "Data Register"
-     `%d0' through `%d7'
+     '%d0' through '%d7'
 
 "Address Register"
-     `%a0' through `%a7'
-     `%a7' is also known as `%sp', i.e., the Stack Pointer.  `%a6' is
-     also known as `%fp', the Frame Pointer.
+     '%a0' through '%a7'
+     '%a7' is also known as '%sp', i.e., the Stack Pointer.  '%a6' is
+     also known as '%fp', the Frame Pointer.
 
 "Address Register Indirect"
-     `%a0@' through `%a7@'
+     '%a0@' through '%a7@'
 
 "Address Register Postincrement"
-     `%a0@+' through `%a7@+'
+     '%a0@+' through '%a7@+'
 
 "Address Register Predecrement"
-     `%a0@-' through `%a7@-'
+     '%a0@-' through '%a7@-'
 
 "Indirect Plus Offset"
-     `APC@(NUMBER)'
+     'APC@(NUMBER)'
 
 "Index"
-     `APC@(NUMBER,REGISTER:SIZE:SCALE)'
+     'APC@(NUMBER,REGISTER:SIZE:SCALE)'
 
      The NUMBER may be omitted.
 
 "Postindex"
-     `APC@(NUMBER)@(ONUMBER,REGISTER:SIZE:SCALE)'
+     'APC@(NUMBER)@(ONUMBER,REGISTER:SIZE:SCALE)'
 
      The ONUMBER or the REGISTER, but not both, may be omitted.
 
 "Preindex"
-     `APC@(NUMBER,REGISTER:SIZE:SCALE)@(ONUMBER)'
+     'APC@(NUMBER,REGISTER:SIZE:SCALE)@(ONUMBER)'
 
      The NUMBER may be omitted.  Omitting the REGISTER produces the
      Postindex addressing mode.
 
 "Absolute"
-     `SYMBOL', or `DIGITS', optionally followed by `:b', `:w', or `:l'.
+     'SYMBOL', or 'DIGITS', optionally followed by ':b', ':w', or ':l'.
 
 
 File: as.info,  Node: M68K-Moto-Syntax,  Next: M68K-Float,  Prev: M68K-Syntax,  Up: M68K-Dependent
@@ -13484,65 +13151,64 @@ File: as.info,  Node: M68K-Moto-Syntax,  Next: M68K-Float,  Prev: M68K-Syntax,
 ----------------------
 
 The standard Motorola syntax for this chip differs from the syntax
-already discussed (*note Syntax: M68K-Syntax.).  `as' can accept
+already discussed (*note Syntax: M68K-Syntax.).  'as' can accept
 Motorola syntax for operands, even if MIT syntax is used for other
 operands in the same instruction.  The two kinds of syntax are fully
 compatible.
 
    In the following table APC stands for any of the address registers
-(`%a0' through `%a7'), the program counter (`%pc'), the zero-address
-relative to the program counter (`%zpc'), or a suppressed address
-register (`%za0' through `%za7').  The use of SIZE means one of `w' or
-`l', and it may always be omitted along with the leading dot.  The use
-of SCALE means one of `1', `2', `4', or `8', and it may always be
+('%a0' through '%a7'), the program counter ('%pc'), the zero-address
+relative to the program counter ('%zpc'), or a suppressed address
+register ('%za0' through '%za7').  The use of SIZE means one of 'w' or
+'l', and it may always be omitted along with the leading dot.  The use
+of SCALE means one of '1', '2', '4', or '8', and it may always be
 omitted along with the leading asterisk.
 
    The following additional addressing modes are understood:
 
 "Address Register Indirect"
-     `(%a0)' through `(%a7)'
-     `%a7' is also known as `%sp', i.e., the Stack Pointer.  `%a6' is
-     also known as `%fp', the Frame Pointer.
+     '(%a0)' through '(%a7)'
+     '%a7' is also known as '%sp', i.e., the Stack Pointer.  '%a6' is
+     also known as '%fp', the Frame Pointer.
 
 "Address Register Postincrement"
-     `(%a0)+' through `(%a7)+'
+     '(%a0)+' through '(%a7)+'
 
 "Address Register Predecrement"
-     `-(%a0)' through `-(%a7)'
+     '-(%a0)' through '-(%a7)'
 
 "Indirect Plus Offset"
-     `NUMBER(%A0)' through `NUMBER(%A7)', or `NUMBER(%PC)'.
+     'NUMBER(%A0)' through 'NUMBER(%A7)', or 'NUMBER(%PC)'.
 
      The NUMBER may also appear within the parentheses, as in
-     `(NUMBER,%A0)'.  When used with the PC, the NUMBER may be omitted
+     '(NUMBER,%A0)'.  When used with the PC, the NUMBER may be omitted
      (with an address register, omitting the NUMBER produces Address
      Register Indirect mode).
 
 "Index"
-     `NUMBER(APC,REGISTER.SIZE*SCALE)'
+     'NUMBER(APC,REGISTER.SIZE*SCALE)'
 
-     The NUMBER may be omitted, or it may appear within the
-     parentheses.  The APC may be omitted.  The REGISTER and the APC
-     may appear in either order.  If both APC and REGISTER are address
-     registers, and the SIZE and SCALE are omitted, then the first
-     register is taken as the base register, and the second as the
-     index register.
+     The NUMBER may be omitted, or it may appear within the parentheses.
+     The APC may be omitted.  The REGISTER and the APC may appear in
+     either order.  If both APC and REGISTER are address registers, and
+     the SIZE and SCALE are omitted, then the first register is taken as
+     the base register, and the second as the index register.
 
 "Postindex"
-     `([NUMBER,APC],REGISTER.SIZE*SCALE,ONUMBER)'
+     '([NUMBER,APC],REGISTER.SIZE*SCALE,ONUMBER)'
 
      The ONUMBER, or the REGISTER, or both, may be omitted.  Either the
      NUMBER or the APC may be omitted, but not both.
 
 "Preindex"
-     `([NUMBER,APC,REGISTER.SIZE*SCALE],ONUMBER)'
+     '([NUMBER,APC,REGISTER.SIZE*SCALE],ONUMBER)'
 
-     The NUMBER, or the APC, or the REGISTER, or any two of them, may
-     be omitted.  The ONUMBER may be omitted.  The REGISTER and the APC
-     may appear in either order.  If both APC and REGISTER are address
+     The NUMBER, or the APC, or the REGISTER, or any two of them, may be
+     omitted.  The ONUMBER may be omitted.  The REGISTER and the APC may
+     appear in either order.  If both APC and REGISTER are address
      registers, and the SIZE and SCALE are omitted, then the first
-     register is taken as the base register, and the second as the
-     index register.
+     register is taken as the base register, and the second as the index
+     register.
 
 
 File: as.info,  Node: M68K-Float,  Next: M68K-Directives,  Prev: M68K-Moto-Syntax,  Up: M68K-Dependent
@@ -13555,15 +13221,15 @@ free to add the code!
 
    The floating point formats generated by directives are these.
 
-`.float'
-     `Single' precision floating point constants.
+'.float'
+     'Single' precision floating point constants.
 
-`.double'
-     `Double' precision floating point constants.
+'.double'
+     'Double' precision floating point constants.
 
-`.extend'
-`.ldouble'
-     `Extended' precision (`long double') floating point constants.
+'.extend'
+'.ldouble'
+     'Extended' precision ('long double') floating point constants.
 
 
 File: as.info,  Node: M68K-Directives,  Next: M68K-opcodes,  Prev: M68K-Float,  Up: M68K-Dependent
@@ -13574,35 +13240,34 @@ File: as.info,  Node: M68K-Directives,  Next: M68K-opcodes,  Prev: M68K-Float,
 In order to be compatible with the Sun assembler the 680x0 assembler
 understands the following directives.
 
-`.data1'
-     This directive is identical to a `.data 1' directive.
+'.data1'
+     This directive is identical to a '.data 1' directive.
 
-`.data2'
-     This directive is identical to a `.data 2' directive.
+'.data2'
+     This directive is identical to a '.data 2' directive.
 
-`.even'
-     This directive is a special case of the `.align' directive; it
+'.even'
+     This directive is a special case of the '.align' directive; it
      aligns the output to an even byte boundary.
 
-`.skip'
-     This directive is identical to a `.space' directive.
+'.skip'
+     This directive is identical to a '.space' directive.
 
-`.arch NAME'
+'.arch NAME'
      Select the target architecture and extension features.  Valid
-     values for NAME are the same as for the `-march' command line
+     values for NAME are the same as for the '-march' command line
      option.  This directive cannot be specified after any instructions
      have been assembled.  If it is given multiple times, or in
-     conjunction with the `-march' option, all uses must be for the
-     same architecture and extension set.
+     conjunction with the '-march' option, all uses must be for the same
+     architecture and extension set.
 
-`.cpu NAME'
+'.cpu NAME'
      Select the target cpu.  Valid valuse for NAME are the same as for
-     the `-mcpu' command line option.  This directive cannot be
+     the '-mcpu' command line option.  This directive cannot be
      specified after any instructions have been assembled.  If it is
-     given multiple times, or in conjunction with the `-mopt' option,
+     given multiple times, or in conjunction with the '-mopt' option,
      all uses must be for the same cpu.
 
-
 
 File: as.info,  Node: M68K-opcodes,  Prev: M68K-Directives,  Up: M68K-Dependent
 
@@ -13622,10 +13287,10 @@ File: as.info,  Node: M68K-Branch,  Next: M68K-Chars,  Up: M68K-opcodes
 
 Certain pseudo opcodes are permitted for branch instructions.  They
 expand to the shortest branch instruction that reach the target.
-Generally these mnemonics are made by substituting `j' for `b' at the
+Generally these mnemonics are made by substituting 'j' for 'b' at the
 start of a Motorola mnemonic.
 
-   The following table summarizes the pseudo-operations.  A `*' flags
+   The following table summarizes the pseudo-operations.  A '*' flags
 cases that are more fully described after the table:
 
                Displacement
@@ -13641,36 +13306,37 @@ cases that are more fully described after the table:
 
      XX: condition
      NX: negative of condition XX
-                       `*'--see full description below
-         `**'--this expansion mode is disallowed by `--pcrel'
 
-`jbsr'
-`jra'
+                    '*'--see full description below
+         '**'--this expansion mode is disallowed by '--pcrel'
+
+'jbsr'
+'jra'
      These are the simplest jump pseudo-operations; they always map to
      one particular machine instruction, depending on the displacement
      to the branch target.  This instruction will be a byte or word
      branch is that is sufficient.  Otherwise, a long branch will be
      emitted if available.  If no long branches are available and the
-     `--pcrel' option is not given, an absolute long jump will be
-     emitted instead.  If no long branches are available, the `--pcrel'
+     '--pcrel' option is not given, an absolute long jump will be
+     emitted instead.  If no long branches are available, the '--pcrel'
      option is given, and a word branch cannot reach the target, an
      error message is generated.
 
-     In addition to standard branch operands, `as' allows these
-     pseudo-operations to have all operands that are allowed for jsr
-     and jmp, substituting these instructions if the operand given is
-     not valid for a branch instruction.
+     In addition to standard branch operands, 'as' allows these
+     pseudo-operations to have all operands that are allowed for jsr and
+     jmp, substituting these instructions if the operand given is not
+     valid for a branch instruction.
 
-`jXX'
-     Here, `jXX' stands for an entire family of pseudo-operations,
-     where XX is a conditional branch or condition-code test.  The full
-     list of pseudo-ops in this family is:
+'jXX'
+     Here, 'jXX' stands for an entire family of pseudo-operations, where
+     XX is a conditional branch or condition-code test.  The full list
+     of pseudo-ops in this family is:
            jhi   jls   jcc   jcs   jne   jeq   jvc
            jvs   jpl   jmi   jge   jlt   jgt   jle
 
      Usually, each of these pseudo-operations expands to a single branch
      instruction.  However, if a word branch is not sufficient, no long
-     branches are available, and the `--pcrel' option is not given, `as'
+     branches are available, and the '--pcrel' option is not given, 'as'
      issues a longer code fragment in terms of NX, the opposite
      condition to XX.  For example, under these conditions:
               jXX foo
@@ -13679,30 +13345,30 @@ cases that are more fully described after the table:
                jmp foo
            oof:
 
-`dbXX'
+'dbXX'
      The full family of pseudo-operations covered here is
            dbhi   dbls   dbcc   dbcs   dbne   dbeq   dbvc
            dbvs   dbpl   dbmi   dbge   dblt   dbgt   dble
            dbf    dbra   dbt
 
-     Motorola `dbXX' instructions allow word displacements only.  When
-     a word displacement is sufficient, each of these pseudo-operations
+     Motorola 'dbXX' instructions allow word displacements only.  When a
+     word displacement is sufficient, each of these pseudo-operations
      expands to the corresponding Motorola instruction.  When a word
      displacement is not sufficient and long branches are available,
-     when the source reads `dbXX foo', `as' emits
+     when the source reads 'dbXX foo', 'as' emits
                dbXX oo1
                bras oo2
            oo1:bral foo
            oo2:
 
-     If, however, long branches are not available and the `--pcrel'
-     option is not given, `as' emits
+     If, however, long branches are not available and the '--pcrel'
+     option is not given, 'as' emits
                dbXX oo1
                bras oo2
            oo1:jmp foo
            oo2:
 
-`fjXX'
+'fjXX'
      This family includes
            fjne   fjeq   fjge   fjlt   fjgt   fjle   fjf
            fjt    fjgl   fjgle  fjnge  fjngl  fjngle fjngt
@@ -13715,29 +13381,28 @@ cases that are more fully described after the table:
      coprocessor branch instructions allow both word and long
      displacements.
 
-
 
 File: as.info,  Node: M68K-Chars,  Prev: M68K-Branch,  Up: M68K-opcodes
 
 9.23.6.2 Special Characters
 ...........................
 
-Line comments are introduced by the `|' character appearing anywhere on
-a line, unless the `--bitwise-or' command line option has been
+Line comments are introduced by the '|' character appearing anywhere on
+a line, unless the '--bitwise-or' command line option has been
 specified.
 
-   An asterisk (`*') as the first character on a line marks the start
-of a line comment as well.
+   An asterisk ('*') as the first character on a line marks the start of
+a line comment as well.
 
-   A hash character (`#') as the first character on a line also marks
-the start of a line comment, but in this case it could also be a
-logical line number directive (*note Comments::) or a preprocessor
-control command (*note Preprocessing::).  If the hash character appears
+   A hash character ('#') as the first character on a line also marks
+the start of a line comment, but in this case it could also be a logical
+line number directive (*note Comments::) or a preprocessor control
+command (*note Preprocessing::).  If the hash character appears
 elsewhere on a line it is used to introduce an immediate value.  (This
 is for compatibility with Sun's assembler).
 
    Multiple statements on the same line can appear if they are separated
-by the `;' character.
+by the ';' character.
 
 
 File: as.info,  Node: M68HC11-Dependent,  Next: Meta-Dependent,  Prev: M68K-Dependent,  Up: Machine Dependencies
@@ -13760,102 +13425,101 @@ File: as.info,  Node: M68HC11-Opts,  Next: M68HC11-Syntax,  Up: M68HC11-Dependen
 9.24.1 M68HC11 and M68HC12 Options
 ----------------------------------
 
-The Motorola 68HC11 and 68HC12 version of `as' have a few machine
+The Motorola 68HC11 and 68HC12 version of 'as' have a few machine
 dependent options.
 
-`-m68hc11'
-     This option switches the assembler into the M68HC11 mode. In this
-     mode, the assembler only accepts 68HC11 operands and mnemonics. It
+'-m68hc11'
+     This option switches the assembler into the M68HC11 mode.  In this
+     mode, the assembler only accepts 68HC11 operands and mnemonics.  It
      produces code for the 68HC11.
 
-`-m68hc12'
-     This option switches the assembler into the M68HC12 mode. In this
-     mode, the assembler also accepts 68HC12 operands and mnemonics. It
-     produces code for the 68HC12. A few 68HC11 instructions are
+'-m68hc12'
+     This option switches the assembler into the M68HC12 mode.  In this
+     mode, the assembler also accepts 68HC12 operands and mnemonics.  It
+     produces code for the 68HC12.  A few 68HC11 instructions are
      replaced by some 68HC12 instructions as recommended by Motorola
      specifications.
 
-`-m68hcs12'
+'-m68hcs12'
      This option switches the assembler into the M68HCS12 mode.  This
-     mode is similar to `-m68hc12' but specifies to assemble for the
+     mode is similar to '-m68hc12' but specifies to assemble for the
      68HCS12 series.  The only difference is on the assembling of the
-     `movb' and `movw' instruction when a PC-relative operand is used.
+     'movb' and 'movw' instruction when a PC-relative operand is used.
 
-`-mm9s12x'
-     This option switches the assembler into the M9S12X mode.  This
-     mode is similar to `-m68hc12' but specifies to assemble for the
-     S12X series which is a superset of the HCS12.
+'-mm9s12x'
+     This option switches the assembler into the M9S12X mode.  This mode
+     is similar to '-m68hc12' but specifies to assemble for the S12X
+     series which is a superset of the HCS12.
 
-`-mm9s12xg'
+'-mm9s12xg'
      This option switches the assembler into the XGATE mode for the RISC
      co-processor featured on some S12X-family chips.
 
-`--xgate-ramoffset'
+'--xgate-ramoffset'
      This option instructs the linker to offset RAM addresses from S12X
      address space into XGATE address space.
 
-`-mshort'
+'-mshort'
      This option controls the ABI and indicates to use a 16-bit integer
-     ABI.  It has no effect on the assembled instructions.  This is the
+     ABI. It has no effect on the assembled instructions.  This is the
      default.
 
-`-mlong'
+'-mlong'
      This option controls the ABI and indicates to use a 32-bit integer
      ABI.
 
-`-mshort-double'
+'-mshort-double'
      This option controls the ABI and indicates to use a 32-bit float
-     ABI.  This is the default.
+     ABI. This is the default.
 
-`-mlong-double'
+'-mlong-double'
      This option controls the ABI and indicates to use a 64-bit float
      ABI.
 
-`--strict-direct-mode'
-     You can use the `--strict-direct-mode' option to disable the
+'--strict-direct-mode'
+     You can use the '--strict-direct-mode' option to disable the
      automatic translation of direct page mode addressing into extended
      mode when the instruction does not support direct mode.  For
-     example, the `clr' instruction does not support direct page mode
-     addressing. When it is used with the direct page mode, `as' will
+     example, the 'clr' instruction does not support direct page mode
+     addressing.  When it is used with the direct page mode, 'as' will
      ignore it and generate an absolute addressing.  This option
-     prevents `as' from doing this, and the wrong usage of the direct
+     prevents 'as' from doing this, and the wrong usage of the direct
      page mode will raise an error.
 
-`--short-branches'
-     The `--short-branches' option turns off the translation of
-     relative branches into absolute branches when the branch offset is
-     out of range. By default `as' transforms the relative branch
-     (`bsr', `bgt', `bge', `beq', `bne', `ble', `blt', `bhi', `bcc',
-     `bls', `bcs', `bmi', `bvs', `bvs', `bra') into an absolute branch
-     when the offset is out of the -128 .. 127 range.  In that case,
-     the `bsr' instruction is translated into a `jsr', the `bra'
-     instruction is translated into a `jmp' and the conditional
-     branches instructions are inverted and followed by a `jmp'. This
-     option disables these translations and `as' will generate an error
-     if a relative branch is out of range. This option does not affect
-     the optimization associated to the `jbra', `jbsr' and `jbXX'
+'--short-branches'
+     The '--short-branches' option turns off the translation of relative
+     branches into absolute branches when the branch offset is out of
+     range.  By default 'as' transforms the relative branch ('bsr',
+     'bgt', 'bge', 'beq', 'bne', 'ble', 'blt', 'bhi', 'bcc', 'bls',
+     'bcs', 'bmi', 'bvs', 'bvs', 'bra') into an absolute branch when the
+     offset is out of the -128 ..  127 range.  In that case, the 'bsr'
+     instruction is translated into a 'jsr', the 'bra' instruction is
+     translated into a 'jmp' and the conditional branches instructions
+     are inverted and followed by a 'jmp'.  This option disables these
+     translations and 'as' will generate an error if a relative branch
+     is out of range.  This option does not affect the optimization
+     associated to the 'jbra', 'jbsr' and 'jbXX' pseudo opcodes.
+
+'--force-long-branches'
+     The '--force-long-branches' option forces the translation of
+     relative branches into absolute branches.  This option does not
+     affect the optimization associated to the 'jbra', 'jbsr' and 'jbXX'
      pseudo opcodes.
 
-`--force-long-branches'
-     The `--force-long-branches' option forces the translation of
-     relative branches into absolute branches. This option does not
-     affect the optimization associated to the `jbra', `jbsr' and
-     `jbXX' pseudo opcodes.
-
-`--print-insn-syntax'
-     You can use the `--print-insn-syntax' option to obtain the syntax
+'--print-insn-syntax'
+     You can use the '--print-insn-syntax' option to obtain the syntax
      description of the instruction when an error is detected.
 
-`--print-opcodes'
-     The `--print-opcodes' option prints the list of all the
-     instructions with their syntax. The first item of each line
+'--print-opcodes'
+     The '--print-opcodes' option prints the list of all the
+     instructions with their syntax.  The first item of each line
      represents the instruction name and the rest of the line indicates
-     the possible operands for that instruction. The list is printed in
-     alphabetical order. Once the list is printed `as' exits.
+     the possible operands for that instruction.  The list is printed in
+     alphabetical order.  Once the list is printed 'as' exits.
 
-`--generate-example'
-     The `--generate-example' option is similar to `--print-opcodes'
-     but it generates an example for each instruction instead.
+'--generate-example'
+     The '--generate-example' option is similar to '--print-opcodes' but
+     it generates an example for each instruction instead.
 
 
 File: as.info,  Node: M68HC11-Syntax,  Next: M68HC11-Modifiers,  Prev: M68HC11-Opts,  Up: M68HC11-Dependent
@@ -13864,23 +13528,22 @@ File: as.info,  Node: M68HC11-Syntax,  Next: M68HC11-Modifiers,  Prev: M68HC11-O
 -------------
 
 In the M68HC11 syntax, the instruction name comes first and it may be
-followed by one or several operands (up to three). Operands are
-separated by comma (`,'). In the normal mode, `as' will complain if too
-many operands are specified for a given instruction. In the MRI mode
-(turned on with `-M' option), it will treat them as comments. Example:
+followed by one or several operands (up to three).  Operands are
+separated by comma (',').  In the normal mode, 'as' will complain if too
+many operands are specified for a given instruction.  In the MRI mode
+(turned on with '-M' option), it will treat them as comments.  Example:
 
      inx
      lda  #23
      bset 2,x #4
      brclr *bot #8 foo
 
-   The presence of a `;' character or a `!' character anywhere on a
-line indicates the start of a comment that extends to the end of that
-line.
+   The presence of a ';' character or a '!' character anywhere on a line
+indicates the start of a comment that extends to the end of that line.
 
-   A `*' or a `#' character at the start of a line also introduces a
+   A '*' or a '#' character at the start of a line also introduces a
 line comment, but these characters do not work elsewhere on the line.
-If the first character of the line is a `#' then as well as starting a
+If the first character of the line is a '#' then as well as starting a
 comment, the line could also be logical line number directive (*note
 Comments::) or a preprocessor control command (*note Preprocessing::).
 
@@ -13889,55 +13552,54 @@ character.
 
    The following addressing modes are understood for 68HC11 and 68HC12:
 "Immediate"
-     `#NUMBER'
+     '#NUMBER'
 
 "Address Register"
-     `NUMBER,X', `NUMBER,Y'
+     'NUMBER,X', 'NUMBER,Y'
 
      The NUMBER may be omitted in which case 0 is assumed.
 
 "Direct Addressing mode"
-     `*SYMBOL', or `*DIGITS'
+     '*SYMBOL', or '*DIGITS'
 
 "Absolute"
-     `SYMBOL', or `DIGITS'
+     'SYMBOL', or 'DIGITS'
 
-   The M68HC12 has other more complex addressing modes. All of them are
+   The M68HC12 has other more complex addressing modes.  All of them are
 supported and they are represented below:
 
 "Constant Offset Indexed Addressing Mode"
-     `NUMBER,REG'
+     'NUMBER,REG'
 
-     The NUMBER may be omitted in which case 0 is assumed.  The
-     register can be either `X', `Y', `SP' or `PC'.  The assembler will
-     use the smaller post-byte definition according to the constant
-     value (5-bit constant offset, 9-bit constant offset or 16-bit
-     constant offset).  If the constant is not known by the assembler
-     it will use the 16-bit constant offset post-byte and the value
-     will be resolved at link time.
+     The NUMBER may be omitted in which case 0 is assumed.  The register
+     can be either 'X', 'Y', 'SP' or 'PC'.  The assembler will use the
+     smaller post-byte definition according to the constant value (5-bit
+     constant offset, 9-bit constant offset or 16-bit constant offset).
+     If the constant is not known by the assembler it will use the
+     16-bit constant offset post-byte and the value will be resolved at
+     link time.
 
 "Offset Indexed Indirect"
-     `[NUMBER,REG]'
+     '[NUMBER,REG]'
 
-     The register can be either `X', `Y', `SP' or `PC'.
+     The register can be either 'X', 'Y', 'SP' or 'PC'.
 
 "Auto Pre-Increment/Pre-Decrement/Post-Increment/Post-Decrement"
-     `NUMBER,-REG' `NUMBER,+REG' `NUMBER,REG-' `NUMBER,REG+'
+     'NUMBER,-REG' 'NUMBER,+REG' 'NUMBER,REG-' 'NUMBER,REG+'
 
-     The number must be in the range `-8'..`+8' and must not be 0.  The
-     register can be either `X', `Y', `SP' or `PC'.
+     The number must be in the range '-8'..'+8' and must not be 0.  The
+     register can be either 'X', 'Y', 'SP' or 'PC'.
 
 "Accumulator Offset"
-     `ACC,REG'
+     'ACC,REG'
 
-     The accumulator register can be either `A', `B' or `D'.  The
-     register can be either `X', `Y', `SP' or `PC'.
+     The accumulator register can be either 'A', 'B' or 'D'.  The
+     register can be either 'X', 'Y', 'SP' or 'PC'.
 
 "Accumulator D offset indexed-indirect"
-     `[D,REG]'
-
-     The register can be either `X', `Y', `SP' or `PC'.
+     '[D,REG]'
 
+     The register can be either 'X', 'Y', 'SP' or 'PC'.
 
    For example:
 
@@ -13960,33 +13622,32 @@ following:
 
      %modifier(symbol)
 
-`%addr'
+'%addr'
      This modifier indicates to the assembler and linker to use the
      16-bit physical address corresponding to the symbol.  This is
-     intended to be used on memory window systems to map a symbol in
-     the memory bank window.  If the symbol is in a memory expansion
-     part, the physical address corresponds to the symbol address
-     within the memory bank window.  If the symbol is not in a memory
-     expansion part, this is the symbol address (using or not using the
-     %addr modifier has no effect in that case).
-
-`%page'
+     intended to be used on memory window systems to map a symbol in the
+     memory bank window.  If the symbol is in a memory expansion part,
+     the physical address corresponds to the symbol address within the
+     memory bank window.  If the symbol is not in a memory expansion
+     part, this is the symbol address (using or not using the %addr
+     modifier has no effect in that case).
+
+'%page'
      This modifier indicates to use the memory page number corresponding
      to the symbol.  If the symbol is in a memory expansion part, its
      page number is computed by the linker as a number used to map the
      page containing the symbol in the memory bank window.  If the
      symbol is not in a memory expansion part, the page number is 0.
 
-`%hi'
+'%hi'
      This modifier indicates to use the 8-bit high part of the physical
      address of the symbol.
 
-`%lo'
+'%lo'
      This modifier indicates to use the 8-bit low part of the physical
      address of the symbol.
 
-
-   For example a 68HC12 call to a function `foo_example' stored in
+   For example a 68HC12 call to a function 'foo_example' stored in
 memory expansion part could be written as follows:
 
      call %addr(foo_example),%page(foo_example)
@@ -14007,35 +13668,34 @@ File: as.info,  Node: M68HC11-Directives,  Next: M68HC11-Float,  Prev: M68HC11-M
 9.24.4 Assembler Directives
 ---------------------------
 
-The 68HC11 and 68HC12 version of `as' have the following specific
+The 68HC11 and 68HC12 version of 'as' have the following specific
 assembler directives:
 
-`.relax'
-     The relax directive is used by the `GNU Compiler' to emit a
+'.relax'
+     The relax directive is used by the 'GNU Compiler' to emit a
      specific relocation to mark a group of instructions for linker
      relaxation.  The sequence of instructions within the group must be
      known to the linker so that relaxation can be performed.
 
-`.mode [mshort|mlong|mshort-double|mlong-double]'
-     This directive specifies the ABI.  It overrides the `-mshort',
-     `-mlong', `-mshort-double' and `-mlong-double' options.
+'.mode [mshort|mlong|mshort-double|mlong-double]'
+     This directive specifies the ABI. It overrides the '-mshort',
+     '-mlong', '-mshort-double' and '-mlong-double' options.
 
-`.far SYMBOL'
-     This directive marks the symbol as a `far' symbol meaning that it
-     uses a `call/rtc' calling convention as opposed to `jsr/rts'.
+'.far SYMBOL'
+     This directive marks the symbol as a 'far' symbol meaning that it
+     uses a 'call/rtc' calling convention as opposed to 'jsr/rts'.
      During a final link, the linker will identify references to the
-     `far' symbol and will verify the proper calling convention.
+     'far' symbol and will verify the proper calling convention.
 
-`.interrupt SYMBOL'
+'.interrupt SYMBOL'
      This directive marks the symbol as an interrupt entry point.  This
      information is then used by the debugger to correctly unwind the
      frame across interrupts.
 
-`.xrefb SYMBOL'
-     This directive is defined for compatibility with the
-     `Specification for Motorola 8 and 16-Bit Assembly Language Input
-     Standard' and is ignored.
-
+'.xrefb SYMBOL'
+     This directive is defined for compatibility with the 'Specification
+     for Motorola 8 and 16-Bit Assembly Language Input Standard' and is
+     ignored.
 
 
 File: as.info,  Node: M68HC11-Float,  Next: M68HC11-opcodes,  Prev: M68HC11-Directives,  Up: M68HC11-Dependent
@@ -14048,15 +13708,15 @@ free to add the code!
 
    The floating point formats generated by directives are these.
 
-`.float'
-     `Single' precision floating point constants.
+'.float'
+     'Single' precision floating point constants.
 
-`.double'
-     `Double' precision floating point constants.
+'.double'
+     'Double' precision floating point constants.
 
-`.extend'
-`.ldouble'
-     `Extended' precision (`long double') floating point constants.
+'.extend'
+'.ldouble'
+     'Extended' precision ('long double') floating point constants.
 
 
 File: as.info,  Node: M68HC11-opcodes,  Prev: M68HC11-Float,  Up: M68HC11-Dependent
@@ -14076,9 +13736,9 @@ File: as.info,  Node: M68HC11-Branch,  Up: M68HC11-opcodes
 
 Certain pseudo opcodes are permitted for branch instructions.  They
 expand to the shortest branch instruction that reach the target.
-Generally these mnemonics are made by prepending `j' to the start of
-Motorola mnemonic. These pseudo opcodes are not affected by the
-`--short-branches' or `--force-long-branches' options.
+Generally these mnemonics are made by prepending 'j' to the start of
+Motorola mnemonic.  These pseudo opcodes are not affected by the
+'--short-branches' or '--force-long-branches' options.
 
    The following table summarizes the pseudo-operations.
 
@@ -14100,30 +13760,30 @@ Motorola mnemonic. These pseudo opcodes are not affected by the
      XX: condition
      NX: negative of condition XX
 
-`jbsr'
-`jbra'
+
+'jbsr'
+'jbra'
      These are the simplest jump pseudo-operations; they always map to
      one particular machine instruction, depending on the displacement
      to the branch target.
 
-`jbXX'
-     Here, `jbXX' stands for an entire family of pseudo-operations,
+'jbXX'
+     Here, 'jbXX' stands for an entire family of pseudo-operations,
      where XX is a conditional branch or condition-code test.  The full
      list of pseudo-ops in this family is:
            jbcc   jbeq   jbge   jbgt   jbhi   jbvs   jbpl  jblo
            jbcs   jbne   jblt   jble   jbls   jbvc   jbmi
 
      For the cases of non-PC relative displacements and long
-     displacements, `as' issues a longer code fragment in terms of NX,
-     the opposite condition to XX.  For example, for the non-PC
-     relative case:
+     displacements, 'as' issues a longer code fragment in terms of NX,
+     the opposite condition to XX.  For example, for the non-PC relative
+     case:
               jbXX foo
      gives
                bNXs oof
                jmp foo
            oof:
 
-
 
 File: as.info,  Node: Meta-Dependent,  Next: MicroBlaze-Dependent,  Prev: M68HC11-Dependent,  Up: Machine Dependencies
 
@@ -14143,24 +13803,23 @@ File: as.info,  Node: Meta Options,  Next: Meta Syntax,  Up: Meta-Dependent
 
 The Imagination Technologies Meta architecture is implemented in a
 number of versions, with each new version adding new features such as
-instructions and registers. For precise details of what instructions
+instructions and registers.  For precise details of what instructions
 each core supports, please see the chip's technical reference manual.
 
    The following table lists all available Meta options.
 
-`-mcpu=metac11'
+'-mcpu=metac11'
      Generate code for Meta 1.1.
 
-`-mcpu=metac12'
+'-mcpu=metac12'
      Generate code for Meta 1.2.
 
-`-mcpu=metac21'
+'-mcpu=metac21'
      Generate code for Meta 2.1.
 
-`-mfpu=metac21'
+'-mfpu=metac21'
      Allow code to use FPU hardware of Meta 2.1.
 
-
 
 File: as.info,  Node: Meta Syntax,  Prev: Meta Options,  Up: Meta-Dependent
 
@@ -14178,11 +13837,11 @@ File: as.info,  Node: Meta-Chars,  Next: Meta-Regs,  Up: Meta Syntax
 9.25.2.1 Special Characters
 ...........................
 
-`!' is the line comment character.
+'!' is the line comment character.
 
-   You can use `;' instead of a newline to separate statements.
+   You can use ';' instead of a newline to separate statements.
 
-   Since `$' has no special meaning, you may use it in symbol names.
+   Since '$' has no special meaning, you may use it in symbol names.
 
 
 File: as.info,  Node: Meta-Regs,  Prev: Meta-Chars,  Up: Meta Syntax
@@ -14191,8 +13850,8 @@ File: as.info,  Node: Meta-Regs,  Prev: Meta-Chars,  Up: Meta Syntax
 .......................
 
 Registers can be specified either using their mnemonic names, such as
-`D0Re0', or using the unit plus register number separated by a `.',
-such as `D0.0'.
+'D0Re0', or using the unit plus register number separated by a '.', such
+as 'D0.0'.
 
 
 File: as.info,  Node: MicroBlaze-Dependent,  Next: MIPS-Dependent,  Prev: Meta-Dependent,  Up: Machine Dependencies
@@ -14200,12 +13859,11 @@ File: as.info,  Node: MicroBlaze-Dependent,  Next: MIPS-Dependent,  Prev: Meta-D
 9.26 MicroBlaze Dependent Features
 ==================================
 
-   The Xilinx MicroBlaze processor family includes several variants,
-all using the same core instruction set.  This chapter covers features
-of the GNU assembler that are specific to the MicroBlaze architecture.
-For details about the MicroBlaze instruction set, please see the
-`MicroBlaze Processor Reference Guide (UG081)' available at
-www.xilinx.com.
+The Xilinx MicroBlaze processor family includes several variants, all
+using the same core instruction set.  This chapter covers features of
+the GNU assembler that are specific to the MicroBlaze architecture.  For
+details about the MicroBlaze instruction set, please see the 'MicroBlaze
+Processor Reference Guide (UG081)' available at www.xilinx.com.
 
 * Menu:
 
@@ -14220,47 +13878,47 @@ File: as.info,  Node: MicroBlaze Directives,  Next: MicroBlaze Syntax,  Up: Micr
 
 A number of assembler directives are available for MicroBlaze.
 
-`.data8 EXPRESSION,...'
-     This directive is an alias for `.byte'. Each expression is
+'.data8 EXPRESSION,...'
+     This directive is an alias for '.byte'.  Each expression is
      assembled into an eight-bit value.
 
-`.data16 EXPRESSION,...'
-     This directive is an alias for `.hword'. Each expression is
+'.data16 EXPRESSION,...'
+     This directive is an alias for '.hword'.  Each expression is
      assembled into an 16-bit value.
 
-`.data32 EXPRESSION,...'
-     This directive is an alias for `.word'. Each expression is
+'.data32 EXPRESSION,...'
+     This directive is an alias for '.word'.  Each expression is
      assembled into an 32-bit value.
 
-`.ent NAME[,LABEL]'
-     This directive is an alias for `.func' denoting the start of
+'.ent NAME[,LABEL]'
+     This directive is an alias for '.func' denoting the start of
      function NAME at (optional) LABEL.
 
-`.end NAME[,LABEL]'
-     This directive is an alias for `.endfunc' denoting the end of
+'.end NAME[,LABEL]'
+     This directive is an alias for '.endfunc' denoting the end of
      function NAME.
 
-`.gpword LABEL,...'
-     This directive is an alias for `.rva'.  The resolved address of
+'.gpword LABEL,...'
+     This directive is an alias for '.rva'.  The resolved address of
      LABEL is stored in the data section.
 
-`.weakext LABEL'
+'.weakext LABEL'
      Declare that LABEL is a weak external symbol.
 
-`.rodata'
-     Switch to .rodata section. Equivalent to `.section .rodata'
+'.rodata'
+     Switch to .rodata section.  Equivalent to '.section .rodata'
 
-`.sdata2'
-     Switch to .sdata2 section. Equivalent to `.section .sdata2'
+'.sdata2'
+     Switch to .sdata2 section.  Equivalent to '.section .sdata2'
 
-`.sdata'
-     Switch to .sdata section. Equivalent to `.section .sdata'
+'.sdata'
+     Switch to .sdata section.  Equivalent to '.section .sdata'
 
-`.bss'
-     Switch to .bss section. Equivalent to `.section .bss'
+'.bss'
+     Switch to .bss section.  Equivalent to '.section .bss'
 
-`.sbss'
-     Switch to .sbss section. Equivalent to `.section .sbss'
+'.sbss'
+     Switch to .sbss section.  Equivalent to '.section .sbss'
 
 
 File: as.info,  Node: MicroBlaze Syntax,  Prev: MicroBlaze Directives,  Up: MicroBlaze-Dependent
@@ -14278,15 +13936,15 @@ File: as.info,  Node: MicroBlaze-Chars,  Up: MicroBlaze Syntax
 9.26.2.1 Special Characters
 ...........................
 
-The presence of a `#' on a line indicates the start of a comment that
+The presence of a '#' on a line indicates the start of a comment that
 extends to the end of the current line.
 
-   If a `#' appears as the first character of a line, the whole line is
+   If a '#' appears as the first character of a line, the whole line is
 treated as a comment, but in this case the line can also be a logical
 line number directive (*note Comments::) or a preprocessor control
 command (*note Preprocessing::).
 
-   The `;' character can be used to separate statements on the same
+   The ';' character can be used to separate statements on the same
 line.
 
 
@@ -14295,9 +13953,9 @@ File: as.info,  Node: MIPS-Dependent,  Next: MMIX-Dependent,  Prev: MicroBlaze-D
 9.27 MIPS Dependent Features
 ============================
 
-   GNU `as' for MIPS architectures supports several different MIPS
+GNU 'as' for MIPS architectures supports several different MIPS
 processors, and MIPS ISA levels I through V, MIPS32, and MIPS64.  For
-information about the MIPS instruction set, see `MIPS RISC
+information about the MIPS instruction set, see 'MIPS RISC
 Architecture', by Kane and Heindrich (Prentice-Hall).  For an overview
 of MIPS assembly conventions, see "Appendix D: Assembly Language
 Programming" in the same work.
@@ -14326,261 +13984,261 @@ File: as.info,  Node: MIPS Options,  Next: MIPS Macros,  Up: MIPS-Dependent
 9.27.1 Assembler options
 ------------------------
 
-The MIPS configurations of GNU `as' support these special options:
+The MIPS configurations of GNU 'as' support these special options:
 
-`-G NUM'
+'-G NUM'
      Set the "small data" limit to N bytes.  The default limit is 8
      bytes.  *Note Controlling the use of small data accesses: MIPS
      Small Data.
 
-`-EB'
-`-EL'
-     Any MIPS configuration of `as' can select big-endian or
+'-EB'
+'-EL'
+     Any MIPS configuration of 'as' can select big-endian or
      little-endian output at run time (unlike the other GNU development
-     tools, which must be configured for one or the other).  Use `-EB'
-     to select big-endian output, and `-EL' for little-endian.
+     tools, which must be configured for one or the other).  Use '-EB'
+     to select big-endian output, and '-EL' for little-endian.
 
-`-KPIC'
-     Generate SVR4-style PIC.  This option tells the assembler to
-     generate SVR4-style position-independent macro expansions.  It
-     also tells the assembler to mark the output file as PIC.
+'-KPIC'
+     Generate SVR4-style PIC. This option tells the assembler to
+     generate SVR4-style position-independent macro expansions.  It also
+     tells the assembler to mark the output file as PIC.
 
-`-mvxworks-pic'
-     Generate VxWorks PIC.  This option tells the assembler to generate
+'-mvxworks-pic'
+     Generate VxWorks PIC. This option tells the assembler to generate
      VxWorks-style position-independent macro expansions.
 
-`-mips1'
-`-mips2'
-`-mips3'
-`-mips4'
-`-mips5'
-`-mips32'
-`-mips32r2'
-`-mips32r3'
-`-mips32r5'
-`-mips32r6'
-`-mips64'
-`-mips64r2'
-`-mips64r3'
-`-mips64r5'
-`-mips64r6'
+'-mips1'
+'-mips2'
+'-mips3'
+'-mips4'
+'-mips5'
+'-mips32'
+'-mips32r2'
+'-mips32r3'
+'-mips32r5'
+'-mips32r6'
+'-mips64'
+'-mips64r2'
+'-mips64r3'
+'-mips64r5'
+'-mips64r6'
      Generate code for a particular MIPS Instruction Set Architecture
-     level.  `-mips1' corresponds to the R2000 and R3000 processors,
-     `-mips2' to the R6000 processor, `-mips3' to the R4000 processor,
-     and `-mips4' to the R8000 and R10000 processors.  `-mips5',
-     `-mips32', `-mips32r2', `-mips32r3', `-mips32r5', `-mips32r6',
-     `-mips64', `-mips64r2', `-mips64r3', `-mips64r5', and `-mips64r6'
+     level.  '-mips1' corresponds to the R2000 and R3000 processors,
+     '-mips2' to the R6000 processor, '-mips3' to the R4000 processor,
+     and '-mips4' to the R8000 and R10000 processors.  '-mips5',
+     '-mips32', '-mips32r2', '-mips32r3', '-mips32r5', '-mips32r6',
+     '-mips64', '-mips64r2', '-mips64r3', '-mips64r5', and '-mips64r6'
      correspond to generic MIPS V, MIPS32, MIPS32 Release 2, MIPS32
      Release 3, MIPS32 Release 5, MIPS32 Release 6, MIPS64, and MIPS64
-     Release 2, MIPS64 Release 3, MIPS64 Release 5, and MIPS64 Release
-     6 ISA processors, respectively.  You can also switch instruction
-     sets during the assembly; see *Note Directives to override the ISA
+     Release 2, MIPS64 Release 3, MIPS64 Release 5, and MIPS64 Release 6
+     ISA processors, respectively.  You can also switch instruction sets
+     during the assembly; see *note Directives to override the ISA
      level: MIPS ISA.
 
-`-mgp32'
-`-mfp32'
+'-mgp32'
+'-mfp32'
      Some macros have different expansions for 32-bit and 64-bit
      registers.  The register sizes are normally inferred from the ISA
      and ABI, but these flags force a certain group of registers to be
-     treated as 32 bits wide at all times.  `-mgp32' controls the size
-     of general-purpose registers and `-mfp32' controls the size of
+     treated as 32 bits wide at all times.  '-mgp32' controls the size
+     of general-purpose registers and '-mfp32' controls the size of
      floating-point registers.
 
-     The `.set gp=32' and `.set fp=32' directives allow the size of
-     registers to be changed for parts of an object. The default value
-     is restored by `.set gp=default' and `.set fp=default'.
+     The '.set gp=32' and '.set fp=32' directives allow the size of
+     registers to be changed for parts of an object.  The default value
+     is restored by '.set gp=default' and '.set fp=default'.
 
      On some MIPS variants there is a 32-bit mode flag; when this flag
      is set, 64-bit instructions generate a trap.  Also, some 32-bit
      OSes only save the 32-bit registers on a context switch, so it is
      essential never to use the 64-bit registers.
 
-`-mgp64'
-`-mfp64'
+'-mgp64'
+'-mfp64'
      Assume that 64-bit registers are available.  This is provided in
-     the interests of symmetry with `-mgp32' and `-mfp32'.
+     the interests of symmetry with '-mgp32' and '-mfp32'.
 
-     The `.set gp=64' and `.set fp=64' directives allow the size of
-     registers to be changed for parts of an object. The default value
-     is restored by `.set gp=default' and `.set fp=default'.
+     The '.set gp=64' and '.set fp=64' directives allow the size of
+     registers to be changed for parts of an object.  The default value
+     is restored by '.set gp=default' and '.set fp=default'.
 
-`-mfpxx'
+'-mfpxx'
      Make no assumptions about whether 32-bit or 64-bit floating-point
-     registers are available. This is provided to support having modules
-     compatible with either `-mfp32' or `-mfp64'. This option can only
-     be used with MIPS II and above.
+     registers are available.  This is provided to support having
+     modules compatible with either '-mfp32' or '-mfp64'.  This option
+     can only be used with MIPS II and above.
 
-     The `.set fp=xx' directive allows a part of an object to be marked
+     The '.set fp=xx' directive allows a part of an object to be marked
      as not making assumptions about 32-bit or 64-bit FP registers.  The
-     default value is restored by `.set fp=default'.
+     default value is restored by '.set fp=default'.
 
-`-modd-spreg'
-`-mno-odd-spreg'
+'-modd-spreg'
+'-mno-odd-spreg'
      Enable use of floating-point operations on odd-numbered
-     single-precision registers when supported by the ISA.  `-mfpxx'
-     implies `-mno-odd-spreg', otherwise the default is `-modd-spreg'
+     single-precision registers when supported by the ISA. '-mfpxx'
+     implies '-mno-odd-spreg', otherwise the default is '-modd-spreg'
 
-`-mips16'
-`-no-mips16'
+'-mips16'
+'-no-mips16'
      Generate code for the MIPS 16 processor.  This is equivalent to
-     putting `.set mips16' at the start of the assembly file.
-     `-no-mips16' turns off this option.
+     putting '.set mips16' at the start of the assembly file.
+     '-no-mips16' turns off this option.
 
-`-mmicromips'
-`-mno-micromips'
+'-mmicromips'
+'-mno-micromips'
      Generate code for the microMIPS processor.  This is equivalent to
-     putting `.set micromips' at the start of the assembly file.
-     `-mno-micromips' turns off this option.  This is equivalent to
-     putting `.set nomicromips' at the start of the assembly file.
+     putting '.set micromips' at the start of the assembly file.
+     '-mno-micromips' turns off this option.  This is equivalent to
+     putting '.set nomicromips' at the start of the assembly file.
 
-`-msmartmips'
-`-mno-smartmips'
+'-msmartmips'
+'-mno-smartmips'
      Enables the SmartMIPS extensions to the MIPS32 instruction set,
      which provides a number of new instructions which target smartcard
      and cryptographic applications.  This is equivalent to putting
-     `.set smartmips' at the start of the assembly file.
-     `-mno-smartmips' turns off this option.
+     '.set smartmips' at the start of the assembly file.
+     '-mno-smartmips' turns off this option.
 
-`-mips3d'
-`-no-mips3d'
-     Generate code for the MIPS-3D Application Specific Extension.
-     This tells the assembler to accept MIPS-3D instructions.
-     `-no-mips3d' turns off this option.
+'-mips3d'
+'-no-mips3d'
+     Generate code for the MIPS-3D Application Specific Extension.  This
+     tells the assembler to accept MIPS-3D instructions.  '-no-mips3d'
+     turns off this option.
 
-`-mdmx'
-`-no-mdmx'
+'-mdmx'
+'-no-mdmx'
      Generate code for the MDMX Application Specific Extension.  This
-     tells the assembler to accept MDMX instructions.  `-no-mdmx' turns
+     tells the assembler to accept MDMX instructions.  '-no-mdmx' turns
      off this option.
 
-`-mdsp'
-`-mno-dsp'
+'-mdsp'
+'-mno-dsp'
      Generate code for the DSP Release 1 Application Specific Extension.
      This tells the assembler to accept DSP Release 1 instructions.
-     `-mno-dsp' turns off this option.
+     '-mno-dsp' turns off this option.
 
-`-mdspr2'
-`-mno-dspr2'
+'-mdspr2'
+'-mno-dspr2'
      Generate code for the DSP Release 2 Application Specific Extension.
-     This option implies `-mdsp'.  This tells the assembler to accept
-     DSP Release 2 instructions.  `-mno-dspr2' turns off this option.
+     This option implies '-mdsp'.  This tells the assembler to accept
+     DSP Release 2 instructions.  '-mno-dspr2' turns off this option.
 
-`-mdspr3'
-`-mno-dspr3'
+'-mdspr3'
+'-mno-dspr3'
      Generate code for the DSP Release 3 Application Specific Extension.
-     This option implies `-mdsp' and `-mdspr2'.  This tells the
-     assembler to accept DSP Release 3 instructions.  `-mno-dspr3'
-     turns off this option.
+     This option implies '-mdsp' and '-mdspr2'.  This tells the
+     assembler to accept DSP Release 3 instructions.  '-mno-dspr3' turns
+     off this option.
 
-`-mmt'
-`-mno-mt'
+'-mmt'
+'-mno-mt'
      Generate code for the MT Application Specific Extension.  This
-     tells the assembler to accept MT instructions.  `-mno-mt' turns
-     off this option.
+     tells the assembler to accept MT instructions.  '-mno-mt' turns off
+     this option.
 
-`-mmcu'
-`-mno-mcu'
+'-mmcu'
+'-mno-mcu'
      Generate code for the MCU Application Specific Extension.  This
-     tells the assembler to accept MCU instructions.  `-mno-mcu' turns
+     tells the assembler to accept MCU instructions.  '-mno-mcu' turns
      off this option.
 
-`-mmsa'
-`-mno-msa'
-     Generate code for the MIPS SIMD Architecture Extension.  This
-     tells the assembler to accept MSA instructions.  `-mno-msa' turns
-     off this option.
+'-mmsa'
+'-mno-msa'
+     Generate code for the MIPS SIMD Architecture Extension.  This tells
+     the assembler to accept MSA instructions.  '-mno-msa' turns off
+     this option.
 
-`-mxpa'
-`-mno-xpa'
+'-mxpa'
+'-mno-xpa'
      Generate code for the MIPS eXtended Physical Address (XPA)
      Extension.  This tells the assembler to accept XPA instructions.
-     `-mno-xpa' turns off this option.
+     '-mno-xpa' turns off this option.
 
-`-mvirt'
-`-mno-virt'
+'-mvirt'
+'-mno-virt'
      Generate code for the Virtualization Application Specific
      Extension.  This tells the assembler to accept Virtualization
-     instructions.  `-mno-virt' turns off this option.
+     instructions.  '-mno-virt' turns off this option.
 
-`-minsn32'
-`-mno-insn32'
+'-minsn32'
+'-mno-insn32'
      Only use 32-bit instruction encodings when generating code for the
      microMIPS processor.  This option inhibits the use of any 16-bit
-     instructions.  This is equivalent to putting `.set insn32' at the
-     start of the assembly file.  `-mno-insn32' turns off this option.
-     This is equivalent to putting `.set noinsn32' at the start of the
-     assembly file.  By default `-mno-insn32' is selected, allowing all
+     instructions.  This is equivalent to putting '.set insn32' at the
+     start of the assembly file.  '-mno-insn32' turns off this option.
+     This is equivalent to putting '.set noinsn32' at the start of the
+     assembly file.  By default '-mno-insn32' is selected, allowing all
      instructions to be used.
 
-`-mfix7000'
-`-mno-fix7000'
+'-mfix7000'
+'-mno-fix7000'
      Cause nops to be inserted if the read of the destination register
      of an mfhi or mflo instruction occurs in the following two
      instructions.
 
-`-mfix-rm7000'
-`-mno-fix-rm7000'
+'-mfix-rm7000'
+'-mno-fix-rm7000'
      Cause nops to be inserted if a dmult or dmultu instruction is
      followed by a load instruction.
 
-`-mfix-loongson2f-jump'
-`-mno-fix-loongson2f-jump'
-     Eliminate instruction fetch from outside 256M region to work
-     around the Loongson2F `jump' instructions.  Without it, under
-     extreme cases, the kernel may crash.  The issue has been solved in
-     latest processor batches, but this fix has no side effect to them.
-
-`-mfix-loongson2f-nop'
-`-mno-fix-loongson2f-nop'
-     Replace nops by `or at,at,zero' to work around the Loongson2F
-     `nop' errata.  Without it, under extreme cases, the CPU might
-     deadlock.  The issue has been solved in later Loongson2F batches,
-     but this fix has no side effect to them.
-
-`-mfix-vr4120'
-`-mno-fix-vr4120'
+'-mfix-loongson2f-jump'
+'-mno-fix-loongson2f-jump'
+     Eliminate instruction fetch from outside 256M region to work around
+     the Loongson2F 'jump' instructions.  Without it, under extreme
+     cases, the kernel may crash.  The issue has been solved in latest
+     processor batches, but this fix has no side effect to them.
+
+'-mfix-loongson2f-nop'
+'-mno-fix-loongson2f-nop'
+     Replace nops by 'or at,at,zero' to work around the Loongson2F 'nop'
+     errata.  Without it, under extreme cases, the CPU might deadlock.
+     The issue has been solved in later Loongson2F batches, but this fix
+     has no side effect to them.
+
+'-mfix-vr4120'
+'-mno-fix-vr4120'
      Insert nops to work around certain VR4120 errata.  This option is
      intended to be used on GCC-generated code: it is not designed to
      catch all problems in hand-written assembler code.
 
-`-mfix-vr4130'
-`-mno-fix-vr4130'
-     Insert nops to work around the VR4130 `mflo'/`mfhi' errata.
+'-mfix-vr4130'
+'-mno-fix-vr4130'
+     Insert nops to work around the VR4130 'mflo'/'mfhi' errata.
 
-`-mfix-24k'
-`-mno-fix-24k'
-     Insert nops to work around the 24K `eret'/`deret' errata.
+'-mfix-24k'
+'-mno-fix-24k'
+     Insert nops to work around the 24K 'eret'/'deret' errata.
 
-`-mfix-cn63xxp1'
-`-mno-fix-cn63xxp1'
-     Replace `pref' hints 0 - 4 and 6 - 24 with hint 28 to work around
+'-mfix-cn63xxp1'
+'-mno-fix-cn63xxp1'
+     Replace 'pref' hints 0 - 4 and 6 - 24 with hint 28 to work around
      certain CN63XXP1 errata.
 
-`-m4010'
-`-no-m4010'
+'-m4010'
+'-no-m4010'
      Generate code for the LSI R4010 chip.  This tells the assembler to
-     accept the R4010-specific instructions (`addciu', `ffc', etc.),
-     and to not schedule `nop' instructions around accesses to the `HI'
-     and `LO' registers.  `-no-m4010' turns off this option.
-
-`-m4650'
-`-no-m4650'
-     Generate code for the MIPS R4650 chip.  This tells the assembler
-     to accept the `mad' and `madu' instruction, and to not schedule
-     `nop' instructions around accesses to the `HI' and `LO' registers.
-     `-no-m4650' turns off this option.
-
-`-m3900'
-`-no-m3900'
-`-m4100'
-`-no-m4100'
-     For each option `-mNNNN', generate code for the MIPS RNNNN chip.
+     accept the R4010-specific instructions ('addciu', 'ffc', etc.), and
+     to not schedule 'nop' instructions around accesses to the 'HI' and
+     'LO' registers.  '-no-m4010' turns off this option.
+
+'-m4650'
+'-no-m4650'
+     Generate code for the MIPS R4650 chip.  This tells the assembler to
+     accept the 'mad' and 'madu' instruction, and to not schedule 'nop'
+     instructions around accesses to the 'HI' and 'LO' registers.
+     '-no-m4650' turns off this option.
+
+'-m3900'
+'-no-m3900'
+'-m4100'
+'-no-m4100'
+     For each option '-mNNNN', generate code for the MIPS RNNNN chip.
      This tells the assembler to accept instructions specific to that
      chip, and to schedule for that chip's hazards.
 
-`-march=CPU'
-     Generate code for a particular MIPS CPU.  It is exactly equivalent
-     to `-mCPU', except that there are more value of CPU understood.
+'-march=CPU'
+     Generate code for a particular MIPS CPU. It is exactly equivalent
+     to '-mCPU', except that there are more value of CPU understood.
      Valid CPU value are:
 
           2000, 3000, 3900, 4000, 4010, 4100, 4111, vr4120, vr4130,
@@ -14595,59 +14253,58 @@ The MIPS configurations of GNU `as' support these special options:
           sb1a, i6400, p6600, loongson2e, loongson2f, loongson3a,
           octeon, octeon+, octeon2, octeon3, xlr, xlp
 
-     For compatibility reasons, `Nx' and `Bfx' are accepted as synonyms
-     for `Nf1_1'.  These values are deprecated.
+     For compatibility reasons, 'Nx' and 'Bfx' are accepted as synonyms
+     for 'Nf1_1'.  These values are deprecated.
 
-`-mtune=CPU'
-     Schedule and tune for a particular MIPS CPU.  Valid CPU values are
-     identical to `-march=CPU'.
+'-mtune=CPU'
+     Schedule and tune for a particular MIPS CPU. Valid CPU values are
+     identical to '-march=CPU'.
 
-`-mabi=ABI'
+'-mabi=ABI'
      Record which ABI the source code uses.  The recognized arguments
-     are: `32', `n32', `o64', `64' and `eabi'.
+     are: '32', 'n32', 'o64', '64' and 'eabi'.
 
-`-msym32'
-`-mno-sym32'
-     Equivalent to adding `.set sym32' or `.set nosym32' to the
+'-msym32'
+'-mno-sym32'
+     Equivalent to adding '.set sym32' or '.set nosym32' to the
      beginning of the assembler input.  *Note MIPS Symbol Sizes::.
 
-`-nocpp'
+'-nocpp'
      This option is ignored.  It is accepted for command-line
      compatibility with other assemblers, which use it to turn off C
-     style preprocessing.  With GNU `as', there is no need for
-     `-nocpp', because the GNU assembler itself never runs the C
-     preprocessor.
+     style preprocessing.  With GNU 'as', there is no need for '-nocpp',
+     because the GNU assembler itself never runs the C preprocessor.
 
-`-msoft-float'
-`-mhard-float'
+'-msoft-float'
+'-mhard-float'
      Disable or enable floating-point instructions.  Note that by
      default floating-point instructions are always allowed even with
      CPU targets that don't have support for these instructions.
 
-`-msingle-float'
-`-mdouble-float'
+'-msingle-float'
+'-mdouble-float'
      Disable or enable double-precision floating-point operations.  Note
      that by default double-precision floating-point operations are
      always allowed even with CPU targets that don't have support for
      these operations.
 
-`--construct-floats'
-`--no-construct-floats'
-     The `--no-construct-floats' option disables the construction of
+'--construct-floats'
+'--no-construct-floats'
+     The '--no-construct-floats' option disables the construction of
      double width floating point constants by loading the two halves of
      the value into the two single width floating point registers that
      make up the double width register.  This feature is useful if the
-     processor support the FR bit in its status  register, and this bit
+     processor support the FR bit in its status register, and this bit
      is known (by the programmer) to be set.  This bit prevents the
      aliasing of the double width register by the single width
      registers.
 
-     By default `--construct-floats' is selected, allowing construction
+     By default '--construct-floats' is selected, allowing construction
      of these floating point constants.
 
-`--relax-branch'
-`--no-relax-branch'
-     The `--relax-branch' option enables the relaxation of out-of-range
+'--relax-branch'
+'--no-relax-branch'
+     The '--relax-branch' option enables the relaxation of out-of-range
      branches.  Any branches whose target cannot be reached directly are
      converted to a small instruction sequence including an
      inverse-condition branch to the physically next instruction, and a
@@ -14655,20 +14312,20 @@ The MIPS configurations of GNU `as' support these special options:
      instructions.  In PIC code the jump will involve further
      instructions for address calculation.
 
-     The `BC1ANY2F', `BC1ANY2T', `BC1ANY4F', `BC1ANY4T', `BPOSGE32' and
-     `BPOSGE64' instructions are excluded from relaxation, because they
-     have no complementing counterparts.  They could be relaxed with
-     the use of a longer sequence involving another branch, however
-     this has not been implemented and if their target turns out of
-     reach, they produce an error even if branch relaxation is enabled.
+     The 'BC1ANY2F', 'BC1ANY2T', 'BC1ANY4F', 'BC1ANY4T', 'BPOSGE32' and
+     'BPOSGE64' instructions are excluded from relaxation, because they
+     have no complementing counterparts.  They could be relaxed with the
+     use of a longer sequence involving another branch, however this has
+     not been implemented and if their target turns out of reach, they
+     produce an error even if branch relaxation is enabled.
 
      Also no MIPS16 branches are ever relaxed.
 
-     By default `--no-relax-branch' is selected, causing any
+     By default '--no-relax-branch' is selected, causing any
      out-of-range branches to produce an error.
 
-`-mignore-branch-isa'
-`-mno-ignore-branch-isa'
+'-mignore-branch-isa'
+'-mno-ignore-branch-isa'
      Ignore branch checks for invalid transitions between ISA modes.
 
      The semantics of branches does not provide for an ISA mode switch,
@@ -14679,8 +14336,8 @@ The MIPS configurations of GNU `as' support these special options:
      be executed in the wrong ISA mode causing the program to misbehave
      or crash.
 
-     In the case of the `BAL' instruction it may be possible to relax
-     it to an equivalent `JALX' instruction so that the ISA mode is
+     In the case of the 'BAL' instruction it may be possible to relax it
+     to an equivalent 'JALX' instruction so that the ISA mode is
      switched at the run time as required.  For other branches no
      relaxation is possible and therefore GAS has checks implemented
      that verify in branch assembly that the two ISA modes match, and
@@ -14691,52 +14348,52 @@ The MIPS configurations of GNU `as' support these special options:
      some versions of GCC, may incorrectly include branches to data
      labels, which appear to require a mode switch but are either dead
      or immediately followed by valid instructions encoded for the same
-     ISA the branch has been encoded for.  While not strictly correct
-     at the source level such code will execute as intended, so to help
-     with these cases `-mignore-branch-isa' is supported which disables
+     ISA the branch has been encoded for.  While not strictly correct at
+     the source level such code will execute as intended, so to help
+     with these cases '-mignore-branch-isa' is supported which disables
      ISA mode checks for branches.
 
-     By default `-mno-ignore-branch-isa' is selected, causing any
+     By default '-mno-ignore-branch-isa' is selected, causing any
      invalid branch requiring a transition between ISA modes to produce
      an error.
 
-`-mnan=ENCODING'
+'-mnan=ENCODING'
      This option indicates whether the source code uses the IEEE 2008
-     NaN encoding (`-mnan=2008') or the original MIPS encoding
-     (`-mnan=legacy').  It is equivalent to adding a `.nan' directive
-     to the beginning of the source file.  *Note MIPS NaN Encodings::.
+     NaN encoding ('-mnan=2008') or the original MIPS encoding
+     ('-mnan=legacy').  It is equivalent to adding a '.nan' directive to
+     the beginning of the source file.  *Note MIPS NaN Encodings::.
 
-     `-mnan=legacy' is the default if no `-mnan' option or `.nan'
+     '-mnan=legacy' is the default if no '-mnan' option or '.nan'
      directive is used.
 
-`--trap'
-`--no-break'
-     `as' automatically macro expands certain division and
+'--trap'
+'--no-break'
+     'as' automatically macro expands certain division and
      multiplication instructions to check for overflow and division by
-     zero.  This option causes `as' to generate code to take a trap
+     zero.  This option causes 'as' to generate code to take a trap
      exception rather than a break exception when an error is detected.
      The trap instructions are only supported at Instruction Set
      Architecture level 2 and higher.
 
-`--break'
-`--no-trap'
+'--break'
+'--no-trap'
      Generate code to take a break exception rather than a trap
      exception when an error is detected.  This is the default.
 
-`-mpdr'
-`-mno-pdr'
-     Control generation of `.pdr' sections.  Off by default on IRIX, on
+'-mpdr'
+'-mno-pdr'
+     Control generation of '.pdr' sections.  Off by default on IRIX, on
      elsewhere.
 
-`-mshared'
-`-mno-shared'
+'-mshared'
+'-mno-shared'
      When generating code using the Unix calling conventions (selected
-     by `-KPIC' or `-mcall_shared'), gas will normally generate code
-     which can go into a shared library.  The `-mno-shared' option
-     tells gas to generate code which uses the calling convention, but
-     can not go into a shared library.  The resulting code is slightly
-     more efficient.  This option only affects the handling of the
-     `.cpload' and `.cpsetup' pseudo-ops.
+     by '-KPIC' or '-mcall_shared'), gas will normally generate code
+     which can go into a shared library.  The '-mno-shared' option tells
+     gas to generate code which uses the calling convention, but can not
+     go into a shared library.  The resulting code is slightly more
+     efficient.  This option only affects the handling of the '.cpload'
+     and '.cpsetup' pseudo-ops.
 
 
 File: as.info,  Node: MIPS Macros,  Next: MIPS Symbol Sizes,  Prev: MIPS Options,  Up: MIPS-Dependent
@@ -14750,43 +14407,42 @@ instructions are usually referred to as "macro" instructions (1).
 
    Some MIPS macro instructions extend an underlying architectural
 instruction while others are entirely new.  An example of the former
-type is `and', which allows the third operand to be either a register
-or an arbitrary immediate value.  Examples of the latter type include
-`bgt', which branches to the third operand when the first operand is
-greater than the second operand, and `ulh', which implements an
+type is 'and', which allows the third operand to be either a register or
+an arbitrary immediate value.  Examples of the latter type include
+'bgt', which branches to the third operand when the first operand is
+greater than the second operand, and 'ulh', which implements an
 unaligned 2-byte load.
 
    One of the most common extensions provided by macros is to expand
 memory offsets to the full address range (32 or 64 bits) and to allow
-symbolic offsets such as `my_data + 4' to be used in place of integer
-constants.  For example, the architectural instruction `lbu' allows
-only a signed 16-bit offset, whereas the macro `lbu' allows code such
-as `lbu $4,array+32769($5)'.  The implementation of these symbolic
-offsets depends on several factors, such as whether the assembler is
-generating SVR4-style PIC (selected by `-KPIC', *note Assembler
-options: MIPS Options.), the size of symbols (*note Directives to
-override the size of symbols: MIPS Symbol Sizes.), and the small data
-limit (*note Controlling the use of small data accesses: MIPS Small
-Data.).
+symbolic offsets such as 'my_data + 4' to be used in place of integer
+constants.  For example, the architectural instruction 'lbu' allows only
+a signed 16-bit offset, whereas the macro 'lbu' allows code such as 'lbu
+$4,array+32769($5)'.  The implementation of these symbolic offsets
+depends on several factors, such as whether the assembler is generating
+SVR4-style PIC (selected by '-KPIC', *note Assembler options: MIPS
+Options.), the size of symbols (*note Directives to override the size of
+symbols: MIPS Symbol Sizes.), and the small data limit (*note
+Controlling the use of small data accesses: MIPS Small Data.).
 
    Sometimes it is undesirable to have one assembly instruction expand
-to several machine instructions.  The directive `.set nomacro' tells
-the assembler to warn when this happens.  `.set macro' restores the
-default behavior.
+to several machine instructions.  The directive '.set nomacro' tells the
+assembler to warn when this happens.  '.set macro' restores the default
+behavior.
 
    Some macro instructions need a temporary register to store
-intermediate results.  This register is usually `$1', also known as
-`$at', but it can be changed to any core register REG using `.set
-at=REG'.  Note that `$at' always refers to `$1' regardless of which
+intermediate results.  This register is usually '$1', also known as
+'$at', but it can be changed to any core register REG using '.set
+at=REG'.  Note that '$at' always refers to '$1' regardless of which
 register is being used as the temporary register.
 
    Implicit uses of the temporary register in macros could interfere
 with explicit uses in the assembly code.  The assembler therefore warns
 whenever it sees an explicit use of the temporary register.  The
-directive `.set noat' silences this warning while `.set at' restores
-the default behavior.  It is safe to use `.set noat' while `.set
-nomacro' is in effect since single-instruction macros never need a
-temporary register.
+directive '.set noat' silences this warning while '.set at' restores the
+default behavior.  It is safe to use '.set noat' while '.set nomacro' is
+in effect since single-instruction macros never need a temporary
+register.
 
    Note that while the GNU assembler provides these macros for
 compatibility, it does not make any attempt to optimize them with the
@@ -14795,7 +14451,7 @@ surrounding code.
    ---------- Footnotes ----------
 
    (1) The term "macro" is somewhat overloaded here, since these macros
-have no relation to those defined by `.macro', *note `.macro': Macro.
+have no relation to those defined by '.macro', *note '.macro': Macro.
 
 
 File: as.info,  Node: MIPS Symbol Sizes,  Next: MIPS Small Data,  Prev: MIPS Macros,  Up: MIPS-Dependent
@@ -14805,8 +14461,8 @@ File: as.info,  Node: MIPS Symbol Sizes,  Next: MIPS Small Data,  Prev: MIPS Mac
 
 The n64 ABI allows symbols to have any 64-bit value.  Although this
 provides a great deal of flexibility, it means that some macros have
-much longer expansions than their 32-bit counterparts.  For example,
-the non-PIC expansion of `dla $4,sym' is usually:
+much longer expansions than their 32-bit counterparts.  For example, the
+non-PIC expansion of 'dla $4,sym' is usually:
 
      lui     $4,%highest(sym)
      lui     $1,%hi(sym)
@@ -14824,8 +14480,8 @@ the non-PIC expansion of `dla $4,sym' is usually:
 constants are known to have 32-bit values, and in such cases, it's
 preferable to use the 32-bit expansion instead of the 64-bit expansion.
 
-   You can use the `.set sym32' directive to tell the assembler that,
-from this point on, all expressions of the form `SYMBOL' or `SYMBOL +
+   You can use the '.set sym32' directive to tell the assembler that,
+from this point on, all expressions of the form 'SYMBOL' or 'SYMBOL +
 OFFSET' have 32-bit values.  For example:
 
      .set sym32
@@ -14833,13 +14489,12 @@ OFFSET' have 32-bit values.  For example:
      lw      $4,sym+16
      sw      $4,sym+0x8000($4)
 
-   will cause the assembler to treat `sym', `sym+16' and `sym+0x8000'
-as 32-bit values.  The handling of non-symbolic addresses is not
-affected.
+   will cause the assembler to treat 'sym', 'sym+16' and 'sym+0x8000' as
+32-bit values.  The handling of non-symbolic addresses is not affected.
 
-   The directive `.set nosym32' ends a `.set sym32' block and reverts
-to the normal behavior.  It is also possible to change the symbol size
-using the command-line options `-msym32' and `-mno-sym32'.
+   The directive '.set nosym32' ends a '.set sym32' block and reverts to
+the normal behavior.  It is also possible to change the symbol size
+using the command-line options '-msym32' and '-mno-sym32'.
 
    These options and directives are always accepted, but at present,
 they have no effect for anything other than n64.
@@ -14851,44 +14506,43 @@ File: as.info,  Node: MIPS Small Data,  Next: MIPS ISA,  Prev: MIPS Symbol Sizes
 -------------------------------------------------
 
 It often takes several instructions to load the address of a symbol.
-For example, when `addr' is a 32-bit symbol, the non-PIC expansion of
-`dla $4,addr' is usually:
+For example, when 'addr' is a 32-bit symbol, the non-PIC expansion of
+'dla $4,addr' is usually:
 
      lui     $4,%hi(addr)
      daddiu  $4,$4,%lo(addr)
 
-   The sequence is much longer when `addr' is a 64-bit symbol.  *Note
+   The sequence is much longer when 'addr' is a 64-bit symbol.  *Note
 Directives to override the size of symbols: MIPS Symbol Sizes.
 
-   In order to cut down on this overhead, most embedded MIPS systems
-set aside a 64-kilobyte "small data" area and guarantee that all data
-of size N and smaller will be placed in that area.  The limit N is
-passed to both the assembler and the linker using the command-line
-option `-G N', *note Assembler options: MIPS Options.  Note that the
-same value of N must be used when linking and when assembling all input
-files to the link; any inconsistency could cause a relocation overflow
-error.
-
-   The size of an object in the `.bss' section is set by the `.comm' or
-`.lcomm' directive that defines it.  The size of an external object may
-be set with the `.extern' directive.  For example, `.extern sym,4'
-declares that the object at `sym' is 4 bytes in length, while leaving
-`sym' otherwise undefined.
-
-   When no `-G' option is given, the default limit is 8 bytes.  The
-option `-G 0' prevents any data from being automatically classified as
+   In order to cut down on this overhead, most embedded MIPS systems set
+aside a 64-kilobyte "small data" area and guarantee that all data of
+size N and smaller will be placed in that area.  The limit N is passed
+to both the assembler and the linker using the command-line option '-G
+N', *note Assembler options: MIPS Options.  Note that the same value of
+N must be used when linking and when assembling all input files to the
+link; any inconsistency could cause a relocation overflow error.
+
+   The size of an object in the '.bss' section is set by the '.comm' or
+'.lcomm' directive that defines it.  The size of an external object may
+be set with the '.extern' directive.  For example, '.extern sym,4'
+declares that the object at 'sym' is 4 bytes in length, while leaving
+'sym' otherwise undefined.
+
+   When no '-G' option is given, the default limit is 8 bytes.  The
+option '-G 0' prevents any data from being automatically classified as
 small.
 
    It is also possible to mark specific objects as small by putting them
-in the special sections `.sdata' and `.sbss', which are "small"
-counterparts of `.data' and `.bss' respectively.  The toolchain will
-treat such data as small regardless of the `-G' setting.
+in the special sections '.sdata' and '.sbss', which are "small"
+counterparts of '.data' and '.bss' respectively.  The toolchain will
+treat such data as small regardless of the '-G' setting.
 
    On startup, systems that support a small data area are expected to
-initialize register `$28', also known as `$gp', in such a way that
-small data can be accessed using a 16-bit offset from that register.
-For example, when `addr' is small data, the `dla $4,addr' instruction
-above is equivalent to:
+initialize register '$28', also known as '$gp', in such a way that small
+data can be accessed using a 16-bit offset from that register.  For
+example, when 'addr' is small data, the 'dla $4,addr' instruction above
+is equivalent to:
 
      daddiu  $4,$28,%gp_rel(addr)
 
@@ -14900,34 +14554,33 @@ File: as.info,  Node: MIPS ISA,  Next: MIPS assembly options,  Prev: MIPS Small
 9.27.5 Directives to override the ISA level
 -------------------------------------------
 
-GNU `as' supports an additional directive to change the MIPS
-Instruction Set Architecture level on the fly: `.set mipsN'.  N should
-be a number from 0 to 5, or 32, 32r2, 32r3, 32r5, 32r6, 64, 64r2, 64r3,
-64r5 or 64r6.  The values other than 0 make the assembler accept
-instructions for the corresponding ISA level, from that point on in the
-assembly.  `.set mipsN' affects not only which instructions are
-permitted, but also how certain macros are expanded.  `.set mips0'
-restores the ISA level to its original level: either the level you
-selected with command line options, or the default for your
-configuration.  You can use this feature to permit specific MIPS III
-instructions while assembling in 32 bit mode.  Use this directive with
-care!
-
-   The `.set arch=CPU' directive provides even finer control.  It
+GNU 'as' supports an additional directive to change the MIPS Instruction
+Set Architecture level on the fly: '.set mipsN'.  N should be a number
+from 0 to 5, or 32, 32r2, 32r3, 32r5, 32r6, 64, 64r2, 64r3, 64r5 or
+64r6.  The values other than 0 make the assembler accept instructions
+for the corresponding ISA level, from that point on in the assembly.
+'.set mipsN' affects not only which instructions are permitted, but also
+how certain macros are expanded.  '.set mips0' restores the ISA level to
+its original level: either the level you selected with command line
+options, or the default for your configuration.  You can use this
+feature to permit specific MIPS III instructions while assembling in 32
+bit mode.  Use this directive with care!
+
+   The '.set arch=CPU' directive provides even finer control.  It
 changes the effective CPU target and allows the assembler to use
-instructions specific to a particular CPU.  All CPUs supported by the
-`-march' command line option are also selectable by this directive.
-The original value is restored by `.set arch=default'.
+instructions specific to a particular CPU. All CPUs supported by the
+'-march' command line option are also selectable by this directive.  The
+original value is restored by '.set arch=default'.
 
-   The directive `.set mips16' puts the assembler into MIPS 16 mode, in
+   The directive '.set mips16' puts the assembler into MIPS 16 mode, in
 which it will assemble instructions for the MIPS 16 processor.  Use
-`.set nomips16' to return to normal 32 bit mode.
+'.set nomips16' to return to normal 32 bit mode.
 
    Traditional MIPS assemblers do not support this directive.
 
-   The directive `.set micromips' puts the assembler into microMIPS
+   The directive '.set micromips' puts the assembler into microMIPS
 mode, in which it will assemble instructions for the microMIPS
-processor.  Use `.set nomicromips' to return to normal 32 bit mode.
+processor.  Use '.set nomicromips' to return to normal 32 bit mode.
 
    Traditional MIPS assemblers do not support this directive.
 
@@ -14937,22 +14590,22 @@ File: as.info,  Node: MIPS assembly options,  Next: MIPS autoextend,  Prev: MIPS
 9.27.6 Directives to control code generation
 --------------------------------------------
 
-The `.module' directive allows command line options to be set directly
-from assembly.  The format of the directive matches the `.set'
-directive but only those options which are relevant to a whole module
-are supported.  The effect of a `.module' directive is the same as the
-corresponding command line option.  Where `.set' directives support
-returning to a default then the `.module' directives do not as they
+The '.module' directive allows command line options to be set directly
+from assembly.  The format of the directive matches the '.set' directive
+but only those options which are relevant to a whole module are
+supported.  The effect of a '.module' directive is the same as the
+corresponding command line option.  Where '.set' directives support
+returning to a default then the '.module' directives do not as they
 define the defaults.
 
    These module-level directives must appear first in assembly.
 
    Traditional MIPS assemblers do not support this directive.
 
-   The directive `.set insn32' makes the assembler only use 32-bit
+   The directive '.set insn32' makes the assembler only use 32-bit
 instruction encodings when generating code for the microMIPS processor.
 This directive inhibits the use of any 16-bit instructions from that
-point on in the assembly.  The `.set noinsn32' directive allows 16-bit
+point on in the assembly.  The '.set noinsn32' directive allows 16-bit
 instructions to be accepted.
 
    Traditional MIPS assemblers do not support this directive.
@@ -14964,10 +14617,10 @@ File: as.info,  Node: MIPS autoextend,  Next: MIPS insn,  Prev: MIPS assembly op
 --------------------------------------------------------
 
 By default, MIPS 16 instructions are automatically extended to 32 bits
-when necessary.  The directive `.set noautoextend' will turn this off.
-When `.set noautoextend' is in effect, any 32 bit instruction must be
-explicitly extended with the `.e' modifier (e.g., `li.e $4,1000').  The
-directive `.set autoextend' may be used to once again automatically
+when necessary.  The directive '.set noautoextend' will turn this off.
+When '.set noautoextend' is in effect, any 32 bit instruction must be
+explicitly extended with the '.e' modifier (e.g., 'li.e $4,1000').  The
+directive '.set autoextend' may be used to once again automatically
 extend instructions when necessary.
 
    This directive is only meaningful when in MIPS 16 mode.  Traditional
@@ -14979,22 +14632,22 @@ File: as.info,  Node: MIPS insn,  Next: MIPS FP ABIs,  Prev: MIPS autoextend,  U
 9.27.8 Directive to mark data as an instruction
 -----------------------------------------------
 
-The `.insn' directive tells `as' that the following data is actually
+The '.insn' directive tells 'as' that the following data is actually
 instructions.  This makes a difference in MIPS 16 and microMIPS modes:
-when loading the address of a label which precedes instructions, `as'
-automatically adds 1 to the value, so that jumping to the loaded
-address will do the right thing.
+when loading the address of a label which precedes instructions, 'as'
+automatically adds 1 to the value, so that jumping to the loaded address
+will do the right thing.
 
-   The `.global' and `.globl' directives supported by `as' will by
+   The '.global' and '.globl' directives supported by 'as' will by
 default mark the symbol as pointing to a region of data not code.  This
 means that, for example, any instructions following such a symbol will
-not be disassembled by `objdump' as it will regard them as data.  To
+not be disassembled by 'objdump' as it will regard them as data.  To
 change this behavior an optional section name can be placed after the
-symbol name in the `.global' directive.  If this section exists and is
+symbol name in the '.global' directive.  If this section exists and is
 known to be a code section, then the symbol will be marked as pointing
 at code not data.  Ie the syntax for the directive is:
 
-   `.global SYMBOL[ SECTION][, SYMBOL[ SECTION]] ...',
+   '.global SYMBOL[ SECTION][, SYMBOL[ SECTION]] ...',
 
    Here is a short example:
 
@@ -15006,6 +14659,7 @@ at code not data.  Ie the syntax for the directive is:
      baz:
              .word 0x1
 
+
 
 File: as.info,  Node: MIPS FP ABIs,  Next: MIPS NaN Encodings,  Prev: MIPS insn,  Up: MIPS-Dependent
 
@@ -15031,7 +14685,7 @@ data.  The extensions exist to support a wide variety of optional
 architecture features.  The resulting ABI variants are generally
 incompatible with each other and must be tracked carefully.
 
-   Traditionally the use of an explicit `.gnu_attribute 4, N' directive
+   Traditionally the use of an explicit '.gnu_attribute 4, N' directive
 is used to indicate which ABI is in use by a specific module.  It was
 then left to the user to ensure that command line options and the
 selected ABI were compatible with some potential for inconsistencies.
@@ -15044,35 +14698,35 @@ File: as.info,  Node: MIPS FP ABI Variants,  Next: MIPS FP ABI Selection,  Prev:
 
 The supported floating-point ABI variants are:
 
-`0 - No floating-point'
+'0 - No floating-point'
      This variant is used to indicate that floating-point is not used
      within the module at all and therefore has no impact on the ABI.
      This is the default.
 
-`1 - Double-precision'
+'1 - Double-precision'
      This variant indicates that double-precision support is used.  For
      64-bit ABIs this means that 64-bit wide floating-point registers
      are required.  For 32-bit ABIs this means that 32-bit wide
      floating-point registers are required and double-precision
      operations use pairs of registers.
 
-`2 - Single-precision'
+'2 - Single-precision'
      This variant indicates that single-precision support is used.
      Double precision operations will be supported via soft-float
      routines.
 
-`3 - Soft-float'
-     This variant indicates that although floating-point support is
-     used all operations are emulated in software.  This means the ABI
-     is modified to pass all floating-point data in general-purpose
+'3 - Soft-float'
+     This variant indicates that although floating-point support is used
+     all operations are emulated in software.  This means the ABI is
+     modified to pass all floating-point data in general-purpose
      registers.
 
-`4 - Deprecated'
+'4 - Deprecated'
      This variant existed as an initial attempt at supporting 64-bit
-     wide floating-point registers for O32 ABI on a MIPS32r2 CPU.  This
+     wide floating-point registers for O32 ABI on a MIPS32r2 CPU. This
      has been superseded by 5, 6 and 7.
 
-`5 - Double-precision 32-bit CPU, 32-bit or 64-bit FPU'
+'5 - Double-precision 32-bit CPU, 32-bit or 64-bit FPU'
      This variant is used by 32-bit ABIs to indicate that the
      floating-point code in the module has been designed to operate
      correctly with either 32-bit wide or 64-bit wide floating-point
@@ -15080,14 +14734,14 @@ The supported floating-point ABI variants are:
      supports this variant and requires a minimum architecture of MIPS
      II.
 
-`6 - Double-precision 32-bit FPU, 64-bit FPU'
+'6 - Double-precision 32-bit FPU, 64-bit FPU'
      This variant is used by 32-bit ABIs to indicate that the
      floating-point code in the module requires 64-bit wide
      floating-point registers.  Double-precision support is used.  Only
      O32 currently supports this variant and requires a minimum
      architecture of MIPS32r2.
 
-`7 - Double-precision compat 32-bit FPU, 64-bit FPU'
+'7 - Double-precision compat 32-bit FPU, 64-bit FPU'
      This variant is used by 32-bit ABIs to indicate that the
      floating-point code in the module requires 64-bit wide
      floating-point registers.  Double-precision support is used.  This
@@ -15103,19 +14757,18 @@ File: as.info,  Node: MIPS FP ABI Selection,  Next: MIPS FP ABI Compatibility,
 
 In order to simplify and add safety to the process of selecting the
 correct floating-point ABI, the assembler will automatically infer the
-correct `.gnu_attribute 4, N' directive based on command line options
-and `.module' overrides.  Where an explicit `.gnu_attribute 4, N'
+correct '.gnu_attribute 4, N' directive based on command line options
+and '.module' overrides.  Where an explicit '.gnu_attribute 4, N'
 directive has been seen then a warning will be raised if it does not
 match an inferred setting.
 
-   The floating-point ABI is inferred as follows.  If `-msoft-float'
-has been used the module will be marked as soft-float.  If
-`-msingle-float' has been used then the module will be marked as
-single-precision.  The remaining ABIs are then selected based on the FP
-register width.  Double-precision is selected if the width of GP and FP
-registers match and the special double-precision variants for 32-bit
-ABIs are then selected depending on `-mfpxx', `-mfp64' and
-`-mno-odd-spreg'.
+   The floating-point ABI is inferred as follows.  If '-msoft-float' has
+been used the module will be marked as soft-float.  If '-msingle-float'
+has been used then the module will be marked as single-precision.  The
+remaining ABIs are then selected based on the FP register width.
+Double-precision is selected if the width of GP and FP registers match
+and the special double-precision variants for 32-bit ABIs are then
+selected depending on '-mfpxx', '-mfp64' and '-mno-odd-spreg'.
 
 
 File: as.info,  Node: MIPS FP ABI Compatibility,  Prev: MIPS FP ABI Selection,  Up: MIPS FP ABIs
@@ -15127,13 +14780,13 @@ Modules using the default FP ABI (no floating-point) can be linked with
 any other (singular) FP ABI variant.
 
    Special compatibility support exists for O32 with the four
-double-precision FP ABI variants.  The `-mfpxx' FP ABI is specifically
+double-precision FP ABI variants.  The '-mfpxx' FP ABI is specifically
 designed to be compatible with the standard double-precision ABI and the
-`-mfp64' FP ABIs.  This makes it desirable for O32 modules to be built
-as `-mfpxx' to ensure the maximum compatibility with other modules
+'-mfp64' FP ABIs.  This makes it desirable for O32 modules to be built
+as '-mfpxx' to ensure the maximum compatibility with other modules
 produced for more specific needs.  The only FP ABIs which cannot be
 linked together are the standard double-precision ABI and the full
-`-mfp64' ABI with `-modd-spreg'.
+'-mfp64' ABI with '-modd-spreg'.
 
 
 File: as.info,  Node: MIPS NaN Encodings,  Next: MIPS Option Stack,  Prev: MIPS FP ABIs,  Up: MIPS-Dependent
@@ -15142,8 +14795,8 @@ File: as.info,  Node: MIPS NaN Encodings,  Next: MIPS Option Stack,  Prev: MIPS
 -------------------------------------------------------------
 
 The IEEE 754 floating-point standard defines two types of not-a-number
-(NaN) data: "signalling" NaNs and "quiet" NaNs.  The original version
-of the standard did not specify how these two types should be
+(NaN) data: "signalling" NaNs and "quiet" NaNs.  The original version of
+the standard did not specify how these two types should be
 distinguished.  Most implementations followed the i387 model, in which
 the first bit of the significand is set for quiet NaNs and clear for
 signalling NaNs.  However, the original MIPS implementation assigned the
@@ -15153,26 +14806,26 @@ clear for quiet NaNs.
    The 2008 revision of the standard formally suggested the i387 choice
 and as from Sep 2012 the current release of the MIPS architecture
 therefore optionally supports that form.  Code that uses one NaN
-encoding would usually be incompatible with code that uses the other
-NaN encoding, so MIPS ELF objects have a flag (`EF_MIPS_NAN2008') to
-record which encoding is being used.
-
-   Assembly files can use the `.nan' directive to select between the
-two encodings.  `.nan 2008' says that the assembly file uses the IEEE
-754-2008 encoding while `.nan legacy' says that the file uses the
-original MIPS encoding.  If several `.nan' directives are given, the
+encoding would usually be incompatible with code that uses the other NaN
+encoding, so MIPS ELF objects have a flag ('EF_MIPS_NAN2008') to record
+which encoding is being used.
+
+   Assembly files can use the '.nan' directive to select between the two
+encodings.  '.nan 2008' says that the assembly file uses the IEEE
+754-2008 encoding while '.nan legacy' says that the file uses the
+original MIPS encoding.  If several '.nan' directives are given, the
 final setting is the one that is used.
 
-   The command-line options `-mnan=legacy' and `-mnan=2008' can be used
-instead of `.nan legacy' and `.nan 2008' respectively.  However, any
-`.nan' directive overrides the command-line setting.
+   The command-line options '-mnan=legacy' and '-mnan=2008' can be used
+instead of '.nan legacy' and '.nan 2008' respectively.  However, any
+'.nan' directive overrides the command-line setting.
 
-   `.nan legacy' is the default if no `.nan' directive or `-mnan'
-option is given.
+   '.nan legacy' is the default if no '.nan' directive or '-mnan' option
+is given.
 
-   Note that GNU `as' does not produce NaNs itself and therefore these
+   Note that GNU 'as' does not produce NaNs itself and therefore these
 directives do not affect code generation.  They simply control the
-setting of the `EF_MIPS_NAN2008' flag.
+setting of the 'EF_MIPS_NAN2008' flag.
 
    Traditional MIPS assemblers do not support these directives.
 
@@ -15182,10 +14835,10 @@ File: as.info,  Node: MIPS Option Stack,  Next: MIPS ASE Instruction Generation
 9.27.11 Directives to save and restore options
 ----------------------------------------------
 
-The directives `.set push' and `.set pop' may be used to save and
-restore the current settings for all the options which are controlled
-by `.set'.  The `.set push' directive saves the current settings on a
-stack.  The `.set pop' directive pops the stack and restores the
+The directives '.set push' and '.set pop' may be used to save and
+restore the current settings for all the options which are controlled by
+'.set'.  The '.set push' directive saves the current settings on a
+stack.  The '.set pop' directive pops the stack and restores the
 settings.
 
    These directives can be useful inside an macro which must change an
@@ -15200,61 +14853,60 @@ File: as.info,  Node: MIPS ASE Instruction Generation Overrides,  Next: MIPS Flo
 9.27.12 Directives to control generation of MIPS ASE instructions
 -----------------------------------------------------------------
 
-The directive `.set mips3d' makes the assembler accept instructions
-from the MIPS-3D Application Specific Extension from that point on in
-the assembly.  The `.set nomips3d' directive prevents MIPS-3D
-instructions from being accepted.
+The directive '.set mips3d' makes the assembler accept instructions from
+the MIPS-3D Application Specific Extension from that point on in the
+assembly.  The '.set nomips3d' directive prevents MIPS-3D instructions
+from being accepted.
 
-   The directive `.set smartmips' makes the assembler accept
+   The directive '.set smartmips' makes the assembler accept
 instructions from the SmartMIPS Application Specific Extension to the
-MIPS32 ISA from that point on in the assembly.  The `.set nosmartmips'
+MIPS32 ISA from that point on in the assembly.  The '.set nosmartmips'
 directive prevents SmartMIPS instructions from being accepted.
 
-   The directive `.set mdmx' makes the assembler accept instructions
+   The directive '.set mdmx' makes the assembler accept instructions
 from the MDMX Application Specific Extension from that point on in the
-assembly.  The `.set nomdmx' directive prevents MDMX instructions from
+assembly.  The '.set nomdmx' directive prevents MDMX instructions from
 being accepted.
 
-   The directive `.set dsp' makes the assembler accept instructions
-from the DSP Release 1 Application Specific Extension from that point
-on in the assembly.  The `.set nodsp' directive prevents DSP Release 1
+   The directive '.set dsp' makes the assembler accept instructions from
+the DSP Release 1 Application Specific Extension from that point on in
+the assembly.  The '.set nodsp' directive prevents DSP Release 1
 instructions from being accepted.
 
-   The directive `.set dspr2' makes the assembler accept instructions
-from the DSP Release 2 Application Specific Extension from that point
-on in the assembly.  This directive implies `.set dsp'.  The `.set
-nodspr2' directive prevents DSP Release 2 instructions from being
-accepted.
+   The directive '.set dspr2' makes the assembler accept instructions
+from the DSP Release 2 Application Specific Extension from that point on
+in the assembly.  This directive implies '.set dsp'.  The '.set nodspr2'
+directive prevents DSP Release 2 instructions from being accepted.
 
-   The directive `.set dspr3' makes the assembler accept instructions
-from the DSP Release 3 Application Specific Extension from that point
-on in the assembly.  This directive implies `.set dsp' and `.set
-dspr2'.  The `.set nodspr3' directive prevents DSP Release 3
-instructions from being accepted.
+   The directive '.set dspr3' makes the assembler accept instructions
+from the DSP Release 3 Application Specific Extension from that point on
+in the assembly.  This directive implies '.set dsp' and '.set dspr2'.
+The '.set nodspr3' directive prevents DSP Release 3 instructions from
+being accepted.
 
-   The directive `.set mt' makes the assembler accept instructions from
+   The directive '.set mt' makes the assembler accept instructions from
 the MT Application Specific Extension from that point on in the
-assembly.  The `.set nomt' directive prevents MT instructions from
-being accepted.
+assembly.  The '.set nomt' directive prevents MT instructions from being
+accepted.
 
-   The directive `.set mcu' makes the assembler accept instructions
-from the MCU Application Specific Extension from that point on in the
-assembly.  The `.set nomcu' directive prevents MCU instructions from
+   The directive '.set mcu' makes the assembler accept instructions from
+the MCU Application Specific Extension from that point on in the
+assembly.  The '.set nomcu' directive prevents MCU instructions from
 being accepted.
 
-   The directive `.set msa' makes the assembler accept instructions
-from the MIPS SIMD Architecture Extension from that point on in the
-assembly.  The `.set nomsa' directive prevents MSA instructions from
-being accepted.
+   The directive '.set msa' makes the assembler accept instructions from
+the MIPS SIMD Architecture Extension from that point on in the assembly.
+The '.set nomsa' directive prevents MSA instructions from being
+accepted.
 
-   The directive `.set virt' makes the assembler accept instructions
+   The directive '.set virt' makes the assembler accept instructions
 from the Virtualization Application Specific Extension from that point
-on in the assembly.  The `.set novirt' directive prevents Virtualization
+on in the assembly.  The '.set novirt' directive prevents Virtualization
 instructions from being accepted.
 
-   The directive `.set xpa' makes the assembler accept instructions
-from the XPA Extension from that point on in the assembly.  The `.set
-noxpa' directive prevents XPA instructions from being accepted.
+   The directive '.set xpa' makes the assembler accept instructions from
+the XPA Extension from that point on in the assembly.  The '.set noxpa'
+directive prevents XPA instructions from being accepted.
 
    Traditional MIPS assemblers do not support these directives.
 
@@ -15264,17 +14916,17 @@ File: as.info,  Node: MIPS Floating-Point,  Next: MIPS Syntax,  Prev: MIPS ASE I
 9.27.13 Directives to override floating-point options
 -----------------------------------------------------
 
-The directives `.set softfloat' and `.set hardfloat' provide finer
+The directives '.set softfloat' and '.set hardfloat' provide finer
 control of disabling and enabling float-point instructions.  These
-directives always override the default (that hard-float instructions
-are accepted) or the command-line options (`-msoft-float' and
-`-mhard-float').
+directives always override the default (that hard-float instructions are
+accepted) or the command-line options ('-msoft-float' and
+'-mhard-float').
 
-   The directives `.set singlefloat' and `.set doublefloat' provide
+   The directives '.set singlefloat' and '.set doublefloat' provide
 finer control of disabling and enabling double-precision float-point
 operations.  These directives always override the default (that
 double-precision operations are accepted) or the command-line options
-(`-msingle-float' and `-mdouble-float').
+('-msingle-float' and '-mdouble-float').
 
    Traditional MIPS assemblers do not support these directives.
 
@@ -15294,15 +14946,15 @@ File: as.info,  Node: MIPS-Chars,  Up: MIPS Syntax
 9.27.14.1 Special Characters
 ............................
 
-The presence of a `#' on a line indicates the start of a comment that
+The presence of a '#' on a line indicates the start of a comment that
 extends to the end of the current line.
 
-   If a `#' appears as the first character of a line, the whole line is
+   If a '#' appears as the first character of a line, the whole line is
 treated as a comment, but in this case the line can also be a logical
 line number directive (*note Comments::) or a preprocessor control
 command (*note Preprocessing::).
 
-   The `;' character can be used to separate statements on the same
+   The ';' character can be used to separate statements on the same
 line.
 
 
@@ -15316,7 +14968,7 @@ File: as.info,  Node: MMIX-Dependent,  Next: MSP430-Dependent,  Prev: MIPS-Depen
 * MMIX-Opts::              Command-line Options
 * MMIX-Expand::            Instruction expansion
 * MMIX-Syntax::            Syntax
-* MMIX-mmixal::		   Differences to `mmixal' syntax and semantics
+* MMIX-mmixal::		   Differences to 'mmixal' syntax and semantics
 
 
 File: as.info,  Node: MMIX-Opts,  Next: MMIX-Expand,  Up: MMIX-Dependent
@@ -15324,70 +14976,70 @@ File: as.info,  Node: MMIX-Opts,  Next: MMIX-Expand,  Up: MMIX-Dependent
 9.28.1 Command-line Options
 ---------------------------
 
-The MMIX version of `as' has some machine-dependent options.
+The MMIX version of 'as' has some machine-dependent options.
 
-   When `--fixed-special-register-names' is specified, only the register
-names specified in *Note MMIX-Regs:: are recognized in the instructions
-`PUT' and `GET'.
+   When '--fixed-special-register-names' is specified, only the register
+names specified in *note MMIX-Regs:: are recognized in the instructions
+'PUT' and 'GET'.
 
-   You can use the `--globalize-symbols' to make all symbols global.
-This option is useful when splitting up a `mmixal' program into several
+   You can use the '--globalize-symbols' to make all symbols global.
+This option is useful when splitting up a 'mmixal' program into several
 files.
 
-   The `--gnu-syntax' turns off most syntax compatibility with
-`mmixal'.  Its usability is currently doubtful.
+   The '--gnu-syntax' turns off most syntax compatibility with 'mmixal'.
+Its usability is currently doubtful.
 
-   The `--relax' option is not fully supported, but will eventually make
+   The '--relax' option is not fully supported, but will eventually make
 the object file prepared for linker relaxation.
 
    If you want to avoid inadvertently calling a predefined symbol and
-would rather get an error, for example when using `as' with a compiler
-or other machine-generated code, specify `--no-predefined-syms'.  This
-turns off built-in predefined definitions of all such symbols,
-including rounding-mode symbols, segment symbols, `BIT' symbols, and
-`TRAP' symbols used in `mmix' "system calls".  It also turns off
-predefined special-register names, except when used in `PUT' and `GET'
+would rather get an error, for example when using 'as' with a compiler
+or other machine-generated code, specify '--no-predefined-syms'.  This
+turns off built-in predefined definitions of all such symbols, including
+rounding-mode symbols, segment symbols, 'BIT' symbols, and 'TRAP'
+symbols used in 'mmix' "system calls".  It also turns off predefined
+special-register names, except when used in 'PUT' and 'GET'
 instructions.
 
    By default, some instructions are expanded to fit the size of the
 operand or an external symbol (*note MMIX-Expand::).  By passing
-`--no-expand', no such expansion will be done, instead causing errors
-at link time if the operand does not fit.
+'--no-expand', no such expansion will be done, instead causing errors at
+link time if the operand does not fit.
 
-   The `mmixal' documentation (*note mmixsite::) specifies that global
-registers allocated with the `GREG' directive (*note MMIX-greg::) and
+   The 'mmixal' documentation (*note mmixsite::) specifies that global
+registers allocated with the 'GREG' directive (*note MMIX-greg::) and
 initialized to the same non-zero value, will refer to the same global
-register.  This isn't strictly enforceable in `as' since the final
+register.  This isn't strictly enforceable in 'as' since the final
 addresses aren't known until link-time, but it will do an effort unless
-the `--no-merge-gregs' option is specified.  (Register merging isn't
-yet implemented in `ld'.)
-
-   `as' will warn every time it expands an instruction to fit an
-operand unless the option `-x' is specified.  It is believed that this
-behaviour is more useful than just mimicking `mmixal''s behaviour, in
-which instructions are only expanded if the `-x' option is specified,
-and assembly fails otherwise, when an instruction needs to be expanded.
-It needs to be kept in mind that `mmixal' is both an assembler and
-linker, while `as' will expand instructions that at link stage can be
-contracted.  (Though linker relaxation isn't yet implemented in `ld'.)
-The option `-x' also imples `--linker-allocated-gregs'.
-
-   If instruction expansion is enabled, `as' can expand a `PUSHJ'
-instruction into a series of instructions.  The shortest expansion is
-to not expand it, but just mark the call as redirectable to a stub,
-which `ld' creates at link-time, but only if the original `PUSHJ'
-instruction is found not to reach the target.  The stub consists of the
-necessary instructions to form a jump to the target.  This happens if
-`as' can assert that the `PUSHJ' instruction can reach such a stub.
-The option `--no-pushj-stubs' disables this shorter expansion, and the
-longer series of instructions is then created at assembly-time.  The
-option `--no-stubs' is a synonym, intended for compatibility with
-future releases, where generation of stubs for other instructions may
-be implemented.
+the '--no-merge-gregs' option is specified.  (Register merging isn't yet
+implemented in 'ld'.)
+
+   'as' will warn every time it expands an instruction to fit an operand
+unless the option '-x' is specified.  It is believed that this behaviour
+is more useful than just mimicking 'mmixal''s behaviour, in which
+instructions are only expanded if the '-x' option is specified, and
+assembly fails otherwise, when an instruction needs to be expanded.  It
+needs to be kept in mind that 'mmixal' is both an assembler and linker,
+while 'as' will expand instructions that at link stage can be
+contracted.  (Though linker relaxation isn't yet implemented in 'ld'.)
+The option '-x' also imples '--linker-allocated-gregs'.
+
+   If instruction expansion is enabled, 'as' can expand a 'PUSHJ'
+instruction into a series of instructions.  The shortest expansion is to
+not expand it, but just mark the call as redirectable to a stub, which
+'ld' creates at link-time, but only if the original 'PUSHJ' instruction
+is found not to reach the target.  The stub consists of the necessary
+instructions to form a jump to the target.  This happens if 'as' can
+assert that the 'PUSHJ' instruction can reach such a stub.  The option
+'--no-pushj-stubs' disables this shorter expansion, and the longer
+series of instructions is then created at assembly-time.  The option
+'--no-stubs' is a synonym, intended for compatibility with future
+releases, where generation of stubs for other instructions may be
+implemented.
 
    Usually a two-operand-expression (*note GREG-base::) without a
-matching `GREG' directive is treated as an error by `as'.  When the
-option `--linker-allocated-gregs' is in effect, they are instead passed
+matching 'GREG' directive is treated as an error by 'as'.  When the
+option '--linker-allocated-gregs' is in effect, they are instead passed
 through to the linker, which will allocate as many global registers as
 is needed.
 
@@ -15397,33 +15049,30 @@ File: as.info,  Node: MMIX-Expand,  Next: MMIX-Syntax,  Prev: MMIX-Opts,  Up: MM
 9.28.2 Instruction expansion
 ----------------------------
 
-When `as' encounters an instruction with an operand that is either not
-known or does not fit the operand size of the instruction, `as' (and
-`ld') will expand the instruction into a sequence of instructions
+When 'as' encounters an instruction with an operand that is either not
+known or does not fit the operand size of the instruction, 'as' (and
+'ld') will expand the instruction into a sequence of instructions
 semantically equivalent to the operand fitting the instruction.
 Expansion will take place for the following instructions:
 
-`GETA'
-     Expands to a sequence of four instructions: `SETL', `INCML',
-     `INCMH' and `INCH'.  The operand must be a multiple of four.
-
+'GETA'
+     Expands to a sequence of four instructions: 'SETL', 'INCML',
+     'INCMH' and 'INCH'.  The operand must be a multiple of four.
 Conditional branches
      A branch instruction is turned into a branch with the complemented
      condition and prediction bit over five instructions; four
-     instructions setting `$255' to the operand value, which like with
-     `GETA' must be a multiple of four, and a final `GO $255,$255,0'.
-
-`PUSHJ'
+     instructions setting '$255' to the operand value, which like with
+     'GETA' must be a multiple of four, and a final 'GO $255,$255,0'.
+'PUSHJ'
      Similar to expansion for conditional branches; four instructions
-     set `$255' to the operand value, followed by a `PUSHGO
+     set '$255' to the operand value, followed by a 'PUSHGO
      $255,$255,0'.
+'JMP'
+     Similar to conditional branches and 'PUSHJ'.  The final instruction
+     is 'GO $255,$255,0'.
 
-`JMP'
-     Similar to conditional branches and `PUSHJ'.  The final instruction
-     is `GO $255,$255,0'.
-
-   The linker `ld' is expected to shrink these expansions for code
-assembled with `--relax' (though not currently implemented).
+   The linker 'ld' is expected to shrink these expansions for code
+assembled with '--relax' (though not currently implemented).
 
 
 File: as.info,  Node: MMIX-Syntax,  Next: MMIX-mmixal,  Prev: MMIX-Expand,  Up: MMIX-Dependent
@@ -15432,10 +15081,10 @@ File: as.info,  Node: MMIX-Syntax,  Next: MMIX-mmixal,  Prev: MMIX-Expand,  Up:
 -------------
 
 The assembly syntax is supposed to be upward compatible with that
-described in Sections 1.3 and 1.4 of `The Art of Computer Programming,
+described in Sections 1.3 and 1.4 of 'The Art of Computer Programming,
 Volume 1'.  Draft versions of those chapters as well as other MMIX
 information is located at
-`http://www-cs-faculty.stanford.edu/~knuth/mmix-news.html'.  Most code
+<http://www-cs-faculty.stanford.edu/~knuth/mmix-news.html>.  Most code
 examples from the mmixal package located there should work unmodified
 when assembled and linked as single files, with a few noteworthy
 exceptions (*note MMIX-mmixal::).
@@ -15444,8 +15093,8 @@ exceptions (*note MMIX-mmixal::).
 the next four-byte boundary.  If a label is defined at the beginning of
 the line, its value will be the aligned value.
 
-   In addition to the traditional hex-prefix `0x', a hexadecimal number
-can also be specified by the prefix character `#'.
+   In addition to the traditional hex-prefix '0x', a hexadecimal number
+can also be specified by the prefix character '#'.
 
    After all operands to an MMIX instruction or directive have been
 specified, the rest of the line is ignored, treated as a comment.
@@ -15463,19 +15112,19 @@ File: as.info,  Node: MMIX-Chars,  Next: MMIX-Symbols,  Up: MMIX-Syntax
 9.28.3.1 Special Characters
 ...........................
 
-The characters `*' and `#' are line comment characters; each start a
-comment at the beginning of a line, but only at the beginning of a
-line.  A `#' prefixes a hexadecimal number if found elsewhere on a
-line.  If a `#' appears at the start of a line the whole line is
-treated as a comment, but the line can also act as a logical line
-number directive (*note Comments::) or a preprocessor control command
-(*note Preprocessing::).
+The characters '*' and '#' are line comment characters; each start a
+comment at the beginning of a line, but only at the beginning of a line.
+A '#' prefixes a hexadecimal number if found elsewhere on a line.  If a
+'#' appears at the start of a line the whole line is treated as a
+comment, but the line can also act as a logical line number directive
+(*note Comments::) or a preprocessor control command (*note
+Preprocessing::).
 
-   Two other characters, `%' and `!', each start a comment anywhere on
-the line.  Thus you can't use the `modulus' and `not' operators in
+   Two other characters, '%' and '!', each start a comment anywhere on
+the line.  Thus you can't use the 'modulus' and 'not' operators in
 expressions normally associated with these two characters.
 
-   A `;' is a line separator, treated as a new-line, so separate
+   A ';' is a line separator, treated as a new-line, so separate
 instructions can be specified on a single line.
 
 
@@ -15484,40 +15133,39 @@ File: as.info,  Node: MMIX-Symbols,  Next: MMIX-Regs,  Prev: MMIX-Chars,  Up: MM
 9.28.3.2 Symbols
 ................
 
-The character `:' is permitted in identifiers.  There are two
-exceptions to it being treated as any other symbol character: if a
-symbol begins with `:', it means that the symbol is in the global
-namespace and that the current prefix should not be prepended to that
-symbol (*note MMIX-prefix::).  The `:' is then not considered part of
-the symbol.  For a symbol in the label position (first on a line), a `:'
-at the end of a symbol is silently stripped off.  A label is permitted,
-but not required, to be followed by a `:', as with many other assembly
-formats.
+The character ':' is permitted in identifiers.  There are two exceptions
+to it being treated as any other symbol character: if a symbol begins
+with ':', it means that the symbol is in the global namespace and that
+the current prefix should not be prepended to that symbol (*note
+MMIX-prefix::).  The ':' is then not considered part of the symbol.  For
+a symbol in the label position (first on a line), a ':' at the end of a
+symbol is silently stripped off.  A label is permitted, but not
+required, to be followed by a ':', as with many other assembly formats.
 
-   The character `@' in an expression, is a synonym for `.', the
-current location.
+   The character '@' in an expression, is a synonym for '.', the current
+location.
 
    In addition to the common forward and backward local symbol formats
-(*note Symbol Names::), they can be specified with upper-case `B' and
-`F', as in `8B' and `9F'.  A local label defined for the current
-position is written with a `H' appended to the number:
+(*note Symbol Names::), they can be specified with upper-case 'B' and
+'F', as in '8B' and '9F'.  A local label defined for the current
+position is written with a 'H' appended to the number:
      3H LDB $0,$1,2
    This and traditional local-label formats cannot be mixed: a label
 must be defined and referred to using the same format.
 
    There's a minor caveat: just as for the ordinary local symbols, the
 local symbols are translated into ordinary symbols using control
-characters are to hide the ordinal number of the symbol.
-Unfortunately, these symbols are not translated back in error messages.
-Thus you may see confusing error messages when local symbols are used.
-Control characters `\003' (control-C) and `\004' (control-D) are used
-for the MMIX-specific local-symbol syntax.
+characters are to hide the ordinal number of the symbol.  Unfortunately,
+these symbols are not translated back in error messages.  Thus you may
+see confusing error messages when local symbols are used.  Control
+characters '\003' (control-C) and '\004' (control-D) are used for the
+MMIX-specific local-symbol syntax.
 
-   The symbol `Main' is handled specially; it is always global.
+   The symbol 'Main' is handled specially; it is always global.
 
-   By defining the symbols `__.MMIX.start..text' and
-`__.MMIX.start..data', the address of respectively the `.text' and
-`.data' segments of the final program can be defined, though when
+   By defining the symbols '__.MMIX.start..text' and
+'__.MMIX.start..data', the address of respectively the '.text' and
+'.data' segments of the final program can be defined, though when
 linking more than one object file, the code or data in the object file
 containing the symbol is not guaranteed to be start at that position;
 just the final executable.  *Note MMIX-loc::.
@@ -15528,11 +15176,11 @@ File: as.info,  Node: MMIX-Regs,  Next: MMIX-Pseudos,  Prev: MMIX-Symbols,  Up:
 9.28.3.3 Register names
 .......................
 
-Local and global registers are specified as `$0' to `$255'.  The
-recognized special register names are `rJ', `rA', `rB', `rC', `rD',
-`rE', `rF', `rG', `rH', `rI', `rK', `rL', `rM', `rN', `rO', `rP', `rQ',
-`rR', `rS', `rT', `rU', `rV', `rW', `rX', `rY', `rZ', `rBB', `rTT',
-`rWW', `rXX', `rYY' and `rZZ'.  A leading `:' is optional for special
+Local and global registers are specified as '$0' to '$255'.  The
+recognized special register names are 'rJ', 'rA', 'rB', 'rC', 'rD',
+'rE', 'rF', 'rG', 'rH', 'rI', 'rK', 'rL', 'rM', 'rN', 'rO', 'rP', 'rQ',
+'rR', 'rS', 'rT', 'rU', 'rV', 'rW', 'rX', 'rY', 'rZ', 'rBB', 'rTT',
+'rWW', 'rXX', 'rYY' and 'rZZ'.  A leading ':' is optional for special
 register names.
 
    Local and global symbols can be equated to register names and used in
@@ -15541,9 +15189,9 @@ place of ordinary registers.
    Similarly for special registers, local and global symbols can be
 used.  Also, symbols equated from numbers and constant expressions are
 allowed in place of a special register, except when either of the
-options `--no-predefined-syms' and `--fixed-special-register-names' are
+options '--no-predefined-syms' and '--fixed-special-register-names' are
 specified.  Then only the special register names above are allowed for
-the instructions having a special register operand; `GET' and `PUT'.
+the instructions having a special register operand; 'GET' and 'PUT'.
 
 
 File: as.info,  Node: MMIX-Pseudos,  Prev: MMIX-Regs,  Up: MMIX-Syntax
@@ -15551,12 +15199,13 @@ File: as.info,  Node: MMIX-Pseudos,  Prev: MMIX-Regs,  Up: MMIX-Syntax
 9.28.3.4 Assembler Directives
 .............................
 
-`LOC'
-     The `LOC' directive sets the current location to the value of the
-     operand field, which may include changing sections.  If the
-     operand is a constant, the section is set to either `.data' if the
-     value is `0x2000000000000000' or larger, else it is set to `.text'.
-     Within a section, the current location may only be changed to
+'LOC'
+
+     The 'LOC' directive sets the current location to the value of the
+     operand field, which may include changing sections.  If the operand
+     is a constant, the section is set to either '.data' if the value is
+     '0x2000000000000000' or larger, else it is set to '.text'.  Within
+     a section, the current location may only be changed to
      monotonically higher addresses.  A LOC expression must be a
      previously defined symbol or a "pure" constant.
 
@@ -15565,14 +15214,15 @@ File: as.info,  Node: MMIX-Pseudos,  Prev: MMIX-Regs,  Up: MMIX-Syntax
           prev LOC @+8
 
      When a LOC has a constant as its operand, a symbol
-     `__.MMIX.start..text' or `__.MMIX.start..data' is defined
-     depending on the address as mentioned above.  Each such symbol is
-     interpreted as special by the linker, locating the section at that
-     address.  Note that if multiple files are linked, the first object
-     file with that section will be mapped to that address (not
-     necessarily the file with the LOC definition).
-
-`LOCAL'
+     '__.MMIX.start..text' or '__.MMIX.start..data' is defined depending
+     on the address as mentioned above.  Each such symbol is interpreted
+     as special by the linker, locating the section at that address.
+     Note that if multiple files are linked, the first object file with
+     that section will be mapped to that address (not necessarily the
+     file with the LOC definition).
+
+'LOCAL'
+
      Example:
            LOCAL external_symbol
            LOCAL 42
@@ -15583,18 +15233,20 @@ File: as.info,  Node: MMIX-Pseudos,  Prev: MMIX-Regs,  Up: MMIX-Syntax
      an expression that at link-time resolves to a register symbol or a
      number.  A number is treated as the register having that number.
      There is one restriction on the use of this directive: the
-     pseudo-directive must be placed in a section with contents, code
-     or data.
+     pseudo-directive must be placed in a section with contents, code or
+     data.
 
-`IS'
-     The `IS' directive:
+'IS'
+
+     The 'IS' directive:
           asymbol IS an_expression
-     sets the symbol `asymbol' to `an_expression'.  A symbol may not be
+     sets the symbol 'asymbol' to 'an_expression'.  A symbol may not be
      set more than once using this directive.  Local labels may be set
      using this directive, for example:
           5H IS @+4
 
-`GREG'
+'GREG'
+
      This directive reserves a global register, gives it an initial
      value and optionally gives it a symbolic name.  Some examples:
 
@@ -15605,26 +15257,26 @@ File: as.info,  Node: MMIX-Pseudos,  Prev: MMIX-Regs,  Up: MMIX-Syntax
 
      The symbolic register name can be used in place of a (non-special)
      register.  If a value isn't provided, it defaults to zero.  Unless
-     the option `--no-merge-gregs' is specified, non-zero registers
-     allocated with this directive may be eliminated by `as'; another
+     the option '--no-merge-gregs' is specified, non-zero registers
+     allocated with this directive may be eliminated by 'as'; another
      register with the same value used in its place.  Any of the
-     instructions `CSWAP', `GO', `LDA', `LDBU', `LDB', `LDHT', `LDOU',
-     `LDO', `LDSF', `LDTU', `LDT', `LDUNC', `LDVTS', `LDWU', `LDW',
-     `PREGO', `PRELD', `PREST', `PUSHGO', `STBU', `STB', `STCO', `STHT',
-     `STOU', `STSF', `STTU', `STT', `STUNC', `SYNCD', `SYNCID', can
-     have a value nearby an initial value in place of its second and
-     third operands.  Here, "nearby" is defined as within the range
-     0...255 from the initial value of such an allocated register.
+     instructions 'CSWAP', 'GO', 'LDA', 'LDBU', 'LDB', 'LDHT', 'LDOU',
+     'LDO', 'LDSF', 'LDTU', 'LDT', 'LDUNC', 'LDVTS', 'LDWU', 'LDW',
+     'PREGO', 'PRELD', 'PREST', 'PUSHGO', 'STBU', 'STB', 'STCO', 'STHT',
+     'STOU', 'STSF', 'STTU', 'STT', 'STUNC', 'SYNCD', 'SYNCID', can have
+     a value nearby an initial value in place of its second and third
+     operands.  Here, "nearby" is defined as within the range 0...255
+     from the initial value of such an allocated register.
 
           buffer1 BYTE 0,0,0,0,0
           buffer2 BYTE 0,0,0,0,0
            ...
            GREG buffer1
            LDOU $42,buffer2
-     In the example above, the `Y' field of the `LDOUI' instruction
+     In the example above, the 'Y' field of the 'LDOUI' instruction
      (LDOU with a constant Z) will be replaced with the global register
-     allocated for `buffer1', and the `Z' field will have the value 5,
-     the offset from `buffer1' to `buffer2'.  The result is equivalent
+     allocated for 'buffer1', and the 'Z' field will have the value 5,
+     the offset from 'buffer1' to 'buffer2'.  The result is equivalent
      to this code:
           buffer1 BYTE 0,0,0,0,0
           buffer2 BYTE 0,0,0,0,0
@@ -15636,72 +15288,75 @@ File: as.info,  Node: MMIX-Pseudos,  Prev: MMIX-Regs,  Up: MMIX-Syntax
      order higher-to-lower within a file.  Other than that, the exact
      order of register allocation and elimination is undefined.  For
      example, the order is undefined when more than one file with such
-     directives are linked together.  With the options `-x' and
-     `--linker-allocated-gregs', `GREG' directives for two-operand
-     cases like the one mentioned above can be omitted.  Sufficient
-     global registers will then be allocated by the linker.
-
-`BYTE'
-     The `BYTE' directive takes a series of operands separated by a
-     comma.  If an operand is a string (*note Strings::), each
-     character of that string is emitted as a byte.  Other operands
-     must be constant expressions without forward references, in the
-     range 0...255.  If you need operands having expressions with
-     forward references, use `.byte' (*note Byte::).  An operand can be
-     omitted, defaulting to a zero value.
-
-`WYDE'
-`TETRA'
-`OCTA'
-     The directives `WYDE', `TETRA' and `OCTA' emit constants of two,
+     directives are linked together.  With the options '-x' and
+     '--linker-allocated-gregs', 'GREG' directives for two-operand cases
+     like the one mentioned above can be omitted.  Sufficient global
+     registers will then be allocated by the linker.
+
+'BYTE'
+
+     The 'BYTE' directive takes a series of operands separated by a
+     comma.  If an operand is a string (*note Strings::), each character
+     of that string is emitted as a byte.  Other operands must be
+     constant expressions without forward references, in the range
+     0...255.  If you need operands having expressions with forward
+     references, use '.byte' (*note Byte::).  An operand can be omitted,
+     defaulting to a zero value.
+
+'WYDE'
+'TETRA'
+'OCTA'
+
+     The directives 'WYDE', 'TETRA' and 'OCTA' emit constants of two,
      four and eight bytes size respectively.  Before anything else
      happens for the directive, the current location is aligned to the
      respective constant-size boundary.  If a label is defined at the
      beginning of the line, its value will be that after the alignment.
-     A single operand can be omitted, defaulting to a zero value
-     emitted for the directive.  Operands can be expressed as strings
-     (*note Strings::), in which case each character in the string is
-     emitted as a separate constant of the size indicated by the
-     directive.
+     A single operand can be omitted, defaulting to a zero value emitted
+     for the directive.  Operands can be expressed as strings (*note
+     Strings::), in which case each character in the string is emitted
+     as a separate constant of the size indicated by the directive.
+
+'PREFIX'
 
-`PREFIX'
-     The `PREFIX' directive sets a symbol name prefix to be prepended to
+     The 'PREFIX' directive sets a symbol name prefix to be prepended to
      all symbols (except local symbols, *note MMIX-Symbols::), that are
-     not prefixed with `:', until the next `PREFIX' directive.  Such
+     not prefixed with ':', until the next 'PREFIX' directive.  Such
      prefixes accumulate.  For example,
            PREFIX a
            PREFIX b
           c IS 0
-     defines a symbol `abc' with the value 0.
+     defines a symbol 'abc' with the value 0.
 
-`BSPEC'
-`ESPEC'
-     A pair of `BSPEC' and `ESPEC' directives delimit a section of
+'BSPEC'
+'ESPEC'
+
+     A pair of 'BSPEC' and 'ESPEC' directives delimit a section of
      special contents (without specified semantics).  Example:
            BSPEC 42
            TETRA 1,2,3
            ESPEC
-     The single operand to `BSPEC' must be number in the range 0...255.
-     The `BSPEC' number 80 is used by the GNU binutils implementation.
+     The single operand to 'BSPEC' must be number in the range 0...255.
+     The 'BSPEC' number 80 is used by the GNU binutils implementation.
 
 
 File: as.info,  Node: MMIX-mmixal,  Prev: MMIX-Syntax,  Up: MMIX-Dependent
 
-9.28.4 Differences to `mmixal'
+9.28.4 Differences to 'mmixal'
 ------------------------------
 
-The binutils `as' and `ld' combination has a few differences in
-function compared to `mmixal' (*note mmixsite::).
+The binutils 'as' and 'ld' combination has a few differences in function
+compared to 'mmixal' (*note mmixsite::).
 
    The replacement of a symbol with a GREG-allocated register (*note
-GREG-base::) is not handled the exactly same way in `as' as in
-`mmixal'.  This is apparent in the `mmixal' example file `inout.mms',
-where different registers with different offsets, eventually yielding
-the same address, are used in the first instruction.  This type of
-difference should however not affect the function of any program unless
-it has specific assumptions about the allocated register number.
-
-   Line numbers (in the `mmo' object format) are currently not
+GREG-base::) is not handled the exactly same way in 'as' as in 'mmixal'.
+This is apparent in the 'mmixal' example file 'inout.mms', where
+different registers with different offsets, eventually yielding the same
+address, are used in the first instruction.  This type of difference
+should however not affect the function of any program unless it has
+specific assumptions about the allocated register number.
+
+   Line numbers (in the 'mmo' object format) are currently not
 supported.
 
    Expression operator precedence is not that of mmixal: operator
@@ -15709,16 +15364,16 @@ precedence is that of the C programming language.  It's recommended to
 use parentheses to explicitly specify wanted operator precedence
 whenever more than one type of operators are used.
 
-   The serialize unary operator `&', the fractional division operator
-`//', the logical not operator `!' and the modulus operator `%' are not
+   The serialize unary operator '&', the fractional division operator
+'//', the logical not operator '!' and the modulus operator '%' are not
 available.
 
    Symbols are not global by default, unless the option
-`--globalize-symbols' is passed.  Use the `.global' directive to
+'--globalize-symbols' is passed.  Use the '.global' directive to
 globalize symbols (*note Global::).
 
-   Operand syntax is a bit stricter with `as' than `mmixal'.  For
-example, you can't say `addu 1,2,3', instead you must write `addu
+   Operand syntax is a bit stricter with 'as' than 'mmixal'.  For
+example, you can't say 'addu 1,2,3', instead you must write 'addu
 $1,$2,3'.
 
    You can't LOC to a lower address than those already visited (i.e.,
@@ -15732,9 +15387,9 @@ symbol.)
 
    Some mapping of constant expressions to sections in LOC expressions
 is attempted, but that functionality is easily confused and should be
-avoided unless compatibility with `mmixal' is required.  A LOC
-expression to `0x2000000000000000' or higher, maps to the `.data'
-section and lower addresses map to the `.text' section (*note
+avoided unless compatibility with 'mmixal' is required.  A LOC
+expression to '0x2000000000000000' or higher, maps to the '.data'
+section and lower addresses map to the '.text' section (*note
 MMIX-loc::).
 
    The code and data areas are each contiguous.  Sparse programs with
@@ -15743,38 +15398,36 @@ contiguous program with zeros filled in the gaps between the LOC
 directives.  If you need sparse programs, you might try and get the
 wanted effect with a linker script and splitting up the code parts into
 sections (*note Section::).  Assembly code for this, to be compatible
-with `mmixal', would look something like:
+with 'mmixal', would look something like:
       .if 0
       LOC away_expression
       .else
       .section away,"ax"
       .fi
-   `as' will not execute the LOC directive and `mmixal' ignores the
-lines with `.'.  This construct can be used generally to help
+   'as' will not execute the LOC directive and 'mmixal' ignores the
+lines with '.'.  This construct can be used generally to help
 compatibility.
 
    Symbols can't be defined twice-not even to the same value.
 
    Instruction mnemonics are recognized case-insensitive, though the
-`IS' and `GREG' pseudo-operations must be specified in upper-case
+'IS' and 'GREG' pseudo-operations must be specified in upper-case
 characters.
 
    There's no unicode support.
 
-   The following is a list of programs in `mmix.tar.gz', available at
-`http://www-cs-faculty.stanford.edu/~knuth/mmix-news.html', last
-checked with the version dated 2001-08-25 (md5sum
-c393470cfc86fac040487d22d2bf0172) that assemble with `mmixal' but do
-not assemble with `as':
+   The following is a list of programs in 'mmix.tar.gz', available at
+<http://www-cs-faculty.stanford.edu/~knuth/mmix-news.html>, last checked
+with the version dated 2001-08-25 (md5sum
+c393470cfc86fac040487d22d2bf0172) that assemble with 'mmixal' but do not
+assemble with 'as':
 
-`silly.mms'
+'silly.mms'
      LOC to a previous address.
-
-`sim.mms'
-     Redefines symbol `Done'.
-
-`test.mms'
-     Uses the serial operator `&'.
+'sim.mms'
+     Redefines symbol 'Done'.
+'test.mms'
+     Uses the serial operator '&'.
 
 
 File: as.info,  Node: MSP430-Dependent,  Next: NDS32-Dependent,  Prev: MMIX-Dependent,  Up: Machine Dependencies
@@ -15797,91 +15450,85 @@ File: as.info,  Node: MSP430 Options,  Next: MSP430 Syntax,  Up: MSP430-Dependen
 9.29.1 Options
 --------------
 
-`-mmcu'
+'-mmcu'
      selects the mcu architecture.  If the architecture is 430Xv2 then
-     this also enables NOP generation unless the `-mN' is also
+     this also enables NOP generation unless the '-mN' is also
      specified.
 
-`-mcpu'
+'-mcpu'
      selects the cpu architecture.  If the architecture is 430Xv2 then
-     this also enables NOP generation unless the `-mN' is also
+     this also enables NOP generation unless the '-mN' is also
      specified.
 
-`-msilicon-errata=NAME[,NAME...]'
+'-msilicon-errata=NAME[,NAME...]'
      Implements a fixup for named silicon errata.  Multiple silicon
-     errata can be specified by multiple uses of the `-msilicon-errata'
+     errata can be specified by multiple uses of the '-msilicon-errata'
      option and/or by including the errata names, separated by commas,
-     on an individual `-msilicon-errata' option.  Errata names
-     currently recognised by the assembler are:
+     on an individual '-msilicon-errata' option.  Errata names currently
+     recognised by the assembler are:
 
-    `cpu4'
-          `PUSH #4' and `PUSH #8' need longer encodings on the MSP430.
+     'cpu4'
+          'PUSH #4' and 'PUSH #8' need longer encodings on the MSP430.
           This option is enabled by default, and cannot be disabled.
-
-    `cpu8'
-          Do not set the `SP' to an odd value.
-
-    `cpu11'
-          Do not update the `SR' and the `PC' in the same instruction.
-
-    `cpu12'
-          Do not use the `PC' in a `CMP' or `BIT' instruction.
-
-    `cpu13'
-          Do not use an arithmetic instruction to modify the `SR'.
-
-    `cpu19'
-          Insert `NOP' after `CPUOFF'.
-
-`-msilicon-errata-warn=NAME[,NAME...]'
-     Like the `-msilicon-errata' option except that instead of fixing
+     'cpu8'
+          Do not set the 'SP' to an odd value.
+     'cpu11'
+          Do not update the 'SR' and the 'PC' in the same instruction.
+     'cpu12'
+          Do not use the 'PC' in a 'CMP' or 'BIT' instruction.
+     'cpu13'
+          Do not use an arithmetic instruction to modify the 'SR'.
+     'cpu19'
+          Insert 'NOP' after 'CPUOFF'.
+
+'-msilicon-errata-warn=NAME[,NAME...]'
+     Like the '-msilicon-errata' option except that instead of fixing
      the specified errata, a warning message is issued instead.  This
-     option can be used alongside `-msilicon-errata' to generate
+     option can be used alongside '-msilicon-errata' to generate
      messages whenever a problem is fixed, or on its own in order to
      inspect code for potential problems.
 
-`-mP'
+'-mP'
      enables polymorph instructions handler.
 
-`-mQ'
-     enables relaxation at assembly time. DANGEROUS!
+'-mQ'
+     enables relaxation at assembly time.  DANGEROUS!
 
-`-ml'
+'-ml'
      indicates that the input uses the large code model.
 
-`-mn'
+'-mn'
      enables the generation of a NOP instruction following any
      instruction that might change the interrupts enabled/disabled
      state.  The pipelined nature of the MSP430 core means that any
-     instruction that changes the interrupt state (`EINT', `DINT', `BIC
-     #8, SR', `BIS #8, SR' or `MOV.W <>, SR') must be followed by a NOP
+     instruction that changes the interrupt state ('EINT', 'DINT', 'BIC
+     #8, SR', 'BIS #8, SR' or 'MOV.W <>, SR') must be followed by a NOP
      instruction in order to ensure the correct processing of
      interrupts.  By default it is up to the programmer to supply these
      NOP instructions, but this command line option enables the
      automatic insertion by the assembler, if they are missing.
 
-`-mN'
+'-mN'
      disables the generation of a NOP instruction following any
      instruction that might change the interrupts enabled/disabled
      state.  This is the default behaviour.
 
-`-my'
+'-my'
      tells the assembler to generate a warning message if a NOP does not
      immediately forllow an instruction that enables or disables
      interrupts.  This is the default.
 
-     Note that this option can be stacked with the `-mn' option so that
+     Note that this option can be stacked with the '-mn' option so that
      the assembler will both warn about missing NOP instructions and
      then insert them automatically.
 
-`-mY'
+'-mY'
      disables warnings about missing NOP instructions.
 
-`-md'
+'-md'
      mark the object file as one that requires data to copied from ROM
      to RAM at execution startup.  Disabled by default.
 
-
 
 File: as.info,  Node: MSP430 Syntax,  Next: MSP430 Floating Point,  Prev: MSP430 Options,  Up: MSP430-Dependent
 
@@ -15902,24 +15549,23 @@ File: as.info,  Node: MSP430-Macros,  Next: MSP430-Chars,  Up: MSP430 Syntax
 ...............
 
 The macro syntax used on the MSP 430 is like that described in the MSP
-430 Family Assembler Specification.  Normal `as' macros should still
+430 Family Assembler Specification.  Normal 'as' macros should still
 work.
 
    Additional built-in macros are:
 
-`llo(exp)'
+'llo(exp)'
      Extracts least significant word from 32-bit expression 'exp'.
 
-`lhi(exp)'
+'lhi(exp)'
      Extracts most significant word from 32-bit expression 'exp'.
 
-`hlo(exp)'
+'hlo(exp)'
      Extracts 3rd word from 64-bit expression 'exp'.
 
-`hhi(exp)'
+'hhi(exp)'
      Extracts 4rd word from 64-bit expression 'exp'.
 
-
    They normally being used as an immediate source operand.
          mov	#llo(1), r10	;	== mov	#1, r10
          mov	#lhi(1), r10	;	== mov	#0, r10
@@ -15930,18 +15576,18 @@ File: as.info,  Node: MSP430-Chars,  Next: MSP430-Regs,  Prev: MSP430-Macros,  U
 9.29.2.2 Special Characters
 ...........................
 
-A semicolon (`;') appearing anywhere on a line starts a comment that
+A semicolon (';') appearing anywhere on a line starts a comment that
 extends to the end of that line.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but it can also be a logical line number
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but it can also be a logical line number
 directive (*note Comments::) or a preprocessor control command (*note
 Preprocessing::).
 
    Multiple statements can appear on the same line provided that they
-are separated by the `{' character.
+are separated by the '{' character.
 
-   The character `$' in jump instructions indicates current location and
+   The character '$' in jump instructions indicates current location and
 implemented only for TI syntax compatibility.
 
 
@@ -15951,12 +15597,12 @@ File: as.info,  Node: MSP430-Regs,  Next: MSP430-Ext,  Prev: MSP430-Chars,  Up:
 .......................
 
 General-purpose registers are represented by predefined symbols of the
-form `rN' (for global registers), where N represents a number between
-`0' and `15'.  The leading letters may be in either upper or lower
-case; for example, `r13' and `R7' are both valid register names.
+form 'rN' (for global registers), where N represents a number between
+'0' and '15'.  The leading letters may be in either upper or lower case;
+for example, 'r13' and 'R7' are both valid register names.
 
-   Register names `PC', `SP' and `SR' cannot be used as register names
-and will be treated as variables. Use `r0', `r1', and `r2' instead.
+   Register names 'PC', 'SP' and 'SR' cannot be used as register names
+and will be treated as variables.  Use 'r0', 'r1', and 'r2' instead.
 
 
 File: as.info,  Node: MSP430-Ext,  Prev: MSP430-Regs,  Up: MSP430 Syntax
@@ -15964,65 +15610,64 @@ File: as.info,  Node: MSP430-Ext,  Prev: MSP430-Regs,  Up: MSP430 Syntax
 9.29.2.4 Assembler Extensions
 .............................
 
-`@rN'
-     As destination operand being treated as `0(rn)'
+'@rN'
+     As destination operand being treated as '0(rn)'
 
-`0(rN)'
-     As source operand being treated as `@rn'
+'0(rN)'
+     As source operand being treated as '@rn'
 
-`jCOND +N'
+'jCOND +N'
      Skips next N bytes followed by jump instruction and equivalent to
-     `jCOND $+N+2'
-
+     'jCOND $+N+2'
 
    Also, there are some instructions, which cannot be found in other
 assemblers.  These are branch instructions, which has different opcodes
 upon jump distance.  They all got PC relative addressing mode.
 
-`beq label'
-     A polymorph instruction which is `jeq label' in case if jump
-     distance within allowed range for cpu's jump instruction. If not,
+'beq label'
+     A polymorph instruction which is 'jeq label' in case if jump
+     distance within allowed range for cpu's jump instruction.  If not,
      this unrolls into a sequence of
             jne $+6
             br  label
 
-`bne label'
-     A polymorph instruction which is `jne label' or `jeq +4; br label'
+'bne label'
+     A polymorph instruction which is 'jne label' or 'jeq +4; br label'
 
-`blt label'
-     A polymorph instruction which is `jl label' or `jge +4; br label'
+'blt label'
+     A polymorph instruction which is 'jl label' or 'jge +4; br label'
 
-`bltn label'
-     A polymorph instruction which is `jn label' or `jn +2; jmp +4; br
+'bltn label'
+     A polymorph instruction which is 'jn label' or 'jn +2; jmp +4; br
      label'
 
-`bltu label'
-     A polymorph instruction which is `jlo label' or `jhs +2; br label'
+'bltu label'
+     A polymorph instruction which is 'jlo label' or 'jhs +2; br label'
 
-`bge label'
-     A polymorph instruction which is `jge label' or `jl +4; br label'
+'bge label'
+     A polymorph instruction which is 'jge label' or 'jl +4; br label'
 
-`bgeu label'
-     A polymorph instruction which is `jhs label' or `jlo +4; br label'
+'bgeu label'
+     A polymorph instruction which is 'jhs label' or 'jlo +4; br label'
 
-`bgt label'
-     A polymorph instruction which is `jeq +2; jge label' or `jeq +6;
-     jl  +4; br label'
+'bgt label'
+     A polymorph instruction which is 'jeq +2; jge label' or 'jeq +6; jl
+     +4; br label'
 
-`bgtu label'
-     A polymorph instruction which is `jeq +2; jhs label' or `jeq +6;
+'bgtu label'
+     A polymorph instruction which is 'jeq +2; jhs label' or 'jeq +6;
      jlo +4; br label'
 
-`bleu label'
-     A polymorph instruction which is `jeq label; jlo label' or `jeq
-     +2; jhs +4; br label'
+'bleu label'
+     A polymorph instruction which is 'jeq label; jlo label' or 'jeq +2;
+     jhs +4; br label'
 
-`ble label'
-     A polymorph instruction which is `jeq label; jl  label' or `jeq
-     +2; jge +4; br label'
+'ble label'
+     A polymorph instruction which is 'jeq label; jl label' or 'jeq +2;
+     jge +4; br label'
 
-`jump label'
-     A polymorph instruction which is `jmp label' or `br label'
+'jump label'
+     A polymorph instruction which is 'jmp label' or 'br label'
 
 
 File: as.info,  Node: MSP430 Floating Point,  Next: MSP430 Directives,  Prev: MSP430 Syntax,  Up: MSP430-Dependent
@@ -16038,39 +15683,37 @@ File: as.info,  Node: MSP430 Directives,  Next: MSP430 Opcodes,  Prev: MSP430 Fl
 9.29.4 MSP 430 Machine Directives
 ---------------------------------
 
-`.file'
+'.file'
      This directive is ignored; it is accepted for compatibility with
      other MSP 430 assemblers.
 
-          _Warning:_ in other versions of the GNU assembler, `.file' is
-          used for the directive called `.app-file' in the MSP 430
+          _Warning:_ in other versions of the GNU assembler, '.file' is
+          used for the directive called '.app-file' in the MSP 430
           support.
 
-`.line'
+'.line'
      This directive is ignored; it is accepted for compatibility with
      other MSP 430 assemblers.
 
-`.arch'
-     Sets the target microcontroller in the same way as the `-mmcu'
+'.arch'
+     Sets the target microcontroller in the same way as the '-mmcu'
      command line option.
 
-`.cpu'
-     Sets the target architecture in the same way as the `-mcpu'
-     command line option.
+'.cpu'
+     Sets the target architecture in the same way as the '-mcpu' command
+     line option.
 
-`.profiler'
+'.profiler'
      This directive instructs assembler to add new profile entry to the
      object file.
 
-`.refsym'
+'.refsym'
      This directive instructs assembler to add an undefined reference to
-     the symbol following the directive.  The maximum symbol name
-     length is 1023 characters.  No relocation is created for this
-     symbol; it will exist purely for pulling in object files from
-     archives.  Note that this reloc is not sufficient to prevent
-     garbage collection; use a KEEP() directive in the linker file to
-     preserve such objects.
-
+     the symbol following the directive.  The maximum symbol name length
+     is 1023 characters.  No relocation is created for this symbol; it
+     will exist purely for pulling in object files from archives.  Note
+     that this reloc is not sufficient to prevent garbage collection;
+     use a KEEP() directive in the linker file to preserve such objects.
 
 
 File: as.info,  Node: MSP430 Opcodes,  Next: MSP430 Profiling Capability,  Prev: MSP430 Directives,  Up: MSP430-Dependent
@@ -16078,10 +15721,10 @@ File: as.info,  Node: MSP430 Opcodes,  Next: MSP430 Profiling Capability,  Prev:
 9.29.5 Opcodes
 --------------
 
-`as' implements all the standard MSP 430 opcodes.  No additional
+'as' implements all the standard MSP 430 opcodes.  No additional
 pseudo-instructions are needed on this family.
 
-   For information on the 430 machine instruction set, see `MSP430
+   For information on the 430 machine instruction set, see 'MSP430
 User's Manual, document slau049d', Texas Instrument, Inc.
 
 
@@ -16095,75 +15738,58 @@ target.  Even more - jtag hardware facility does not perform any
 profiling functions.  However we've got gdb's built-in simulator where
 we can do anything.
 
-   We define new section `.profiler' which holds all profiling
-information.  We define new pseudo operation `.profiler' which will
-instruct assembler to add new profile entry to the object file. Profile
+   We define new section '.profiler' which holds all profiling
+information.  We define new pseudo operation '.profiler' which will
+instruct assembler to add new profile entry to the object file.  Profile
 should take place at the present address.
 
    Pseudo operation format:
 
-   `.profiler flags,function_to_profile [, cycle_corrector, extra]'
+   '.profiler flags,function_to_profile [, cycle_corrector, extra]'
 
    where:
 
-          `flags' is a combination of the following characters:
+          'flags' is a combination of the following characters:
 
-    `s'
+     's'
           function entry
-
-    `x'
+     'x'
           function exit
-
-    `i'
+     'i'
           function is in init section
-
-    `f'
+     'f'
           function is in fini section
-
-    `l'
+     'l'
           library call
-
-    `c'
+     'c'
           libc standard call
-
-    `d'
+     'd'
           stack value demand
-
-    `I'
+     'I'
           interrupt service routine
-
-    `P'
+     'P'
           prologue start
-
-    `p'
+     'p'
           prologue end
-
-    `E'
+     'E'
           epilogue start
-
-    `e'
+     'e'
           epilogue end
-
-    `j'
+     'j'
           long jump / sjlj unwind
-
-    `a'
+     'a'
           an arbitrary code fragment
-
-    `t'
+     't'
           extra parameter saved (a constant value like frame size)
 
-`function_to_profile'
+'function_to_profile'
      a function address
-
-`cycle_corrector'
+'cycle_corrector'
      a value which should be added to the cycle counter, zero if
      omitted.
-
-`extra'
+'extra'
      any extra parameter, zero if omitted.
 
-
    For example:
      .global fxx
      .type fxx,@function
@@ -16195,8 +15821,8 @@ File: as.info,  Node: NDS32-Dependent,  Next: NiosII-Dependent,  Prev: MSP430-De
 9.30 NDS32 Dependent Features
 =============================
 
-   The NDS32 processors family includes high-performance and low-power
-32-bit processors for high-end to low-end.  GNU `as' for NDS32
+The NDS32 processors family includes high-performance and low-power
+32-bit processors for high-end to low-end.  GNU 'as' for NDS32
 architectures supports NDS32 ISA version 3.  For detail about NDS32
 instruction set, please see the AndeStar ISA User Manual which is
 availible at http://www.andestech.com/en/index/index.htm
@@ -16212,89 +15838,86 @@ File: as.info,  Node: NDS32 Options,  Next: NDS32 Syntax,  Up: NDS32-Dependent
 9.30.1 NDS32 Options
 --------------------
 
-The NDS32 configurations of GNU `as' support these special options:
+The NDS32 configurations of GNU 'as' support these special options:
 
-`-O1'
+'-O1'
      Optimize for performance.
 
-`-Os'
+'-Os'
      Optimize for space.
 
-`-EL'
+'-EL'
      Produce little endian data output.
 
-`-EB'
+'-EB'
      Produce little endian data output.
 
-`-mpic'
+'-mpic'
      Generate PIC.
 
-`-mno-fp-as-gp-relax'
+'-mno-fp-as-gp-relax'
      Suppress fp-as-gp relaxation for this file.
 
-`-mb2bb-relax'
+'-mb2bb-relax'
      Back-to-back branch optimization.
 
-`-mno-all-relax'
+'-mno-all-relax'
      Suppress all relaxation for this file.
 
-`-march=<arch name>'
+'-march=<arch name>'
      Assemble for architecture <arch name> which could be v3, v3j, v3m,
      v3f, v3s, v2, v2j, v2f, v2s.
 
-`-mbaseline=<baseline>'
+'-mbaseline=<baseline>'
      Assemble for baseline <baseline> which could be v2, v3, v3m.
 
-`-mfpu-freg=FREG'
+'-mfpu-freg=FREG'
      Specify a FPU configuration.
-    `0      8 SP /  4 DP registers'
-
-    `1     16 SP /  8 DP registers'
+     '0 8 SP / 4 DP registers'
+     '1 16 SP / 8 DP registers'
+     '2 32 SP / 16 DP registers'
+     '3 32 SP / 32 DP registers'
 
-    `2     32 SP / 16 DP registers'
-
-    `3     32 SP / 32 DP registers'
-
-`-mabi=ABI'
+'-mabi=ABI'
      Specify a abi version <abi> could be v1, v2, v2fp, v2fpp.
 
-`-m[no-]mac'
+'-m[no-]mac'
      Enable/Disable Multiply instructions support.
 
-`-m[no-]div'
+'-m[no-]div'
      Enable/Disable Divide instructions support.
 
-`-m[no-]16bit-ext'
+'-m[no-]16bit-ext'
      Enable/Disable 16-bit extension
 
-`-m[no-]dx-regs'
+'-m[no-]dx-regs'
      Enable/Disable d0/d1 registers
 
-`-m[no-]perf-ext'
+'-m[no-]perf-ext'
      Enable/Disable Performance extension
 
-`-m[no-]perf2-ext'
+'-m[no-]perf2-ext'
      Enable/Disable Performance extension 2
 
-`-m[no-]string-ext'
+'-m[no-]string-ext'
      Enable/Disable String extension
 
-`-m[no-]reduced-regs'
+'-m[no-]reduced-regs'
      Enable/Disable Reduced Register configuration (GPR16) option
 
-`-m[no-]audio-isa-ext'
+'-m[no-]audio-isa-ext'
      Enable/Disable AUDIO ISA extension
 
-`-m[no-]fpu-sp-ext'
+'-m[no-]fpu-sp-ext'
      Enable/Disable FPU SP extension
 
-`-m[no-]fpu-dp-ext'
+'-m[no-]fpu-dp-ext'
      Enable/Disable FPU DP extension
 
-`-m[no-]fpu-fma'
+'-m[no-]fpu-fma'
      Enable/Disable FPU fused-multiply-add instructions
 
-`-mall-ext'
+'-mall-ext'
      Turn on all extensions and instructions support
 
 
@@ -16315,14 +15938,14 @@ File: as.info,  Node: NDS32-Chars,  Next: NDS32-Regs,  Up: NDS32 Syntax
 9.30.2.1 Special Characters
 ...........................
 
-Use `#' at column 1 and `!' anywhere in the line except inside quotes.
+Use '#' at column 1 and '!' anywhere in the line except inside quotes.
 
    Multiple instructions in a line are allowed though not recommended
-and should be separated by `;'.
+and should be separated by ';'.
 
    Assembler is not case-sensitive in general except user defined label.
-For example, `jral F1' is different from `jral f1' while it is the same
-as `JRAL F1'.
+For example, 'jral F1' is different from 'jral f1' while it is the same
+as 'JRAL F1'.
 
 
 File: as.info,  Node: NDS32-Regs,  Next: NDS32-Ops,  Prev: NDS32-Chars,  Up: NDS32 Syntax
@@ -16330,29 +15953,29 @@ File: as.info,  Node: NDS32-Regs,  Next: NDS32-Ops,  Prev: NDS32-Chars,  Up: NDS
 9.30.2.2 Register Names
 .......................
 
-`General purpose registers (GPR)'
+'General purpose registers (GPR)'
      There are 32 32-bit general purpose registers $r0 to $r31.
 
-`Accumulators d0 and d1'
+'Accumulators d0 and d1'
      64-bit accumulators: $d0.hi, $d0.lo, $d1.hi, and $d1.lo.
 
-`Assembler reserved register $ta'
+'Assembler reserved register $ta'
      Register $ta ($r15) is reserved for assembler using.
 
-`Operating system reserved registers $p0 and $p1'
-     Registers $p0 ($r26) and $p1 ($r27) are used by operating system
-     as scratch registers.
+'Operating system reserved registers $p0 and $p1'
+     Registers $p0 ($r26) and $p1 ($r27) are used by operating system as
+     scratch registers.
 
-`Frame pointer $fp'
+'Frame pointer $fp'
      Register $r28 is regarded as the frame pointer.
 
-`Global pointer'
+'Global pointer'
      Register $r29 is regarded as the global pointer.
 
-`Link pointer'
+'Link pointer'
      Register $r30 is regarded as the link pointer.
 
-`Stack pointer'
+'Stack pointer'
      Register $r31 is regarded as the stack pointer.
 
 
@@ -16361,129 +15984,128 @@ File: as.info,  Node: NDS32-Ops,  Prev: NDS32-Regs,  Up: NDS32 Syntax
 9.30.2.3 Pseudo Instructions
 ............................
 
-`li rt5,imm32'
-     load 32-bit integer into register rt5.  `sethi rt5,hi20(imm32)'
-     and then `ori rt5,reg,lo12(imm32)'.
+'li rt5,imm32'
+     load 32-bit integer into register rt5.  'sethi rt5,hi20(imm32)' and
+     then 'ori rt5,reg,lo12(imm32)'.
 
-`la rt5,var'
-     Load 32-bit address of var into register rt5.  `sethi
-     rt5,hi20(var)' and then `ori reg,rt5,lo12(var)'
+'la rt5,var'
+     Load 32-bit address of var into register rt5.  'sethi
+     rt5,hi20(var)' and then 'ori reg,rt5,lo12(var)'
 
-`l.[bhw] rt5,var'
-     Load value of var into register rt5.  `sethi $ta,hi20(var)' and
-     then `l[bhw]i rt5,[$ta+lo12(var)]'
+'l.[bhw] rt5,var'
+     Load value of var into register rt5.  'sethi $ta,hi20(var)' and
+     then 'l[bhw]i rt5,[$ta+lo12(var)]'
 
-`l.[bh]s rt5,var'
-     Load value of var into register rt5.  `sethi $ta,hi20(var)' and
-     then `l[bh]si rt5,[$ta+lo12(var)]'
+'l.[bh]s rt5,var'
+     Load value of var into register rt5.  'sethi $ta,hi20(var)' and
+     then 'l[bh]si rt5,[$ta+lo12(var)]'
 
-`l.[bhw]p rt5,var,inc'
+'l.[bhw]p rt5,var,inc'
      Load value of var into register rt5 and increment $ta by amount
-     inc.  `la $ta,var' and then `l[bhw]i.bi rt5,[$ta],inc'
+     inc.  'la $ta,var' and then 'l[bhw]i.bi rt5,[$ta],inc'
 
-`l.[bhw]pc rt5,inc'
+'l.[bhw]pc rt5,inc'
      Continue loading value of var into register rt5 and increment $ta
-     by amount inc.  `l[bhw]i.bi rt5,[$ta],inc.'
+     by amount inc.  'l[bhw]i.bi rt5,[$ta],inc.'
 
-`l.[bh]sp rt5,var,inc'
+'l.[bh]sp rt5,var,inc'
      Load value of var into register rt5 and increment $ta by amount
-     inc.  `la $ta,var' and then `l[bh]si.bi rt5,[$ta],inc'
+     inc.  'la $ta,var' and then 'l[bh]si.bi rt5,[$ta],inc'
 
-`l.[bh]spc rt5,inc'
+'l.[bh]spc rt5,inc'
      Continue loading value of var into register rt5 and increment $ta
-     by amount inc.  `l[bh]si.bi rt5,[$ta],inc.'
+     by amount inc.  'l[bh]si.bi rt5,[$ta],inc.'
 
-`s.[bhw] rt5,var'
-     Store register rt5 to var.  `sethi $ta,hi20(var)' and then
-     `s[bhw]i rt5,[$ta+lo12(var)]'
+'s.[bhw] rt5,var'
+     Store register rt5 to var.  'sethi $ta,hi20(var)' and then 's[bhw]i
+     rt5,[$ta+lo12(var)]'
 
-`s.[bhw]p rt5,var,inc'
-     Store register rt5 to var and increment $ta by amount inc.  `la
-     $ta,var' and then `s[bhw]i.bi rt5,[$ta],inc'
+'s.[bhw]p rt5,var,inc'
+     Store register rt5 to var and increment $ta by amount inc.  'la
+     $ta,var' and then 's[bhw]i.bi rt5,[$ta],inc'
 
-`s.[bhw]pc rt5,inc'
+'s.[bhw]pc rt5,inc'
      Continue storing register rt5 to var and increment $ta by amount
-     inc.  `s[bhw]i.bi rt5,[$ta],inc.'
+     inc.  's[bhw]i.bi rt5,[$ta],inc.'
 
-`not rt5,ra5'
-     Alias of `nor rt5,ra5,ra5'.
+'not rt5,ra5'
+     Alias of 'nor rt5,ra5,ra5'.
 
-`neg rt5,ra5'
-     Alias of `subri rt5,ra5,0'.
+'neg rt5,ra5'
+     Alias of 'subri rt5,ra5,0'.
 
-`br rb5'
-     Depending on how it is assembled, it is translated into `r5 rb5'
-     or `jr rb5'.
+'br rb5'
+     Depending on how it is assembled, it is translated into 'r5 rb5' or
+     'jr rb5'.
 
-`b label'
+'b label'
      Branch to label depending on how it is assembled, it is translated
-     into `j8 label', `j label', or "`la $ta,label' `br $ta'".
+     into 'j8 label', 'j label', or "'la $ta,label' 'br $ta'".
 
-`bral rb5'
+'bral rb5'
      Alias of jral br5 depending on how it is assembled, it is
-     translated into `jral5 rb5' or `jral rb5'.
+     translated into 'jral5 rb5' or 'jral rb5'.
 
-`bal fname'
+'bal fname'
      Alias of jal fname depending on how it is assembled, it is
-     translated into `jal fname' or "`la $ta,fname' `bral $ta'".
+     translated into 'jal fname' or "'la $ta,fname' 'bral $ta'".
 
-`call fname'
-     Call function fname same as `jal fname'.
+'call fname'
+     Call function fname same as 'jal fname'.
 
-`move rt5,ra5'
-     For 16-bit, this is `mov55 rt5,ra5'.  For no 16-bit, this is `ori
+'move rt5,ra5'
+     For 16-bit, this is 'mov55 rt5,ra5'.  For no 16-bit, this is 'ori
      rt5,ra5,0'.
 
-`move rt5,var'
-     This is the same as `l.w rt5,var'.
+'move rt5,var'
+     This is the same as 'l.w rt5,var'.
 
-`move rt5,imm32'
-     This is the same as `li rt5,imm32'.
+'move rt5,imm32'
+     This is the same as 'li rt5,imm32'.
 
-`pushm ra5,rb5'
+'pushm ra5,rb5'
      Push contents of registers from ra5 to rb5 into stack.
 
-`push ra5'
-     Push content of register ra5 into stack. (same `pushm ra5,ra5').
+'push ra5'
+     Push content of register ra5 into stack.  (same 'pushm ra5,ra5').
 
-`push.d var'
+'push.d var'
      Push value of double-word variable var into stack.
 
-`push.w var'
+'push.w var'
      Push value of word variable var into stack.
 
-`push.h var'
+'push.h var'
      Push value of half-word variable var into stack.
 
-`push.b var'
+'push.b var'
      Push value of byte variable var into stack.
 
-`pusha var'
+'pusha var'
      Push 32-bit address of variable var into stack.
 
-`pushi imm32'
+'pushi imm32'
      Push 32-bit immediate value into stack.
 
-`popm ra5,rb5'
+'popm ra5,rb5'
      Pop top of stack values into registers ra5 to rb5.
 
-`pop rt5'
-     Pop top of stack value into register. (same as `popm rt5,rt5'.)
+'pop rt5'
+     Pop top of stack value into register.  (same as 'popm rt5,rt5'.)
 
-`pop.d var,ra5'
+'pop.d var,ra5'
      Pop value of double-word variable var from stack using register ra5
-     as 2nd scratch register. (1st is $ta)
+     as 2nd scratch register.  (1st is $ta)
 
-`pop.w var,ra5'
+'pop.w var,ra5'
      Pop value of word variable var from stack using register ra5.
 
-`pop.h var,ra5'
+'pop.h var,ra5'
      Pop value of half-word variable var from stack using register ra5.
 
-`pop.b var,ra5'
+'pop.b var,ra5'
      Pop value of byte variable var from stack using register ra5.
 
-
 
 File: as.info,  Node: NiosII-Dependent,  Next: NS32K-Dependent,  Prev: NDS32-Dependent,  Up: Machine Dependencies
 
@@ -16504,36 +16126,34 @@ File: as.info,  Node: Nios II Options,  Next: Nios II Syntax,  Up: NiosII-Depend
 9.31.1 Options
 --------------
 
-`-relax-section'
-     Replace identified out-of-range branches with PC-relative `jmp'
+'-relax-section'
+     Replace identified out-of-range branches with PC-relative 'jmp'
      sequences when possible.  The generated code sequences are suitable
      for use in position-independent code, but there is a practical
      limit on the extended branch range because of the length of the
      sequences.  This option is the default.
 
-`-relax-all'
-     Replace branch instructions not determinable to be in range and
-     all call instructions with `jmp' and `callr' sequences
-     (respectively).  This option generates absolute relocations
-     against the target symbols and is not appropriate for
-     position-independent code.
+'-relax-all'
+     Replace branch instructions not determinable to be in range and all
+     call instructions with 'jmp' and 'callr' sequences (respectively).
+     This option generates absolute relocations against the target
+     symbols and is not appropriate for position-independent code.
 
-`-no-relax'
+'-no-relax'
      Do not replace any branches or calls.
 
-`-EB'
+'-EB'
      Generate big-endian output.
 
-`-EL'
+'-EL'
      Generate little-endian output.  This is the default.
 
-`-march=ARCHITECTURE'
+'-march=ARCHITECTURE'
      This option specifies the target architecture.  The assembler
      issues an error message if an attempt is made to assemble an
-     instruction which will not execute on the target architecture.
-     The following architecture names are recognized: `r1', `r2'.  The
-     default is `r1'.
-
+     instruction which will not execute on the target architecture.  The
+     following architecture names are recognized: 'r1', 'r2'.  The
+     default is 'r1'.
 
 
 File: as.info,  Node: Nios II Syntax,  Next: Nios II Relocations,  Prev: Nios II Options,  Up: NiosII-Dependent
@@ -16551,7 +16171,7 @@ File: as.info,  Node: Nios II Chars,  Up: Nios II Syntax
 9.31.2.1 Special Characters
 ...........................
 
-`#' is the line comment character.  `;' is the line separator character.
+'#' is the line comment character.  ';' is the line separator character.
 
 
 File: as.info,  Node: Nios II Relocations,  Next: Nios II Directives,  Prev: Nios II Syntax,  Up: NiosII-Dependent
@@ -16559,30 +16179,30 @@ File: as.info,  Node: Nios II Relocations,  Next: Nios II Directives,  Prev: Nio
 9.31.3 Nios II Machine Relocations
 ----------------------------------
 
-`%hiadj(EXPRESSION)'
-     Extract the upper 16 bits of EXPRESSION and add one if the 15th
-     bit is set.
+'%hiadj(EXPRESSION)'
+     Extract the upper 16 bits of EXPRESSION and add one if the 15th bit
+     is set.
 
-     The value of `%hiadj(EXPRESSION)' is:
+     The value of '%hiadj(EXPRESSION)' is:
           ((EXPRESSION >> 16) & 0xffff) + ((EXPRESSION >> 15) & 0x01)
 
-     The `%hiadj' relocation is intended to be used with the `addi',
-     `ld' or `st' instructions along with a `%lo', in order to load a
+     The '%hiadj' relocation is intended to be used with the 'addi',
+     'ld' or 'st' instructions along with a '%lo', in order to load a
      32-bit constant.
 
           movhi r2, %hiadj(symbol)
           addi r2, r2, %lo(symbol)
 
-`%hi(EXPRESSION)'
+'%hi(EXPRESSION)'
      Extract the upper 16 bits of EXPRESSION.
 
-`%lo(EXPRESSION)'
+'%lo(EXPRESSION)'
      Extract the lower 16 bits of EXPRESSION.
 
-`%gprel(EXPRESSION)'
-     Subtract the value of the symbol `_gp' from EXPRESSION.
+'%gprel(EXPRESSION)'
+     Subtract the value of the symbol '_gp' from EXPRESSION.
 
-     The intention of the `%gprel' relocation is to have a fast small
+     The intention of the '%gprel' relocation is to have a fast small
      area of memory which only takes a 16-bit immediate to access.
 
           	.section .sdata
@@ -16591,24 +16211,23 @@ File: as.info,  Node: Nios II Relocations,  Next: Nios II Directives,  Prev: Nio
           	.section .text
           	ldw r4, %gprel(fastint)(gp)
 
-`%call(EXPRESSION)'
-
-`%call_lo(EXPRESSION)'
-
-`%call_hiadj(EXPRESSION)'
-`%got(EXPRESSION)'
-`%got_lo(EXPRESSION)'
-`%got_hiadj(EXPRESSION)'
-`%gotoff(EXPRESSION)'
-`%gotoff_lo(EXPRESSION)'
-`%gotoff_hiadj(EXPRESSION)'
-`%tls_gd(EXPRESSION)'
-`%tls_ie(EXPRESSION)'
-`%tls_le(EXPRESSION)'
-`%tls_ldm(EXPRESSION)'
-`%tls_ldo(EXPRESSION)'
+'%call(EXPRESSION)'
+'%call_lo(EXPRESSION)'
+'%call_hiadj(EXPRESSION)'
+'%got(EXPRESSION)'
+'%got_lo(EXPRESSION)'
+'%got_hiadj(EXPRESSION)'
+'%gotoff(EXPRESSION)'
+'%gotoff_lo(EXPRESSION)'
+'%gotoff_hiadj(EXPRESSION)'
+'%tls_gd(EXPRESSION)'
+'%tls_ie(EXPRESSION)'
+'%tls_le(EXPRESSION)'
+'%tls_ldm(EXPRESSION)'
+'%tls_ldo(EXPRESSION)'
+
      These relocations support the ABI for Linux Systems documented in
-     the `Nios II Processor Reference Handbook'.
+     the 'Nios II Processor Reference Handbook'.
 
 
 File: as.info,  Node: Nios II Directives,  Next: Nios II Opcodes,  Prev: Nios II Relocations,  Up: NiosII-Dependent
@@ -16616,60 +16235,59 @@ File: as.info,  Node: Nios II Directives,  Next: Nios II Opcodes,  Prev: Nios II
 9.31.4 Nios II Machine Directives
 ---------------------------------
 
-`.align EXPRESSION [, EXPRESSION]'
-     This is the generic `.align' directive, however this aligns to a
+'.align EXPRESSION [, EXPRESSION]'
+     This is the generic '.align' directive, however this aligns to a
      power of two.
 
-`.half EXPRESSION'
+'.half EXPRESSION'
      Create an aligned constant 2 bytes in size.
 
-`.word EXPRESSION'
+'.word EXPRESSION'
      Create an aligned constant 4 bytes in size.
 
-`.dword EXPRESSION'
+'.dword EXPRESSION'
      Create an aligned constant 8 bytes in size.
 
-`.2byte EXPRESSION'
+'.2byte EXPRESSION'
      Create an unaligned constant 2 bytes in size.
 
-`.4byte EXPRESSION'
+'.4byte EXPRESSION'
      Create an unaligned constant 4 bytes in size.
 
-`.8byte EXPRESSION'
+'.8byte EXPRESSION'
      Create an unaligned constant 8 bytes in size.
 
-`.16byte EXPRESSION'
+'.16byte EXPRESSION'
      Create an unaligned constant 16 bytes in size.
 
-`.set noat'
-     Allows assembly code to use `at' register without warning.  Macro
+'.set noat'
+     Allows assembly code to use 'at' register without warning.  Macro
      or relaxation expansions generate warnings.
 
-`.set at'
-     Assembly code using `at' register generates warnings, and macro
+'.set at'
+     Assembly code using 'at' register generates warnings, and macro
      expansion and relaxation are enabled.
 
-`.set nobreak'
-     Allows assembly code to use `ba' and `bt' registers without
+'.set nobreak'
+     Allows assembly code to use 'ba' and 'bt' registers without
      warning.
 
-`.set break'
-     Turns warnings back on for using `ba' and `bt' registers.
+'.set break'
+     Turns warnings back on for using 'ba' and 'bt' registers.
 
-`.set norelax'
+'.set norelax'
      Do not replace any branches or calls.
 
-`.set relaxsection'
-     Replace identified out-of-range branches with `jmp' sequences
+'.set relaxsection'
+     Replace identified out-of-range branches with 'jmp' sequences
      (default).
 
-`.set relaxsection'
-     Replace all branch and call instructions with `jmp' and `callr'
+'.set relaxsection'
+     Replace all branch and call instructions with 'jmp' and 'callr'
      sequences.
 
-`.set ...'
-     All other `.set' are the normal use.
-
+'.set ...'
+     All other '.set' are the normal use.
 
 
 File: as.info,  Node: Nios II Opcodes,  Prev: Nios II Directives,  Up: NiosII-Dependent
@@ -16677,8 +16295,8 @@ File: as.info,  Node: Nios II Opcodes,  Prev: Nios II Directives,  Up: NiosII-De
 9.31.5 Opcodes
 --------------
 
-`as' implements all the standard Nios II opcodes documented in the
-`Nios II Processor Reference Handbook', including the assembler
+'as' implements all the standard Nios II opcodes documented in the 'Nios
+II Processor Reference Handbook', including the assembler
 pseudo-instructions.
 
 
@@ -16707,19 +16325,19 @@ File: as.info,  Node: NS32K-Chars,  Up: NS32K Syntax
 9.32.1.1 Special Characters
 ...........................
 
-The presence of a `#' appearing anywhere on a line indicates the start
+The presence of a '#' appearing anywhere on a line indicates the start
 of a comment that extends to the end of that line.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line can also be a
-logical line number directive (*note Comments::) or a preprocessor
-control command (*note Preprocessing::).
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line can also be a logical
+line number directive (*note Comments::) or a preprocessor control
+command (*note Preprocessing::).
 
    If Sequent compatibility has been configured into the assembler then
-the `|' character appearing as the first character on a line will also
+the '|' character appearing as the first character on a line will also
 indicate the start of a line comment.
 
-   The `;' character can be used to separate statements on the same
+   The ';' character can be used to separate statements on the same
 line.
 
 
@@ -16742,12 +16360,12 @@ File: as.info,  Node: PDP-11-Options,  Next: PDP-11-Pseudos,  Up: PDP-11-Depende
 9.33.1 Options
 --------------
 
-The PDP-11 version of `as' has a rich set of machine dependent options.
+The PDP-11 version of 'as' has a rich set of machine dependent options.
 
 9.33.1.1 Code Generation Options
 ................................
 
-`-mpic | -mno-pic'
+'-mpic | -mno-pic'
      Generate position-independent (or position-dependent) code.
 
      The default is to generate position-independent code.
@@ -16757,70 +16375,70 @@ The PDP-11 version of `as' has a rich set of machine dependent options.
 
 These options enables or disables the use of extensions over the base
 line instruction set as introduced by the first PDP-11 CPU: the KA11.
-Most options come in two variants: a `-m'EXTENSION that enables
-EXTENSION, and a `-mno-'EXTENSION that disables EXTENSION.
+Most options come in two variants: a '-m'EXTENSION that enables
+EXTENSION, and a '-mno-'EXTENSION that disables EXTENSION.
 
    The default is to enable all extensions.
 
-`-mall | -mall-extensions'
+'-mall | -mall-extensions'
      Enable all instruction set extensions.
 
-`-mno-extensions'
+'-mno-extensions'
      Disable all instruction set extensions.
 
-`-mcis | -mno-cis'
+'-mcis | -mno-cis'
      Enable (or disable) the use of the commercial instruction set,
-     which consists of these instructions: `ADDNI', `ADDN', `ADDPI',
-     `ADDP', `ASHNI', `ASHN', `ASHPI', `ASHP', `CMPCI', `CMPC',
-     `CMPNI', `CMPN', `CMPPI', `CMPP', `CVTLNI', `CVTLN', `CVTLPI',
-     `CVTLP', `CVTNLI', `CVTNL', `CVTNPI', `CVTNP', `CVTPLI', `CVTPL',
-     `CVTPNI', `CVTPN', `DIVPI', `DIVP', `L2DR', `L3DR', `LOCCI',
-     `LOCC', `MATCI', `MATC', `MOVCI', `MOVC', `MOVRCI', `MOVRC',
-     `MOVTCI', `MOVTC', `MULPI', `MULP', `SCANCI', `SCANC', `SKPCI',
-     `SKPC', `SPANCI', `SPANC', `SUBNI', `SUBN', `SUBPI', and `SUBP'.
-
-`-mcsm | -mno-csm'
-     Enable (or disable) the use of the `CSM' instruction.
-
-`-meis | -mno-eis'
+     which consists of these instructions: 'ADDNI', 'ADDN', 'ADDPI',
+     'ADDP', 'ASHNI', 'ASHN', 'ASHPI', 'ASHP', 'CMPCI', 'CMPC', 'CMPNI',
+     'CMPN', 'CMPPI', 'CMPP', 'CVTLNI', 'CVTLN', 'CVTLPI', 'CVTLP',
+     'CVTNLI', 'CVTNL', 'CVTNPI', 'CVTNP', 'CVTPLI', 'CVTPL', 'CVTPNI',
+     'CVTPN', 'DIVPI', 'DIVP', 'L2DR', 'L3DR', 'LOCCI', 'LOCC', 'MATCI',
+     'MATC', 'MOVCI', 'MOVC', 'MOVRCI', 'MOVRC', 'MOVTCI', 'MOVTC',
+     'MULPI', 'MULP', 'SCANCI', 'SCANC', 'SKPCI', 'SKPC', 'SPANCI',
+     'SPANC', 'SUBNI', 'SUBN', 'SUBPI', and 'SUBP'.
+
+'-mcsm | -mno-csm'
+     Enable (or disable) the use of the 'CSM' instruction.
+
+'-meis | -mno-eis'
      Enable (or disable) the use of the extended instruction set, which
-     consists of these instructions: `ASHC', `ASH', `DIV', `MARK',
-     `MUL', `RTT', `SOB' `SXT', and `XOR'.
+     consists of these instructions: 'ASHC', 'ASH', 'DIV', 'MARK',
+     'MUL', 'RTT', 'SOB' 'SXT', and 'XOR'.
 
-`-mfis | -mkev11'
-`-mno-fis | -mno-kev11'
+'-mfis | -mkev11'
+'-mno-fis | -mno-kev11'
      Enable (or disable) the use of the KEV11 floating-point
-     instructions: `FADD', `FDIV', `FMUL', and `FSUB'.
+     instructions: 'FADD', 'FDIV', 'FMUL', and 'FSUB'.
 
-`-mfpp | -mfpu | -mfp-11'
-`-mno-fpp | -mno-fpu | -mno-fp-11'
+'-mfpp | -mfpu | -mfp-11'
+'-mno-fpp | -mno-fpu | -mno-fp-11'
      Enable (or disable) the use of FP-11 floating-point instructions:
-     `ABSF', `ADDF', `CFCC', `CLRF', `CMPF', `DIVF', `LDCFF', `LDCIF',
-     `LDEXP', `LDF', `LDFPS', `MODF', `MULF', `NEGF', `SETD', `SETF',
-     `SETI', `SETL', `STCFF', `STCFI', `STEXP', `STF', `STFPS', `STST',
-     `SUBF', and `TSTF'.
+     'ABSF', 'ADDF', 'CFCC', 'CLRF', 'CMPF', 'DIVF', 'LDCFF', 'LDCIF',
+     'LDEXP', 'LDF', 'LDFPS', 'MODF', 'MULF', 'NEGF', 'SETD', 'SETF',
+     'SETI', 'SETL', 'STCFF', 'STCFI', 'STEXP', 'STF', 'STFPS', 'STST',
+     'SUBF', and 'TSTF'.
 
-`-mlimited-eis | -mno-limited-eis'
+'-mlimited-eis | -mno-limited-eis'
      Enable (or disable) the use of the limited extended instruction
-     set: `MARK', `RTT', `SOB', `SXT', and `XOR'.
+     set: 'MARK', 'RTT', 'SOB', 'SXT', and 'XOR'.
 
      The -mno-limited-eis options also implies -mno-eis.
 
-`-mmfpt | -mno-mfpt'
-     Enable (or disable) the use of the `MFPT' instruction.
+'-mmfpt | -mno-mfpt'
+     Enable (or disable) the use of the 'MFPT' instruction.
 
-`-mmultiproc | -mno-multiproc'
+'-mmultiproc | -mno-multiproc'
      Enable (or disable) the use of multiprocessor instructions:
-     `TSTSET' and `WRTLCK'.
+     'TSTSET' and 'WRTLCK'.
 
-`-mmxps | -mno-mxps'
-     Enable (or disable) the use of the `MFPS' and `MTPS' instructions.
+'-mmxps | -mno-mxps'
+     Enable (or disable) the use of the 'MFPS' and 'MTPS' instructions.
 
-`-mspl | -mno-spl'
-     Enable (or disable) the use of the `SPL' instruction.
+'-mspl | -mno-spl'
+     Enable (or disable) the use of the 'SPL' instruction.
 
-     Enable (or disable) the use of the microcode instructions: `LDUB',
-     `MED', and `XFC'.
+     Enable (or disable) the use of the microcode instructions: 'LDUB',
+     'MED', and 'XFC'.
 
 9.33.1.3 CPU Model Options
 ..........................
@@ -16828,47 +16446,47 @@ EXTENSION, and a `-mno-'EXTENSION that disables EXTENSION.
 These options enable the instruction set extensions supported by a
 particular CPU, and disables all other extensions.
 
-`-mka11'
-     KA11 CPU.  Base line instruction set only.
+'-mka11'
+     KA11 CPU. Base line instruction set only.
 
-`-mkb11'
-     KB11 CPU.  Enable extended instruction set and `SPL'.
+'-mkb11'
+     KB11 CPU. Enable extended instruction set and 'SPL'.
 
-`-mkd11a'
-     KD11-A CPU.  Enable limited extended instruction set.
+'-mkd11a'
+     KD11-A CPU. Enable limited extended instruction set.
 
-`-mkd11b'
-     KD11-B CPU.  Base line instruction set only.
+'-mkd11b'
+     KD11-B CPU. Base line instruction set only.
 
-`-mkd11d'
-     KD11-D CPU.  Base line instruction set only.
+'-mkd11d'
+     KD11-D CPU. Base line instruction set only.
 
-`-mkd11e'
-     KD11-E CPU.  Enable extended instruction set, `MFPS', and `MTPS'.
+'-mkd11e'
+     KD11-E CPU. Enable extended instruction set, 'MFPS', and 'MTPS'.
 
-`-mkd11f | -mkd11h | -mkd11q'
-     KD11-F, KD11-H, or KD11-Q CPU.  Enable limited extended
-     instruction set, `MFPS', and `MTPS'.
+'-mkd11f | -mkd11h | -mkd11q'
+     KD11-F, KD11-H, or KD11-Q CPU. Enable limited extended instruction
+     set, 'MFPS', and 'MTPS'.
 
-`-mkd11k'
-     KD11-K CPU.  Enable extended instruction set, `LDUB', `MED',
-     `MFPS', `MFPT', `MTPS', and `XFC'.
+'-mkd11k'
+     KD11-K CPU. Enable extended instruction set, 'LDUB', 'MED', 'MFPS',
+     'MFPT', 'MTPS', and 'XFC'.
 
-`-mkd11z'
-     KD11-Z CPU.  Enable extended instruction set, `CSM', `MFPS',
-     `MFPT', `MTPS', and `SPL'.
+'-mkd11z'
+     KD11-Z CPU. Enable extended instruction set, 'CSM', 'MFPS', 'MFPT',
+     'MTPS', and 'SPL'.
 
-`-mf11'
-     F11 CPU.  Enable extended instruction set, `MFPS', `MFPT', and
-     `MTPS'.
+'-mf11'
+     F11 CPU. Enable extended instruction set, 'MFPS', 'MFPT', and
+     'MTPS'.
 
-`-mj11'
-     J11 CPU.  Enable extended instruction set, `CSM', `MFPS', `MFPT',
-     `MTPS', `SPL', `TSTSET', and `WRTLCK'.
+'-mj11'
+     J11 CPU. Enable extended instruction set, 'CSM', 'MFPS', 'MFPT',
+     'MTPS', 'SPL', 'TSTSET', and 'WRTLCK'.
 
-`-mt11'
-     T11 CPU.  Enable limited extended instruction set, `MFPS', and
-     `MTPS'.
+'-mt11'
+     T11 CPU. Enable limited extended instruction set, 'MFPS', and
+     'MTPS'.
 
 9.33.1.4 Machine Model Options
 ..............................
@@ -16876,44 +16494,44 @@ particular CPU, and disables all other extensions.
 These options enable the instruction set extensions supported by a
 particular machine model, and disables all other extensions.
 
-`-m11/03'
-     Same as `-mkd11f'.
+'-m11/03'
+     Same as '-mkd11f'.
 
-`-m11/04'
-     Same as `-mkd11d'.
+'-m11/04'
+     Same as '-mkd11d'.
 
-`-m11/05 | -m11/10'
-     Same as `-mkd11b'.
+'-m11/05 | -m11/10'
+     Same as '-mkd11b'.
 
-`-m11/15 | -m11/20'
-     Same as `-mka11'.
+'-m11/15 | -m11/20'
+     Same as '-mka11'.
 
-`-m11/21'
-     Same as `-mt11'.
+'-m11/21'
+     Same as '-mt11'.
 
-`-m11/23 | -m11/24'
-     Same as `-mf11'.
+'-m11/23 | -m11/24'
+     Same as '-mf11'.
 
-`-m11/34'
-     Same as `-mkd11e'.
+'-m11/34'
+     Same as '-mkd11e'.
 
-`-m11/34a'
-     Ame as `-mkd11e' `-mfpp'.
+'-m11/34a'
+     Ame as '-mkd11e' '-mfpp'.
 
-`-m11/35 | -m11/40'
-     Same as `-mkd11a'.
+'-m11/35 | -m11/40'
+     Same as '-mkd11a'.
 
-`-m11/44'
-     Same as `-mkd11z'.
+'-m11/44'
+     Same as '-mkd11z'.
 
-`-m11/45 | -m11/50 | -m11/55 | -m11/70'
-     Same as `-mkb11'.
+'-m11/45 | -m11/50 | -m11/55 | -m11/70'
+     Same as '-mkb11'.
 
-`-m11/53 | -m11/73 | -m11/83 | -m11/84 | -m11/93 | -m11/94'
-     Same as `-mj11'.
+'-m11/53 | -m11/73 | -m11/83 | -m11/84 | -m11/93 | -m11/94'
+     Same as '-mj11'.
 
-`-m11/60'
-     Same as `-mkd11k'.
+'-m11/60'
+     Same as '-mkd11k'.
 
 
 File: as.info,  Node: PDP-11-Pseudos,  Next: PDP-11-Syntax,  Prev: PDP-11-Options,  Up: PDP-11-Dependent
@@ -16921,13 +16539,13 @@ File: as.info,  Node: PDP-11-Pseudos,  Next: PDP-11-Syntax,  Prev: PDP-11-Option
 9.33.2 Assembler Directives
 ---------------------------
 
-The PDP-11 version of `as' has a few machine dependent assembler
+The PDP-11 version of 'as' has a few machine dependent assembler
 directives.
 
-`.bss'
-     Switch to the `bss' section.
+'.bss'
+     Switch to the 'bss' section.
 
-`.even'
+'.even'
      Align the location counter to an even number.
 
 
@@ -16936,20 +16554,20 @@ File: as.info,  Node: PDP-11-Syntax,  Next: PDP-11-Mnemonics,  Prev: PDP-11-Pseu
 9.33.3 PDP-11 Assembly Language Syntax
 --------------------------------------
 
-`as' supports both DEC syntax and BSD syntax.  The only difference is
-that in DEC syntax, a `#' character is used to denote an immediate
-constants, while in BSD syntax the character for this purpose is `$'.
+'as' supports both DEC syntax and BSD syntax.  The only difference is
+that in DEC syntax, a '#' character is used to denote an immediate
+constants, while in BSD syntax the character for this purpose is '$'.
 
-   general-purpose registers are named `r0' through `r7'.  Mnemonic
-alternatives for `r6' and `r7' are `sp' and `pc', respectively.
+   general-purpose registers are named 'r0' through 'r7'.  Mnemonic
+alternatives for 'r6' and 'r7' are 'sp' and 'pc', respectively.
 
-   Floating-point registers are named `ac0' through `ac3', or
-alternatively `fr0' through `fr3'.
+   Floating-point registers are named 'ac0' through 'ac3', or
+alternatively 'fr0' through 'fr3'.
 
-   Comments are started with a `#' or a `/' character, and extend to
-the end of the line.  (FIXME: clash with immediates?)
+   Comments are started with a '#' or a '/' character, and extend to the
+end of the line.  (FIXME: clash with immediates?)
 
-   Multiple statements on the same line can be separated by the `;'
+   Multiple statements on the same line can be separated by the ';'
 character.
 
 
@@ -16960,20 +16578,20 @@ File: as.info,  Node: PDP-11-Mnemonics,  Next: PDP-11-Synthetic,  Prev: PDP-11-S
 
 Some instructions have alternative names.
 
-`BCC'
-     `BHIS'
+'BCC'
+     'BHIS'
 
-`BCS'
-     `BLO'
+'BCS'
+     'BLO'
 
-`L2DR'
-     `L2D'
+'L2DR'
+     'L2D'
 
-`L3DR'
-     `L3D'
+'L3DR'
+     'L3D'
 
-`SYS'
-     `TRAP'
+'SYS'
+     'TRAP'
 
 
 File: as.info,  Node: PDP-11-Synthetic,  Prev: PDP-11-Mnemonics,  Up: PDP-11-Dependent
@@ -16981,7 +16599,7 @@ File: as.info,  Node: PDP-11-Synthetic,  Prev: PDP-11-Mnemonics,  Up: PDP-11-Dep
 9.33.5 Synthetic Instructions
 -----------------------------
 
-The `JBR' and `J'CC synthetic instructions are not supported yet.
+The 'JBR' and 'J'CC synthetic instructions are not supported yet.
 
 
 File: as.info,  Node: PJ-Dependent,  Next: PPC-Dependent,  Prev: PDP-11-Dependent,  Up: Machine Dependencies
@@ -17000,12 +16618,12 @@ File: as.info,  Node: PJ Options,  Next: PJ Syntax,  Up: PJ-Dependent
 9.34.1 Options
 --------------
 
-`as' has two additional command-line options for the picoJava
+'as' has two additional command-line options for the picoJava
 architecture.
-`-ml'
+'-ml'
      This option selects little endian data output.
 
-`-mb'
+'-mb'
      This option selects big endian data output.
 
 
@@ -17024,15 +16642,15 @@ File: as.info,  Node: PJ-Chars,  Up: PJ Syntax
 9.34.2.1 Special Characters
 ...........................
 
-The presence of a `!' or `/' on a line indicates the start of a comment
+The presence of a '!' or '/' on a line indicates the start of a comment
 that extends to the end of the current line.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line could also be a
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line could also be a
 logical line number directive (*note Comments::) or a preprocessor
 control command (*note Preprocessing::).
 
-   The `;' character can be used to separate statements on the same
+   The ';' character can be used to separate statements on the same
 line.
 
 
@@ -17061,154 +16679,153 @@ architecture reference manual.
 
    The following table lists all available PowerPC options.
 
-`-a32'
+'-a32'
      Generate ELF32 or XCOFF32.
 
-`-a64'
+'-a64'
      Generate ELF64 or XCOFF64.
 
-`-K PIC'
+'-K PIC'
      Set EF_PPC_RELOCATABLE_LIB in ELF flags.
 
-`-mpwrx | -mpwr2'
+'-mpwrx | -mpwr2'
      Generate code for POWER/2 (RIOS2).
 
-`-mpwr'
+'-mpwr'
      Generate code for POWER (RIOS1)
 
-`-m601'
+'-m601'
      Generate code for PowerPC 601.
 
-`-mppc, -mppc32, -m603, -m604'
+'-mppc, -mppc32, -m603, -m604'
      Generate code for PowerPC 603/604.
 
-`-m403, -m405'
+'-m403, -m405'
      Generate code for PowerPC 403/405.
 
-`-m440'
+'-m440'
      Generate code for PowerPC 440.  BookE and some 405 instructions.
 
-`-m464'
+'-m464'
      Generate code for PowerPC 464.
 
-`-m476'
+'-m476'
      Generate code for PowerPC 476.
 
-`-m7400, -m7410, -m7450, -m7455'
+'-m7400, -m7410, -m7450, -m7455'
      Generate code for PowerPC 7400/7410/7450/7455.
 
-`-m750cl'
+'-m750cl'
      Generate code for PowerPC 750CL.
 
-`-m821, -m850, -m860'
+'-m821, -m850, -m860'
      Generate code for PowerPC 821/850/860.
 
-`-mppc64, -m620'
+'-mppc64, -m620'
      Generate code for PowerPC 620/625/630.
 
-`-me500, -me500x2'
+'-me500, -me500x2'
      Generate code for Motorola e500 core complex.
 
-`-me500mc'
+'-me500mc'
      Generate code for Freescale e500mc core complex.
 
-`-me500mc64'
+'-me500mc64'
      Generate code for Freescale e500mc64 core complex.
 
-`-me5500'
+'-me5500'
      Generate code for Freescale e5500 core complex.
 
-`-me6500'
+'-me6500'
      Generate code for Freescale e6500 core complex.
 
-`-mspe'
+'-mspe'
      Generate code for Motorola SPE instructions.
 
-`-mtitan'
+'-mtitan'
      Generate code for AppliedMicro Titan core complex.
 
-`-mppc64bridge'
+'-mppc64bridge'
      Generate code for PowerPC 64, including bridge insns.
 
-`-mbooke'
+'-mbooke'
      Generate code for 32-bit BookE.
 
-`-ma2'
+'-ma2'
      Generate code for A2 architecture.
 
-`-me300'
+'-me300'
      Generate code for PowerPC e300 family.
 
-`-maltivec'
+'-maltivec'
      Generate code for processors with AltiVec instructions.
 
-`-mvle'
+'-mvle'
      Generate code for Freescale PowerPC VLE instructions.
 
-`-mvsx'
+'-mvsx'
      Generate code for processors with Vector-Scalar (VSX) instructions.
 
-`-mhtm'
+'-mhtm'
      Generate code for processors with Hardware Transactional Memory
      instructions.
 
-`-mpower4, -mpwr4'
+'-mpower4, -mpwr4'
      Generate code for Power4 architecture.
 
-`-mpower5, -mpwr5, -mpwr5x'
+'-mpower5, -mpwr5, -mpwr5x'
      Generate code for Power5 architecture.
 
-`-mpower6, -mpwr6'
+'-mpower6, -mpwr6'
      Generate code for Power6 architecture.
 
-`-mpower7, -mpwr7'
+'-mpower7, -mpwr7'
      Generate code for Power7 architecture.
 
-`-mpower8, -mpwr8'
+'-mpower8, -mpwr8'
      Generate code for Power8 architecture.
 
-`-mpower9, -mpwr9'
+'-mpower9, -mpwr9'
      Generate code for Power9 architecture.
 
-`-mcell'
-
-`-mcell'
+'-mcell'
+'-mcell'
      Generate code for Cell Broadband Engine architecture.
 
-`-mcom'
+'-mcom'
      Generate code Power/PowerPC common instructions.
 
-`-many'
+'-many'
      Generate code for any architecture (PWR/PWRX/PPC).
 
-`-mregnames'
+'-mregnames'
      Allow symbolic names for registers.
 
-`-mno-regnames'
+'-mno-regnames'
      Do not allow symbolic names for registers.
 
-`-mrelocatable'
+'-mrelocatable'
      Support for GCC's -mrelocatable option.
 
-`-mrelocatable-lib'
+'-mrelocatable-lib'
      Support for GCC's -mrelocatable-lib option.
 
-`-memb'
+'-memb'
      Set PPC_EMB bit in ELF flags.
 
-`-mlittle, -mlittle-endian, -le'
+'-mlittle, -mlittle-endian, -le'
      Generate code for a little endian machine.
 
-`-mbig, -mbig-endian, -be'
+'-mbig, -mbig-endian, -be'
      Generate code for a big endian machine.
 
-`-msolaris'
+'-msolaris'
      Generate code for Solaris.
 
-`-mno-solaris'
+'-mno-solaris'
      Do not generate code for Solaris.
 
-`-nops=COUNT'
+'-nops=COUNT'
      If an alignment directive inserts more than COUNT nops, put a
      branch at the beginning to skip execution of the nops.
 
@@ -17218,15 +16835,15 @@ File: as.info,  Node: PowerPC-Pseudo,  Next: PowerPC-Syntax,  Prev: PowerPC-Opts
 9.35.2 PowerPC Assembler Directives
 -----------------------------------
 
-A number of assembler directives are available for PowerPC.  The
+A number of assembler directives are available for PowerPC. The
 following table is far from complete.
 
-`.machine "string"'
+'.machine "string"'
      This directive allows you to change the machine for which code is
-     generated.  `"string"' may be any of the -m cpu selection options
-     (without the -m) enclosed in double quotes, `"push"', or `"pop"'.
-     `.machine "push"' saves the currently selected cpu, which may be
-     restored with `.machine "pop"'.
+     generated.  '"string"' may be any of the -m cpu selection options
+     (without the -m) enclosed in double quotes, '"push"', or '"pop"'.
+     '.machine "push"' saves the currently selected cpu, which may be
+     restored with '.machine "pop"'.
 
 
 File: as.info,  Node: PowerPC-Syntax,  Prev: PowerPC-Pseudo,  Up: PPC-Dependent
@@ -17244,19 +16861,19 @@ File: as.info,  Node: PowerPC-Chars,  Up: PowerPC-Syntax
 9.35.3.1 Special Characters
 ...........................
 
-The presence of a `#' on a line indicates the start of a comment that
+The presence of a '#' on a line indicates the start of a comment that
 extends to the end of the current line.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line could also be a
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line could also be a
 logical line number directive (*note Comments::) or a preprocessor
 control command (*note Preprocessing::).
 
    If the assembler has been configured for the ppc-*-solaris* target
-then the `!' character also acts as a line comment character.  This can
-be disabled via the `-mno-solaris' command line option.
+then the '!' character also acts as a line comment character.  This can
+be disabled via the '-mno-solaris' command line option.
 
-   The `;' character can be used to separate statements on the same
+   The ';' character can be used to separate statements on the same
 line.
 
 
@@ -17278,33 +16895,32 @@ File: as.info,  Node: RL78-Opts,  Next: RL78-Modifiers,  Up: RL78-Dependent
 9.36.1 RL78 Options
 -------------------
 
-`relax'
+'relax'
      Enable support for link-time relaxation.
 
-`norelax'
+'norelax'
      Disable support for link-time relaxation (default).
 
-`mg10'
+'mg10'
      Mark the generated binary as targeting the G10 variant of the RL78
      architecture.
 
-`mg13'
+'mg13'
      Mark the generated binary as targeting the G13 variant of the RL78
      architecture.
 
-`mg14'
-`mrl78'
+'mg14'
+'mrl78'
      Mark the generated binary as targeting the G14 variant of the RL78
      architecture.  This is the default.
 
-`m32bit-doubles'
+'m32bit-doubles'
      Mark the generated binary as one that uses 32-bits to hold the
-     `double' floating point type.  This is the default.
+     'double' floating point type.  This is the default.
 
-`m64bit-doubles'
+'m64bit-doubles'
      Mark the generated binary as one that uses 64-bits to hold the
-     `double' floating point type.
-
+     'double' floating point type.
 
 
 File: as.info,  Node: RL78-Modifiers,  Next: RL78-Directives,  Prev: RL78-Opts,  Up: RL78-Dependent
@@ -17315,26 +16931,28 @@ File: as.info,  Node: RL78-Modifiers,  Next: RL78-Directives,  Prev: RL78-Opts,
 The RL78 has three modifiers that adjust the relocations used by the
 linker:
 
-`%lo16()'
+'%lo16()'
+
      When loading a 20-bit (or wider) address into registers, this
      modifier selects the 16 least significant bits.
 
             movw ax,#%lo16(_sym)
 
-`%hi16()'
+'%hi16()'
+
      When loading a 20-bit (or wider) address into registers, this
      modifier selects the 16 most significant bits.
 
             movw ax,#%hi16(_sym)
 
-`%hi8()'
+'%hi8()'
+
      When loading a 20-bit (or wider) address into registers, this
-     modifier selects the 8 bits that would go into CS or ES (i.e. bits
+     modifier selects the 8 bits that would go into CS or ES (i.e.  bits
      23..16).
 
             mov es, #%hi8(_sym)
 
-
 
 File: as.info,  Node: RL78-Directives,  Next: RL78-Syntax,  Prev: RL78-Modifiers,  Up: RL78-Dependent
 
@@ -17343,22 +16961,21 @@ File: as.info,  Node: RL78-Directives,  Next: RL78-Syntax,  Prev: RL78-Modifiers
 
 In addition to the common directives, the RL78 adds these:
 
-`.double'
-     Output a constant in "double" format, which is either a 32-bit or
-     a 64-bit floating point value, depending upon the setting of the
-     `-m32bit-doubles'|`-m64bit-doubles' command line option.
+'.double'
+     Output a constant in "double" format, which is either a 32-bit or a
+     64-bit floating point value, depending upon the setting of the
+     '-m32bit-doubles'|'-m64bit-doubles' command line option.
 
-`.bss'
+'.bss'
      Select the BSS section.
 
-`.3byte'
+'.3byte'
      Output a constant value in a three byte format.
 
-`.int'
-`.word'
+'.int'
+'.word'
      Output a constant value in a four byte format.
 
-
 
 File: as.info,  Node: RL78-Syntax,  Prev: RL78-Directives,  Up: RL78-Dependent
 
@@ -17375,15 +16992,15 @@ File: as.info,  Node: RL78-Chars,  Up: RL78-Syntax
 9.36.4.1 Special Characters
 ...........................
 
-The presence of a `;' appearing anywhere on a line indicates the start
+The presence of a ';' appearing anywhere on a line indicates the start
 of a comment that extends to the end of that line.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line can also be a
-logical line number directive (*note Comments::) or a preprocessor
-control command (*note Preprocessing::).
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line can also be a logical
+line number directive (*note Comments::) or a preprocessor control
+command (*note Preprocessing::).
 
-   The `|' character can be used to separate statements on the same
+   The '|' character can be used to separate statements on the same
 line.
 
 
@@ -17404,17 +17021,22 @@ File: as.info,  Node: RISC-V-Opts,  Up: RISC-V-Dependent
 
 The following table lists all availiable RISC-V specific options
 
-`-march=ISA'
-     Select the base isa, as specified by ISA.  For example
+'-fpic'
+     Generate position-independent code
+
+'-fno-pic'
+     Don't generate position-independent code (default)
+
+'-march=ISA'
+     Select the base isa, as specified by ISA. For example
      -march=rv32ima.
 
-`-mabi=ABI'
+'-mabi=ABI'
      Selects the ABI, which is either "ilp32" or "lp64", optionally
      followed by "f", "d", or "q" to indicate single-precision,
      double-precision, or quad-precision floating-point calling
      convention, or none to indicate the soft-float calling convention.
 
-
 
 File: as.info,  Node: RX-Dependent,  Next: S/390-Dependent,  Prev: RISC-V-Dependent,  Up: Machine Dependencies
 
@@ -17435,91 +17057,91 @@ File: as.info,  Node: RX-Opts,  Next: RX-Modifiers,  Up: RX-Dependent
 9.38.1 RX Options
 -----------------
 
-The Renesas RX port of `as' has a few target specfic command line
+The Renesas RX port of 'as' has a few target specfic command line
 options:
 
-`-m32bit-doubles'
+'-m32bit-doubles'
      This option controls the ABI and indicates to use a 32-bit float
-     ABI.  It has no effect on the assembled instructions, but it does
-     influence the behaviour of the `.double' pseudo-op.  This is the
+     ABI. It has no effect on the assembled instructions, but it does
+     influence the behaviour of the '.double' pseudo-op.  This is the
      default.
 
-`-m64bit-doubles'
+'-m64bit-doubles'
      This option controls the ABI and indicates to use a 64-bit float
-     ABI.  It has no effect on the assembled instructions, but it does
-     influence the behaviour of the `.double' pseudo-op.
+     ABI. It has no effect on the assembled instructions, but it does
+     influence the behaviour of the '.double' pseudo-op.
 
-`-mbig-endian'
+'-mbig-endian'
      This option controls the ABI and indicates to use a big-endian data
-     ABI.  It has no effect on the assembled instructions, but it does
-     influence the behaviour of the `.short', `.hword', `.int',
-     `.word', `.long', `.quad' and `.octa' pseudo-ops.
+     ABI. It has no effect on the assembled instructions, but it does
+     influence the behaviour of the '.short', '.hword', '.int', '.word',
+     '.long', '.quad' and '.octa' pseudo-ops.
 
-`-mlittle-endian'
+'-mlittle-endian'
      This option controls the ABI and indicates to use a little-endian
-     data ABI.  It has no effect on the assembled instructions, but it
-     does influence the behaviour of the `.short', `.hword', `.int',
-     `.word', `.long', `.quad' and `.octa' pseudo-ops.  This is the
+     data ABI. It has no effect on the assembled instructions, but it
+     does influence the behaviour of the '.short', '.hword', '.int',
+     '.word', '.long', '.quad' and '.octa' pseudo-ops.  This is the
      default.
 
-`-muse-conventional-section-names'
+'-muse-conventional-section-names'
      This option controls the default names given to the code (.text),
      initialised data (.data) and uninitialised data sections (.bss).
 
-`-muse-renesas-section-names'
+'-muse-renesas-section-names'
      This option controls the default names given to the code (.P),
      initialised data (.D_1) and uninitialised data sections (.B_1).
      This is the default.
 
-`-msmall-data-limit'
+'-msmall-data-limit'
      This option tells the assembler that the small data limit feature
      of the RX port of GCC is being used.  This results in the assembler
-     generating an undefined reference to a symbol called `__gp' for
-     use by the relocations that are needed to support the small data
-     limit feature.   This option is not enabled by default as it would
+     generating an undefined reference to a symbol called '__gp' for use
+     by the relocations that are needed to support the small data limit
+     feature.  This option is not enabled by default as it would
      otherwise pollute the symbol table.
 
-`-mpid'
+'-mpid'
      This option tells the assembler that the position independent data
      of the RX port of GCC is being used.  This results in the assembler
-     generating an undefined reference to a symbol called `__pid_base',
+     generating an undefined reference to a symbol called '__pid_base',
      and also setting the RX_PID flag bit in the e_flags field of the
      ELF header of the object file.
 
-`-mint-register=NUM'
+'-mint-register=NUM'
      This option tells the assembler how many registers have been
-     reserved for use by interrupt handlers.  This is needed in order
-     to compute the correct values for the `%gpreg' and `%pidreg' meta
+     reserved for use by interrupt handlers.  This is needed in order to
+     compute the correct values for the '%gpreg' and '%pidreg' meta
      registers.
 
-`-mgcc-abi'
+'-mgcc-abi'
      This option tells the assembler that the old GCC ABI is being used
      by the assembled code.  With this version of the ABI function
      arguments that are passed on the stack are aligned to a 32-bit
      boundary.
 
-`-mrx-abi'
+'-mrx-abi'
      This option tells the assembler that the official RX ABI is being
      used by the assembled code.  With this version of the ABI function
      arguments that are passed on the stack are aligned to their natural
      alignments.  This option is the default.
 
-`-mcpu=NAME'
+'-mcpu=NAME'
      This option tells the assembler the target CPU type.  Currently the
-     `rx100', `rx200', `rx600', `rx610' and `rxv2' are recognised as
+     'rx100', 'rx200', 'rx600', 'rx610' and 'rxv2' are recognised as
      valid cpu names.  Attempting to assemble an instruction not
      supported by the indicated cpu type will result in an error message
      being generated.
 
-`-mno-allow-string-insns'
+'-mno-allow-string-insns'
      This option tells the assembler to mark the object file that it is
-     building as one that does not use the string instructions `SMOVF',
-     `SCMPU', `SMOVB', `SMOVU', `SUNTIL' `SWHILE' or the `RMPA'
+     building as one that does not use the string instructions 'SMOVF',
+     'SCMPU', 'SMOVB', 'SMOVU', 'SUNTIL' 'SWHILE' or the 'RMPA'
      instruction.  In addition the mark tells the linker to complain if
      an attempt is made to link the binary with another one that does
      use any of these instructions.
 
-     Note - the inverse of this option, `-mallow-string-insns', is not
+     Note - the inverse of this option, '-mallow-string-insns', is not
      needed.  The assembler automatically detects the use of the the
      instructions in the source code and labels the resulting object
      file appropriately.  If no string instructions are detected then
@@ -17537,10 +17159,10 @@ instruction operands.  The general syntax is the following:
 
      %gp(symbol)
 
-   The modifier returns the offset from the __GP symbol to the
-specified symbol as a 16-bit value.  The intent is that this offset
-should be used in a register+offset move instruction when generating
-references to small data.  Ie, like this:
+   The modifier returns the offset from the __GP symbol to the specified
+symbol as a 16-bit value.  The intent is that this offset should be used
+in a register+offset move instruction when generating references to
+small data.  Ie, like this:
 
        mov.W	 %gp(_foo)[%gpreg], r1
 
@@ -17548,13 +17170,12 @@ references to small data.  Ie, like this:
 to refer to registers whose values may not be known to the programmer.
 These meta register names are:
 
-`%gpreg'
+'%gpreg'
      The small data address register.
 
-`%pidreg'
+'%pidreg'
      The PID base address register.
 
-
    Both registers normally have the value r13, but this can change if
 some registers have been reserved for use by interrupt handlers or if
 both the small data limit and position independent data features are
@@ -17566,13 +17187,13 @@ File: as.info,  Node: RX-Directives,  Next: RX-Float,  Prev: RX-Modifiers,  Up:
 9.38.3 Assembler Directives
 ---------------------------
 
-The RX version of `as' has the following specific assembler directives:
+The RX version of 'as' has the following specific assembler directives:
 
-`.3byte'
+'.3byte'
      Inserts a 3-byte value into the output file at the current
      location.
 
-`.fetchalign'
+'.fetchalign'
      If the next opcode following this directive spans a fetch line
      boundary (8 byte boundary), the opcode is aligned to that boundary.
      If the next opcode does not span a fetch line, this directive has
@@ -17580,7 +17201,6 @@ The RX version of `as' has the following specific assembler directives:
      directive and the opcode; those labels are aligned as well.  Any
      inserted bytes due to alignment will form a NOP opcode.
 
-
 
 File: as.info,  Node: RX-Float,  Next: RX-Syntax,  Prev: RX-Directives,  Up: RX-Dependent
 
@@ -17589,17 +17209,15 @@ File: as.info,  Node: RX-Float,  Next: RX-Syntax,  Prev: RX-Directives,  Up: RX-
 
 The floating point formats generated by directives are these.
 
-`.float'
-     `Single' precision (32-bit) floating point constants.
-
-`.double'
-     If the `-m64bit-doubles' command line option has been specified
-     then then `double' directive generates `double' precision (64-bit)
-     floating point constants, otherwise it generates `single'
-     precision (32-bit) floating point constants.  To force the
-     generation of 64-bit floating point constants used the `dc.d'
-     directive instead.
+'.float'
+     'Single' precision (32-bit) floating point constants.
 
+'.double'
+     If the '-m64bit-doubles' command line option has been specified
+     then then 'double' directive generates 'double' precision (64-bit)
+     floating point constants, otherwise it generates 'single' precision
+     (32-bit) floating point constants.  To force the generation of
+     64-bit floating point constants used the 'dc.d' directive instead.
 
 
 File: as.info,  Node: RX-Syntax,  Prev: RX-Float,  Up: RX-Dependent
@@ -17617,15 +17235,15 @@ File: as.info,  Node: RX-Chars,  Up: RX-Syntax
 9.38.5.1 Special Characters
 ...........................
 
-The presence of a `;' appearing anywhere on a line indicates the start
+The presence of a ';' appearing anywhere on a line indicates the start
 of a comment that extends to the end of that line.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line can also be a
-logical line number directive (*note Comments::) or a preprocessor
-control command (*note Preprocessing::).
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line can also be a logical
+line number directive (*note Comments::) or a preprocessor control
+command (*note Preprocessing::).
 
-   The `!' character can be used to separate statements on the same
+   The '!' character can be used to separate statements on the same
 line.
 
 
@@ -17634,9 +17252,9 @@ File: as.info,  Node: S/390-Dependent,  Next: SCORE-Dependent,  Prev: RX-Depende
 9.39 IBM S/390 Dependent Features
 =================================
 
-   The s390 version of `as' supports two architectures modes and eleven
-chip levels. The architecture modes are the Enterprise System
-Architecture (ESA) and the newer z/Architecture mode. The chip levels
+The s390 version of 'as' supports two architectures modes and eleven
+chip levels.  The architecture modes are the Enterprise System
+Architecture (ESA) and the newer z/Architecture mode.  The chip levels
 are g5 (or arch3), g6, z900 (or arch5), z990 (or arch6), z9-109, z9-ec
 (or arch7), z10 (or arch8), z196 (or arch9), zEC12 (or arch10), z13 (or
 arch11), and arch12.
@@ -17657,7 +17275,7 @@ File: as.info,  Node: s390 Options,  Next: s390 Characters,  Up: S/390-Dependent
 
 The following table lists all available s390 specific options:
 
-`-m31 | -m64'
+'-m31 | -m64'
      Select 31- or 64-bit ABI implying a word size of 32- or 64-bit.
 
      These options are only available with the ELF object file format,
@@ -17666,62 +17284,61 @@ The following table lists all available s390 specific options:
      configure script to enable 64-bit usage and use s390x as target
      platform).
 
-`-mesa | -mzarch'
+'-mesa | -mzarch'
      Select the architecture mode, either the Enterprise System
      Architecture (esa) mode or the z/Architecture mode (zarch).
 
      The 64-bit instructions are only available with the z/Architecture
-     mode.  The combination of `-m64' and `-mesa' results in a warning
+     mode.  The combination of '-m64' and '-mesa' results in a warning
      message.
 
-`-march=CPU'
-     This option specifies the target processor. The following
-     processor names are recognized: `g5' (or `arch3'), `g6', `z900'
-     (or `arch5'), `z990' (or `arch6'), `z9-109', `z9-ec' (or `arch7'),
-     `z10' (or `arch8'), `z196' (or `arch9'), `zEC12' (or `arch10') and
-     `z13' (or `arch11').
+'-march=CPU'
+     This option specifies the target processor.  The following
+     processor names are recognized: 'g5' (or 'arch3'), 'g6', 'z900' (or
+     'arch5'), 'z990' (or 'arch6'), 'z9-109', 'z9-ec' (or 'arch7'),
+     'z10' (or 'arch8'), 'z196' (or 'arch9'), 'zEC12' (or 'arch10') and
+     'z13' (or 'arch11').
 
      Assembling an instruction that is not supported on the target
      processor results in an error message.
 
-     The processor names starting with `arch' refer to the edition
+     The processor names starting with 'arch' refer to the edition
      number in the Principle of Operations manual.  They can be used as
      alternate processor names and have been added for compatibility
      with the IBM XL compiler.
 
-     `arch3', `g5' and `g6' cannot be used with the `-mzarch' option
+     'arch3', 'g5' and 'g6' cannot be used with the '-mzarch' option
      since the z/Architecture mode is not supported on these processor
      levels.
 
-     There is no `arch4' option supported. `arch4' matches
-     `-march=arch5 -mesa'.
+     There is no 'arch4' option supported.  'arch4' matches
+     '-march=arch5 -mesa'.
 
-`-mregnames'
+'-mregnames'
      Allow symbolic names for registers.
 
-`-mno-regnames'
+'-mno-regnames'
      Do not allow symbolic names for registers.
 
-`-mwarn-areg-zero'
+'-mwarn-areg-zero'
      Warn whenever the operand for a base or index register has been
-     specified but evaluates to zero. This can indicate the misuse of
+     specified but evaluates to zero.  This can indicate the misuse of
      general purpose register 0 as an address register.
 
-
 
 File: as.info,  Node: s390 Characters,  Next: s390 Syntax,  Prev: s390 Options,  Up: S/390-Dependent
 
 9.39.2 Special Characters
 -------------------------
 
-`#' is the line comment character.
+'#' is the line comment character.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line could also be a
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line could also be a
 logical line number directive (*note Comments::) or a preprocessor
 control command (*note Preprocessing::).
 
-   The `;' character can be used instead of a newline to separate
+   The ';' character can be used instead of a newline to separate
 statements.
 
 
@@ -17735,7 +17352,7 @@ Systems Architecture/390 Principles of Operation (SA22-7201) and the
 z/Architecture Principles of Operation (SA22-7832).
 
    Each instruction has two major parts, the instruction mnemonic and
-the instruction operands. The instruction format varies.
+the instruction operands.  The instruction format varies.
 
 * Menu:
 
@@ -17754,12 +17371,12 @@ File: as.info,  Node: s390 Register,  Next: s390 Mnemonics,  Up: s390 Syntax
 9.39.3.1 Register naming
 ........................
 
-The `as' recognizes a number of predefined symbols for the various
-processor registers. A register specification in one of the instruction
-formats is an unsigned integer between 0 and 15. The specific
+The 'as' recognizes a number of predefined symbols for the various
+processor registers.  A register specification in one of the instruction
+formats is an unsigned integer between 0 and 15.  The specific
 instruction and the position of the register in the instruction format
-denotes the type of the register. The register symbols are prefixed with
-`%':
+denotes the type of the register.  The register symbols are prefixed
+with '%':
 
      %rN   the 16 general purpose registers, 0 <= N <= 15
      %fN   the 16 floating point registers, 0 <= N <= 15
@@ -17776,33 +17393,33 @@ File: as.info,  Node: s390 Mnemonics,  Next: s390 Operands,  Prev: s390 Register
 
 All instructions documented in the Principles of Operation are supported
 with the mnemonic and order of operands as described.  The instruction
-mnemonic identifies the instruction format (*Note s390 Formats::) and
-the specific operation code for the instruction.  For example, the `lr'
-mnemonic denotes the instruction format `RR' with the operation code
-`0x18'.
+mnemonic identifies the instruction format (*note s390 Formats::) and
+the specific operation code for the instruction.  For example, the 'lr'
+mnemonic denotes the instruction format 'RR' with the operation code
+'0x18'.
 
    The definition of the various mnemonics follows a scheme, where the
 first character usually hint at the type of the instruction:
 
-     a          add instruction, for example `al' for add logical 32-bit
-     b          branch instruction, for example `bc' for branch on condition
-     c          compare or convert instruction, for example `cr' for compare
+     a          add instruction, for example 'al' for add logical 32-bit
+     b          branch instruction, for example 'bc' for branch on condition
+     c          compare or convert instruction, for example 'cr' for compare
                 register 32-bit
-     d          divide instruction, for example `dlr' devide logical register
+     d          divide instruction, for example 'dlr' devide logical register
                 64-bit to 32-bit
-     i          insert instruction, for example `ic' insert character
-     l          load instruction, for example `ltr' load and test register
-     mv         move instruction, for example `mvc' move character
-     m          multiply instruction, for example `mh' multiply halfword
-     n          and instruction, for example `ni' and immediate
-     o          or instruction, for example `oc' or character
+     i          insert instruction, for example 'ic' insert character
+     l          load instruction, for example 'ltr' load and test register
+     mv         move instruction, for example 'mvc' move character
+     m          multiply instruction, for example 'mh' multiply halfword
+     n          and instruction, for example 'ni' and immediate
+     o          or instruction, for example 'oc' or character
      sla, sll   shift left single instruction
      sra, srl   shift right single instruction
-     st         store instruction, for example `stm' store multiple
-     s          subtract instruction, for example `slr' subtract
+     st         store instruction, for example 'stm' store multiple
+     s          subtract instruction, for example 'slr' subtract
                 logical 32-bit
-     t          test or translate instruction, of example `tm' test under mask
-     x          exclusive or instruction, for example `xc' exclusive or
+     t          test or translate instruction, of example 'tm' test under mask
+     x          exclusive or instruction, for example 'xc' exclusive or
                 character
 
    Certain characters at the end of the mnemonic may describe a property
@@ -17819,13 +17436,13 @@ of the instruction:
      y   the instruction uses 20-bit displacements
 
    There are many exceptions to the scheme outlined in the above lists,
-in particular for the priviledged instructions. For non-priviledged
-instruction it works quite well, for example the instruction `clgfr' c:
-compare instruction, l: unsigned operands, g: 64-bit operands, f: 32-
-to 64-bit extension, r: register operands. The instruction compares an
+in particular for the priviledged instructions.  For non-priviledged
+instruction it works quite well, for example the instruction 'clgfr' c:
+compare instruction, l: unsigned operands, g: 64-bit operands, f: 32- to
+64-bit extension, r: register operands.  The instruction compares an
 64-bit value in a register with the zero extended 32-bit value from a
-second register.  For a complete list of all mnemonics see appendix B
-in the Principles of Operation.
+second register.  For a complete list of all mnemonics see appendix B in
+the Principles of Operation.
 
 
 File: as.info,  Node: s390 Operands,  Next: s390 Formats,  Prev: s390 Mnemonics,  Up: s390 Syntax
@@ -17837,68 +17454,60 @@ Instruction operands can be grouped into three classes, operands located
 in registers, immediate operands, and operands in storage.
 
    A register operand can be located in general, floating-point, access,
-or control register. The register is identified by a four-bit field.
+or control register.  The register is identified by a four-bit field.
 The field containing the register operand is called the R field.
 
    Immediate operands are contained within the instruction and can have
-8, 16 or 32 bits. The field containing the immediate operand is called
-the I field. Dependent on the instruction the I field is either signed
+8, 16 or 32 bits.  The field containing the immediate operand is called
+the I field.  Dependent on the instruction the I field is either signed
 or unsigned.
 
-   A storage operand consists of an address and a length. The address
+   A storage operand consists of an address and a length.  The address
 of a storage operands can be specified in any of these ways:
 
    * The content of a single general R
-
    * The sum of the content of a general register called the base
      register B plus the content of a displacement field D
-
    * The sum of the contents of two general registers called the index
      register X and the base register B plus the content of a
      displacement field
-
    * The sum of the current instruction address and a 32-bit signed
      immediate field multiplied by two.
 
    The length of a storage operand can be:
 
    * Implied by the instruction
-
    * Specified by a bitmask
-
    * Specified by a four-bit or eight-bit length field L
-
    * Specified by the content of a general register
 
    The notation for storage operand addresses formed from multiple
 fields is as follows:
 
-`Dn(Bn)'
+'Dn(Bn)'
      the address for operand number n is formed from the content of
      general register Bn called the base register and the displacement
      field Dn.
-
-`Dn(Xn,Bn)'
+'Dn(Xn,Bn)'
      the address for operand number n is formed from the content of
      general register Xn called the index register, general register Bn
      called the base register and the displacement field Dn.
-
-`Dn(Ln,Bn)'
+'Dn(Ln,Bn)'
      the address for operand number n is formed from the content of
      general regiser Bn called the base register and the displacement
      field Dn.  The length of the operand n is specified by the field
      Ln.
 
-   The base registers Bn and the index registers Xn of a storage
-operand can be skipped. If Bn and Xn are skipped, a zero will be stored
-to the operand field. The notation changes as follows:
+   The base registers Bn and the index registers Xn of a storage operand
+can be skipped.  If Bn and Xn are skipped, a zero will be stored to the
+operand field.  The notation changes as follows:
 
-     full notation        short notation
-     ------------------------------------------ 
-     Dn(0,Bn)             Dn(Bn)
-     Dn(0,0)              Dn
-     Dn(0)                Dn
-     Dn(Ln,0)             Dn(Ln)
+     full notation          short notation
+     ----------------------------------------------
+     Dn(0,Bn)               Dn(Bn)
+     Dn(0,0)                Dn
+     Dn(0)                  Dn
+     Dn(Ln,0)               Dn(Ln)
 
 
 File: as.info,  Node: s390 Formats,  Next: s390 Aliases,  Prev: s390 Operands,  Up: s390 Syntax
@@ -17907,9 +17516,9 @@ File: as.info,  Node: s390 Formats,  Next: s390 Aliases,  Prev: s390 Operands,
 ............................
 
 The Principles of Operation manuals lists 26 instruction formats where
-some of the formats have multiple variants. For the `.insn' pseudo
+some of the formats have multiple variants.  For the '.insn' pseudo
 directive the assembler recognizes some of the formats.  Typically, the
-most general variant of the instruction format is used by the `.insn'
+most general variant of the instruction format is used by the '.insn'
 directive.
 
    The following table lists the abbreviations used in the table of
@@ -17926,190 +17535,164 @@ instruction formats:
      Ux              Unsigned immediate for operand x.
 
    An instruction is two, four, or six bytes in length and must be
-aligned on a 2 byte boundary. The first two bits of the instruction
+aligned on a 2 byte boundary.  The first two bits of the instruction
 specify the length of the instruction, 00 indicates a two byte
 instruction, 01 and 10 indicates a four byte instruction, and 11
 indicates a six byte instruction.
 
    The following table lists the s390 instruction formats that are
-available with the `.insn' pseudo directive:
-
-`E format'
+available with the '.insn' pseudo directive:
 
+'E format'
      +-------------+
      |    OpCode   |
      +-------------+
      0            15
 
-`RI format: <insn> R1,I2'
-
+'RI format: <insn> R1,I2'
      +--------+----+----+------------------+
      | OpCode | R1 |OpCd|        I2        |
      +--------+----+----+------------------+
      0        8    12   16                31
 
-`RIE format: <insn> R1,R3,I2'
-
+'RIE format: <insn> R1,R3,I2'
      +--------+----+----+------------------+--------+--------+
      | OpCode | R1 | R3 |        I2        |////////| OpCode |
      +--------+----+----+------------------+--------+--------+
      0        8    12   16                 32       40      47
 
-`RIL format: <insn> R1,I2'
-
+'RIL format: <insn> R1,I2'
      +--------+----+----+------------------------------------+
      | OpCode | R1 |OpCd|                  I2                |
      +--------+----+----+------------------------------------+
      0        8    12   16                                  47
 
-`RILU format: <insn> R1,U2'
-
+'RILU format: <insn> R1,U2'
      +--------+----+----+------------------------------------+
      | OpCode | R1 |OpCd|                  U2                |
      +--------+----+----+------------------------------------+
      0        8    12   16                                  47
 
-`RIS format: <insn> R1,I2,M3,D4(B4)'
-
+'RIS format: <insn> R1,I2,M3,D4(B4)'
      +--------+----+----+----+-------------+--------+--------+
      | OpCode | R1 | M3 | B4 |     D4      |   I2   | Opcode |
      +--------+----+----+----+-------------+--------+--------+
      0        8    12   16   20            32       36      47
 
-`RR format: <insn> R1,R2'
-
+'RR format: <insn> R1,R2'
      +--------+----+----+
      | OpCode | R1 | R2 |
      +--------+----+----+
      0        8    12  15
 
-`RRE format: <insn> R1,R2'
-
+'RRE format: <insn> R1,R2'
      +------------------+--------+----+----+
      |      OpCode      |////////| R1 | R2 |
      +------------------+--------+----+----+
      0                  16       24   28  31
 
-`RRF format: <insn> R1,R2,R3,M4'
-
+'RRF format: <insn> R1,R2,R3,M4'
      +------------------+----+----+----+----+
      |      OpCode      | R3 | M4 | R1 | R2 |
      +------------------+----+----+----+----+
      0                  16   20   24   28  31
 
-`RRS format: <insn> R1,R2,M3,D4(B4)'
-
+'RRS format: <insn> R1,R2,M3,D4(B4)'
      +--------+----+----+----+-------------+----+----+--------+
      | OpCode | R1 | R3 | B4 |     D4      | M3 |////| OpCode |
      +--------+----+----+----+-------------+----+----+--------+
      0        8    12   16   20            32   36   40      47
 
-`RS format: <insn> R1,R3,D2(B2)'
-
+'RS format: <insn> R1,R3,D2(B2)'
      +--------+----+----+----+-------------+
      | OpCode | R1 | R3 | B2 |     D2      |
      +--------+----+----+----+-------------+
      0        8    12   16   20           31
 
-`RSE format: <insn> R1,R3,D2(B2)'
-
+'RSE format: <insn> R1,R3,D2(B2)'
      +--------+----+----+----+-------------+--------+--------+
      | OpCode | R1 | R3 | B2 |     D2      |////////| OpCode |
      +--------+----+----+----+-------------+--------+--------+
      0        8    12   16   20            32       40      47
 
-`RSI format: <insn> R1,R3,I2'
-
+'RSI format: <insn> R1,R3,I2'
      +--------+----+----+------------------------------------+
      | OpCode | R1 | R3 |                  I2                |
      +--------+----+----+------------------------------------+
      0        8    12   16                                  47
 
-`RSY format: <insn> R1,R3,D2(B2)'
-
+'RSY format: <insn> R1,R3,D2(B2)'
      +--------+----+----+----+-------------+--------+--------+
      | OpCode | R1 | R3 | B2 |    DL2      |  DH2   | OpCode |
      +--------+----+----+----+-------------+--------+--------+
      0        8    12   16   20            32       40      47
 
-`RX format: <insn> R1,D2(X2,B2)'
-
+'RX format: <insn> R1,D2(X2,B2)'
      +--------+----+----+----+-------------+
      | OpCode | R1 | X2 | B2 |     D2      |
      +--------+----+----+----+-------------+
      0        8    12   16   20           31
 
-`RXE format: <insn> R1,D2(X2,B2)'
-
+'RXE format: <insn> R1,D2(X2,B2)'
      +--------+----+----+----+-------------+--------+--------+
      | OpCode | R1 | X2 | B2 |     D2      |////////| OpCode |
      +--------+----+----+----+-------------+--------+--------+
      0        8    12   16   20            32       40      47
 
-`RXF format: <insn> R1,R3,D2(X2,B2)'
-
+'RXF format: <insn> R1,R3,D2(X2,B2)'
      +--------+----+----+----+-------------+----+---+--------+
      | OpCode | R3 | X2 | B2 |     D2      | R1 |///| OpCode |
      +--------+----+----+----+-------------+----+---+--------+
      0        8    12   16   20            32   36  40      47
 
-`RXY format: <insn> R1,D2(X2,B2)'
-
+'RXY format: <insn> R1,D2(X2,B2)'
      +--------+----+----+----+-------------+--------+--------+
      | OpCode | R1 | X2 | B2 |     DL2     |   DH2  | OpCode |
      +--------+----+----+----+-------------+--------+--------+
      0        8    12   16   20            32   36   40      47
 
-`S format: <insn> D2(B2)'
-
+'S format: <insn> D2(B2)'
      +------------------+----+-------------+
      |      OpCode      | B2 |     D2      |
      +------------------+----+-------------+
      0                  16   20           31
 
-`SI format: <insn> D1(B1),I2'
-
+'SI format: <insn> D1(B1),I2'
      +--------+---------+----+-------------+
      | OpCode |   I2    | B1 |     D1      |
      +--------+---------+----+-------------+
      0        8         16   20           31
 
-`SIY format: <insn> D1(B1),U2'
-
+'SIY format: <insn> D1(B1),U2'
      +--------+---------+----+-------------+--------+--------+
      | OpCode |   I2    | B1 |     DL1     |  DH1   | OpCode |
      +--------+---------+----+-------------+--------+--------+
      0        8         16   20            32   36   40      47
 
-`SIL format: <insn> D1(B1),I2'
-
+'SIL format: <insn> D1(B1),I2'
      +------------------+----+-------------+-----------------+
      |      OpCode      | B1 |      D1     |       I2        |
      +------------------+----+-------------+-----------------+
      0                  16   20            32               47
 
-`SS format: <insn> D1(R1,B1),D2(B3),R3'
-
+'SS format: <insn> D1(R1,B1),D2(B3),R3'
      +--------+----+----+----+-------------+----+------------+
      | OpCode | R1 | R3 | B1 |     D1      | B2 |     D2     |
      +--------+----+----+----+-------------+----+------------+
      0        8    12   16   20            32   36          47
 
-`SSE format: <insn> D1(B1),D2(B2)'
-
+'SSE format: <insn> D1(B1),D2(B2)'
      +------------------+----+-------------+----+------------+
      |      OpCode      | B1 |     D1      | B2 |     D2     |
      +------------------+----+-------------+----+------------+
      0        8    12   16   20            32   36           47
 
-`SSF format: <insn> D1(B1),D2(B2),R3'
-
+'SSF format: <insn> D1(B1),D2(B2),R3'
      +--------+----+----+----+-------------+----+------------+
      | OpCode | R3 |OpCd| B1 |     D1      | B2 |     D2     |
      +--------+----+----+----+-------------+----+------------+
      0        8    12   16   20            32   36           47
 
-
    For the complete list of all instruction format variants see the
 Principles of Operation manuals.
 
@@ -18120,23 +17703,23 @@ File: as.info,  Node: s390 Aliases,  Next: s390 Operand Modifier,  Prev: s390 Fo
 ............................
 
 A specific bit pattern can have multiple mnemonics, for example the bit
-pattern `0xa7000000' has the mnemonics `tmh' and `tmlh'. In addition,
-there are a number of mnemonics recognized by `as' that are not present
-in the Principles of Operation.  These are the short forms of the
-branch instructions, where the condition code mask operand is encoded
-in the mnemonic. This is relevant for the branch instructions, the
-compare and branch instructions, and the compare and trap instructions.
+pattern '0xa7000000' has the mnemonics 'tmh' and 'tmlh'.  In addition,
+there are a number of mnemonics recognized by 'as' that are not present
+in the Principles of Operation.  These are the short forms of the branch
+instructions, where the condition code mask operand is encoded in the
+mnemonic.  This is relevant for the branch instructions, the compare and
+branch instructions, and the compare and trap instructions.
 
    For the branch instructions there are 20 condition code strings that
 can be used as part of the mnemonic in place of a mask operand in the
 instruction format:
 
-     instruction          short form
-     ------------------------------------------ 
-     bcr   M1,R2          b<m>r  R2
-     bc    M1,D2(X2,B2)   b<m>   D2(X2,B2)
-     brc   M1,I2          j<m>   I2
-     brcl  M1,I2          jg<m>  I2
+     instruction            short form
+     ----------------------------------------------
+     bcr   M1,R2            b<m>r  R2
+     bc    M1,D2(X2,B2)     b<m>   D2(X2,B2)
+     brc   M1,I2            j<m>   I2
+     brcl  M1,I2            jg<m>  I2
 
    In the mnemonic for a branch instruction the condition code string
 <m> can be any of the following:
@@ -18166,32 +17749,32 @@ instruction format:
 are 12 condition code strings that can be used as part of the mnemonic
 in place of a mask operand in the instruction format:
 
-     instruction                 short form
-     -------------------------------------------------------- 
-     crb    R1,R2,M3,D4(B4)      crb<m>    R1,R2,D4(B4)
-     cgrb   R1,R2,M3,D4(B4)      cgrb<m>   R1,R2,D4(B4)
-     crj    R1,R2,M3,I4          crj<m>    R1,R2,I4
-     cgrj   R1,R2,M3,I4          cgrj<m>   R1,R2,I4
-     cib    R1,I2,M3,D4(B4)      cib<m>    R1,I2,D4(B4)
-     cgib   R1,I2,M3,D4(B4)      cgib<m>   R1,I2,D4(B4)
-     cij    R1,I2,M3,I4          cij<m>    R1,I2,I4
-     cgij   R1,I2,M3,I4          cgij<m>   R1,I2,I4
-     crt    R1,R2,M3             crt<m>    R1,R2
-     cgrt   R1,R2,M3             cgrt<m>   R1,R2
-     cit    R1,I2,M3             cit<m>    R1,I2
-     cgit   R1,I2,M3             cgit<m>   R1,I2
-     clrb   R1,R2,M3,D4(B4)      clrb<m>   R1,R2,D4(B4)
-     clgrb  R1,R2,M3,D4(B4)      clgrb<m>  R1,R2,D4(B4)
-     clrj   R1,R2,M3,I4          clrj<m>   R1,R2,I4
-     clgrj  R1,R2,M3,I4          clgrj<m>  R1,R2,I4
-     clib   R1,I2,M3,D4(B4)      clib<m>   R1,I2,D4(B4)
-     clgib  R1,I2,M3,D4(B4)      clgib<m>  R1,I2,D4(B4)
-     clij   R1,I2,M3,I4          clij<m>   R1,I2,I4
-     clgij  R1,I2,M3,I4          clgij<m>  R1,I2,I4
-     clrt   R1,R2,M3             clrt<m>   R1,R2
-     clgrt  R1,R2,M3             clgrt<m>  R1,R2
-     clfit  R1,I2,M3             clfit<m>  R1,I2
-     clgit  R1,I2,M3             clgit<m>  R1,I2
+     instruction                   short form
+     ------------------------------------------------------------
+     crb    R1,R2,M3,D4(B4)        crb<m>    R1,R2,D4(B4)
+     cgrb   R1,R2,M3,D4(B4)        cgrb<m>   R1,R2,D4(B4)
+     crj    R1,R2,M3,I4            crj<m>    R1,R2,I4
+     cgrj   R1,R2,M3,I4            cgrj<m>   R1,R2,I4
+     cib    R1,I2,M3,D4(B4)        cib<m>    R1,I2,D4(B4)
+     cgib   R1,I2,M3,D4(B4)        cgib<m>   R1,I2,D4(B4)
+     cij    R1,I2,M3,I4            cij<m>    R1,I2,I4
+     cgij   R1,I2,M3,I4            cgij<m>   R1,I2,I4
+     crt    R1,R2,M3               crt<m>    R1,R2
+     cgrt   R1,R2,M3               cgrt<m>   R1,R2
+     cit    R1,I2,M3               cit<m>    R1,I2
+     cgit   R1,I2,M3               cgit<m>   R1,I2
+     clrb   R1,R2,M3,D4(B4)        clrb<m>   R1,R2,D4(B4)
+     clgrb  R1,R2,M3,D4(B4)        clgrb<m>  R1,R2,D4(B4)
+     clrj   R1,R2,M3,I4            clrj<m>   R1,R2,I4
+     clgrj  R1,R2,M3,I4            clgrj<m>  R1,R2,I4
+     clib   R1,I2,M3,D4(B4)        clib<m>   R1,I2,D4(B4)
+     clgib  R1,I2,M3,D4(B4)        clgib<m>  R1,I2,D4(B4)
+     clij   R1,I2,M3,I4            clij<m>   R1,I2,I4
+     clgij  R1,I2,M3,I4            clgij<m>  R1,I2,I4
+     clrt   R1,R2,M3               clrt<m>   R1,R2
+     clgrt  R1,R2,M3               clgrt<m>  R1,R2
+     clfit  R1,I2,M3               clfit<m>  R1,I2
+     clgit  R1,I2,M3               clgit<m>  R1,I2
 
    In the mnemonic for a compare and branch and compare and trap
 instruction the condition code string <m> can be any of the following:
@@ -18218,76 +17801,69 @@ File: as.info,  Node: s390 Operand Modifier,  Next: s390 Instruction Marker,  Pr
 If a symbol modifier is attached to a symbol in an expression for an
 instruction operand field, the symbol term is replaced with a reference
 to an object in the global offset table (GOT) or the procedure linkage
-table (PLT). The following expressions are allowed: `symbol@modifier +
-constant', `symbol@modifier + label + constant', and `symbol@modifier -
-label + constant'.  The term `symbol' is the symbol that will be
-entered into the GOT or PLT, `label' is a local label, and `constant'
-is an arbitrary expression that the assembler can evaluate to a
-constant value.
-
-   The term `(symbol + constant1)@modifier +/- label + constant2' is
-also accepted but a warning message is printed and the term is
-converted to `symbol@modifier +/- label + constant1 + constant2'.
-
-`@got'
-`@got12'
+table (PLT). The following expressions are allowed: 'symbol@modifier +
+constant', 'symbol@modifier + label + constant', and 'symbol@modifier -
+label + constant'.  The term 'symbol' is the symbol that will be entered
+into the GOT or PLT, 'label' is a local label, and 'constant' is an
+arbitrary expression that the assembler can evaluate to a constant
+value.
+
+   The term '(symbol + constant1)@modifier +/- label + constant2' is
+also accepted but a warning message is printed and the term is converted
+to 'symbol@modifier +/- label + constant1 + constant2'.
+
+'@got'
+'@got12'
      The @got modifier can be used for displacement fields, 16-bit
-     immediate fields and 32-bit pc-relative immediate fields. The
-     @got12 modifier is synonym to @got. The symbol is added to the
-     GOT. For displacement fields and 16-bit immediate fields the
-     symbol term is replaced with the offset from the start of the GOT
-     to the GOT slot for the symbol.  For a 32-bit pc-relative field
-     the pc-relative offset to the GOT slot from the current
-     instruction address is used.
-
-`@gotent'
+     immediate fields and 32-bit pc-relative immediate fields.  The
+     @got12 modifier is synonym to @got.  The symbol is added to the
+     GOT. For displacement fields and 16-bit immediate fields the symbol
+     term is replaced with the offset from the start of the GOT to the
+     GOT slot for the symbol.  For a 32-bit pc-relative field the
+     pc-relative offset to the GOT slot from the current instruction
+     address is used.
+'@gotent'
      The @gotent modifier can be used for 32-bit pc-relative immediate
      fields.  The symbol is added to the GOT and the symbol term is
      replaced with the pc-relative offset from the current instruction
      to the GOT slot for the symbol.
-
-`@gotoff'
-     The @gotoff modifier can be used for 16-bit immediate fields. The
+'@gotoff'
+     The @gotoff modifier can be used for 16-bit immediate fields.  The
      symbol term is replaced with the offset from the start of the GOT
      to the address of the symbol.
-
-`@gotplt'
+'@gotplt'
      The @gotplt modifier can be used for displacement fields, 16-bit
-     immediate fields, and 32-bit pc-relative immediate fields. A
+     immediate fields, and 32-bit pc-relative immediate fields.  A
      procedure linkage table entry is generated for the symbol and a
      jump slot for the symbol is added to the GOT. For displacement
-     fields and 16-bit immediate fields the symbol term is replaced
-     with the offset from the start of the GOT to the jump slot for the
-     symbol. For a 32-bit pc-relative field the pc-relative offset to
+     fields and 16-bit immediate fields the symbol term is replaced with
+     the offset from the start of the GOT to the jump slot for the
+     symbol.  For a 32-bit pc-relative field the pc-relative offset to
      the jump slot from the current instruction address is used.
-
-`@plt'
+'@plt'
      The @plt modifier can be used for 16-bit and 32-bit pc-relative
-     immediate fields. A procedure linkage table entry is generated for
+     immediate fields.  A procedure linkage table entry is generated for
      the symbol.  The symbol term is replaced with the relative offset
      from the current instruction to the PLT entry for the symbol.
-
-`@pltoff'
-     The @pltoff modifier can be used for 16-bit immediate fields. The
+'@pltoff'
+     The @pltoff modifier can be used for 16-bit immediate fields.  The
      symbol term is replaced with the offset from the start of the PLT
      to the address of the symbol.
-
-`@gotntpoff'
-     The @gotntpoff modifier can be used for displacement fields. The
+'@gotntpoff'
+     The @gotntpoff modifier can be used for displacement fields.  The
      symbol is added to the static TLS block and the negated offset to
      the symbol in the static TLS block is added to the GOT. The symbol
      term is replaced with the offset to the GOT slot from the start of
      the GOT.
-
-`@indntpoff'
+'@indntpoff'
      The @indntpoff modifier can be used for 32-bit pc-relative
-     immediate fields. The symbol is added to the static TLS block and
+     immediate fields.  The symbol is added to the static TLS block and
      the negated offset to the symbol in the static TLS block is added
-     to the GOT. The symbol term is replaced with the pc-relative
-     offset to the GOT slot from the current instruction address.
+     to the GOT. The symbol term is replaced with the pc-relative offset
+     to the GOT slot from the current instruction address.
 
    For more information about the thread local storage modifiers
-`gotntpoff' and `indntpoff' see the ELF extension documentation `ELF
+'gotntpoff' and 'indntpoff' see the ELF extension documentation 'ELF
 Handling For Thread-Local Storage'.
 
 
@@ -18299,24 +17875,22 @@ File: as.info,  Node: s390 Instruction Marker,  Next: s390 Literal Pool Entries,
 The thread local storage instruction markers are used by the linker to
 perform code optimization.
 
-`:tls_load'
+':tls_load'
      The :tls_load marker is used to flag the load instruction in the
      initial exec TLS model that retrieves the offset from the thread
      pointer to a thread local storage variable from the GOT.
-
-`:tls_gdcall'
+':tls_gdcall'
      The :tls_gdcall marker is used to flag the branch-and-save
      instruction to the __tls_get_offset function in the global dynamic
      TLS model.
-
-`:tls_ldcall'
+':tls_ldcall'
      The :tls_ldcall marker is used to flag the branch-and-save
      instruction to the __tls_get_offset function in the local dynamic
      TLS model.
 
    For more information about the thread local storage instruction
 marker and the linker optimizations see the ELF extension documentation
-`ELF Handling For Thread-Local Storage'.
+'ELF Handling For Thread-Local Storage'.
 
 
 File: as.info,  Node: s390 Literal Pool Entries,  Prev: s390 Instruction Marker,  Up: s390 Syntax
@@ -18324,41 +17898,39 @@ File: as.info,  Node: s390 Literal Pool Entries,  Prev: s390 Instruction Marker,
 9.39.3.8 Literal Pool Entries
 .............................
 
-A literal pool is a collection of values. To access the values a pointer
-to the literal pool is loaded to a register, the literal pool register.
-Usually, register %r13 is used as the literal pool register (*Note s390
-Register::). Literal pool entries are created by adding the suffix
-:lit1, :lit2, :lit4, or :lit8 to the end of an expression for an
-instruction operand. The expression is added to the literal pool and the
-operand is replaced with the offset to the literal in the literal pool.
+A literal pool is a collection of values.  To access the values a
+pointer to the literal pool is loaded to a register, the literal pool
+register.  Usually, register %r13 is used as the literal pool register
+(*note s390 Register::).  Literal pool entries are created by adding the
+suffix :lit1, :lit2, :lit4, or :lit8 to the end of an expression for an
+instruction operand.  The expression is added to the literal pool and
+the operand is replaced with the offset to the literal in the literal
+pool.
 
-`:lit1'
-     The literal pool entry is created as an 8-bit value. An operand
+':lit1'
+     The literal pool entry is created as an 8-bit value.  An operand
      modifier must not be used for the original expression.
-
-`:lit2'
-     The literal pool entry is created as a 16 bit value. The operand
-     modifier @got may be used in the original expression. The term
-     `x@got:lit2' will put the got offset for the global symbol x to
-     the literal pool as 16 bit value.
-
-`:lit4'
-     The literal pool entry is created as a 32-bit value. The operand
-     modifier @got and @plt may be used in the original expression. The
-     term `x@got:lit4' will put the got offset for the global symbol x
-     to the literal pool as a 32-bit value. The term `x@plt:lit4' will
-     put the plt offset for the global symbol x to the literal pool as
-     a 32-bit value.
-
-`:lit8'
-     The literal pool entry is created as a 64-bit value. The operand
-     modifier @got and @plt may be used in the original expression. The
-     term `x@got:lit8' will put the got offset for the global symbol x
-     to the literal pool as a 64-bit value. The term `x@plt:lit8' will
-     put the plt offset for the global symbol x to the literal pool as
-     a 64-bit value.
-
-   The assembler directive `.ltorg' is used to emit all literal pool
+':lit2'
+     The literal pool entry is created as a 16 bit value.  The operand
+     modifier @got may be used in the original expression.  The term
+     'x@got:lit2' will put the got offset for the global symbol x to the
+     literal pool as 16 bit value.
+':lit4'
+     The literal pool entry is created as a 32-bit value.  The operand
+     modifier @got and @plt may be used in the original expression.  The
+     term 'x@got:lit4' will put the got offset for the global symbol x
+     to the literal pool as a 32-bit value.  The term 'x@plt:lit4' will
+     put the plt offset for the global symbol x to the literal pool as a
+     32-bit value.
+':lit8'
+     The literal pool entry is created as a 64-bit value.  The operand
+     modifier @got and @plt may be used in the original expression.  The
+     term 'x@got:lit8' will put the got offset for the global symbol x
+     to the literal pool as a 64-bit value.  The term 'x@plt:lit8' will
+     put the plt offset for the global symbol x to the literal pool as a
+     64-bit value.
+
+   The assembler directive '.ltorg' is used to emit all literal pool
 entries to the current position.
 
 
@@ -18367,119 +17939,111 @@ File: as.info,  Node: s390 Directives,  Next: s390 Floating Point,  Prev: s390 S
 9.39.4 Assembler Directives
 ---------------------------
 
-`as' for s390 supports all of the standard ELF assembler directives as
+'as' for s390 supports all of the standard ELF assembler directives as
 outlined in the main part of this document.  Some directives have been
 extended and there are some additional directives, which are only
-available for the s390 `as'.
+available for the s390 'as'.
 
-`.insn'
+'.insn'
      This directive permits the numeric representation of an
      instructions and makes the assembler insert the operands according
-     to one of the instructions formats for `.insn' (*Note s390
-     Formats::).  For example, the instruction `l %r1,24(%r15)' could
-     be written as `.insn rx,0x58000000,%r1,24(%r15)'.  
-
-`.short'
-`.long'
-`.quad'
+     to one of the instructions formats for '.insn' (*note s390
+     Formats::).  For example, the instruction 'l %r1,24(%r15)' could be
+     written as '.insn rx,0x58000000,%r1,24(%r15)'.
+'.short'
+'.long'
+'.quad'
      This directive places one or more 16-bit (.short), 32-bit (.long),
-     or 64-bit (.quad) values into the current section. If an ELF or
+     or 64-bit (.quad) values into the current section.  If an ELF or
      TLS modifier is used only the following expressions are allowed:
-     `symbol@modifier + constant', `symbol@modifier + label +
-     constant', and `symbol@modifier - label + constant'.  The
-     following modifiers are available:
-    `@got'
-    `@got12'
+     'symbol@modifier + constant', 'symbol@modifier + label + constant',
+     and 'symbol@modifier - label + constant'.  The following modifiers
+     are available:
+     '@got'
+     '@got12'
           The @got modifier can be used for .short, .long and .quad.
-          The @got12 modifier is synonym to @got. The symbol is added
+          The @got12 modifier is synonym to @got.  The symbol is added
           to the GOT. The symbol term is replaced with offset from the
           start of the GOT to the GOT slot for the symbol.
-
-    `@gotoff'
+     '@gotoff'
           The @gotoff modifier can be used for .short, .long and .quad.
           The symbol term is replaced with the offset from the start of
           the GOT to the address of the symbol.
-
-    `@gotplt'
-          The @gotplt modifier can be used for .long and .quad. A
+     '@gotplt'
+          The @gotplt modifier can be used for .long and .quad.  A
           procedure linkage table entry is generated for the symbol and
           a jump slot for the symbol is added to the GOT. The symbol
           term is replaced with the offset from the start of the GOT to
           the jump slot for the symbol.
-
-    `@plt'
-          The @plt modifier can be used for .long and .quad. A
+     '@plt'
+          The @plt modifier can be used for .long and .quad.  A
           procedure linkage table entry us generated for the symbol.
           The symbol term is replaced with the address of the PLT entry
           for the symbol.
-
-    `@pltoff'
+     '@pltoff'
           The @pltoff modifier can be used for .short, .long and .quad.
           The symbol term is replaced with the offset from the start of
           the PLT to the address of the symbol.
-
-    `@tlsgd'
-    `@tlsldm'
+     '@tlsgd'
+     '@tlsldm'
           The @tlsgd and @tlsldm modifier can be used for .long and
-          .quad. A tls_index structure for the symbol is added to the
+          .quad.  A tls_index structure for the symbol is added to the
           GOT. The symbol term is replaced with the offset from the
           start of the GOT to the tls_index structure.
-
-    `@gotntpoff'
-    `@indntpoff'
+     '@gotntpoff'
+     '@indntpoff'
           The @gotntpoff and @indntpoff modifier can be used for .long
           and .quad.  The symbol is added to the static TLS block and
           the negated offset to the symbol in the static TLS block is
           added to the GOT. For @gotntpoff the symbol term is replaced
-          with the offset from the start of the GOT to the GOT slot,
-          for @indntpoff the symbol term is replaced with the address
-          of the GOT slot.
-
-    `@dtpoff'
-          The @dtpoff modifier can be used for .long and .quad. The
-          symbol term is replaced with the offset of the symbol
-          relative to the start of the TLS block it is contained in.
-
-    `@ntpoff'
-          The @ntpoff modifier can be used for .long and .quad. The
-          symbol term is replaced with the offset of the symbol
-          relative to the TCB pointer.
+          with the offset from the start of the GOT to the GOT slot, for
+          @indntpoff the symbol term is replaced with the address of the
+          GOT slot.
+     '@dtpoff'
+          The @dtpoff modifier can be used for .long and .quad.  The
+          symbol term is replaced with the offset of the symbol relative
+          to the start of the TLS block it is contained in.
+     '@ntpoff'
+          The @ntpoff modifier can be used for .long and .quad.  The
+          symbol term is replaced with the offset of the symbol relative
+          to the TCB pointer.
 
      For more information about the thread local storage modifiers see
-     the ELF extension documentation `ELF Handling For Thread-Local
+     the ELF extension documentation 'ELF Handling For Thread-Local
      Storage'.
 
-`.ltorg'
+'.ltorg'
      This directive causes the current contents of the literal pool to
-     be dumped to the current location (*Note s390 Literal Pool
+     be dumped to the current location (*note s390 Literal Pool
      Entries::).
 
-`.machine STRING[+EXTENSION]...'
+'.machine STRING[+EXTENSION]...'
+
      This directive allows changing the machine for which code is
-     generated.  `string' may be any of the `-march=' selection
-     options, or `push', or `pop'.  `.machine push' saves the currently
-     selected cpu, which may be restored with `.machine pop'.  Be aware
-     that the cpu string has to be put into double quotes in case it
-     contains characters not appropriate for identifiers.  So you have
-     to write `"z9-109"' instead of just `z9-109'.  Extensions can be
-     specified after the cpu name, separated by plus charaters.  Valid
-     extensions are: `htm', `nohtm', `vx', `novx'.  They extend the
-     basic instruction set with features from a higher cpu level, or
-     remove support for a feature from the given cpu level.
-
-     Example: `z13+nohtm' allows all instructions of the z13 cpu except
+     generated.  'string' may be any of the '-march=' selection options,
+     or 'push', or 'pop'.  '.machine push' saves the currently selected
+     cpu, which may be restored with '.machine pop'.  Be aware that the
+     cpu string has to be put into double quotes in case it contains
+     characters not appropriate for identifiers.  So you have to write
+     '"z9-109"' instead of just 'z9-109'.  Extensions can be specified
+     after the cpu name, separated by plus charaters.  Valid extensions
+     are: 'htm', 'nohtm', 'vx', 'novx'.  They extend the basic
+     instruction set with features from a higher cpu level, or remove
+     support for a feature from the given cpu level.
+
+     Example: 'z13+nohtm' allows all instructions of the z13 cpu except
      instructions from the HTM facility.
 
-`.machinemode string'
+'.machinemode string'
      This directive allows to change the architecture mode for which
-     code is being generated.  `string' may be `esa', `zarch',
-     `zarch_nohighgprs', `push', or `pop'.  `.machinemode
-     zarch_nohighgprs' can be used to prevent the `highgprs' flag from
+     code is being generated.  'string' may be 'esa', 'zarch',
+     'zarch_nohighgprs', 'push', or 'pop'.  '.machinemode
+     zarch_nohighgprs' can be used to prevent the 'highgprs' flag from
      being set in the ELF header of the output file.  This is useful in
-     situations where the code is gated with a runtime check which
-     makes sure that the code is only executed on kernels providing the
-     `highgprs' feature.  `.machinemode push' saves the currently
-     selected mode, which may be restored with `.machinemode pop'.
+     situations where the code is gated with a runtime check which makes
+     sure that the code is only executed on kernels providing the
+     'highgprs' feature.  '.machinemode push' saves the currently
+     selected mode, which may be restored with '.machinemode pop'.
 
 
 File: as.info,  Node: s390 Floating Point,  Prev: s390 Directives,  Up: S/390-Dependent
@@ -18488,10 +18052,10 @@ File: as.info,  Node: s390 Floating Point,  Prev: s390 Directives,  Up: S/390-De
 ---------------------
 
 The assembler recognizes both the IEEE floating-point instruction and
-the hexadecimal floating-point instructions. The floating-point
-constructors `.float', `.single', and `.double' always emit the IEEE
-format. To assemble hexadecimal floating-point constants the `.long'
-and `.quad' directives must be used.
+the hexadecimal floating-point instructions.  The floating-point
+constructors '.float', '.single', and '.double' always emit the IEEE
+format.  To assemble hexadecimal floating-point constants the '.long'
+and '.quad' directives must be used.
 
 
 File: as.info,  Node: SCORE-Dependent,  Next: SH-Dependent,  Prev: S/390-Dependent,  Up: Machine Dependencies
@@ -18513,117 +18077,115 @@ File: as.info,  Node: SCORE-Opts,  Next: SCORE-Pseudo,  Up: SCORE-Dependent
 
 The following table lists all available SCORE options.
 
-`-G NUM'
+'-G NUM'
      This option sets the largest size of an object that can be
-     referenced implicitly with the `gp' register. The default value is
+     referenced implicitly with the 'gp' register.  The default value is
      8.
 
-`-EB'
+'-EB'
      Assemble code for a big-endian cpu
 
-`-EL'
+'-EL'
      Assemble code for a little-endian cpu
 
-`-FIXDD'
+'-FIXDD'
      Assemble code for fix data dependency
 
-`-NWARN'
+'-NWARN'
      Assemble code for no warning message for fix data dependency
 
-`-SCORE5'
+'-SCORE5'
      Assemble code for target is SCORE5
 
-`-SCORE5U'
+'-SCORE5U'
      Assemble code for target is SCORE5U
 
-`-SCORE7'
+'-SCORE7'
      Assemble code for target is SCORE7, this is default setting
 
-`-SCORE3'
+'-SCORE3'
      Assemble code for target is SCORE3
 
-`-march=score7'
+'-march=score7'
      Assemble code for target is SCORE7, this is default setting
 
-`-march=score3'
+'-march=score3'
      Assemble code for target is SCORE3
 
-`-USE_R1'
+'-USE_R1'
      Assemble code for no warning message when using temp register r1
 
-`-KPIC'
-     Generate code for PIC.  This option tells the assembler to generate
+'-KPIC'
+     Generate code for PIC. This option tells the assembler to generate
      score position-independent macro expansions.  It also tells the
      assembler to mark the output file as PIC.
 
-`-O0'
+'-O0'
      Assembler will not perform any optimizations
 
-`-V'
+'-V'
      Sunplus release version
 
-
 
 File: as.info,  Node: SCORE-Pseudo,  Next: SCORE-Syntax,  Prev: SCORE-Opts,  Up: SCORE-Dependent
 
 9.40.2 SCORE Assembler Directives
 ---------------------------------
 
-A number of assembler directives are available for SCORE.  The
-following table is far from complete.
+A number of assembler directives are available for SCORE. The following
+table is far from complete.
 
-`.set nwarn'
+'.set nwarn'
      Let the assembler not to generate warnings if the source machine
      language instructions happen data dependency.
 
-`.set fixdd'
+'.set fixdd'
      Let the assembler to insert bubbles (32 bit nop instruction / 16
-     bit nop! Instruction) if the source machine language instructions
+     bit nop!  Instruction) if the source machine language instructions
      happen data dependency.
 
-`.set nofixdd'
+'.set nofixdd'
      Let the assembler to generate warnings if the source machine
-     language instructions happen data dependency. (Default)
+     language instructions happen data dependency.  (Default)
 
-`.set r1'
+'.set r1'
      Let the assembler not to generate warnings if the source program
-     uses r1. allow user to use r1
+     uses r1.  allow user to use r1
 
-`set nor1'
+'set nor1'
      Let the assembler to generate warnings if the source program uses
-     r1. (Default)
+     r1.  (Default)
 
-`.sdata'
+'.sdata'
      Tell the assembler to add subsequent data into the sdata section
 
-`.rdata'
+'.rdata'
      Tell the assembler to add subsequent data into the rdata section
 
-`.frame "frame-register", "offset", "return-pc-register"'
-     Describe a stack frame. "frame-register" is the frame register,
+'.frame "frame-register", "offset", "return-pc-register"'
+     Describe a stack frame.  "frame-register" is the frame register,
      "offset" is the distance from the frame register to the virtual
      frame pointer, "return-pc-register" is the return program register.
      You must use ".ent" before ".frame" and only one ".frame" can be
      used per ".ent".
 
-`.mask "bitmask", "frameoffset"'
+'.mask "bitmask", "frameoffset"'
      Indicate which of the integer registers are saved in the current
      function's stack frame, this is for the debugger to explain the
      frame chain.
 
-`.ent "proc-name"'
-     Set the beginning of the procedure "proc_name". Use this directive
+'.ent "proc-name"'
+     Set the beginning of the procedure "proc_name".  Use this directive
      when you want to generate information for the debugger.
 
-`.end proc-name'
-     Set the end of a procedure. Use this directive to generate
+'.end proc-name'
+     Set the end of a procedure.  Use this directive to generate
      information for the debugger.
 
-`.bss'
+'.bss'
      Switch the destination of following statements into the bss
      section, which is used for data that is uninitialized anywhere.
 
-
 
 File: as.info,  Node: SCORE-Syntax,  Prev: SCORE-Pseudo,  Up: SCORE-Dependent
 
@@ -18640,15 +18202,15 @@ File: as.info,  Node: SCORE-Chars,  Up: SCORE-Syntax
 9.40.3.1 Special Characters
 ...........................
 
-The presence of a `#' appearing anywhere on a line indicates the start
+The presence of a '#' appearing anywhere on a line indicates the start
 of a comment that extends to the end of that line.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line can also be a
-logical line number directive (*note Comments::) or a preprocessor
-control command (*note Preprocessing::).
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line can also be a logical
+line number directive (*note Comments::) or a preprocessor control
+command (*note Preprocessing::).
 
-   The `;' character can be used to separate statements on the same
+   The ';' character can be used to separate statements on the same
 line.
 
 
@@ -18671,50 +18233,46 @@ File: as.info,  Node: SH Options,  Next: SH Syntax,  Up: SH-Dependent
 9.41.1 Options
 --------------
 
-`as' has following command-line options for the Renesas (formerly
+'as' has following command-line options for the Renesas (formerly
 Hitachi) / SuperH SH family.
 
-`--little'
+'--little'
      Generate little endian code.
 
-`--big'
+'--big'
      Generate big endian code.
 
-`--relax'
+'--relax'
      Alter jump instructions for long displacements.
 
-`--small'
+'--small'
      Align sections to 4 byte boundaries, not 16.
 
-`--dsp'
+'--dsp'
      Enable sh-dsp insns, and disable sh3e / sh4 insns.
 
-`--renesas'
+'--renesas'
      Disable optimization with section symbol for compatibility with
      Renesas assembler.
 
-`--allow-reg-prefix'
+'--allow-reg-prefix'
      Allow '$' as a register name prefix.
 
-`--fdpic'
+'--fdpic'
      Generate an FDPIC object file.
 
-`--isa=sh4 | sh4a'
+'--isa=sh4 | sh4a'
      Specify the sh4 or sh4a instruction set.
-
-`--isa=dsp'
+'--isa=dsp'
      Enable sh-dsp insns, and disable sh3e / sh4 insns.
-
-`--isa=fp'
+'--isa=fp'
      Enable sh2e, sh3e, sh4, and sh4a insn sets.
-
-`--isa=all'
+'--isa=all'
      Enable sh1, sh2, sh2e, sh3, sh3e, sh4, sh4a, and sh-dsp insn sets.
 
-`-h-tick-hex'
+'-h-tick-hex'
      Support H'00 style hex constants in addition to 0x00 style.
 
-
 
 File: as.info,  Node: SH Syntax,  Next: SH Floating Point,  Prev: SH Options,  Up: SH-Dependent
 
@@ -18733,16 +18291,16 @@ File: as.info,  Node: SH-Chars,  Next: SH-Regs,  Up: SH Syntax
 9.41.2.1 Special Characters
 ...........................
 
-`!' is the line comment character.
+'!' is the line comment character.
 
-   You can use `;' instead of a newline to separate statements.
+   You can use ';' instead of a newline to separate statements.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line could also be a
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line could also be a
 logical line number directive (*note Comments::) or a preprocessor
 control command (*note Preprocessing::).
 
-   Since `$' has no special meaning, you may use it in symbol names.
+   Since '$' has no special meaning, you may use it in symbol names.
 
 
 File: as.info,  Node: SH-Regs,  Next: SH-Addressing,  Prev: SH-Chars,  Up: SH Syntax
@@ -18750,29 +18308,29 @@ File: as.info,  Node: SH-Regs,  Next: SH-Addressing,  Prev: SH-Chars,  Up: SH Sy
 9.41.2.2 Register Names
 .......................
 
-You can use the predefined symbols `r0', `r1', `r2', `r3', `r4', `r5',
-`r6', `r7', `r8', `r9', `r10', `r11', `r12', `r13', `r14', and `r15' to
+You can use the predefined symbols 'r0', 'r1', 'r2', 'r3', 'r4', 'r5',
+'r6', 'r7', 'r8', 'r9', 'r10', 'r11', 'r12', 'r13', 'r14', and 'r15' to
 refer to the SH registers.
 
    The SH also has these control registers:
 
-`pr'
+'pr'
      procedure register (holds return address)
 
-`pc'
+'pc'
      program counter
 
-`mach'
-`macl'
+'mach'
+'macl'
      high and low multiply accumulator registers
 
-`sr'
+'sr'
      status register
 
-`gbr'
+'gbr'
      global base register
 
-`vbr'
+'vbr'
      vector base register (for interrupt vectors)
 
 
@@ -18781,42 +18339,42 @@ File: as.info,  Node: SH-Addressing,  Prev: SH-Regs,  Up: SH Syntax
 9.41.2.3 Addressing Modes
 .........................
 
-`as' understands the following addressing modes for the SH.  `RN' in
-the following refers to any of the numbered registers, but _not_ the
-control registers.
+'as' understands the following addressing modes for the SH. 'RN' in the
+following refers to any of the numbered registers, but _not_ the control
+registers.
 
-`RN'
+'RN'
      Register direct
 
-`@RN'
+'@RN'
      Register indirect
 
-`@-RN'
+'@-RN'
      Register indirect with pre-decrement
 
-`@RN+'
+'@RN+'
      Register indirect with post-increment
 
-`@(DISP, RN)'
+'@(DISP, RN)'
      Register indirect with displacement
 
-`@(R0, RN)'
+'@(R0, RN)'
      Register indexed
 
-`@(DISP, GBR)'
-     `GBR' offset
+'@(DISP, GBR)'
+     'GBR' offset
 
-`@(R0, GBR)'
+'@(R0, GBR)'
      GBR indexed
 
-`ADDR'
-`@(DISP, PC)'
+'ADDR'
+'@(DISP, PC)'
      PC relative address (for branch or for addressing memory).  The
-     `as' implementation allows you to use the simpler form ADDR
-     anywhere a PC relative address is called for; the alternate form
-     is supported for compatibility with other assemblers.
+     'as' implementation allows you to use the simpler form ADDR
+     anywhere a PC relative address is called for; the alternate form is
+     supported for compatibility with other assemblers.
 
-`#IMM'
+'#IMM'
      Immediate data
 
 
@@ -18826,22 +18384,22 @@ File: as.info,  Node: SH Floating Point,  Next: SH Directives,  Prev: SH Syntax,
 ---------------------
 
 SH2E, SH3E and SH4 groups have on-chip floating-point unit (FPU). Other
-SH groups can use `.float' directive to generate IEEE floating-point
+SH groups can use '.float' directive to generate IEEE floating-point
 numbers.
 
    SH2E and SH3E support single-precision floating point calculations as
-well as entirely PCAPI compatible emulation of double-precision
-floating point calculations. SH2E and SH3E instructions are a subset of
-the floating point calculations conforming to the IEEE754 standard.
+well as entirely PCAPI compatible emulation of double-precision floating
+point calculations.  SH2E and SH3E instructions are a subset of the
+floating point calculations conforming to the IEEE754 standard.
 
    In addition to single-precision and double-precision floating-point
 operation capability, the on-chip FPU of SH4 has a 128-bit graphic
 engine that enables 32-bit floating-point data to be processed 128 bits
-at a time. It also supports 4 * 4 array operations and inner product
-operations. Also, a superscalar architecture is employed that enables
-simultaneous execution of two instructions (including FPU
-instructions), providing performance of up to twice that of
-conventional architectures at the same frequency.
+at a time.  It also supports 4 * 4 array operations and inner product
+operations.  Also, a superscalar architecture is employed that enables
+simultaneous execution of two instructions (including FPU instructions),
+providing performance of up to twice that of conventional architectures
+at the same frequency.
 
 
 File: as.info,  Node: SH Directives,  Next: SH Opcodes,  Prev: SH Floating Point,  Up: SH-Dependent
@@ -18849,12 +18407,12 @@ File: as.info,  Node: SH Directives,  Next: SH Opcodes,  Prev: SH Floating Point
 9.41.4 SH Machine Directives
 ----------------------------
 
-`uaword'
-`ualong'
-`uaquad'
-     `as' will issue a warning when a misaligned `.word', `.long', or
-     `.quad' directive is used.  You may use `.uaword', `.ualong', or
-     `.uaquad' to indicate that the value is intentionally misaligned.
+'uaword'
+'ualong'
+'uaquad'
+     'as' will issue a warning when a misaligned '.word', '.long', or
+     '.quad' directive is used.  You may use '.uaword', '.ualong', or
+     '.uaquad' to indicate that the value is intentionally misaligned.
 
 
 File: as.info,  Node: SH Opcodes,  Prev: SH Directives,  Up: SH-Dependent
@@ -18863,17 +18421,17 @@ File: as.info,  Node: SH Opcodes,  Prev: SH Directives,  Up: SH-Dependent
 --------------
 
 For detailed information on the SH machine instruction set, see
-`SH-Microcomputer User's Manual' (Renesas) or `SH-4 32-bit CPU Core
-Architecture' (SuperH) and `SuperH (SH) 64-Bit RISC Series' (SuperH).
+'SH-Microcomputer User's Manual' (Renesas) or 'SH-4 32-bit CPU Core
+Architecture' (SuperH) and 'SuperH (SH) 64-Bit RISC Series' (SuperH).
 
-   `as' implements all the standard SH opcodes.  No additional
+   'as' implements all the standard SH opcodes.  No additional
 pseudo-instructions are needed on this family.  Note, however, that
-because `as' supports a simpler form of PC-relative addressing, you may
+because 'as' supports a simpler form of PC-relative addressing, you may
 simply write (for example)
 
      mov.l  bar,r0
 
-where other assemblers might require an explicit displacement to `bar'
+where other assemblers might require an explicit displacement to 'bar'
 from the program counter:
 
      mov.l  @(DISP, PC)
@@ -18930,7 +18488,6 @@ from the program counter:
      lds Rn,PR                      mulu Rm,Rn
      lds.l @Rn+,MACH                neg Rm,Rn
      lds.l @Rn+,MACL                negc Rm,Rn
-
      nop                            stc VBR,Rn
      not Rm,Rn                      stc.l GBR,@-Rn
      or #imm,R0                     stc.l SR,@-Rn
@@ -18976,56 +18533,51 @@ File: as.info,  Node: SH64 Options,  Next: SH64 Syntax,  Up: SH64-Dependent
 9.42.1 Options
 --------------
 
-`-isa=sh4 | sh4a'
+'-isa=sh4 | sh4a'
      Specify the sh4 or sh4a instruction set.
-
-`-isa=dsp'
+'-isa=dsp'
      Enable sh-dsp insns, and disable sh3e / sh4 insns.
-
-`-isa=fp'
+'-isa=fp'
      Enable sh2e, sh3e, sh4, and sh4a insn sets.
-
-`-isa=all'
+'-isa=all'
      Enable sh1, sh2, sh2e, sh3, sh3e, sh4, sh4a, and sh-dsp insn sets.
-
-`-isa=shmedia | -isa=shcompact'
-     Specify the default instruction set.  `SHmedia' specifies the
-     32-bit opcodes, and `SHcompact' specifies the 16-bit opcodes
+'-isa=shmedia | -isa=shcompact'
+     Specify the default instruction set.  'SHmedia' specifies the
+     32-bit opcodes, and 'SHcompact' specifies the 16-bit opcodes
      compatible with previous SH families.  The default depends on the
      ABI selected; the default for the 64-bit ABI is SHmedia, and the
      default for the 32-bit ABI is SHcompact.  If neither the ABI nor
      the ISA is specified, the default is 32-bit SHcompact.
 
-     Note that the `.mode' pseudo-op is not permitted if the ISA is not
+     Note that the '.mode' pseudo-op is not permitted if the ISA is not
      specified on the command line.
 
-`-abi=32 | -abi=64'
-     Specify the default ABI.  If the ISA is specified and the ABI is
-     not, the default ABI depends on the ISA, with SHmedia defaulting
-     to 64-bit and SHcompact defaulting to 32-bit.
+'-abi=32 | -abi=64'
+     Specify the default ABI. If the ISA is specified and the ABI is
+     not, the default ABI depends on the ISA, with SHmedia defaulting to
+     64-bit and SHcompact defaulting to 32-bit.
 
-     Note that the `.abi' pseudo-op is not permitted if the ABI is not
+     Note that the '.abi' pseudo-op is not permitted if the ABI is not
      specified on the command line.  When the ABI is specified on the
-     command line, any `.abi' pseudo-ops in the source must match it.
+     command line, any '.abi' pseudo-ops in the source must match it.
 
-`-shcompact-const-crange'
+'-shcompact-const-crange'
      Emit code-range descriptors for constants in SHcompact code
      sections.
 
-`-no-mix'
+'-no-mix'
      Disallow SHmedia code in the same section as constants and
      SHcompact code.
 
-`-no-expand'
+'-no-expand'
      Do not expand MOVI, PT, PTA or PTB instructions.
 
-`-expand-pt32'
+'-expand-pt32'
      With -abi=64, expand PT, PTA and PTB instructions to 32 bits only.
 
-`-h-tick-hex'
+'-h-tick-hex'
      Support H'00 style hex constants in addition to 0x00 style.
 
-
 
 File: as.info,  Node: SH64 Syntax,  Next: SH64 Directives,  Prev: SH64 Options,  Up: SH64-Dependent
 
@@ -19044,16 +18596,16 @@ File: as.info,  Node: SH64-Chars,  Next: SH64-Regs,  Up: SH64 Syntax
 9.42.2.1 Special Characters
 ...........................
 
-`!' is the line comment character.
+'!' is the line comment character.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line could also be a
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line could also be a
 logical line number directive (*note Comments::) or a preprocessor
 control command (*note Preprocessing::).
 
-   You can use `;' instead of a newline to separate statements.
+   You can use ';' instead of a newline to separate statements.
 
-   Since `$' has no special meaning, you may use it in symbol names.
+   Since '$' has no special meaning, you may use it in symbol names.
 
 
 File: as.info,  Node: SH64-Regs,  Next: SH64-Addressing,  Prev: SH64-Chars,  Up: SH64 Syntax
@@ -19061,21 +18613,21 @@ File: as.info,  Node: SH64-Regs,  Next: SH64-Addressing,  Prev: SH64-Chars,  Up:
 9.42.2.2 Register Names
 .......................
 
-You can use the predefined symbols `r0' through `r63' to refer to the
-SH64 general registers, `cr0' through `cr63' for control registers,
-`tr0' through `tr7' for target address registers, `fr0' through `fr63'
-for single-precision floating point registers, `dr0' through `dr62'
+You can use the predefined symbols 'r0' through 'r63' to refer to the
+SH64 general registers, 'cr0' through 'cr63' for control registers,
+'tr0' through 'tr7' for target address registers, 'fr0' through 'fr63'
+for single-precision floating point registers, 'dr0' through 'dr62'
 (even numbered registers only) for double-precision floating point
-registers, `fv0' through `fv60' (multiples of four only) for
-single-precision floating point vectors, `fp0' through `fp62' (even
+registers, 'fv0' through 'fv60' (multiples of four only) for
+single-precision floating point vectors, 'fp0' through 'fp62' (even
 numbered registers only) for single-precision floating point pairs,
-`mtrx0' through `mtrx48' (multiples of 16 only) for 4x4 matrices of
-single-precision floating point registers, `pc' for the program
-counter, and `fpscr' for the floating point status and control register.
+'mtrx0' through 'mtrx48' (multiples of 16 only) for 4x4 matrices of
+single-precision floating point registers, 'pc' for the program counter,
+and 'fpscr' for the floating point status and control register.
 
-   You can also refer to the control registers by the mnemonics `sr',
-`ssr', `pssr', `intevt', `expevt', `pexpevt', `tra', `spc', `pspc',
-`resvec', `vbr', `tea', `dcr', `kcr0', `kcr1', `ctc', and `usr'.
+   You can also refer to the control registers by the mnemonics 'sr',
+'ssr', 'pssr', 'intevt', 'expevt', 'pexpevt', 'tra', 'spc', 'pspc',
+'resvec', 'vbr', 'tea', 'dcr', 'kcr0', 'kcr1', 'ctc', and 'usr'.
 
 
 File: as.info,  Node: SH64-Addressing,  Prev: SH64-Regs,  Up: SH64 Syntax
@@ -19095,10 +18647,10 @@ label reference), as in this example:
 
    Instruction label references can reference labels in either SHmedia
 or SHcompact.  To differentiate between the two, labels in SHmedia
-sections will always have the least significant bit set (i.e. they will
+sections will always have the least significant bit set (i.e.  they will
 be odd), which SHcompact labels will have the least significant bit
-reset (i.e. they will be even).  If you need to reference the actual
-address of a label, you can use the `datalabel' modifier, as in this
+reset (i.e.  they will be even).  If you need to reference the actual
+address of a label, you can use the 'datalabel' modifier, as in this
 example:
 
      	.long	function
@@ -19118,22 +18670,21 @@ File: as.info,  Node: SH64 Directives,  Next: SH64 Opcodes,  Prev: SH64 Syntax,
 In addition to the SH directives, the SH64 provides the following
 directives:
 
-`.mode [shmedia|shcompact]'
-`.isa [shmedia|shcompact]'
+'.mode [shmedia|shcompact]'
+'.isa [shmedia|shcompact]'
      Specify the ISA for the following instructions (the two directives
-     are equivalent).  Note that programs such as `objdump' rely on
+     are equivalent).  Note that programs such as 'objdump' rely on
      symbolic labels to determine when such mode switches occur (by
-     checking the least significant bit of the label's address), so
-     such mode/isa changes should always be followed by a label (in
-     practice, this is true anyway).  Note that you cannot use these
-     directives if you didn't specify an ISA on the command line.
+     checking the least significant bit of the label's address), so such
+     mode/isa changes should always be followed by a label (in practice,
+     this is true anyway).  Note that you cannot use these directives if
+     you didn't specify an ISA on the command line.
 
-`.abi [32|64]'
+'.abi [32|64]'
      Specify the ABI for the following instructions.  Note that you
      cannot use this directive unless you specified an ABI on the
      command line, and the ABIs specified must match.
 
-
 
 File: as.info,  Node: SH64 Opcodes,  Prev: SH64 Directives,  Up: SH64-Dependent
 
@@ -19141,22 +18692,21 @@ File: as.info,  Node: SH64 Opcodes,  Prev: SH64 Directives,  Up: SH64-Dependent
 --------------
 
 For detailed information on the SH64 machine instruction set, see
-`SuperH 64 bit RISC Series Architecture Manual' (SuperH, Inc.).
+'SuperH 64 bit RISC Series Architecture Manual' (SuperH, Inc.).
 
-   `as' implements all the standard SH64 opcodes.  In addition, the
+   'as' implements all the standard SH64 opcodes.  In addition, the
 following pseudo-opcodes may be expanded into one or more alternate
 opcodes:
 
-`movi'
-     If the value doesn't fit into a standard `movi' opcode, `as' will
-     replace the `movi' with a sequence of `movi' and `shori' opcodes.
+'movi'
+     If the value doesn't fit into a standard 'movi' opcode, 'as' will
+     replace the 'movi' with a sequence of 'movi' and 'shori' opcodes.
 
-`pt'
-     This expands to a sequence of `movi' and `shori' opcode, followed
-     by a `ptrel' opcode, or to a `pta' or `ptb' opcode, depending on
+'pt'
+     This expands to a sequence of 'movi' and 'shori' opcode, followed
+     by a 'ptrel' opcode, or to a 'pta' or 'ptb' opcode, depending on
      the label referenced.
 
-
 
 File: as.info,  Node: Sparc-Dependent,  Next: TIC54X-Dependent,  Prev: SH64-Dependent,  Up: Machine Dependencies
 
@@ -19183,107 +18733,107 @@ at each version.  There are exceptions to this however.  For details on
 what instructions each variant supports, please see the chip's
 architecture reference manual.
 
-   By default, `as' assumes the core instruction set (SPARC v6), but
+   By default, 'as' assumes the core instruction set (SPARC v6), but
 "bumps" the architecture level as needed: it switches to successively
 higher architectures as it encounters instructions that only exist in
 the higher levels.
 
-   If not configured for SPARC v9 (`sparc64-*-*') GAS will not bump
-past sparclite by default, an option must be passed to enable the v9
+   If not configured for SPARC v9 ('sparc64-*-*') GAS will not bump past
+sparclite by default, an option must be passed to enable the v9
 instructions.
 
    GAS treats sparclite as being compatible with v8, unless an
 architecture is explicitly requested.  SPARC v9 is always incompatible
 with sparclite.
 
-`-Av6 | -Av7 | -Av8 | -Aleon | -Asparclet | -Asparclite'
-`-Av8plus | -Av8plusa | -Av8plusb | -Av8plusc | -Av8plusd | -Av8plusv | -Av8plusm'
-`-Av9 | -Av9a | -Av9b | -Av9c | -Av9d | -Av9e | -Av9v | -Av9m'
-`-Asparc | -Asparcvis | -Asparcvis2 | -Asparcfmaf | -Asparcima'
-`-Asparcvis3 | -Asparcvis3r | -Asparc5'
-     Use one of the `-A' options to select one of the SPARC
+'-Av6 | -Av7 | -Av8 | -Aleon | -Asparclet | -Asparclite'
+'-Av8plus | -Av8plusa | -Av8plusb | -Av8plusc | -Av8plusd | -Av8plusv | -Av8plusm'
+'-Av9 | -Av9a | -Av9b | -Av9c | -Av9d | -Av9e | -Av9v | -Av9m'
+'-Asparc | -Asparcvis | -Asparcvis2 | -Asparcfmaf | -Asparcima'
+'-Asparcvis3 | -Asparcvis3r | -Asparc5'
+     Use one of the '-A' options to select one of the SPARC
      architectures explicitly.  If you select an architecture
-     explicitly, `as' reports a fatal error if it encounters an
+     explicitly, 'as' reports a fatal error if it encounters an
      instruction or feature requiring an incompatible or higher level.
 
-     `-Av8plus', `-Av8plusa', `-Av8plusb', `-Av8plusc', `-Av8plusd',
-     and `-Av8plusv' select a 32 bit environment.
+     '-Av8plus', '-Av8plusa', '-Av8plusb', '-Av8plusc', '-Av8plusd', and
+     '-Av8plusv' select a 32 bit environment.
 
-     `-Av9', `-Av9a', `-Av9b', `-Av9c', `-Av9d', `-Av9e', `-Av9v' and
-     `-Av9m' select a 64 bit environment and are not available unless
+     '-Av9', '-Av9a', '-Av9b', '-Av9c', '-Av9d', '-Av9e', '-Av9v' and
+     '-Av9m' select a 64 bit environment and are not available unless
      GAS is explicitly configured with 64 bit environment support.
 
-     `-Av8plusa' and `-Av9a' enable the SPARC V9 instruction set with
+     '-Av8plusa' and '-Av9a' enable the SPARC V9 instruction set with
      UltraSPARC VIS 1.0 extensions.
 
-     `-Av8plusb' and `-Av9b' enable the UltraSPARC VIS 2.0 instructions,
-     as well as the instructions enabled by `-Av8plusa' and `-Av9a'.
+     '-Av8plusb' and '-Av9b' enable the UltraSPARC VIS 2.0 instructions,
+     as well as the instructions enabled by '-Av8plusa' and '-Av9a'.
 
-     `-Av8plusc' and `-Av9c' enable the UltraSPARC Niagara instructions,
-     as well as the instructions enabled by `-Av8plusb' and `-Av9b'.
+     '-Av8plusc' and '-Av9c' enable the UltraSPARC Niagara instructions,
+     as well as the instructions enabled by '-Av8plusb' and '-Av9b'.
 
-     `-Av8plusd' and `-Av9d' enable the floating point fused
+     '-Av8plusd' and '-Av9d' enable the floating point fused
      multiply-add, VIS 3.0, and HPC extension instructions, as well as
-     the instructions enabled by `-Av8plusc' and `-Av9c'.
+     the instructions enabled by '-Av8plusc' and '-Av9c'.
 
-     `-Av8pluse' and `-Av9e' enable the cryptographic instructions, as
-     well as the instructions enabled by `-Av8plusd' and `-Av9d'.
+     '-Av8pluse' and '-Av9e' enable the cryptographic instructions, as
+     well as the instructions enabled by '-Av8plusd' and '-Av9d'.
 
-     `-Av8plusv' and `-Av9v' enable floating point unfused
-     multiply-add, and integer multiply-add, as well as the instructions
-     enabled by `-Av8pluse' and `-Av9e'.
+     '-Av8plusv' and '-Av9v' enable floating point unfused multiply-add,
+     and integer multiply-add, as well as the instructions enabled by
+     '-Av8pluse' and '-Av9e'.
 
-     `-Av8plusm' and `-Av9m' enable the VIS 4.0, subtract extended,
+     '-Av8plusm' and '-Av9m' enable the VIS 4.0, subtract extended,
      xmpmul, xmontmul and xmontsqr instructions, as well as the
-     instructions enabled by `-Av8plusv' and `-Av9v'.
+     instructions enabled by '-Av8plusv' and '-Av9v'.
 
-     `-Asparc' specifies a v9 environment.  It is equivalent to `-Av9'
-     if the word size is 64-bit, and `-Av8plus' otherwise.
+     '-Asparc' specifies a v9 environment.  It is equivalent to '-Av9'
+     if the word size is 64-bit, and '-Av8plus' otherwise.
 
-     `-Asparcvis' specifies a v9a environment.  It is equivalent to
-     `-Av9a' if the word size is 64-bit, and `-Av8plusa' otherwise.
+     '-Asparcvis' specifies a v9a environment.  It is equivalent to
+     '-Av9a' if the word size is 64-bit, and '-Av8plusa' otherwise.
 
-     `-Asparcvis2' specifies a v9b environment.  It is equivalent to
-     `-Av9b' if the word size is 64-bit, and `-Av8plusb' otherwise.
+     '-Asparcvis2' specifies a v9b environment.  It is equivalent to
+     '-Av9b' if the word size is 64-bit, and '-Av8plusb' otherwise.
 
-     `-Asparcfmaf' specifies a v9b environment with the floating point
+     '-Asparcfmaf' specifies a v9b environment with the floating point
      fused multiply-add instructions enabled.
 
-     `-Asparcima' specifies a v9b environment with the integer
+     '-Asparcima' specifies a v9b environment with the integer
      multiply-add instructions enabled.
 
-     `-Asparcvis3' specifies a v9b environment with the VIS 3.0, HPC ,
+     '-Asparcvis3' specifies a v9b environment with the VIS 3.0, HPC ,
      and floating point fused multiply-add instructions enabled.
 
-     `-Asparcvis3r' specifies a v9b environment with the VIS 3.0, HPC,
+     '-Asparcvis3r' specifies a v9b environment with the VIS 3.0, HPC,
      and floating point unfused multiply-add instructions enabled.
 
-     `-Asparc5' is equivalent to `-Av9m'.
+     '-Asparc5' is equivalent to '-Av9m'.
 
-`-xarch=v8plus | -xarch=v8plusa | -xarch=v8plusb | -xarch=v8plusc'
-`-xarch=v8plusd | -xarch=v8plusv | -xarch=v8plusm | -xarch=v9 | -xarch=v9a'
-`-xarch=v9b | -xarch=v9c | -xarch=v9d | -xarch=v9e | -xarch=v9v | -xarch=v9m'
-`-xarch=sparc | -xarch=sparcvis | -xarch=sparcvis2'
-`-xarch=sparcfmaf | -xarch=sparcima | -xarch=sparcvis3'
-`-xarch=sparcvis3r | -xarch=sparc5'
+'-xarch=v8plus | -xarch=v8plusa | -xarch=v8plusb | -xarch=v8plusc'
+'-xarch=v8plusd | -xarch=v8plusv | -xarch=v8plusm | -xarch=v9 | -xarch=v9a'
+'-xarch=v9b | -xarch=v9c | -xarch=v9d | -xarch=v9e | -xarch=v9v | -xarch=v9m'
+'-xarch=sparc | -xarch=sparcvis | -xarch=sparcvis2'
+'-xarch=sparcfmaf | -xarch=sparcima | -xarch=sparcvis3'
+'-xarch=sparcvis3r | -xarch=sparc5'
      For compatibility with the SunOS v9 assembler.  These options are
      equivalent to -Av8plus, -Av8plusa, -Av8plusb, -Av8plusc, -Av8plusd,
      -Av8plusv, -Av8plusm, -Av9, -Av9a, -Av9b, -Av9c, -Av9d, -Av9e,
      -Av9v, -Av9m, -Asparc, -Asparcvis, -Asparcvis2, -Asparcfmaf,
      -Asparcima, -Asparcvis3, and -Asparcvis3r, respectively.
 
-`-bump'
+'-bump'
      Warn whenever it is necessary to switch to another level.  If an
      architecture level is explicitly requested, GAS will not issue
      warnings until that level is reached, and will then bump the level
      as required (except between incompatible levels).
 
-`-32 | -64'
-     Select the word size, either 32 bits or 64 bits.  These options
-     are only available with the ELF object file format, and require
-     that the necessary BFD support has been included.
+'-32 | -64'
+     Select the word size, either 32 bits or 64 bits.  These options are
+     only available with the ELF object file format, and require that
+     the necessary BFD support has been included.
 
-`--dcti-couples-detect'
+'--dcti-couples-detect'
      Warn if a DCTI (delayed control transfer instruction) couple is
      found when generating code for a variant of the SPARC architecture
      in which the execution of the couple is unpredictable, or very
@@ -19296,17 +18846,17 @@ File: as.info,  Node: Sparc-Aligned-Data,  Next: Sparc-Syntax,  Prev: Sparc-Opts
 -----------------------------
 
 SPARC GAS normally permits data to be misaligned.  For example, it
-permits the `.long' pseudo-op to be used on a byte boundary.  However,
+permits the '.long' pseudo-op to be used on a byte boundary.  However,
 the native SunOS assemblers issue an error when they see misaligned
 data.
 
-   You can use the `--enforce-aligned-data' option to make SPARC GAS
+   You can use the '--enforce-aligned-data' option to make SPARC GAS
 also issue an error about misaligned data, just as the SunOS assemblers
 do.
 
-   The `--enforce-aligned-data' option is not the default because gcc
+   The '--enforce-aligned-data' option is not the default because gcc
 issues misaligned data pseudo-ops when it initializes certain packed
-data structures (structures defined using the `packed' attribute).  You
+data structures (structures defined using the 'packed' attribute).  You
 may have to assemble with GAS in order to initialize packed data
 structures in your own code.
 
@@ -19334,15 +18884,15 @@ File: as.info,  Node: Sparc-Chars,  Next: Sparc-Regs,  Up: Sparc-Syntax
 9.43.3.1 Special Characters
 ...........................
 
-A `!' character appearing anywhere on a line indicates the start of a
+A '!' character appearing anywhere on a line indicates the start of a
 comment that extends to the end of that line.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line could also be a
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line could also be a
 logical line number directive (*note Comments::) or a preprocessor
 control command (*note Preprocessing::).
 
-   `;' can be used instead of a newline to separate statements.
+   ';' can be used instead of a newline to separate statements.
 
 
 File: as.info,  Node: Sparc-Regs,  Next: Sparc-Constants,  Prev: Sparc-Chars,  Up: Sparc-Syntax
@@ -19353,164 +18903,163 @@ File: as.info,  Node: Sparc-Regs,  Next: Sparc-Constants,  Prev: Sparc-Chars,  U
 The Sparc integer register file is broken down into global, outgoing,
 local, and incoming.
 
-   * The 8 global registers are referred to as `%gN'.
+   * The 8 global registers are referred to as '%gN'.
 
-   * The 8 outgoing registers are referred to as `%oN'.
+   * The 8 outgoing registers are referred to as '%oN'.
 
-   * The 8 local registers are referred to as `%lN'.
+   * The 8 local registers are referred to as '%lN'.
 
-   * The 8 incoming registers are referred to as `%iN'.
+   * The 8 incoming registers are referred to as '%iN'.
 
-   * The frame pointer register `%i6' can be referenced using the alias
-     `%fp'.
+   * The frame pointer register '%i6' can be referenced using the alias
+     '%fp'.
 
-   * The stack pointer register `%o6' can be referenced using the alias
-     `%sp'.
+   * The stack pointer register '%o6' can be referenced using the alias
+     '%sp'.
 
-   Floating point registers are simply referred to as `%fN'.  When
+   Floating point registers are simply referred to as '%fN'.  When
 assembling for pre-V9, only 32 floating point registers are available.
 For V9 and later there are 64, but there are restrictions when
-referencing the upper 32 registers.  They can only be accessed as
-double or quad, and thus only even or quad numbered accesses are
-allowed.  For example, `%f34' is a legal floating point register, but
-`%f35' is not.
+referencing the upper 32 registers.  They can only be accessed as double
+or quad, and thus only even or quad numbered accesses are allowed.  For
+example, '%f34' is a legal floating point register, but '%f35' is not.
 
    Floating point registers accessed as double can also be referred
-using the `%dN' notation, where N is even.  Similarly, floating point
-registers accessed as quad can be referred using the `%qN' notation,
-where N is a multiple of 4.  For example, `%f4' can be denoted as both
-`%d4' and `%q4'.  On the other hand, `%f2' can be denoted as `%d2' but
-not as `%q2'.
+using the '%dN' notation, where N is even.  Similarly, floating point
+registers accessed as quad can be referred using the '%qN' notation,
+where N is a multiple of 4.  For example, '%f4' can be denoted as both
+'%d4' and '%q4'.  On the other hand, '%f2' can be denoted as '%d2' but
+not as '%q2'.
 
    Certain V9 instructions allow access to ancillary state registers.
-Most simply they can be referred to as `%asrN' where N can be from 16
-to 31.  However, there are some aliases defined to reference ASR
-registers defined for various UltraSPARC processors:
+Most simply they can be referred to as '%asrN' where N can be from 16 to
+31.  However, there are some aliases defined to reference ASR registers
+defined for various UltraSPARC processors:
 
-   * The tick compare register is referred to as `%tick_cmpr'.
+   * The tick compare register is referred to as '%tick_cmpr'.
 
-   * The system tick register is referred to as `%stick'.  An alias,
-     `%sys_tick', exists but is deprecated and should not be used by
-     new software.
+   * The system tick register is referred to as '%stick'.  An alias,
+     '%sys_tick', exists but is deprecated and should not be used by new
+     software.
 
-   * The system tick compare register is referred to as `%stick_cmpr'.
-     An alias, `%sys_tick_cmpr', exists but is deprecated and should
-     not be used by new software.
+   * The system tick compare register is referred to as '%stick_cmpr'.
+     An alias, '%sys_tick_cmpr', exists but is deprecated and should not
+     be used by new software.
 
-   * The software interrupt register is referred to as `%softint'.
+   * The software interrupt register is referred to as '%softint'.
 
    * The set software interrupt register is referred to as
-     `%set_softint'.  The mnemonic `%softint_set' is provided as an
+     '%set_softint'.  The mnemonic '%softint_set' is provided as an
      alias.
 
    * The clear software interrupt register is referred to as
-     `%clear_softint'.  The mnemonic `%softint_clear' is provided as an
+     '%clear_softint'.  The mnemonic '%softint_clear' is provided as an
      alias.
 
    * The performance instrumentation counters register is referred to as
-     `%pic'.
+     '%pic'.
 
-   * The performance control register is referred to as `%pcr'.
+   * The performance control register is referred to as '%pcr'.
 
-   * The graphics status register is referred to as `%gsr'.
+   * The graphics status register is referred to as '%gsr'.
 
-   * The V9 dispatch control register is referred to as `%dcr'.
+   * The V9 dispatch control register is referred to as '%dcr'.
 
    Various V9 branch and conditional move instructions allow
 specification of which set of integer condition codes to test.  These
-are referred to as `%xcc' and `%icc'.
+are referred to as '%xcc' and '%icc'.
 
    Additionally, GAS supports the so-called "natural" condition codes;
-these are referred to as `%ncc' and reference to `%icc' if the word
-size is 32, `%xcc' if the word size is 64.
+these are referred to as '%ncc' and reference to '%icc' if the word size
+is 32, '%xcc' if the word size is 64.
 
    In V9, there are 4 sets of floating point condition codes which are
-referred to as `%fccN'.
+referred to as '%fccN'.
 
    Several special privileged and non-privileged registers exist:
 
-   * The V9 address space identifier register is referred to as `%asi'.
+   * The V9 address space identifier register is referred to as '%asi'.
 
-   * The V9 restorable windows register is referred to as `%canrestore'.
+   * The V9 restorable windows register is referred to as '%canrestore'.
 
-   * The V9 savable windows register is referred to as `%cansave'.
+   * The V9 savable windows register is referred to as '%cansave'.
 
-   * The V9 clean windows register is referred to as `%cleanwin'.
+   * The V9 clean windows register is referred to as '%cleanwin'.
 
-   * The V9 current window pointer register is referred to as `%cwp'.
+   * The V9 current window pointer register is referred to as '%cwp'.
 
-   * The floating-point queue register is referred to as `%fq'.
+   * The floating-point queue register is referred to as '%fq'.
 
-   * The V8 co-processor queue register is referred to as `%cq'.
+   * The V8 co-processor queue register is referred to as '%cq'.
 
-   * The floating point status register is referred to as `%fsr'.
+   * The floating point status register is referred to as '%fsr'.
 
-   * The other windows register is referred to as `%otherwin'.
+   * The other windows register is referred to as '%otherwin'.
 
-   * The V9 program counter register is referred to as `%pc'.
+   * The V9 program counter register is referred to as '%pc'.
 
-   * The V9 next program counter register is referred to as `%npc'.
+   * The V9 next program counter register is referred to as '%npc'.
 
-   * The V9 processor interrupt level register is referred to as `%pil'.
+   * The V9 processor interrupt level register is referred to as '%pil'.
 
-   * The V9 processor state register is referred to as `%pstate'.
+   * The V9 processor state register is referred to as '%pstate'.
 
-   * The trap base address register is referred to as `%tba'.
+   * The trap base address register is referred to as '%tba'.
 
-   * The V9 tick register is referred to as `%tick'.
+   * The V9 tick register is referred to as '%tick'.
 
-   * The V9 trap level is referred to as `%tl'.
+   * The V9 trap level is referred to as '%tl'.
 
-   * The V9 trap program counter is referred to as `%tpc'.
+   * The V9 trap program counter is referred to as '%tpc'.
 
-   * The V9 trap next program counter is referred to as `%tnpc'.
+   * The V9 trap next program counter is referred to as '%tnpc'.
 
-   * The V9 trap state is referred to as `%tstate'.
+   * The V9 trap state is referred to as '%tstate'.
 
-   * The V9 trap type is referred to as `%tt'.
+   * The V9 trap type is referred to as '%tt'.
 
-   * The V9 condition codes is referred to as `%ccr'.
+   * The V9 condition codes is referred to as '%ccr'.
 
-   * The V9 floating-point registers state is referred to as `%fprs'.
+   * The V9 floating-point registers state is referred to as '%fprs'.
 
-   * The V9 version register is referred to as `%ver'.
+   * The V9 version register is referred to as '%ver'.
 
-   * The V9 window state register is referred to as `%wstate'.
+   * The V9 window state register is referred to as '%wstate'.
 
-   * The Y register is referred to as `%y'.
+   * The Y register is referred to as '%y'.
 
-   * The V8 window invalid mask register is referred to as `%wim'.
+   * The V8 window invalid mask register is referred to as '%wim'.
 
-   * The V8 processor state register is referred to as `%psr'.
+   * The V8 processor state register is referred to as '%psr'.
 
-   * The V9 global register level register is referred to as `%gl'.
+   * The V9 global register level register is referred to as '%gl'.
 
    Several special register names exist for hypervisor mode code:
 
    * The hyperprivileged processor state register is referred to as
-     `%hpstate'.
+     '%hpstate'.
 
    * The hyperprivileged trap state register is referred to as
-     `%htstate'.
+     '%htstate'.
 
    * The hyperprivileged interrupt pending register is referred to as
-     `%hintp'.
+     '%hintp'.
 
    * The hyperprivileged trap base address register is referred to as
-     `%htba'.
+     '%htba'.
 
    * The hyperprivileged implementation version register is referred to
-     as `%hver'.
+     as '%hver'.
 
    * The hyperprivileged system tick offset register is referred to as
-     `%hstick_offset'.  Note that there is no `%hstick' register, the
-     normal `%stick' is used.
+     '%hstick_offset'.  Note that there is no '%hstick' register, the
+     normal '%stick' is used.
 
    * The hyperprivileged system tick enable register is referred to as
-     `%hstick_enable'.
+     '%hstick_enable'.
 
    * The hyperprivileged system tick compare register is referred to as
-     `%hstick_cmpr'.
+     '%hstick_cmpr'.
 
 
 File: as.info,  Node: Sparc-Constants,  Next: Sparc-Relocs,  Prev: Sparc-Regs,  Up: Sparc-Syntax
@@ -19519,93 +19068,92 @@ File: as.info,  Node: Sparc-Constants,  Next: Sparc-Relocs,  Prev: Sparc-Regs,
 ..................
 
 Several Sparc instructions take an immediate operand field for which
-mnemonic names exist.  Two such examples are `membar' and `prefetch'.
+mnemonic names exist.  Two such examples are 'membar' and 'prefetch'.
 Another example are the set of V9 memory access instruction that allow
 specification of an address space identifier.
 
-   The `membar' instruction specifies a memory barrier that is the
-defined by the operand which is a bitmask.  The supported mask
-mnemonics are:
+   The 'membar' instruction specifies a memory barrier that is the
+defined by the operand which is a bitmask.  The supported mask mnemonics
+are:
 
-   * `#Sync' requests that all operations (including nonmemory
-     reference operations) appearing prior to the `membar' must have
-     been performed and the effects of any exceptions become visible
-     before any instructions after the `membar' may be initiated.  This
-     corresponds to `membar' cmask field bit 2.
+   * '#Sync' requests that all operations (including nonmemory reference
+     operations) appearing prior to the 'membar' must have been
+     performed and the effects of any exceptions become visible before
+     any instructions after the 'membar' may be initiated.  This
+     corresponds to 'membar' cmask field bit 2.
 
-   * `#MemIssue' requests that all memory reference operations
-     appearing prior to the `membar' must have been performed before
-     any memory operation after the `membar' may be initiated.  This
-     corresponds to `membar' cmask field bit 1.
+   * '#MemIssue' requests that all memory reference operations appearing
+     prior to the 'membar' must have been performed before any memory
+     operation after the 'membar' may be initiated.  This corresponds to
+     'membar' cmask field bit 1.
 
-   * `#Lookaside' requests that a store appearing prior to the `membar'
-     must complete before any load following the `membar' referencing
-     the same address can be initiated.  This corresponds to `membar'
+   * '#Lookaside' requests that a store appearing prior to the 'membar'
+     must complete before any load following the 'membar' referencing
+     the same address can be initiated.  This corresponds to 'membar'
      cmask field bit 0.
 
-   * `#StoreStore' defines that the effects of all stores appearing
-     prior to the `membar' instruction must be visible to all
-     processors before the effect of any stores following the `membar'.
-     Equivalent to the deprecated `stbar' instruction.  This
-     corresponds to `membar' mmask field bit 3.
+   * '#StoreStore' defines that the effects of all stores appearing
+     prior to the 'membar' instruction must be visible to all processors
+     before the effect of any stores following the 'membar'.  Equivalent
+     to the deprecated 'stbar' instruction.  This corresponds to
+     'membar' mmask field bit 3.
 
-   * `#LoadStore' defines all loads appearing prior to the `membar'
+   * '#LoadStore' defines all loads appearing prior to the 'membar'
      instruction must have been performed before the effect of any
-     stores following the `membar' is visible to any other processor.
-     This corresponds to `membar' mmask field bit 2.
+     stores following the 'membar' is visible to any other processor.
+     This corresponds to 'membar' mmask field bit 2.
 
-   * `#StoreLoad' defines that the effects of all stores appearing
-     prior to the `membar' instruction must be visible to all
-     processors before loads following the `membar' may be performed.
-     This corresponds to `membar' mmask field bit 1.
+   * '#StoreLoad' defines that the effects of all stores appearing prior
+     to the 'membar' instruction must be visible to all processors
+     before loads following the 'membar' may be performed.  This
+     corresponds to 'membar' mmask field bit 1.
 
-   * `#LoadLoad' defines that all loads appearing prior to the `membar'
-     instruction must have been performed before any loads following
-     the `membar' may be performed.  This corresponds to `membar' mmask
+   * '#LoadLoad' defines that all loads appearing prior to the 'membar'
+     instruction must have been performed before any loads following the
+     'membar' may be performed.  This corresponds to 'membar' mmask
      field bit 0.
 
-
    These values can be ored together, for example:
 
      membar #Sync
      membar #StoreLoad | #LoadLoad
      membar #StoreLoad | #StoreStore
 
-   The `prefetch' and `prefetcha' instructions take a prefetch function
+   The 'prefetch' and 'prefetcha' instructions take a prefetch function
 code.  The following prefetch function code constant mnemonics are
 available:
 
-   * `#n_reads' requests a prefetch for several reads, and corresponds
+   * '#n_reads' requests a prefetch for several reads, and corresponds
      to a prefetch function code of 0.
 
-     `#one_read' requests a prefetch for one read, and corresponds to a
+     '#one_read' requests a prefetch for one read, and corresponds to a
      prefetch function code of 1.
 
-     `#n_writes' requests a prefetch for several writes (and possibly
+     '#n_writes' requests a prefetch for several writes (and possibly
      reads), and corresponds to a prefetch function code of 2.
 
-     `#one_write' requests a prefetch for one write, and corresponds to
+     '#one_write' requests a prefetch for one write, and corresponds to
      a prefetch function code of 3.
 
-     `#page' requests a prefetch page, and corresponds to a prefetch
+     '#page' requests a prefetch page, and corresponds to a prefetch
      function code of 4.
 
-     `#invalidate' requests a prefetch invalidate, and corresponds to a
+     '#invalidate' requests a prefetch invalidate, and corresponds to a
      prefetch function code of 16.
 
-     `#unified' requests a prefetch to the nearest unified cache, and
+     '#unified' requests a prefetch to the nearest unified cache, and
      corresponds to a prefetch function code of 17.
 
-     `#n_reads_strong' requests a strong prefetch for several reads,
-     and corresponds to a prefetch function code of 20.
+     '#n_reads_strong' requests a strong prefetch for several reads, and
+     corresponds to a prefetch function code of 20.
 
-     `#one_read_strong' requests a strong prefetch for one read, and
+     '#one_read_strong' requests a strong prefetch for one read, and
      corresponds to a prefetch function code of 21.
 
-     `#n_writes_strong' requests a strong prefetch for several writes,
+     '#n_writes_strong' requests a strong prefetch for several writes,
      and corresponds to a prefetch function code of 22.
 
-     `#one_write_strong' requests a strong prefetch for one write, and
+     '#one_write_strong' requests a strong prefetch for one write, and
      corresponds to a prefetch function code of 23.
 
      Onle one prefetch code may be specified.  Here are some examples:
@@ -19620,11 +19168,10 @@ available:
      function code, it will treat the prefetch instruction as a nop.
 
      For instructions that accept an immediate address space identifier,
-     `as' provides many mnemonics corresponding to V9 defined as well
-     as UltraSPARC and Niagara extended values.  For example, `#ASI_P'
-     and `#ASI_BLK_INIT_QUAD_LDD_AIUS'.  See the V9 and processor
-     specific manuals for details.
-
+     'as' provides many mnemonics corresponding to V9 defined as well as
+     UltraSPARC and Niagara extended values.  For example, '#ASI_P' and
+     '#ASI_BLK_INIT_QUAD_LDD_AIUS'.  See the V9 and processor specific
+     manuals for details.
 
 
 File: as.info,  Node: Sparc-Relocs,  Next: Sparc-Size-Translations,  Prev: Sparc-Constants,  Up: Sparc-Syntax
@@ -19635,9 +19182,9 @@ File: as.info,  Node: Sparc-Relocs,  Next: Sparc-Size-Translations,  Prev: Sparc
 ELF relocations are available as defined in the 32-bit and 64-bit Sparc
 ELF specifications.
 
-   `R_SPARC_HI22' is obtained using `%hi' and `R_SPARC_LO10' is
-obtained using `%lo'.  Likewise `R_SPARC_HIX22' is obtained from `%hix'
-and `R_SPARC_LOX10' is obtained using `%lox'.  For example:
+   'R_SPARC_HI22' is obtained using '%hi' and 'R_SPARC_LO10' is obtained
+using '%lo'.  Likewise 'R_SPARC_HIX22' is obtained from '%hix' and
+'R_SPARC_LOX10' is obtained using '%lox'.  For example:
 
      sethi %hi(symbol), %g1
      or    %g1, %lo(symbol), %g1
@@ -19650,94 +19197,75 @@ and `R_SPARC_LOX10' is obtained using `%lox'.  For example:
 
    V9 code model relocations can be requested as follows:
 
-   * `R_SPARC_HH22' is requested using `%hh'.  It can also be generated
-     using `%uhi'.
-
-   * `R_SPARC_HM10' is requested using `%hm'.  It can also be generated
-     using `%ulo'.
-
-   * `R_SPARC_LM22' is requested using `%lm'.
-
-   * `R_SPARC_H44' is requested using `%h44'.
+   * 'R_SPARC_HH22' is requested using '%hh'.  It can also be generated
+     using '%uhi'.
+   * 'R_SPARC_HM10' is requested using '%hm'.  It can also be generated
+     using '%ulo'.
+   * 'R_SPARC_LM22' is requested using '%lm'.
 
-   * `R_SPARC_M44' is requested using `%m44'.
+   * 'R_SPARC_H44' is requested using '%h44'.
+   * 'R_SPARC_M44' is requested using '%m44'.
+   * 'R_SPARC_L44' is requested using '%l44' or '%l34'.
+   * 'R_SPARC_H34' is requested using '%h34'.
 
-   * `R_SPARC_L44' is requested using `%l44' or `%l34'.
+   The '%l34' generates a 'R_SPARC_L44' relocation because it calculates
+the necessary value, and therefore no explicit 'R_SPARC_L34' relocation
+needed to be created for this purpose.
 
-   * `R_SPARC_H34' is requested using `%h34'.
-
-   The `%l34' generates a `R_SPARC_L44' relocation because it
-calculates the necessary value, and therefore no explicit `R_SPARC_L34'
-relocation needed to be created for this purpose.
-
-   The `%h34' and `%l34' relocations are used for the abs34 code model.
+   The '%h34' and '%l34' relocations are used for the abs34 code model.
 Here is an example abs34 address generation sequence:
 
      sethi %h34(symbol), %g1
      sllx  %g1, 2, %g1
      or    %g1, %l34(symbol), %g1
 
-   The PC relative relocation `R_SPARC_PC22' can be obtained by
-enclosing an operand inside of `%pc22'.  Likewise, the `R_SPARC_PC10'
-relocation can be obtained using `%pc10'.  These are mostly used when
-assembling PIC code.  For example, the standard PIC sequence on Sparc
-to get the base of the global offset table, PC relative, into a
-register, can be performed as:
+   The PC relative relocation 'R_SPARC_PC22' can be obtained by
+enclosing an operand inside of '%pc22'.  Likewise, the 'R_SPARC_PC10'
+relocation can be obtained using '%pc10'.  These are mostly used when
+assembling PIC code.  For example, the standard PIC sequence on Sparc to
+get the base of the global offset table, PC relative, into a register,
+can be performed as:
 
      sethi %pc22(_GLOBAL_OFFSET_TABLE_-4), %l7
      add   %l7, %pc10(_GLOBAL_OFFSET_TABLE_+4), %l7
 
    Several relocations exist to allow the link editor to potentially
-optimize GOT data references.  The `R_SPARC_GOTDATA_OP_HIX22'
-relocation can obtained by enclosing an operand inside of
-`%gdop_hix22'.  The `R_SPARC_GOTDATA_OP_LOX10' relocation can obtained
-by enclosing an operand inside of `%gdop_lox10'.  Likewise,
-`R_SPARC_GOTDATA_OP' can be obtained by enclosing an operand inside of
-`%gdop'.  For example, assuming the GOT base is in register `%l7':
+optimize GOT data references.  The 'R_SPARC_GOTDATA_OP_HIX22' relocation
+can obtained by enclosing an operand inside of '%gdop_hix22'.  The
+'R_SPARC_GOTDATA_OP_LOX10' relocation can obtained by enclosing an
+operand inside of '%gdop_lox10'.  Likewise, 'R_SPARC_GOTDATA_OP' can be
+obtained by enclosing an operand inside of '%gdop'.  For example,
+assuming the GOT base is in register '%l7':
 
      sethi %gdop_hix22(symbol), %l1
      xor   %l1, %gdop_lox10(symbol), %l1
-     ld    [%l7 + %l1], %l2, %gdop(symbol)
-
-   There are many relocations that can be requested for access to
-thread local storage variables.  All of the Sparc TLS mnemonics are
-supported:
-
-   * `R_SPARC_TLS_GD_HI22' is requested using `%tgd_hi22'.
-
-   * `R_SPARC_TLS_GD_LO10' is requested using `%tgd_lo10'.
-
-   * `R_SPARC_TLS_GD_ADD' is requested using `%tgd_add'.
-
-   * `R_SPARC_TLS_GD_CALL' is requested using `%tgd_call'.
-
-   * `R_SPARC_TLS_LDM_HI22' is requested using `%tldm_hi22'.
-
-   * `R_SPARC_TLS_LDM_LO10' is requested using `%tldm_lo10'.
-
-   * `R_SPARC_TLS_LDM_ADD' is requested using `%tldm_add'.
-
-   * `R_SPARC_TLS_LDM_CALL' is requested using `%tldm_call'.
-
-   * `R_SPARC_TLS_LDO_HIX22' is requested using `%tldo_hix22'.
-
-   * `R_SPARC_TLS_LDO_LOX10' is requested using `%tldo_lox10'.
-
-   * `R_SPARC_TLS_LDO_ADD' is requested using `%tldo_add'.
-
-   * `R_SPARC_TLS_IE_HI22' is requested using `%tie_hi22'.
+     ld    [%l7 + %l1], %l2, %gdop(symbol)
 
-   * `R_SPARC_TLS_IE_LO10' is requested using `%tie_lo10'.
+   There are many relocations that can be requested for access to thread
+local storage variables.  All of the Sparc TLS mnemonics are supported:
 
-   * `R_SPARC_TLS_IE_LD' is requested using `%tie_ld'.
+   * 'R_SPARC_TLS_GD_HI22' is requested using '%tgd_hi22'.
+   * 'R_SPARC_TLS_GD_LO10' is requested using '%tgd_lo10'.
+   * 'R_SPARC_TLS_GD_ADD' is requested using '%tgd_add'.
+   * 'R_SPARC_TLS_GD_CALL' is requested using '%tgd_call'.
 
-   * `R_SPARC_TLS_IE_LDX' is requested using `%tie_ldx'.
+   * 'R_SPARC_TLS_LDM_HI22' is requested using '%tldm_hi22'.
+   * 'R_SPARC_TLS_LDM_LO10' is requested using '%tldm_lo10'.
+   * 'R_SPARC_TLS_LDM_ADD' is requested using '%tldm_add'.
+   * 'R_SPARC_TLS_LDM_CALL' is requested using '%tldm_call'.
 
-   * `R_SPARC_TLS_IE_ADD' is requested using `%tie_add'.
+   * 'R_SPARC_TLS_LDO_HIX22' is requested using '%tldo_hix22'.
+   * 'R_SPARC_TLS_LDO_LOX10' is requested using '%tldo_lox10'.
+   * 'R_SPARC_TLS_LDO_ADD' is requested using '%tldo_add'.
 
-   * `R_SPARC_TLS_LE_HIX22' is requested using `%tle_hix22'.
+   * 'R_SPARC_TLS_IE_HI22' is requested using '%tie_hi22'.
+   * 'R_SPARC_TLS_IE_LO10' is requested using '%tie_lo10'.
+   * 'R_SPARC_TLS_IE_LD' is requested using '%tie_ld'.
+   * 'R_SPARC_TLS_IE_LDX' is requested using '%tie_ldx'.
+   * 'R_SPARC_TLS_IE_ADD' is requested using '%tie_add'.
 
-   * `R_SPARC_TLS_LE_LOX10' is requested using `%tle_lox10'.
+   * 'R_SPARC_TLS_LE_HIX22' is requested using '%tle_hix22'.
+   * 'R_SPARC_TLS_LE_LOX10' is requested using '%tle_lox10'.
 
    Here are some example TLS model sequences.
 
@@ -19781,7 +19309,7 @@ supported:
 
    When assembling for 64-bit, and a secondary constant addend is
 specified in an address expression that would normally generate an
-`R_SPARC_LO10' relocation, the assembler will emit an `R_SPARC_OLO10'
+'R_SPARC_LO10' relocation, the assembler will emit an 'R_SPARC_OLO10'
 instead.
 
 
@@ -19791,14 +19319,14 @@ File: as.info,  Node: Sparc-Size-Translations,  Prev: Sparc-Relocs,  Up: Sparc-S
 ..........................
 
 Often it is desirable to write code in an operand size agnostic manner.
-`as' provides support for this via operand size opcode translations.
+'as' provides support for this via operand size opcode translations.
 Translations are supported for loads, stores, shifts, compare-and-swap
-atomics, and the `clr' synthetic instruction.
+atomics, and the 'clr' synthetic instruction.
 
-   If generating 32-bit code, `as' will generate the 32-bit opcode.
+   If generating 32-bit code, 'as' will generate the 32-bit opcode.
 Whereas if 64-bit code is being generated, the 64-bit opcode will be
-emitted.  For example `ldn' will be transformed into `ld' for 32-bit
-code and `ldx' for 64-bit code.
+emitted.  For example 'ldn' will be transformed into 'ld' for 32-bit
+code and 'ldx' for 64-bit code.
 
    Here is an example meant to demonstrate all the supported opcode
 translations:
@@ -19814,7 +19342,7 @@ translations:
      casna [%o0] %asi, %o1, %o2
      clrn  %g1
 
-   In 32-bit mode `as' will emit:
+   In 32-bit mode 'as' will emit:
 
      ld   [%o0], %o1
      lda  [%o0] %asi, %o2
@@ -19827,7 +19355,7 @@ translations:
      casa [%o0] %asi, %o1, %o2
      clr  %g1
 
-   And in 64-bit mode `as' will emit:
+   And in 64-bit mode 'as' will emit:
 
      ldx   [%o0], %o1
      ldxa  [%o0] %asi, %o2
@@ -19840,8 +19368,8 @@ translations:
      casxa [%o0] %asi, %o1, %o2
      clrx  %g1
 
-   Finally, the `.nword' translating directive is supported as well.
-It is documented in the section on Sparc machine directives.
+   Finally, the '.nword' translating directive is supported as well.  It
+is documented in the section on Sparc machine directives.
 
 
 File: as.info,  Node: Sparc-Float,  Next: Sparc-Directives,  Prev: Sparc-Syntax,  Up: Sparc-Dependent
@@ -19857,57 +19385,57 @@ File: as.info,  Node: Sparc-Directives,  Prev: Sparc-Float,  Up: Sparc-Dependent
 9.43.5 Sparc Machine Directives
 -------------------------------
 
-The Sparc version of `as' supports the following additional machine
+The Sparc version of 'as' supports the following additional machine
 directives:
 
-`.align'
+'.align'
      This must be followed by the desired alignment in bytes.
 
-`.common'
+'.common'
      This must be followed by a symbol name, a positive number, and
-     `"bss"'.  This behaves somewhat like `.comm', but the syntax is
+     '"bss"'.  This behaves somewhat like '.comm', but the syntax is
      different.
 
-`.half'
-     This is functionally identical to `.short'.
+'.half'
+     This is functionally identical to '.short'.
 
-`.nword'
-     On the Sparc, the `.nword' directive produces native word sized
-     value, ie. if assembling with -32 it is equivalent to `.word', if
-     assembling with -64 it is equivalent to `.xword'.
+'.nword'
+     On the Sparc, the '.nword' directive produces native word sized
+     value, ie.  if assembling with -32 it is equivalent to '.word', if
+     assembling with -64 it is equivalent to '.xword'.
 
-`.proc'
+'.proc'
      This directive is ignored.  Any text following it on the same line
      is also ignored.
 
-`.register'
+'.register'
      This directive declares use of a global application or system
      register.  It must be followed by a register name %g2, %g3, %g6 or
      %g7, comma and the symbol name for that register.  If symbol name
-     is `#scratch', it is a scratch register, if it is `#ignore', it
+     is '#scratch', it is a scratch register, if it is '#ignore', it
      just suppresses any errors about using undeclared global register,
      but does not emit any information about it into the object file.
-     This can be useful e.g. if you save the register before use and
+     This can be useful e.g.  if you save the register before use and
      restore it after.
 
-`.reserve'
+'.reserve'
      This must be followed by a symbol name, a positive number, and
-     `"bss"'.  This behaves somewhat like `.lcomm', but the syntax is
+     '"bss"'.  This behaves somewhat like '.lcomm', but the syntax is
      different.
 
-`.seg'
-     This must be followed by `"text"', `"data"', or `"data1"'.  It
-     behaves like `.text', `.data', or `.data 1'.
+'.seg'
+     This must be followed by '"text"', '"data"', or '"data1"'.  It
+     behaves like '.text', '.data', or '.data 1'.
 
-`.skip'
-     This is functionally identical to the `.space' directive.
+'.skip'
+     This is functionally identical to the '.space' directive.
 
-`.word'
-     On the Sparc, the `.word' directive produces 32 bit values,
-     instead of the 16 bit values it produces on many other machines.
+'.word'
+     On the Sparc, the '.word' directive produces 32 bit values, instead
+     of the 16 bit values it produces on many other machines.
 
-`.xword'
-     On the Sparc V9 processor, the `.xword' directive produces 64 bit
+'.xword'
+     On the Sparc V9 processor, the '.xword' directive produces 64 bit
      values.
 
 
@@ -19937,24 +19465,24 @@ File: as.info,  Node: TIC54X-Opts,  Next: TIC54X-Block,  Up: TIC54X-Dependent
 9.44.1 Options
 --------------
 
-The TMS320C54X version of `as' has a few machine-dependent options.
+The TMS320C54X version of 'as' has a few machine-dependent options.
 
-   You can use the `-mfar-mode' option to enable extended addressing
+   You can use the '-mfar-mode' option to enable extended addressing
 mode.  All addresses will be assumed to be > 16 bits, and the
-appropriate relocation types will be used.  This option is equivalent
-to using the `.far_mode' directive in the assembly code.  If you do not
-use the `-mfar-mode' option, all references will be assumed to be 16
-bits.  This option may be abbreviated to `-mf'.
-
-   You can use the `-mcpu' option to specify a particular CPU.  This
-option is equivalent to using the `.version' directive in the assembly
-code.  For recognized CPU codes, see *Note `.version':
-TIC54X-Directives.  The default CPU version is `542'.
-
-   You can use the `-merrors-to-file' option to redirect error output
-to a file (this provided for those deficient environments which don't
+appropriate relocation types will be used.  This option is equivalent to
+using the '.far_mode' directive in the assembly code.  If you do not use
+the '-mfar-mode' option, all references will be assumed to be 16 bits.
+This option may be abbreviated to '-mf'.
+
+   You can use the '-mcpu' option to specify a particular CPU. This
+option is equivalent to using the '.version' directive in the assembly
+code.  For recognized CPU codes, see *Note '.version':
+TIC54X-Directives.  The default CPU version is '542'.
+
+   You can use the '-merrors-to-file' option to redirect error output to
+a file (this provided for those deficient environments which don't
 provide adequate output redirection).  This option may be abbreviated to
-`-me'.
+'-me'.
 
 
 File: as.info,  Node: TIC54X-Block,  Next: TIC54X-Env,  Prev: TIC54X-Opts,  Up: TIC54X-Dependent
@@ -19973,9 +19501,9 @@ File: as.info,  Node: TIC54X-Env,  Next: TIC54X-Constants,  Prev: TIC54X-Block,
 9.44.3 Environment Settings
 ---------------------------
 
-`C54XDSP_DIR' and `A_DIR' are semicolon-separated paths which are added
+'C54XDSP_DIR' and 'A_DIR' are semicolon-separated paths which are added
 to the list of directories normally searched for source and include
-files.  `C54XDSP_DIR' will override `A_DIR'.
+files.  'C54XDSP_DIR' will override 'A_DIR'.
 
 
 File: as.info,  Node: TIC54X-Constants,  Next: TIC54X-Subsyms,  Prev: TIC54X-Env,  Up: TIC54X-Dependent
@@ -19983,12 +19511,13 @@ File: as.info,  Node: TIC54X-Constants,  Next: TIC54X-Subsyms,  Prev: TIC54X-Env
 9.44.4 Constants Syntax
 -----------------------
 
-The TIC54X version of `as' allows the following additional constant
+The TIC54X version of 'as' allows the following additional constant
 formats, using a suffix to indicate the radix:
 
-     Binary                  `000000B, 011000b'
-     Octal                   `10Q, 224q'
-     Hexadecimal             `45h, 0FH'
+     Binary                  000000B, 011000b
+     Octal                   10Q, 224q
+     Hexadecimal             45h, 0FH
+
 
 
 File: as.info,  Node: TIC54X-Subsyms,  Next: TIC54X-Locals,  Prev: TIC54X-Constants,  Up: TIC54X-Dependent
@@ -19998,18 +19527,18 @@ File: as.info,  Node: TIC54X-Subsyms,  Next: TIC54X-Locals,  Prev: TIC54X-Consta
 
 A subset of allowable symbols (which we'll call subsyms) may be assigned
 arbitrary string values.  This is roughly equivalent to C preprocessor
-#define macros.  When `as' encounters one of these symbols, the symbol
+#define macros.  When 'as' encounters one of these symbols, the symbol
 is replaced in the input stream by its string value.  Subsym names
 *must* begin with a letter.
 
-   Subsyms may be defined using the `.asg' and `.eval' directives
-(*Note `.asg': TIC54X-Directives, *Note `.eval': TIC54X-Directives.
+   Subsyms may be defined using the '.asg' and '.eval' directives (*Note
+'.asg': TIC54X-Directives, *Note '.eval': TIC54X-Directives.
 
-   Expansion is recursive until a previously encountered symbol is
-seen, at which point substitution stops.
+   Expansion is recursive until a previously encountered symbol is seen,
+at which point substitution stops.
 
-   In this example, x is replaced with SYM2; SYM2 is replaced with
-SYM1, and SYM1 is replaced with x.  At this point, x has already been
+   In this example, x is replaced with SYM2; SYM2 is replaced with SYM1,
+and SYM1 is replaced with x.  At this point, x has already been
 encountered and the substitution stops.
 
       .asg   "x",SYM1
@@ -20018,10 +19547,10 @@ encountered and the substitution stops.
       add    x,a             ; final code assembled is "add  x, a"
 
    Macro parameters are converted to subsyms; a side effect of this is
-the normal `as' '\ARG' dereferencing syntax is unnecessary.  Subsyms
-defined within a macro will have global scope, unless the `.var'
-directive is used to identify the subsym as a local macro variable
-*note `.var': TIC54X-Directives.
+the normal 'as' '\ARG' dereferencing syntax is unnecessary.  Subsyms
+defined within a macro will have global scope, unless the '.var'
+directive is used to identify the subsym as a local macro variable *note
+'.var': TIC54X-Directives.
 
    Substitution may be forced in situations where replacement might be
 ambiguous by placing colons on either side of the subsym.  The following
@@ -20037,11 +19566,10 @@ code:
    Smaller parts of the string assigned to a subsym may be accessed with
 the following syntax:
 
-``:SYMBOL(CHAR_INDEX):''
+':SYMBOL(CHAR_INDEX):'
      Evaluates to a single-character string, the character at
      CHAR_INDEX.
-
-``:SYMBOL(START,LENGTH):''
+':SYMBOL(START,LENGTH):'
      Evaluates to a substring of SYMBOL beginning at START with length
      LENGTH.
 
@@ -20054,7 +19582,6 @@ File: as.info,  Node: TIC54X-Locals,  Next: TIC54X-Builtins,  Prev: TIC54X-Subsy
 Local labels may be defined in two ways:
 
    * $N, where N is a decimal number between 0 and 9
-
    * LABEL?, where LABEL is any legal symbol name.
 
    Local labels thus defined may be redefined or automatically
@@ -20062,12 +19589,9 @@ generated.  The scope of a local label is based on when it may be
 undefined or reset.  This happens when one of the following situations
 is encountered:
 
-   * .newblock directive *note `.newblock': TIC54X-Directives.
-
+   * .newblock directive *note '.newblock': TIC54X-Directives.
    * The current section is changed (.sect, .text, or .data)
-
    * Entering or leaving an included file
-
    * The macro scope where the label was defined is exited
 
 
@@ -20077,105 +19601,104 @@ File: as.info,  Node: TIC54X-Builtins,  Next: TIC54X-Ext,  Prev: TIC54X-Locals,
 --------------------
 
 The following built-in functions may be used to generate a
-floating-point value.  All return a floating-point value except `$cvi',
-`$int', and `$sgn', which return an integer value.
+floating-point value.  All return a floating-point value except '$cvi',
+'$int', and '$sgn', which return an integer value.
 
-``$acos(EXPR)''
+'$acos(EXPR)'
      Returns the floating point arccosine of EXPR.
 
-``$asin(EXPR)''
+'$asin(EXPR)'
      Returns the floating point arcsine of EXPR.
 
-``$atan(EXPR)''
+'$atan(EXPR)'
      Returns the floating point arctangent of EXPR.
 
-``$atan2(EXPR1,EXPR2)''
+'$atan2(EXPR1,EXPR2)'
      Returns the floating point arctangent of EXPR1 / EXPR2.
 
-``$ceil(EXPR)''
+'$ceil(EXPR)'
      Returns the smallest integer not less than EXPR as floating point.
 
-``$cosh(EXPR)''
+'$cosh(EXPR)'
      Returns the floating point hyperbolic cosine of EXPR.
 
-``$cos(EXPR)''
+'$cos(EXPR)'
      Returns the floating point cosine of EXPR.
 
-``$cvf(EXPR)''
+'$cvf(EXPR)'
      Returns the integer value EXPR converted to floating-point.
 
-``$cvi(EXPR)''
+'$cvi(EXPR)'
      Returns the floating point value EXPR converted to integer.
 
-``$exp(EXPR)''
+'$exp(EXPR)'
      Returns the floating point value e ^ EXPR.
 
-``$fabs(EXPR)''
+'$fabs(EXPR)'
      Returns the floating point absolute value of EXPR.
 
-``$floor(EXPR)''
+'$floor(EXPR)'
      Returns the largest integer that is not greater than EXPR as
      floating point.
 
-``$fmod(EXPR1,EXPR2)''
+'$fmod(EXPR1,EXPR2)'
      Returns the floating point remainder of EXPR1 / EXPR2.
 
-``$int(EXPR)''
+'$int(EXPR)'
      Returns 1 if EXPR evaluates to an integer, zero otherwise.
 
-``$ldexp(EXPR1,EXPR2)''
+'$ldexp(EXPR1,EXPR2)'
      Returns the floating point value EXPR1 * 2 ^ EXPR2.
 
-``$log10(EXPR)''
+'$log10(EXPR)'
      Returns the base 10 logarithm of EXPR.
 
-``$log(EXPR)''
+'$log(EXPR)'
      Returns the natural logarithm of EXPR.
 
-``$max(EXPR1,EXPR2)''
+'$max(EXPR1,EXPR2)'
      Returns the floating point maximum of EXPR1 and EXPR2.
 
-``$min(EXPR1,EXPR2)''
+'$min(EXPR1,EXPR2)'
      Returns the floating point minimum of EXPR1 and EXPR2.
 
-``$pow(EXPR1,EXPR2)''
+'$pow(EXPR1,EXPR2)'
      Returns the floating point value EXPR1 ^ EXPR2.
 
-``$round(EXPR)''
+'$round(EXPR)'
      Returns the nearest integer to EXPR as a floating point number.
 
-``$sgn(EXPR)''
+'$sgn(EXPR)'
      Returns -1, 0, or 1 based on the sign of EXPR.
 
-``$sin(EXPR)''
+'$sin(EXPR)'
      Returns the floating point sine of EXPR.
 
-``$sinh(EXPR)''
+'$sinh(EXPR)'
      Returns the floating point hyperbolic sine of EXPR.
 
-``$sqrt(EXPR)''
+'$sqrt(EXPR)'
      Returns the floating point square root of EXPR.
 
-``$tan(EXPR)''
+'$tan(EXPR)'
      Returns the floating point tangent of EXPR.
 
-``$tanh(EXPR)''
+'$tanh(EXPR)'
      Returns the floating point hyperbolic tangent of EXPR.
 
-``$trunc(EXPR)''
+'$trunc(EXPR)'
      Returns the integer value of EXPR truncated towards zero as
      floating point.
 
-
 
 File: as.info,  Node: TIC54X-Ext,  Next: TIC54X-Directives,  Prev: TIC54X-Builtins,  Up: TIC54X-Dependent
 
 9.44.8 Extended Addressing
 --------------------------
 
-The `LDX' pseudo-op is provided for loading the extended addressing bits
-of a label or address.  For example, if an address `_label' resides in
-extended program memory, the value of `_label' may be loaded as follows:
+The 'LDX' pseudo-op is provided for loading the extended addressing bits
+of a label or address.  For example, if an address '_label' resides in
+extended program memory, the value of '_label' may be loaded as follows:
       ldx     #_label,16,a    ; loads extended bits of _label
       or      #_label,a       ; loads lower 16 bits of _label
       bacc    a               ; full address is in accumulator A
@@ -20186,224 +19709,222 @@ File: as.info,  Node: TIC54X-Directives,  Next: TIC54X-Macros,  Prev: TIC54X-Ext
 9.44.9 Directives
 -----------------
 
-`.align [SIZE]'
-`.even'
+'.align [SIZE]'
+'.even'
      Align the section program counter on the next boundary, based on
-     SIZE.  SIZE may be any power of 2.  `.even' is equivalent to
-     `.align' with a SIZE of 2.
-    `1'
+     SIZE.  SIZE may be any power of 2.  '.even' is equivalent to
+     '.align' with a SIZE of 2.
+     '1'
           Align SPC to word boundary
-
-    `2'
+     '2'
           Align SPC to longword boundary (same as .even)
-
-    `128'
+     '128'
           Align SPC to page boundary
 
-`.asg STRING, NAME'
+'.asg STRING, NAME'
      Assign NAME the string STRING.  String replacement is performed on
      STRING before assignment.
 
-`.eval STRING, NAME'
+'.eval STRING, NAME'
      Evaluate the contents of string STRING and assign the result as a
      string to the subsym NAME.  String replacement is performed on
      STRING before assignment.
 
-`.bss SYMBOL, SIZE [, [BLOCKING_FLAG] [,ALIGNMENT_FLAG]]'
+'.bss SYMBOL, SIZE [, [BLOCKING_FLAG] [,ALIGNMENT_FLAG]]'
      Reserve space for SYMBOL in the .bss section.  SIZE is in words.
      If present, BLOCKING_FLAG indicates the allocated space should be
      aligned on a page boundary if it would otherwise cross a page
      boundary.  If present, ALIGNMENT_FLAG causes the assembler to
      allocate SIZE on a long word boundary.
 
-`.byte VALUE [,...,VALUE_N]'
-`.ubyte VALUE [,...,VALUE_N]'
-`.char VALUE [,...,VALUE_N]'
-`.uchar VALUE [,...,VALUE_N]'
+'.byte VALUE [,...,VALUE_N]'
+'.ubyte VALUE [,...,VALUE_N]'
+'.char VALUE [,...,VALUE_N]'
+'.uchar VALUE [,...,VALUE_N]'
      Place one or more bytes into consecutive words of the current
-     section.  The upper 8 bits of each word is zero-filled.  If a
-     label is used, it points to the word allocated for the first byte
+     section.  The upper 8 bits of each word is zero-filled.  If a label
+     is used, it points to the word allocated for the first byte
      encountered.
 
-`.clink ["SECTION_NAME"]'
-     Set STYP_CLINK flag for this section, which indicates to the
-     linker that if no symbols from this section are referenced, the
-     section should not be included in the link.  If SECTION_NAME is
-     omitted, the current section is used.
+'.clink ["SECTION_NAME"]'
+     Set STYP_CLINK flag for this section, which indicates to the linker
+     that if no symbols from this section are referenced, the section
+     should not be included in the link.  If SECTION_NAME is omitted,
+     the current section is used.
 
-`.c_mode'
+'.c_mode'
      TBD.
 
-`.copy "FILENAME" | FILENAME'
-`.include "FILENAME" | FILENAME'
+'.copy "FILENAME" | FILENAME'
+'.include "FILENAME" | FILENAME'
      Read source statements from FILENAME.  The normal include search
      path is used.  Normally .copy will cause statements from the
      included file to be printed in the assembly listing and .include
      will not, but this distinction is not currently implemented.
 
-`.data'
+'.data'
      Begin assembling code into the .data section.
 
-`.double VALUE [,...,VALUE_N]'
-`.ldouble VALUE [,...,VALUE_N]'
-`.float VALUE [,...,VALUE_N]'
-`.xfloat VALUE [,...,VALUE_N]'
-     Place an IEEE single-precision floating-point representation of
-     one or more floating-point values into the current section.  All
-     but `.xfloat' align the result on a longword boundary.  Values are
+'.double VALUE [,...,VALUE_N]'
+'.ldouble VALUE [,...,VALUE_N]'
+'.float VALUE [,...,VALUE_N]'
+'.xfloat VALUE [,...,VALUE_N]'
+     Place an IEEE single-precision floating-point representation of one
+     or more floating-point values into the current section.  All but
+     '.xfloat' align the result on a longword boundary.  Values are
      stored most-significant word first.
 
-`.drlist'
-`.drnolist'
+'.drlist'
+'.drnolist'
      Control printing of directives to the listing file.  Ignored.
 
-`.emsg STRING'
-`.mmsg STRING'
-`.wmsg STRING'
+'.emsg STRING'
+'.mmsg STRING'
+'.wmsg STRING'
      Emit a user-defined error, message, or warning, respectively.
 
-`.far_mode'
+'.far_mode'
      Use extended addressing when assembling statements.  This should
      appear only once per file, and is equivalent to the -mfar-mode
-     option *note `-mfar-mode': TIC54X-Opts.
+     option *note '-mfar-mode': TIC54X-Opts.
 
-`.fclist'
-`.fcnolist'
+'.fclist'
+'.fcnolist'
      Control printing of false conditional blocks to the listing file.
 
-`.field VALUE [,SIZE]'
+'.field VALUE [,SIZE]'
      Initialize a bitfield of SIZE bits in the current section.  If
      VALUE is relocatable, then SIZE must be 16.  SIZE defaults to 16
      bits.  If VALUE does not fit into SIZE bits, the value will be
-     truncated.  Successive `.field' directives will pack starting at
+     truncated.  Successive '.field' directives will pack starting at
      the current word, filling the most significant bits first, and
      aligning to the start of the next word if the field size does not
-     fit into the space remaining in the current word.  A `.align'
-     directive with an operand of 1 will force the next `.field'
+     fit into the space remaining in the current word.  A '.align'
+     directive with an operand of 1 will force the next '.field'
      directive to begin packing into a new word.  If a label is used, it
      points to the word that contains the specified field.
 
-`.global SYMBOL [,...,SYMBOL_N]'
-`.def SYMBOL [,...,SYMBOL_N]'
-`.ref SYMBOL [,...,SYMBOL_N]'
-     `.def' nominally identifies a symbol defined in the current file
-     and available to other files.  `.ref' identifies a symbol used in
+'.global SYMBOL [,...,SYMBOL_N]'
+'.def SYMBOL [,...,SYMBOL_N]'
+'.ref SYMBOL [,...,SYMBOL_N]'
+     '.def' nominally identifies a symbol defined in the current file
+     and available to other files.  '.ref' identifies a symbol used in
      the current file but defined elsewhere.  Both map to the standard
-     `.global' directive.
-
-`.half VALUE [,...,VALUE_N]'
-`.uhalf VALUE [,...,VALUE_N]'
-`.short VALUE [,...,VALUE_N]'
-`.ushort VALUE [,...,VALUE_N]'
-`.int VALUE [,...,VALUE_N]'
-`.uint VALUE [,...,VALUE_N]'
-`.word VALUE [,...,VALUE_N]'
-`.uword VALUE [,...,VALUE_N]'
+     '.global' directive.
+
+'.half VALUE [,...,VALUE_N]'
+'.uhalf VALUE [,...,VALUE_N]'
+'.short VALUE [,...,VALUE_N]'
+'.ushort VALUE [,...,VALUE_N]'
+'.int VALUE [,...,VALUE_N]'
+'.uint VALUE [,...,VALUE_N]'
+'.word VALUE [,...,VALUE_N]'
+'.uword VALUE [,...,VALUE_N]'
      Place one or more values into consecutive words of the current
      section.  If a label is used, it points to the word allocated for
      the first value encountered.
 
-`.label SYMBOL'
+'.label SYMBOL'
      Define a special SYMBOL to refer to the load time address of the
      current section program counter.
 
-`.length'
-`.width'
+'.length'
+'.width'
      Set the page length and width of the output listing file.  Ignored.
 
-`.list'
-`.nolist'
+'.list'
+'.nolist'
      Control whether the source listing is printed.  Ignored.
 
-`.long VALUE [,...,VALUE_N]'
-`.ulong VALUE [,...,VALUE_N]'
-`.xlong VALUE [,...,VALUE_N]'
+'.long VALUE [,...,VALUE_N]'
+'.ulong VALUE [,...,VALUE_N]'
+'.xlong VALUE [,...,VALUE_N]'
      Place one or more 32-bit values into consecutive words in the
      current section.  The most significant word is stored first.
-     `.long' and `.ulong' align the result on a longword boundary;
-     `xlong' does not.
-
-`.loop [COUNT]'
-`.break [CONDITION]'
-`.endloop'
-     Repeatedly assemble a block of code.  `.loop' begins the block, and
-     `.endloop' marks its termination.  COUNT defaults to 1024, and
+     '.long' and '.ulong' align the result on a longword boundary;
+     'xlong' does not.
+
+'.loop [COUNT]'
+'.break [CONDITION]'
+'.endloop'
+     Repeatedly assemble a block of code.  '.loop' begins the block, and
+     '.endloop' marks its termination.  COUNT defaults to 1024, and
      indicates the number of times the block should be repeated.
-     `.break' terminates the loop so that assembly begins after the
-     `.endloop' directive.  The optional CONDITION will cause the loop
+     '.break' terminates the loop so that assembly begins after the
+     '.endloop' directive.  The optional CONDITION will cause the loop
      to terminate only if it evaluates to zero.
 
-`MACRO_NAME .macro [PARAM1][,...PARAM_N]'
-`[.mexit]'
-`.endm'
+'MACRO_NAME .macro [PARAM1][,...PARAM_N]'
+'[.mexit]'
+'.endm'
      See the section on macros for more explanation (*Note
      TIC54X-Macros::.
 
-`.mlib "FILENAME" | FILENAME'
+'.mlib "FILENAME" | FILENAME'
      Load the macro library FILENAME.  FILENAME must be an archived
-     library (BFD ar-compatible) of text files, expected to contain
-     only macro definitions.   The standard include search path is used.
+     library (BFD ar-compatible) of text files, expected to contain only
+     macro definitions.  The standard include search path is used.
 
-`.mlist'
-`.mnolist'
+'.mlist'
+'.mnolist'
      Control whether to include macro and loop block expansions in the
      listing output.  Ignored.
 
-`.mmregs'
+'.mmregs'
      Define global symbolic names for the 'c54x registers.  Supposedly
-     equivalent to executing `.set' directives for each register with
+     equivalent to executing '.set' directives for each register with
      its memory-mapped value, but in reality is provided only for
      compatibility and does nothing.
 
-`.newblock'
+'.newblock'
      This directive resets any TIC54X local labels currently defined.
-     Normal `as' local labels are unaffected.
+     Normal 'as' local labels are unaffected.
 
-`.option OPTION_LIST'
+'.option OPTION_LIST'
      Set listing options.  Ignored.
 
-`.sblock "SECTION_NAME" | SECTION_NAME [,"NAME_N" | NAME_N]'
+'.sblock "SECTION_NAME" | SECTION_NAME [,"NAME_N" | NAME_N]'
      Designate SECTION_NAME for blocking.  Blocking guarantees that a
      section will start on a page boundary (128 words) if it would
      otherwise cross a page boundary.  Only initialized sections may be
      designated with this directive.  See also *Note TIC54X-Block::.
 
-`.sect "SECTION_NAME"'
+'.sect "SECTION_NAME"'
      Define a named initialized section and make it the current section.
 
-`SYMBOL .set "VALUE"'
-`SYMBOL .equ "VALUE"'
+'SYMBOL .set "VALUE"'
+'SYMBOL .equ "VALUE"'
      Equate a constant VALUE to a SYMBOL, which is placed in the symbol
      table.  SYMBOL may not be previously defined.
 
-`.space SIZE_IN_BITS'
-`.bes SIZE_IN_BITS'
+'.space SIZE_IN_BITS'
+'.bes SIZE_IN_BITS'
      Reserve the given number of bits in the current section and
-     zero-fill them.  If a label is used with `.space', it points to the
-     *first* word reserved.  With `.bes', the label points to the
-     *last* word reserved.
+     zero-fill them.  If a label is used with '.space', it points to the
+     *first* word reserved.  With '.bes', the label points to the *last*
+     word reserved.
 
-`.sslist'
-`.ssnolist'
-     Controls the inclusion of subsym replacement in the listing
-     output.  Ignored.
+'.sslist'
+'.ssnolist'
+     Controls the inclusion of subsym replacement in the listing output.
+     Ignored.
 
-`.string "STRING" [,...,"STRING_N"]'
-`.pstring "STRING" [,...,"STRING_N"]'
+'.string "STRING" [,...,"STRING_N"]'
+'.pstring "STRING" [,...,"STRING_N"]'
      Place 8-bit characters from STRING into the current section.
-     `.string' zero-fills the upper 8 bits of each word, while
-     `.pstring' puts two characters into each word, filling the
+     '.string' zero-fills the upper 8 bits of each word, while
+     '.pstring' puts two characters into each word, filling the
      most-significant bits first.  Unused space is zero-filled.  If a
      label is used, it points to the first word initialized.
 
-`[STAG] .struct [OFFSET]'
-`[NAME_1] element [COUNT_1]'
-`[NAME_2] element [COUNT_2]'
-`[TNAME] .tag STAGX [TCOUNT]'
-`...'
-`[NAME_N] element [COUNT_N]'
-`[SSIZE] .endstruct'
-`LABEL .tag [STAG]'
+'[STAG] .struct [OFFSET]'
+'[NAME_1] element [COUNT_1]'
+'[NAME_2] element [COUNT_2]'
+'[TNAME] .tag STAGX [TCOUNT]'
+'...'
+'[NAME_N] element [COUNT_N]'
+'[SSIZE] .endstruct'
+'LABEL .tag [STAG]'
      Assign symbolic offsets to the elements of a structure.  STAG
      defines a symbol to use to reference the structure.  OFFSET
      indicates a starting value to use for the first element
@@ -20411,62 +19932,62 @@ File: as.info,  Node: TIC54X-Directives,  Next: TIC54X-Macros,  Prev: TIC54X-Ext
      a named offset, NAME, which is a symbol assigned the value of the
      element's offset into the structure.  If STAG is missing, these
      become global symbols.  COUNT adjusts the offset that many times,
-     as if `element' were an array.  `element' may be one of `.byte',
-     `.word', `.long', `.float', or any equivalent of those, and the
-     structure offset is adjusted accordingly.  `.field' and `.string'
-     are also allowed; the size of `.field' is one bit, and `.string'
-     is considered to be one word in size.  Only element descriptors,
-     structure/union tags, `.align' and conditional assembly directives
-     are allowed within `.struct'/`.endstruct'.  `.align' aligns member
+     as if 'element' were an array.  'element' may be one of '.byte',
+     '.word', '.long', '.float', or any equivalent of those, and the
+     structure offset is adjusted accordingly.  '.field' and '.string'
+     are also allowed; the size of '.field' is one bit, and '.string' is
+     considered to be one word in size.  Only element descriptors,
+     structure/union tags, '.align' and conditional assembly directives
+     are allowed within '.struct'/'.endstruct'.  '.align' aligns member
      offsets to word boundaries only.  SSIZE, if provided, will always
      be assigned the size of the structure.
 
-     The `.tag' directive, in addition to being used to define a
+     The '.tag' directive, in addition to being used to define a
      structure/union element within a structure, may be used to apply a
      structure to a symbol.  Once applied to LABEL, the individual
      structure elements may be applied to LABEL to produce the desired
      offsets using LABEL as the structure base.
 
-`.tab'
+'.tab'
      Set the tab size in the output listing.  Ignored.
 
-`[UTAG] .union'
-`[NAME_1] element [COUNT_1]'
-`[NAME_2] element [COUNT_2]'
-`[TNAME] .tag UTAGX[,TCOUNT]'
-`...'
-`[NAME_N] element [COUNT_N]'
-`[USIZE] .endstruct'
-`LABEL .tag [UTAG]'
-     Similar to `.struct', but the offset after each element is reset to
+'[UTAG] .union'
+'[NAME_1] element [COUNT_1]'
+'[NAME_2] element [COUNT_2]'
+'[TNAME] .tag UTAGX[,TCOUNT]'
+'...'
+'[NAME_N] element [COUNT_N]'
+'[USIZE] .endstruct'
+'LABEL .tag [UTAG]'
+     Similar to '.struct', but the offset after each element is reset to
      zero, and the USIZE is set to the maximum of all defined elements.
      Starting offset for the union is always zero.
 
-`[SYMBOL] .usect "SECTION_NAME", SIZE, [,[BLOCKING_FLAG] [,ALIGNMENT_FLAG]]'
+'[SYMBOL] .usect "SECTION_NAME", SIZE, [,[BLOCKING_FLAG] [,ALIGNMENT_FLAG]]'
      Reserve space for variables in a named, uninitialized section
-     (similar to .bss).  `.usect' allows definitions sections
+     (similar to .bss).  '.usect' allows definitions sections
      independent of .bss.  SYMBOL points to the first location reserved
      by this allocation.  The symbol may be used as a variable name.
      SIZE is the allocated size in words.  BLOCKING_FLAG indicates
-     whether to block this section on a page boundary (128 words)
-     (*note TIC54X-Block::).  ALIGNMENT FLAG indicates whether the
-     section should be longword-aligned.
+     whether to block this section on a page boundary (128 words) (*note
+     TIC54X-Block::).  ALIGNMENT FLAG indicates whether the section
+     should be longword-aligned.
 
-`.var SYM[,..., SYM_N]'
+'.var SYM[,..., SYM_N]'
      Define a subsym to be a local variable within a macro.  See *Note
      TIC54X-Macros::.
 
-`.version VERSION'
+'.version VERSION'
      Set which processor to build instructions for.  Though the
      following values are accepted, the op is ignored.
-    `541'
-    `542'
-    `543'
-    `545'
-    `545LP'
-    `546LP'
-    `548'
-    `549'
+     '541'
+     '542'
+     '543'
+     '545'
+     '545LP'
+     '546LP'
+     '548'
+     '549'
 
 
 File: as.info,  Node: TIC54X-Macros,  Next: TIC54X-MMRegs,  Prev: TIC54X-Directives,  Up: TIC54X-Dependent
@@ -20477,58 +19998,57 @@ File: as.info,  Node: TIC54X-Macros,  Next: TIC54X-MMRegs,  Prev: TIC54X-Directi
 Macros do not require explicit dereferencing of arguments (i.e., \ARG).
 
    During macro expansion, the macro parameters are converted to
-subsyms.  If the number of arguments passed the macro invocation
-exceeds the number of parameters defined, the last parameter is
-assigned the string equivalent of all remaining arguments.  If fewer
-arguments are given than parameters, the missing parameters are
-assigned empty strings.  To include a comma in an argument, you must
-enclose the argument in quotes.
+subsyms.  If the number of arguments passed the macro invocation exceeds
+the number of parameters defined, the last parameter is assigned the
+string equivalent of all remaining arguments.  If fewer arguments are
+given than parameters, the missing parameters are assigned empty
+strings.  To include a comma in an argument, you must enclose the
+argument in quotes.
 
    The following built-in subsym functions allow examination of the
 string value of subsyms (or ordinary strings).  The arguments are
 strings unless otherwise indicated (subsyms passed as args will be
 replaced by the strings they represent).
-``$symlen(STR)''
+'$symlen(STR)'
      Returns the length of STR.
 
-``$symcmp(STR1,STR2)''
+'$symcmp(STR1,STR2)'
      Returns 0 if STR1 == STR2, non-zero otherwise.
 
-``$firstch(STR,CH)''
+'$firstch(STR,CH)'
      Returns index of the first occurrence of character constant CH in
      STR.
 
-``$lastch(STR,CH)''
+'$lastch(STR,CH)'
      Returns index of the last occurrence of character constant CH in
      STR.
 
-``$isdefed(SYMBOL)''
+'$isdefed(SYMBOL)'
      Returns zero if the symbol SYMBOL is not in the symbol table,
      non-zero otherwise.
 
-``$ismember(SYMBOL,LIST)''
+'$ismember(SYMBOL,LIST)'
      Assign the first member of comma-separated string LIST to SYMBOL;
-     LIST is reassigned the remainder of the list.  Returns zero if
-     LIST is a null string.  Both arguments must be subsyms.
+     LIST is reassigned the remainder of the list.  Returns zero if LIST
+     is a null string.  Both arguments must be subsyms.
 
-``$iscons(EXPR)''
-     Returns 1 if string EXPR is binary, 2 if octal, 3 if hexadecimal,
-     4 if a character, 5 if decimal, and zero if not an integer.
+'$iscons(EXPR)'
+     Returns 1 if string EXPR is binary, 2 if octal, 3 if hexadecimal, 4
+     if a character, 5 if decimal, and zero if not an integer.
 
-``$isname(NAME)''
+'$isname(NAME)'
      Returns 1 if NAME is a valid symbol name, zero otherwise.
 
-``$isreg(REG)''
+'$isreg(REG)'
      Returns 1 if REG is a valid predefined register name (AR0-AR7
      only).
 
-``$structsz(STAG)''
+'$structsz(STAG)'
      Returns the size of the structure or union represented by STAG.
 
-``$structacc(STAG)''
+'$structacc(STAG)'
      Returns the reference point of the structure or union represented
-     by STAG.   Always returns zero.
-
+     by STAG.  Always returns zero.
 
 
 File: as.info,  Node: TIC54X-MMRegs,  Next: TIC54X-Syntax,  Prev: TIC54X-Macros,  Up: TIC54X-Dependent
@@ -20538,7 +20058,6 @@ File: as.info,  Node: TIC54X-MMRegs,  Next: TIC54X-Syntax,  Prev: TIC54X-Macros,
 
 The following symbols are recognized as memory-mapped registers:
 
-
 
 File: as.info,  Node: TIC54X-Syntax,  Prev: TIC54X-MMRegs,  Up: TIC54X-Dependent
 
@@ -20555,15 +20074,15 @@ File: as.info,  Node: TIC54X-Chars,  Up: TIC54X-Syntax
 9.44.12.1 Special Characters
 ............................
 
-The presence of a `;' appearing anywhere on a line indicates the start
+The presence of a ';' appearing anywhere on a line indicates the start
 of a comment that extends to the end of that line.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line can also be a
-logical line number directive (*note Comments::) or a preprocessor
-control command (*note Preprocessing::).
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line can also be a logical
+line number directive (*note Comments::) or a preprocessor control
+command (*note Preprocessing::).
 
-   The presence of an asterisk (`*') at the start of a line also
+   The presence of an asterisk ('*') at the start of a line also
 indicates a comment that extends to the end of that line.
 
    The TIC54X assembler does not currently support a line separator
@@ -20587,71 +20106,70 @@ File: as.info,  Node: TIC6X Options,  Next: TIC6X Syntax,  Up: TIC6X-Dependent
 9.45.1 TIC6X Options
 --------------------
 
-`-march=ARCH'
-     Enable (only) instructions from architecture ARCH.  By default,
-     all instructions are permitted.
+'-march=ARCH'
+     Enable (only) instructions from architecture ARCH.  By default, all
+     instructions are permitted.
 
-     The following values of ARCH are accepted: `c62x', `c64x',
-     `c64x+', `c67x', `c67x+', `c674x'.
+     The following values of ARCH are accepted: 'c62x', 'c64x', 'c64x+',
+     'c67x', 'c67x+', 'c674x'.
 
-`-mdsbt'
-`-mno-dsbt'
-     The `-mdsbt' option causes the assembler to generate the
-     `Tag_ABI_DSBT' attribute with a value of 1, indicating that the
-     code is using DSBT addressing.  The `-mno-dsbt' option, the
+'-mdsbt'
+'-mno-dsbt'
+     The '-mdsbt' option causes the assembler to generate the
+     'Tag_ABI_DSBT' attribute with a value of 1, indicating that the
+     code is using DSBT addressing.  The '-mno-dsbt' option, the
      default, causes the tag to have a value of 0, indicating that the
      code does not use DSBT addressing.  The linker will emit a warning
      if objects of different type (DSBT and non-DSBT) are linked
      together.
 
-`-mpid=no'
-`-mpid=near'
-`-mpid=far'
-     The `-mpid=' option causes the assembler to generate the
-     `Tag_ABI_PID' attribute with a value indicating the form of data
-     addressing used by the code.  `-mpid=no', the default, indicates
-     position-dependent data addressing, `-mpid=near' indicates
+'-mpid=no'
+'-mpid=near'
+'-mpid=far'
+     The '-mpid=' option causes the assembler to generate the
+     'Tag_ABI_PID' attribute with a value indicating the form of data
+     addressing used by the code.  '-mpid=no', the default, indicates
+     position-dependent data addressing, '-mpid=near' indicates
      position-independent addressing with GOT accesses using near DP
-     addressing, and `-mpid=far' indicates position-independent
+     addressing, and '-mpid=far' indicates position-independent
      addressing with GOT accesses using far DP addressing.  The linker
      will emit a warning if objects built with different settings of
      this option are linked together.
 
-`-mpic'
-`-mno-pic'
-     The `-mpic' option causes the assembler to generate the
-     `Tag_ABI_PIC' attribute with a value of 1, indicating that the
-     code is using position-independent code addressing,  The
-     `-mno-pic' option, the default, causes the tag to have a value of
-     0, indicating position-dependent code addressing.  The linker will
+'-mpic'
+'-mno-pic'
+     The '-mpic' option causes the assembler to generate the
+     'Tag_ABI_PIC' attribute with a value of 1, indicating that the code
+     is using position-independent code addressing, The '-mno-pic'
+     option, the default, causes the tag to have a value of 0,
+     indicating position-dependent code addressing.  The linker will
      emit a warning if objects of different type (position-dependent and
      position-independent) are linked together.
 
-`-mbig-endian'
-`-mlittle-endian'
+'-mbig-endian'
+'-mlittle-endian'
      Generate code for the specified endianness.  The default is
      little-endian.
 
-
 
 File: as.info,  Node: TIC6X Syntax,  Next: TIC6X Directives,  Prev: TIC6X Options,  Up: TIC6X-Dependent
 
 9.45.2 TIC6X Syntax
 -------------------
 
-The presence of a `;' on a line indicates the start of a comment that
-extends to the end of the current line.  If a `#' or `*' appears as the
-first character of a line, the whole line is treated as a comment.
-Note that if a line starts with a `#' character then it can also be a
-logical line number directive (*note Comments::) or a preprocessor
-control command (*note Preprocessing::).
+The presence of a ';' on a line indicates the start of a comment that
+extends to the end of the current line.  If a '#' or '*' appears as the
+first character of a line, the whole line is treated as a comment.  Note
+that if a line starts with a '#' character then it can also be a logical
+line number directive (*note Comments::) or a preprocessor control
+command (*note Preprocessing::).
 
-   The `@' character can be used instead of a newline to separate
+   The '@' character can be used instead of a newline to separate
 statements.
 
    Instruction, register and functional unit names are case-insensitive.
-`as' requires fully-specified functional unit names, such as `.S1',
-`.L1X' or `.D1T2', on all instructions using a functional unit.
+'as' requires fully-specified functional unit names, such as '.S1',
+'.L1X' or '.D1T2', on all instructions using a functional unit.
 
    For some instructions, there may be syntactic ambiguity between
 register or functional unit names and the names of labels or other
@@ -20665,63 +20183,62 @@ File: as.info,  Node: TIC6X Directives,  Prev: TIC6X Syntax,  Up: TIC6X-Dependen
 9.45.3 TIC6X Directives
 -----------------------
 
-Directives controlling the set of instructions accepted by the
-assembler have effect for instructions between the directive and any
-subsequent directive overriding it.
+Directives controlling the set of instructions accepted by the assembler
+have effect for instructions between the directive and any subsequent
+directive overriding it.
 
-`.arch ARCH'
-     This has the same effect as `-march=ARCH'.
+'.arch ARCH'
+     This has the same effect as '-march=ARCH'.
 
-`.cantunwind'
+'.cantunwind'
      Prevents unwinding through the current function.  No personality
      routine or exception table data is required or permitted.
 
      If this is not specified then frame unwinding information will be
-     constructed from CFI directives. *note CFI directives::.
+     constructed from CFI directives.  *note CFI directives::.
 
-`.c6xabi_attribute TAG, VALUE'
+'.c6xabi_attribute TAG, VALUE'
      Set the C6000 EABI build attribute TAG to VALUE.
 
-     The TAG is either an attribute number or one of `Tag_ISA',
-     `Tag_ABI_wchar_t', `Tag_ABI_stack_align_needed',
-     `Tag_ABI_stack_align_preserved', `Tag_ABI_DSBT', `Tag_ABI_PID',
-     `Tag_ABI_PIC', `TAG_ABI_array_object_alignment',
-     `TAG_ABI_array_object_align_expected', `Tag_ABI_compatibility' and
-     `Tag_ABI_conformance'.  The VALUE is either a `number',
-     `"string"', or `number, "string"' depending on the tag.
+     The TAG is either an attribute number or one of 'Tag_ISA',
+     'Tag_ABI_wchar_t', 'Tag_ABI_stack_align_needed',
+     'Tag_ABI_stack_align_preserved', 'Tag_ABI_DSBT', 'Tag_ABI_PID',
+     'Tag_ABI_PIC', 'TAG_ABI_array_object_alignment',
+     'TAG_ABI_array_object_align_expected', 'Tag_ABI_compatibility' and
+     'Tag_ABI_conformance'.  The VALUE is either a 'number', '"string"',
+     or 'number, "string"' depending on the tag.
 
-`.ehtype SYMBOL'
+'.ehtype SYMBOL'
      Output an exception type table reference to SYMBOL.
 
-`.endp'
+'.endp'
      Marks the end of and exception table or function.  If preceeded by
-     a `.handlerdata' directive then this also switched back to the
+     a '.handlerdata' directive then this also switched back to the
      previous text section.
 
-`.handlerdata'
+'.handlerdata'
      Marks the end of the current function, and the start of the
      exception table entry for that function.  Anything between this
-     directive and the `.endp' directive will be added to the exception
+     directive and the '.endp' directive will be added to the exception
      table entry.
 
-     Must be preceded by a CFI block containing a `.cfi_lsda' directive.
+     Must be preceded by a CFI block containing a '.cfi_lsda' directive.
 
-`.nocmp'
+'.nocmp'
      Disallow use of C64x+ compact instructions in the current text
      section.
 
-`.personalityindex INDEX'
+'.personalityindex INDEX'
      Sets the personality routine for the current function to the ABI
      specified compact routine number INDEX
 
-`.personality NAME'
+'.personality NAME'
      Sets the personality routine for the current function to NAME.
 
-`.scomm SYMBOL, SIZE, ALIGN'
-     Like `.comm', creating a common symbol SYMBOL with size SIZE and
-     alignment ALIGN, but unlike when using `.comm', this symbol will
-     be placed into the small BSS section by the linker.
-
+'.scomm SYMBOL, SIZE, ALIGN'
+     Like '.comm', creating a common symbol SYMBOL with size SIZE and
+     alignment ALIGN, but unlike when using '.comm', this symbol will be
+     placed into the small BSS section by the linker.
 
 
 File: as.info,  Node: TILE-Gx-Dependent,  Next: TILEPro-Dependent,  Prev: TIC6X-Dependent,  Up: Machine Dependencies
@@ -20743,22 +20260,21 @@ File: as.info,  Node: TILE-Gx Options,  Next: TILE-Gx Syntax,  Up: TILE-Gx-Depen
 
 The following table lists all available TILE-Gx specific options:
 
-`-m32 | -m64'
+'-m32 | -m64'
      Select the word size, either 32 bits or 64 bits.
 
-`-EB | -EL'
+'-EB | -EL'
      Select the endianness, either big-endian (-EB) or little-endian
      (-EL).
 
-
 
 File: as.info,  Node: TILE-Gx Syntax,  Next: TILE-Gx Directives,  Prev: TILE-Gx Options,  Up: TILE-Gx-Dependent
 
 9.46.2 Syntax
 -------------
 
-Block comments are delimited by `/*' and `*/'.  End of line comments
-may be introduced by `#'.
+Block comments are delimited by '/*' and '*/'.  End of line comments may
+be introduced by '#'.
 
    Instructions consist of a leading opcode or macro name followed by
 whitespace and an optional comma-separated list of operands:
@@ -20768,26 +20284,26 @@ whitespace and an optional comma-separated list of operands:
    Instructions must be separated by a newline or semicolon.
 
    There are two ways to write code: either write naked instructions,
-which the assembler is free to combine into VLIW bundles, or specify
-the VLIW bundles explicitly.
+which the assembler is free to combine into VLIW bundles, or specify the
+VLIW bundles explicitly.
 
    Bundles are specified using curly braces:
 
      { ADD r3,r4,r5 ; ADD r7,r8,r9 ; LW r10,r11 }
 
-   A bundle can span multiple lines. If you want to put multiple
-instructions on a line, whether in a bundle or not, you need to
-separate them with semicolons as in this example.
+   A bundle can span multiple lines.  If you want to put multiple
+instructions on a line, whether in a bundle or not, you need to separate
+them with semicolons as in this example.
 
    A bundle may contain one or more instructions, up to the limit
-specified by the ISA (currently three). If fewer instructions are
+specified by the ISA (currently three).  If fewer instructions are
 specified than the hardware supports in a bundle, the assembler inserts
-`fnop' instructions automatically.
+'fnop' instructions automatically.
 
    The assembler will prefer to preserve the ordering of instructions
 within the bundle, putting the first instruction in a lower-numbered
 pipeline than the next one, etc.  This fact, combined with the optional
-use of explicit `fnop' or `nop' instructions, allows precise control
+use of explicit 'fnop' or 'nop' instructions, allows precise control
 over which pipeline executes each instruction.
 
    If the instructions cannot be bundled in the listed order, the
@@ -20797,9 +20313,9 @@ reports an error.
 
    The assembler does not yet auto-bundle (automatically combine
 multiple instructions into one bundle), but it reserves the right to do
-so in the future.  If you want to force an instruction to run by
-itself, put it in a bundle explicitly with curly braces and use `nop'
-instructions (not `fnop') to fill the remaining pipeline slots in that
+so in the future.  If you want to force an instruction to run by itself,
+put it in a bundle explicitly with curly braces and use 'nop'
+instructions (not 'fnop') to fill the remaining pipeline slots in that
 bundle.
 
 * Menu:
@@ -20815,7 +20331,7 @@ File: as.info,  Node: TILE-Gx Opcodes,  Next: TILE-Gx Registers,  Up: TILE-Gx Sy
 .....................
 
 For a complete list of opcodes and descriptions of their semantics, see
-`TILE-Gx Instruction Set Architecture', available upon request at
+'TILE-Gx Instruction Set Architecture', available upon request at
 www.tilera.com.
 
 
@@ -20825,44 +20341,43 @@ File: as.info,  Node: TILE-Gx Registers,  Next: TILE-Gx Modifiers,  Prev: TILE-G
 .......................
 
 General-purpose registers are represented by predefined symbols of the
-form `rN', where N represents a number between `0' and `63'.  However,
+form 'rN', where N represents a number between '0' and '63'.  However,
 the following registers have canonical names that must be used instead:
 
-`r54'
+'r54'
      sp
 
-`r55'
+'r55'
      lr
 
-`r56'
+'r56'
      sn
 
-`r57'
+'r57'
      idn0
 
-`r58'
+'r58'
      idn1
 
-`r59'
+'r59'
      udn0
 
-`r60'
+'r60'
      udn1
 
-`r61'
+'r61'
      udn2
 
-`r62'
+'r62'
      udn3
 
-`r63'
+'r63'
      zero
 
-
    The assembler will emit a warning if a numeric name is used instead
-of the non-numeric name.  The `.no_require_canonical_reg_names'
+of the non-numeric name.  The '.no_require_canonical_reg_names'
 assembler pseudo-op turns off this warning.
-`.require_canonical_reg_names' turns it back on.
+'.require_canonical_reg_names' turns it back on.
 
 
 File: as.info,  Node: TILE-Gx Modifiers,  Prev: TILE-Gx Registers,  Up: TILE-Gx Syntax
@@ -20877,28 +20392,35 @@ TILE-Gx instruction operands.  The general syntax is the following:
 
    The following modifiers are supported:
 
-`hw0'
+'hw0'
+
      This modifier is used to load bits 0-15 of the symbol's address.
 
-`hw1'
+'hw1'
+
      This modifier is used to load bits 16-31 of the symbol's address.
 
-`hw2'
+'hw2'
+
      This modifier is used to load bits 32-47 of the symbol's address.
 
-`hw3'
+'hw3'
+
      This modifier is used to load bits 48-63 of the symbol's address.
 
-`hw0_last'
-     This modifier yields the same value as `hw0', but it also checks
+'hw0_last'
+
+     This modifier yields the same value as 'hw0', but it also checks
      that the value does not overflow.
 
-`hw1_last'
-     This modifier yields the same value as `hw1', but it also checks
+'hw1_last'
+
+     This modifier yields the same value as 'hw1', but it also checks
      that the value does not overflow.
 
-`hw2_last'
-     This modifier yields the same value as `hw2', but it also checks
+'hw2_last'
+
+     This modifier yields the same value as 'hw2', but it also checks
      that the value does not overflow.
 
      A 48-bit symbolic value is constructed by using the following
@@ -20908,133 +20430,151 @@ TILE-Gx instruction operands.  The general syntax is the following:
           shl16insli r0, r0, hw1(sym)
           shl16insli r0, r0, hw0(sym)
 
-`hw0_got'
+'hw0_got'
+
      This modifier is used to load bits 0-15 of the symbol's offset in
      the GOT entry corresponding to the symbol.
 
-`hw0_last_got'
-     This modifier yields the same value as `hw0_got', but it also
+'hw0_last_got'
+
+     This modifier yields the same value as 'hw0_got', but it also
      checks that the value does not overflow.
 
-`hw1_last_got'
+'hw1_last_got'
+
      This modifier is used to load bits 16-31 of the symbol's offset in
      the GOT entry corresponding to the symbol, and it also checks that
      the value does not overflow.
 
-`plt'
-     This modifier is used for function symbols.  It causes a
-     _procedure linkage table_, an array of code stubs, to be created
-     at the time the shared object is created or linked against,
-     together with a global offset table entry.  The value is a
-     pc-relative offset to the corresponding stub code in the procedure
-     linkage table.  This arrangement causes the run-time symbol
-     resolver to be called to look up and set the value of the symbol
-     the first time the function is called (at latest; depending
-     environment variables).  It is only safe to leave the symbol
-     unresolved this way if all references are function calls.
-
-`hw0_plt'
+'plt'
+
+     This modifier is used for function symbols.  It causes a _procedure
+     linkage table_, an array of code stubs, to be created at the time
+     the shared object is created or linked against, together with a
+     global offset table entry.  The value is a pc-relative offset to
+     the corresponding stub code in the procedure linkage table.  This
+     arrangement causes the run-time symbol resolver to be called to
+     look up and set the value of the symbol the first time the function
+     is called (at latest; depending environment variables).  It is only
+     safe to leave the symbol unresolved this way if all references are
+     function calls.
+
+'hw0_plt'
+
      This modifier is used to load bits 0-15 of the pc-relative address
      of a plt entry.
 
-`hw1_plt'
-     This modifier is used to load bits 16-31 of the pc-relative
-     address of a plt entry.
+'hw1_plt'
+
+     This modifier is used to load bits 16-31 of the pc-relative address
+     of a plt entry.
+
+'hw1_last_plt'
 
-`hw1_last_plt'
-     This modifier yields the same value as `hw1_plt', but it also
+     This modifier yields the same value as 'hw1_plt', but it also
      checks that the value does not overflow.
 
-`hw2_last_plt'
-     This modifier is used to load bits 32-47 of the pc-relative
-     address of a plt entry, and it also checks that the value does not
+'hw2_last_plt'
+
+     This modifier is used to load bits 32-47 of the pc-relative address
+     of a plt entry, and it also checks that the value does not
      overflow.
 
-`hw0_tls_gd'
+'hw0_tls_gd'
+
      This modifier is used to load bits 0-15 of the offset of the GOT
      entry of the symbol's TLS descriptor, to be used for
      general-dynamic TLS accesses.
 
-`hw0_last_tls_gd'
-     This modifier yields the same value as `hw0_tls_gd', but it also
+'hw0_last_tls_gd'
+
+     This modifier yields the same value as 'hw0_tls_gd', but it also
      checks that the value does not overflow.
 
-`hw1_last_tls_gd'
+'hw1_last_tls_gd'
+
      This modifier is used to load bits 16-31 of the offset of the GOT
      entry of the symbol's TLS descriptor, to be used for
      general-dynamic TLS accesses.  It also checks that the value does
      not overflow.
 
-`hw0_tls_ie'
+'hw0_tls_ie'
+
      This modifier is used to load bits 0-15 of the offset of the GOT
      entry containing the offset of the symbol's address from the TCB,
      to be used for initial-exec TLS accesses.
 
-`hw0_last_tls_ie'
-     This modifier yields the same value as `hw0_tls_ie', but it also
+'hw0_last_tls_ie'
+
+     This modifier yields the same value as 'hw0_tls_ie', but it also
      checks that the value does not overflow.
 
-`hw1_last_tls_ie'
+'hw1_last_tls_ie'
+
      This modifier is used to load bits 16-31 of the offset of the GOT
      entry containing the offset of the symbol's address from the TCB,
      to be used for initial-exec TLS accesses.  It also checks that the
      value does not overflow.
 
-`hw0_tls_le'
+'hw0_tls_le'
+
      This modifier is used to load bits 0-15 of the offset of the
      symbol's address from the TCB, to be used for local-exec TLS
      accesses.
 
-`hw0_last_tls_le'
-     This modifier yields the same value as `hw0_tls_le', but it also
+'hw0_last_tls_le'
+
+     This modifier yields the same value as 'hw0_tls_le', but it also
      checks that the value does not overflow.
 
-`hw1_last_tls_le'
+'hw1_last_tls_le'
+
      This modifier is used to load bits 16-31 of the offset of the
      symbol's address from the TCB, to be used for local-exec TLS
      accesses.  It also checks that the value does not overflow.
 
-`tls_gd_call'
+'tls_gd_call'
+
      This modifier is used to tag an instrution as the "call" part of a
      calling sequence for a TLS GD reference of its operand.
 
-`tls_gd_add'
+'tls_gd_add'
+
      This modifier is used to tag an instruction as the "add" part of a
      calling sequence for a TLS GD reference of its operand.
 
-`tls_ie_load'
+'tls_ie_load'
+
      This modifier is used to tag an instruction as the "load" part of a
      calling sequence for a TLS IE reference of its operand.
 
-
 
 File: as.info,  Node: TILE-Gx Directives,  Prev: TILE-Gx Syntax,  Up: TILE-Gx-Dependent
 
 9.46.3 TILE-Gx Directives
 -------------------------
 
-`.align EXPRESSION [, EXPRESSION]'
+'.align EXPRESSION [, EXPRESSION]'
      This is the generic .ALIGN directive.  The first argument is the
      requested alignment in bytes.
 
-`.allow_suspicious_bundles'
+'.allow_suspicious_bundles'
      Turns on error checking for combinations of instructions in a
      bundle that probably indicate a programming error.  This is on by
      default.
 
-`.no_allow_suspicious_bundles'
+'.no_allow_suspicious_bundles'
      Turns off error checking for combinations of instructions in a
      bundle that probably indicate a programming error.
 
-`.require_canonical_reg_names'
+'.require_canonical_reg_names'
      Require that canonical register names be used, and emit a warning
      if the numeric names are used.  This is on by default.
 
-`.no_require_canonical_reg_names'
+'.no_require_canonical_reg_names'
      Permit the use of numeric names for registers that have canonical
      names.
 
-
 
 File: as.info,  Node: TILEPro-Dependent,  Next: V850-Dependent,  Prev: TILE-Gx-Dependent,  Up: Machine Dependencies
 
@@ -21053,7 +20593,7 @@ File: as.info,  Node: TILEPro Options,  Next: TILEPro Syntax,  Up: TILEPro-Depen
 9.47.1 Options
 --------------
 
-`as' has no machine-dependent command-line options for TILEPro.
+'as' has no machine-dependent command-line options for TILEPro.
 
 
 File: as.info,  Node: TILEPro Syntax,  Next: TILEPro Directives,  Prev: TILEPro Options,  Up: TILEPro-Dependent
@@ -21061,8 +20601,8 @@ File: as.info,  Node: TILEPro Syntax,  Next: TILEPro Directives,  Prev: TILEPro
 9.47.2 Syntax
 -------------
 
-Block comments are delimited by `/*' and `*/'.  End of line comments
-may be introduced by `#'.
+Block comments are delimited by '/*' and '*/'.  End of line comments may
+be introduced by '#'.
 
    Instructions consist of a leading opcode or macro name followed by
 whitespace and an optional comma-separated list of operands:
@@ -21072,26 +20612,26 @@ whitespace and an optional comma-separated list of operands:
    Instructions must be separated by a newline or semicolon.
 
    There are two ways to write code: either write naked instructions,
-which the assembler is free to combine into VLIW bundles, or specify
-the VLIW bundles explicitly.
+which the assembler is free to combine into VLIW bundles, or specify the
+VLIW bundles explicitly.
 
    Bundles are specified using curly braces:
 
      { ADD r3,r4,r5 ; ADD r7,r8,r9 ; LW r10,r11 }
 
-   A bundle can span multiple lines. If you want to put multiple
-instructions on a line, whether in a bundle or not, you need to
-separate them with semicolons as in this example.
+   A bundle can span multiple lines.  If you want to put multiple
+instructions on a line, whether in a bundle or not, you need to separate
+them with semicolons as in this example.
 
    A bundle may contain one or more instructions, up to the limit
-specified by the ISA (currently three). If fewer instructions are
+specified by the ISA (currently three).  If fewer instructions are
 specified than the hardware supports in a bundle, the assembler inserts
-`fnop' instructions automatically.
+'fnop' instructions automatically.
 
    The assembler will prefer to preserve the ordering of instructions
 within the bundle, putting the first instruction in a lower-numbered
 pipeline than the next one, etc.  This fact, combined with the optional
-use of explicit `fnop' or `nop' instructions, allows precise control
+use of explicit 'fnop' or 'nop' instructions, allows precise control
 over which pipeline executes each instruction.
 
    If the instructions cannot be bundled in the listed order, the
@@ -21101,9 +20641,9 @@ reports an error.
 
    The assembler does not yet auto-bundle (automatically combine
 multiple instructions into one bundle), but it reserves the right to do
-so in the future.  If you want to force an instruction to run by
-itself, put it in a bundle explicitly with curly braces and use `nop'
-instructions (not `fnop') to fill the remaining pipeline slots in that
+so in the future.  If you want to force an instruction to run by itself,
+put it in a bundle explicitly with curly braces and use 'nop'
+instructions (not 'fnop') to fill the remaining pipeline slots in that
 bundle.
 
 * Menu:
@@ -21119,7 +20659,7 @@ File: as.info,  Node: TILEPro Opcodes,  Next: TILEPro Registers,  Up: TILEPro Sy
 .....................
 
 For a complete list of opcodes and descriptions of their semantics, see
-`TILE Processor User Architecture Manual', available upon request at
+'TILE Processor User Architecture Manual', available upon request at
 www.tilera.com.
 
 
@@ -21129,43 +20669,42 @@ File: as.info,  Node: TILEPro Registers,  Next: TILEPro Modifiers,  Prev: TILEPr
 .......................
 
 General-purpose registers are represented by predefined symbols of the
-form `rN', where N represents a number between `0' and `63'.  However,
+form 'rN', where N represents a number between '0' and '63'.  However,
 the following registers have canonical names that must be used instead:
 
-`r54'
+'r54'
      sp
 
-`r55'
+'r55'
      lr
 
-`r56'
+'r56'
      sn
 
-`r57'
+'r57'
      idn0
 
-`r58'
+'r58'
      idn1
 
-`r59'
+'r59'
      udn0
 
-`r60'
+'r60'
      udn1
 
-`r61'
+'r61'
      udn2
 
-`r62'
+'r62'
      udn3
 
-`r63'
+'r63'
      zero
 
-
    The assembler will emit a warning if a numeric name is used instead
-of the canonical name.  The `.no_require_canonical_reg_names' assembler
-pseudo-op turns off this warning. `.require_canonical_reg_names' turns
+of the canonical name.  The '.no_require_canonical_reg_names' assembler
+pseudo-op turns off this warning.  '.require_canonical_reg_names' turns
 it back on.
 
 
@@ -21181,150 +20720,171 @@ TILEPro instruction operands.  The general syntax is the following:
 
    The following modifiers are supported:
 
-`lo16'
+'lo16'
+
      This modifier is used to load the low 16 bits of the symbol's
      address, sign-extended to a 32-bit value (sign-extension allows it
      to be range-checked against signed 16 bit immediate operands
      without complaint).
 
-`hi16'
+'hi16'
+
      This modifier is used to load the high 16 bits of the symbol's
      address, also sign-extended to a 32-bit value.
 
-`ha16'
-     `ha16(N)' is identical to `hi16(N)', except if `lo16(N)' is
-     negative it adds one to the `hi16(N)' value. This way `lo16' and
-     `ha16' can be added to create any 32-bit value using `auli'.  For
+'ha16'
+
+     'ha16(N)' is identical to 'hi16(N)', except if 'lo16(N)' is
+     negative it adds one to the 'hi16(N)' value.  This way 'lo16' and
+     'ha16' can be added to create any 32-bit value using 'auli'.  For
      example, here is how you move an arbitrary 32-bit address into r3:
 
           moveli r3, lo16(sym)
           auli r3, r3, ha16(sym)
 
-`got'
+'got'
+
      This modifier is used to load the offset of the GOT entry
      corresponding to the symbol.
 
-`got_lo16'
+'got_lo16'
+
      This modifier is used to load the sign-extended low 16 bits of the
      offset of the GOT entry corresponding to the symbol.
 
-`got_hi16'
+'got_hi16'
+
      This modifier is used to load the sign-extended high 16 bits of the
      offset of the GOT entry corresponding to the symbol.
 
-`got_ha16'
-     This modifier is like `got_hi16', but it adds one if `got_lo16' of
+'got_ha16'
+
+     This modifier is like 'got_hi16', but it adds one if 'got_lo16' of
      the input value is negative.
 
-`plt'
-     This modifier is used for function symbols.  It causes a
-     _procedure linkage table_, an array of code stubs, to be created
-     at the time the shared object is created or linked against,
-     together with a global offset table entry.  The value is a
-     pc-relative offset to the corresponding stub code in the procedure
-     linkage table.  This arrangement causes the run-time symbol
-     resolver to be called to look up and set the value of the symbol
-     the first time the function is called (at latest; depending
-     environment variables).  It is only safe to leave the symbol
-     unresolved this way if all references are function calls.
-
-`tls_gd'
+'plt'
+
+     This modifier is used for function symbols.  It causes a _procedure
+     linkage table_, an array of code stubs, to be created at the time
+     the shared object is created or linked against, together with a
+     global offset table entry.  The value is a pc-relative offset to
+     the corresponding stub code in the procedure linkage table.  This
+     arrangement causes the run-time symbol resolver to be called to
+     look up and set the value of the symbol the first time the function
+     is called (at latest; depending environment variables).  It is only
+     safe to leave the symbol unresolved this way if all references are
+     function calls.
+
+'tls_gd'
+
      This modifier is used to load the offset of the GOT entry of the
      symbol's TLS descriptor, to be used for general-dynamic TLS
      accesses.
 
-`tls_gd_lo16'
+'tls_gd_lo16'
+
      This modifier is used to load the sign-extended low 16 bits of the
      offset of the GOT entry of the symbol's TLS descriptor, to be used
      for general dynamic TLS accesses.
 
-`tls_gd_hi16'
+'tls_gd_hi16'
+
      This modifier is used to load the sign-extended high 16 bits of the
      offset of the GOT entry of the symbol's TLS descriptor, to be used
      for general dynamic TLS accesses.
 
-`tls_gd_ha16'
-     This modifier is like `tls_gd_hi16', but it adds one to the value
-     if `tls_gd_lo16' of the input value is negative.
+'tls_gd_ha16'
+
+     This modifier is like 'tls_gd_hi16', but it adds one to the value
+     if 'tls_gd_lo16' of the input value is negative.
+
+'tls_ie'
 
-`tls_ie'
      This modifier is used to load the offset of the GOT entry
      containing the offset of the symbol's address from the TCB, to be
      used for initial-exec TLS accesses.
 
-`tls_ie_lo16'
+'tls_ie_lo16'
+
      This modifier is used to load the low 16 bits of the offset of the
      GOT entry containing the offset of the symbol's address from the
      TCB, to be used for initial-exec TLS accesses.
 
-`tls_ie_hi16'
+'tls_ie_hi16'
+
      This modifier is used to load the high 16 bits of the offset of the
      GOT entry containing the offset of the symbol's address from the
      TCB, to be used for initial-exec TLS accesses.
 
-`tls_ie_ha16'
-     This modifier is like `tls_ie_hi16', but it adds one to the value
-     if `tls_ie_lo16' of the input value is negative.
+'tls_ie_ha16'
+
+     This modifier is like 'tls_ie_hi16', but it adds one to the value
+     if 'tls_ie_lo16' of the input value is negative.
+
+'tls_le'
 
-`tls_le'
      This modifier is used to load the offset of the symbol's address
      from the TCB, to be used for local-exec TLS accesses.
 
-`tls_le_lo16'
+'tls_le_lo16'
+
      This modifier is used to load the low 16 bits of the offset of the
      symbol's address from the TCB, to be used for local-exec TLS
      accesses.
 
-`tls_le_hi16'
+'tls_le_hi16'
+
      This modifier is used to load the high 16 bits of the offset of the
      symbol's address from the TCB, to be used for local-exec TLS
      accesses.
 
-`tls_le_ha16'
-     This modifier is like `tls_le_hi16', but it adds one to the value
-     if `tls_le_lo16' of the input value is negative.
+'tls_le_ha16'
+
+     This modifier is like 'tls_le_hi16', but it adds one to the value
+     if 'tls_le_lo16' of the input value is negative.
+
+'tls_gd_call'
 
-`tls_gd_call'
      This modifier is used to tag an instrution as the "call" part of a
      calling sequence for a TLS GD reference of its operand.
 
-`tls_gd_add'
+'tls_gd_add'
+
      This modifier is used to tag an instruction as the "add" part of a
      calling sequence for a TLS GD reference of its operand.
 
-`tls_ie_load'
+'tls_ie_load'
+
      This modifier is used to tag an instruction as the "load" part of a
      calling sequence for a TLS IE reference of its operand.
 
-
 
 File: as.info,  Node: TILEPro Directives,  Prev: TILEPro Syntax,  Up: TILEPro-Dependent
 
 9.47.3 TILEPro Directives
 -------------------------
 
-`.align EXPRESSION [, EXPRESSION]'
+'.align EXPRESSION [, EXPRESSION]'
      This is the generic .ALIGN directive.  The first argument is the
      requested alignment in bytes.
 
-`.allow_suspicious_bundles'
+'.allow_suspicious_bundles'
      Turns on error checking for combinations of instructions in a
      bundle that probably indicate a programming error.  This is on by
      default.
 
-`.no_allow_suspicious_bundles'
+'.no_allow_suspicious_bundles'
      Turns off error checking for combinations of instructions in a
      bundle that probably indicate a programming error.
 
-`.require_canonical_reg_names'
+'.require_canonical_reg_names'
      Require that canonical register names be used, and emit a warning
      if the numeric names are used.  This is on by default.
 
-`.no_require_canonical_reg_names'
+'.no_require_canonical_reg_names'
      Permit the use of numeric names for registers that have canonical
      names.
 
-
 
 File: as.info,  Node: V850-Dependent,  Next: Vax-Dependent,  Prev: TILEPro-Dependent,  Up: Machine Dependencies
 
@@ -21345,108 +20905,107 @@ File: as.info,  Node: V850 Options,  Next: V850 Syntax,  Up: V850-Dependent
 9.48.1 Options
 --------------
 
-`as' supports the following additional command-line options for the
-V850 processor family:
+'as' supports the following additional command-line options for the V850
+processor family:
 
-`-wsigned_overflow'
+'-wsigned_overflow'
      Causes warnings to be produced when signed immediate values
      overflow the space available for then within their opcodes.  By
      default this option is disabled as it is possible to receive
      spurious warnings due to using exact bit patterns as immediate
      constants.
 
-`-wunsigned_overflow'
+'-wunsigned_overflow'
      Causes warnings to be produced when unsigned immediate values
      overflow the space available for then within their opcodes.  By
      default this option is disabled as it is possible to receive
      spurious warnings due to using exact bit patterns as immediate
      constants.
 
-`-mv850'
+'-mv850'
      Specifies that the assembled code should be marked as being
      targeted at the V850 processor.  This allows the linker to detect
      attempts to link such code with code assembled for other
      processors.
 
-`-mv850e'
+'-mv850e'
      Specifies that the assembled code should be marked as being
      targeted at the V850E processor.  This allows the linker to detect
      attempts to link such code with code assembled for other
      processors.
 
-`-mv850e1'
+'-mv850e1'
      Specifies that the assembled code should be marked as being
-     targeted at the V850E1 processor.  This allows the linker to
-     detect attempts to link such code with code assembled for other
+     targeted at the V850E1 processor.  This allows the linker to detect
+     attempts to link such code with code assembled for other
      processors.
 
-`-mv850any'
+'-mv850any'
      Specifies that the assembled code should be marked as being
      targeted at the V850 processor but support instructions that are
      specific to the extended variants of the process.  This allows the
-     production of binaries that contain target specific code, but
-     which are also intended to be used in a generic fashion.  For
-     example libgcc.a contains generic routines used by the code
-     produced by GCC for all versions of the v850 architecture,
-     together with support routines only used by the V850E architecture.
+     production of binaries that contain target specific code, but which
+     are also intended to be used in a generic fashion.  For example
+     libgcc.a contains generic routines used by the code produced by GCC
+     for all versions of the v850 architecture, together with support
+     routines only used by the V850E architecture.
 
-`-mv850e2'
+'-mv850e2'
      Specifies that the assembled code should be marked as being
-     targeted at the V850E2 processor.  This allows the linker to
-     detect attempts to link such code with code assembled for other
+     targeted at the V850E2 processor.  This allows the linker to detect
+     attempts to link such code with code assembled for other
      processors.
 
-`-mv850e2v3'
+'-mv850e2v3'
      Specifies that the assembled code should be marked as being
      targeted at the V850E2V3 processor.  This allows the linker to
      detect attempts to link such code with code assembled for other
      processors.
 
-`-mv850e2v4'
-     This is an alias for `-mv850e3v5'.
+'-mv850e2v4'
+     This is an alias for '-mv850e3v5'.
 
-`-mv850e3v5'
+'-mv850e3v5'
      Specifies that the assembled code should be marked as being
      targeted at the V850E3V5 processor.  This allows the linker to
      detect attempts to link such code with code assembled for other
      processors.
 
-`-mrelax'
+'-mrelax'
      Enables relaxation.  This allows the .longcall and .longjump pseudo
      ops to be used in the assembler source code.  These ops label
      sections of code which are either a long function call or a long
      branch.  The assembler will then flag these sections of code and
      the linker will attempt to relax them.
 
-`-mgcc-abi'
+'-mgcc-abi'
      Marks the generated object file as supporting the old GCC ABI.
 
-`-mrh850-abi'
-     Marks the generated object file as supporting the RH850 ABI.  This
+'-mrh850-abi'
+     Marks the generated object file as supporting the RH850 ABI. This
      is the default.
 
-`-m8byte-align'
+'-m8byte-align'
      Marks the generated object file as supporting a maximum 64-bits of
      alignment for variables defined in the source code.
 
-`-m4byte-align'
+'-m4byte-align'
      Marks the generated object file as supporting a maximum 32-bits of
      alignment for variables defined in the source code.  This is the
      default.
 
-`-msoft-float'
+'-msoft-float'
      Marks the generated object file as not using any floating point
      instructions - and hence can be linked with other V850 binaries
      that do or do not use floating point.  This is the default for
-     binaries for architectures earlier than the `e2v3'.
+     binaries for architectures earlier than the 'e2v3'.
 
-`-mhard-float'
+'-mhard-float'
      Marks the generated object file as one that uses floating point
      instructions - and hence can only be linked with other V850
      binaries that use the same kind of floating point instructions, or
      with binaries that do not use floating point at all.  This is the
-     default for binaries the `e2v3' and later architectures.
-
+     default for binaries the 'e2v3' and later architectures.
 
 
 File: as.info,  Node: V850 Syntax,  Next: V850 Floating Point,  Prev: V850 Options,  Up: V850-Dependent
@@ -21465,14 +21024,14 @@ File: as.info,  Node: V850-Chars,  Next: V850-Regs,  Up: V850 Syntax
 9.48.2.1 Special Characters
 ...........................
 
-`#' is the line comment character.  If a `#' appears as the first
-character of a line, the whole line is treated as a comment, but in
-this case the line can also be a logical line number directive (*note
+'#' is the line comment character.  If a '#' appears as the first
+character of a line, the whole line is treated as a comment, but in this
+case the line can also be a logical line number directive (*note
 Comments::) or a preprocessor control command (*note Preprocessing::).
 
-   Two dashes (`--') can also be used to start a line comment.
+   Two dashes ('--') can also be used to start a line comment.
 
-   The `;' character can be used to separate statements on the same
+   The ';' character can be used to separate statements on the same
 line.
 
 
@@ -21481,134 +21040,92 @@ File: as.info,  Node: V850-Regs,  Prev: V850-Chars,  Up: V850 Syntax
 9.48.2.2 Register Names
 .......................
 
-`as' supports the following names for registers:
-`general register 0'
+'as' supports the following names for registers:
+'general register 0'
      r0, zero
-
-`general register 1'
+'general register 1'
      r1
-
-`general register 2'
-     r2, hp 
-
-`general register 3'
-     r3, sp 
-
-`general register 4'
-     r4, gp 
-
-`general register 5'
+'general register 2'
+     r2, hp
+'general register 3'
+     r3, sp
+'general register 4'
+     r4, gp
+'general register 5'
      r5, tp
-
-`general register 6'
+'general register 6'
      r6
-
-`general register 7'
+'general register 7'
      r7
-
-`general register 8'
+'general register 8'
      r8
-
-`general register 9'
+'general register 9'
      r9
-
-`general register 10'
+'general register 10'
      r10
-
-`general register 11'
+'general register 11'
      r11
-
-`general register 12'
+'general register 12'
      r12
-
-`general register 13'
+'general register 13'
      r13
-
-`general register 14'
+'general register 14'
      r14
-
-`general register 15'
+'general register 15'
      r15
-
-`general register 16'
+'general register 16'
      r16
-
-`general register 17'
+'general register 17'
      r17
-
-`general register 18'
+'general register 18'
      r18
-
-`general register 19'
+'general register 19'
      r19
-
-`general register 20'
+'general register 20'
      r20
-
-`general register 21'
+'general register 21'
      r21
-
-`general register 22'
+'general register 22'
      r22
-
-`general register 23'
+'general register 23'
      r23
-
-`general register 24'
+'general register 24'
      r24
-
-`general register 25'
+'general register 25'
      r25
-
-`general register 26'
+'general register 26'
      r26
-
-`general register 27'
+'general register 27'
      r27
-
-`general register 28'
+'general register 28'
      r28
-
-`general register 29'
-     r29 
-
-`general register 30'
-     r30, ep 
-
-`general register 31'
-     r31, lp 
-
-`system register 0'
-     eipc 
-
-`system register 1'
-     eipsw 
-
-`system register 2'
-     fepc 
-
-`system register 3'
-     fepsw 
-
-`system register 4'
-     ecr 
-
-`system register 5'
-     psw 
-
-`system register 16'
-     ctpc 
-
-`system register 17'
-     ctpsw 
-
-`system register 18'
-     dbpc 
-
-`system register 19'
-     dbpsw 
-
-`system register 20'
+'general register 29'
+     r29
+'general register 30'
+     r30, ep
+'general register 31'
+     r31, lp
+'system register 0'
+     eipc
+'system register 1'
+     eipsw
+'system register 2'
+     fepc
+'system register 3'
+     fepsw
+'system register 4'
+     ecr
+'system register 5'
+     psw
+'system register 16'
+     ctpc
+'system register 17'
+     ctpsw
+'system register 18'
+     dbpc
+'system register 19'
+     dbpsw
+'system register 20'
      ctbp
 
 
@@ -21625,91 +21142,90 @@ File: as.info,  Node: V850 Directives,  Next: V850 Opcodes,  Prev: V850 Floating
 9.48.4 V850 Machine Directives
 ------------------------------
 
-`.offset <EXPRESSION>'
+'.offset <EXPRESSION>'
      Moves the offset into the current section to the specified amount.
 
-`.section "name", <type>'
+'.section "name", <type>'
      This is an extension to the standard .section directive.  It sets
      the current section to be <type> and creates an alias for this
      section called "name".
 
-`.v850'
+'.v850'
      Specifies that the assembled code should be marked as being
      targeted at the V850 processor.  This allows the linker to detect
      attempts to link such code with code assembled for other
      processors.
 
-`.v850e'
+'.v850e'
      Specifies that the assembled code should be marked as being
      targeted at the V850E processor.  This allows the linker to detect
      attempts to link such code with code assembled for other
      processors.
 
-`.v850e1'
+'.v850e1'
      Specifies that the assembled code should be marked as being
-     targeted at the V850E1 processor.  This allows the linker to
-     detect attempts to link such code with code assembled for other
+     targeted at the V850E1 processor.  This allows the linker to detect
+     attempts to link such code with code assembled for other
      processors.
 
-`.v850e2'
+'.v850e2'
      Specifies that the assembled code should be marked as being
-     targeted at the V850E2 processor.  This allows the linker to
-     detect attempts to link such code with code assembled for other
+     targeted at the V850E2 processor.  This allows the linker to detect
+     attempts to link such code with code assembled for other
      processors.
 
-`.v850e2v3'
+'.v850e2v3'
      Specifies that the assembled code should be marked as being
      targeted at the V850E2V3 processor.  This allows the linker to
      detect attempts to link such code with code assembled for other
      processors.
 
-`.v850e2v4'
+'.v850e2v4'
      Specifies that the assembled code should be marked as being
      targeted at the V850E3V5 processor.  This allows the linker to
      detect attempts to link such code with code assembled for other
      processors.
 
-`.v850e3v5'
+'.v850e3v5'
      Specifies that the assembled code should be marked as being
      targeted at the V850E3V5 processor.  This allows the linker to
      detect attempts to link such code with code assembled for other
      processors.
 
-
 
 File: as.info,  Node: V850 Opcodes,  Prev: V850 Directives,  Up: V850-Dependent
 
 9.48.5 Opcodes
 --------------
 
-`as' implements all the standard V850 opcodes.
+'as' implements all the standard V850 opcodes.
 
-   `as' also implements the following pseudo ops:
+   'as' also implements the following pseudo ops:
 
-`hi0()'
+'hi0()'
      Computes the higher 16 bits of the given expression and stores it
      into the immediate operand field of the given instruction.  For
      example:
 
-     `mulhi hi0(here - there), r5, r6'
+     'mulhi hi0(here - there), r5, r6'
 
      computes the difference between the address of labels 'here' and
-     'there', takes the upper 16 bits of this difference, shifts it
-     down 16 bits and then multiplies it by the lower 16 bits in
-     register 5, putting the result into register 6.
+     'there', takes the upper 16 bits of this difference, shifts it down
+     16 bits and then multiplies it by the lower 16 bits in register 5,
+     putting the result into register 6.
 
-`lo()'
+'lo()'
      Computes the lower 16 bits of the given expression and stores it
      into the immediate operand field of the given instruction.  For
      example:
 
-     `addi lo(here - there), r5, r6'
+     'addi lo(here - there), r5, r6'
 
      computes the difference between the address of labels 'here' and
      'there', takes the lower 16 bits of this difference and adds it to
      register 5, putting the result into register 6.
 
-`hi()'
+'hi()'
      Computes the higher 16 bits of the given expression and then adds
      the value of the most significant bit of the lower 16 bits of the
      expression and stores the result into the immediate operand field
@@ -21717,37 +21233,37 @@ File: as.info,  Node: V850 Opcodes,  Prev: V850 Directives,  Up: V850-Dependent
      used to compute the address of the label 'here' and store it into
      register 6:
 
-     `movhi hi(here), r0, r6'     `movea lo(here), r6, r6'
+     'movhi hi(here), r0, r6' 'movea lo(here), r6, r6'
 
      The reason for this special behaviour is that movea performs a sign
      extension on its immediate operand.  So for example if the address
      of 'here' was 0xFFFFFFFF then without the special behaviour of the
      hi() pseudo-op the movhi instruction would put 0xFFFF0000 into r6,
      then the movea instruction would takes its immediate operand,
-     0xFFFF, sign extend it to 32 bits, 0xFFFFFFFF, and then add it
-     into r6 giving 0xFFFEFFFF which is wrong (the fifth nibble is E).
-     With the hi() pseudo op adding in the top bit of the lo() pseudo
-     op, the movhi instruction actually stores 0 into r6 (0xFFFF + 1 =
-     0x0000), so that the movea instruction stores 0xFFFFFFFF into r6 -
-     the right value.
-
-`hilo()'
+     0xFFFF, sign extend it to 32 bits, 0xFFFFFFFF, and then add it into
+     r6 giving 0xFFFEFFFF which is wrong (the fifth nibble is E). With
+     the hi() pseudo op adding in the top bit of the lo() pseudo op, the
+     movhi instruction actually stores 0 into r6 (0xFFFF + 1 = 0x0000),
+     so that the movea instruction stores 0xFFFFFFFF into r6 - the right
+     value.
+
+'hilo()'
      Computes the 32 bit value of the given expression and stores it
      into the immediate operand field of the given instruction (which
      must be a mov instruction).  For example:
 
-     `mov hilo(here), r6'
+     'mov hilo(here), r6'
 
      computes the absolute address of label 'here' and puts the result
      into register 6.
 
-`sdaoff()'
+'sdaoff()'
      Computes the offset of the named variable from the start of the
      Small Data Area (whoes address is held in register 4, the GP
      register) and stores the result as a 16 bit signed value in the
      immediate operand field of the given instruction.  For example:
 
-     `ld.w sdaoff(_a_variable)[gp],r6'
+     'ld.w sdaoff(_a_variable)[gp],r6'
 
      loads the contents of the location pointed to by the label
      '_a_variable' into register 6, provided that the label is located
@@ -21755,64 +21271,62 @@ File: as.info,  Node: V850 Opcodes,  Prev: V850 Directives,  Up: V850-Dependent
      [Note the linker assumes that the GP register contains a fixed
      address set to the address of the label called '__gp'.  This can
      either be set up automatically by the linker, or specifically set
-     by using the `--defsym __gp=<value>' command line option].
+     by using the '--defsym __gp=<value>' command line option].
 
-`tdaoff()'
+'tdaoff()'
      Computes the offset of the named variable from the start of the
      Tiny Data Area (whoes address is held in register 30, the EP
-     register) and stores the result as a 4,5, 7 or 8 bit unsigned
-     value in the immediate operand field of the given instruction.
-     For example:
+     register) and stores the result as a 4,5, 7 or 8 bit unsigned value
+     in the immediate operand field of the given instruction.  For
+     example:
 
-     `sld.w tdaoff(_a_variable)[ep],r6'
+     'sld.w tdaoff(_a_variable)[ep],r6'
 
      loads the contents of the location pointed to by the label
      '_a_variable' into register 6, provided that the label is located
-     somewhere within +256 bytes of the address held in the EP
-     register.  [Note the linker assumes that the EP register contains
-     a fixed address set to the address of the label called '__ep'.
-     This can either be set up automatically by the linker, or
-     specifically set by using the `--defsym __ep=<value>' command line
-     option].
+     somewhere within +256 bytes of the address held in the EP register.
+     [Note the linker assumes that the EP register contains a fixed
+     address set to the address of the label called '__ep'.  This can
+     either be set up automatically by the linker, or specifically set
+     by using the '--defsym __ep=<value>' command line option].
 
-`zdaoff()'
-     Computes the offset of the named variable from address 0 and
-     stores the result as a 16 bit signed value in the immediate
-     operand field of the given instruction.  For example:
+'zdaoff()'
+     Computes the offset of the named variable from address 0 and stores
+     the result as a 16 bit signed value in the immediate operand field
+     of the given instruction.  For example:
 
-     `movea zdaoff(_a_variable),zero,r6'
+     'movea zdaoff(_a_variable),zero,r6'
 
      puts the address of the label '_a_variable' into register 6,
      assuming that the label is somewhere within the first 32K of
-     memory.  (Strictly speaking it also possible to access the last
-     32K of memory as well, as the offsets are signed).
+     memory.  (Strictly speaking it also possible to access the last 32K
+     of memory as well, as the offsets are signed).
 
-`ctoff()'
+'ctoff()'
      Computes the offset of the named variable from the start of the
      Call Table Area (whoes address is helg in system register 20, the
      CTBP register) and stores the result a 6 or 16 bit unsigned value
      in the immediate field of then given instruction or piece of data.
      For example:
 
-     `callt ctoff(table_func1)'
+     'callt ctoff(table_func1)'
 
      will put the call the function whoes address is held in the call
      table at the location labeled 'table_func1'.
 
-`.longcall `name''
+'.longcall name'
      Indicates that the following sequence of instructions is a long
-     call to function `name'.  The linker will attempt to shorten this
-     call sequence if `name' is within a 22bit offset of the call.  Only
-     valid if the `-mrelax' command line switch has been enabled.
+     call to function 'name'.  The linker will attempt to shorten this
+     call sequence if 'name' is within a 22bit offset of the call.  Only
+     valid if the '-mrelax' command line switch has been enabled.
 
-`.longjump `name''
+'.longjump name'
      Indicates that the following sequence of instructions is a long
-     jump to label `name'.  The linker will attempt to shorten this code
-     sequence if `name' is within a 22bit offset of the jump.  Only
-     valid if the `-mrelax' command line switch has been enabled.
-
+     jump to label 'name'.  The linker will attempt to shorten this code
+     sequence if 'name' is within a 22bit offset of the jump.  Only
+     valid if the '-mrelax' command line switch has been enabled.
 
-   For information on the V850 instruction set, see `V850 Family
+   For information on the V850 instruction set, see 'V850 Family
 32-/16-Bit single-Chip Microcontroller Architecture Manual' from NEC.
 Ltd.
 
@@ -21839,84 +21353,84 @@ File: as.info,  Node: VAX-Opts,  Next: VAX-float,  Up: Vax-Dependent
 9.49.1 VAX Command-Line Options
 -------------------------------
 
-The Vax version of `as' accepts any of the following options, gives a
-warning message that the option was ignored and proceeds.  These
-options are for compatibility with scripts designed for other people's
+The Vax version of 'as' accepts any of the following options, gives a
+warning message that the option was ignored and proceeds.  These options
+are for compatibility with scripts designed for other people's
 assemblers.
 
-``-D' (Debug)'
-``-S' (Symbol Table)'
-``-T' (Token Trace)'
+'-D (Debug)'
+'-S (Symbol Table)'
+'-T (Token Trace)'
      These are obsolete options used to debug old assemblers.
 
-``-d' (Displacement size for JUMPs)'
-     This option expects a number following the `-d'.  Like options
-     that expect filenames, the number may immediately follow the `-d'
-     (old standard) or constitute the whole of the command line
-     argument that follows `-d' (GNU standard).
+'-d (Displacement size for JUMPs)'
+     This option expects a number following the '-d'.  Like options that
+     expect filenames, the number may immediately follow the '-d' (old
+     standard) or constitute the whole of the command line argument that
+     follows '-d' (GNU standard).
 
-``-V' (Virtualize Interpass Temporary File)'
+'-V (Virtualize Interpass Temporary File)'
      Some other assemblers use a temporary file.  This option commanded
-     them to keep the information in active memory rather than in a
-     disk file.  `as' always does this, so this option is redundant.
-
-``-J' (JUMPify Longer Branches)'
-     Many 32-bit computers permit a variety of branch instructions to
-     do the same job.  Some of these instructions are short (and fast)
-     but have a limited range; others are long (and slow) but can
-     branch anywhere in virtual memory.  Often there are 3 flavors of
-     branch: short, medium and long.  Some other assemblers would emit
-     short and medium branches, unless told by this option to emit
-     short and long branches.
-
-``-t' (Temporary File Directory)'
+     them to keep the information in active memory rather than in a disk
+     file.  'as' always does this, so this option is redundant.
+
+'-J (JUMPify Longer Branches)'
+     Many 32-bit computers permit a variety of branch instructions to do
+     the same job.  Some of these instructions are short (and fast) but
+     have a limited range; others are long (and slow) but can branch
+     anywhere in virtual memory.  Often there are 3 flavors of branch:
+     short, medium and long.  Some other assemblers would emit short and
+     medium branches, unless told by this option to emit short and long
+     branches.
+
+'-t (Temporary File Directory)'
      Some other assemblers may use a temporary file, and this option
      takes a filename being the directory to site the temporary file.
-     Since `as' does not use a temporary disk file, this option makes
-     no difference.  `-t' needs exactly one filename.
+     Since 'as' does not use a temporary disk file, this option makes no
+     difference.  '-t' needs exactly one filename.
 
    The Vax version of the assembler accepts additional options when
 compiled for VMS:
 
-`-h N'
+'-h N'
      External symbol or section (used for global variables) names are
      not case sensitive on VAX/VMS and always mapped to upper case.
      This is contrary to the C language definition which explicitly
      distinguishes upper and lower case.  To implement a standard
      conforming C compiler, names must be changed (mapped) to preserve
      the case information.  The default mapping is to convert all lower
-     case characters to uppercase and adding an underscore followed by
-     a 6 digit hex value, representing a 24 digit binary value.  The
-     one digits in the binary value represent which characters are
-     uppercase in the original symbol name.
-
-     The `-h N' option determines how we map names.  This takes several
-     values.  No `-h' switch at all allows case hacking as described
-     above.  A value of zero (`-h0') implies names should be upper
-     case, and inhibits the case hack.  A value of 2 (`-h2') implies
-     names should be all lower case, with no case hack.  A value of 3
-     (`-h3') implies that case should be preserved.  The value 1 is
-     unused.  The `-H' option directs `as' to display every mapped
-     symbol during assembly.
-
-     Symbols whose names include a dollar sign `$' are exceptions to the
+     case characters to uppercase and adding an underscore followed by a
+     6 digit hex value, representing a 24 digit binary value.  The one
+     digits in the binary value represent which characters are uppercase
+     in the original symbol name.
+
+     The '-h N' option determines how we map names.  This takes several
+     values.  No '-h' switch at all allows case hacking as described
+     above.  A value of zero ('-h0') implies names should be upper case,
+     and inhibits the case hack.  A value of 2 ('-h2') implies names
+     should be all lower case, with no case hack.  A value of 3 ('-h3')
+     implies that case should be preserved.  The value 1 is unused.  The
+     '-H' option directs 'as' to display every mapped symbol during
+     assembly.
+
+     Symbols whose names include a dollar sign '$' are exceptions to the
      general name mapping.  These symbols are normally only used to
      reference VMS library names.  Such symbols are always mapped to
      upper case.
 
-`-+'
-     The `-+' option causes `as' to truncate any symbol name larger
-     than 31 characters.  The `-+' option also prevents some code
-     following the `_main' symbol normally added to make the object
-     file compatible with Vax-11 "C".
+'-+'
+     The '-+' option causes 'as' to truncate any symbol name larger than
+     31 characters.  The '-+' option also prevents some code following
+     the '_main' symbol normally added to make the object file
+     compatible with Vax-11 "C".
 
-`-1'
-     This option is ignored for backward compatibility with `as'
-     version 1.x.
+'-1'
+     This option is ignored for backward compatibility with 'as' version
+     1.x.
 
-`-H'
-     The `-H' option causes `as' to print every symbol which was
-     changed by case mapping.
+'-H'
+     The '-H' option causes 'as' to print every symbol which was changed
+     by case mapping.
 
 
 File: as.info,  Node: VAX-float,  Next: VAX-directives,  Prev: VAX-Opts,  Up: Vax-Dependent
@@ -21928,13 +21442,13 @@ Conversion of flonums to floating point is correct, and compatible with
 previous assemblers.  Rounding is towards zero if the remainder is
 exactly half the least significant bit.
 
-   `D', `F', `G' and `H' floating point formats are understood.
+   'D', 'F', 'G' and 'H' floating point formats are understood.
 
-   Immediate floating literals (_e.g._ `S`$6.9') are rendered
+   Immediate floating literals (_e.g._  'S`$6.9') are rendered
 correctly.  Again, rounding is towards zero in the boundary case.
 
-   The `.float' directive produces `f' format numbers.  The `.double'
-directive produces `d' format numbers.
+   The '.float' directive produces 'f' format numbers.  The '.double'
+directive produces 'd' format numbers.
 
 
 File: as.info,  Node: VAX-directives,  Next: VAX-opcodes,  Prev: VAX-float,  Up: Vax-Dependent
@@ -21942,26 +21456,24 @@ File: as.info,  Node: VAX-directives,  Next: VAX-opcodes,  Prev: VAX-float,  Up:
 9.49.3 Vax Machine Directives
 -----------------------------
 
-The Vax version of the assembler supports four directives for
-generating Vax floating point constants.  They are described in the
-table below.
+The Vax version of the assembler supports four directives for generating
+Vax floating point constants.  They are described in the table below.
 
-`.dfloat'
+'.dfloat'
      This expects zero or more flonums, separated by commas, and
-     assembles Vax `d' format 64-bit floating point constants.
+     assembles Vax 'd' format 64-bit floating point constants.
 
-`.ffloat'
+'.ffloat'
      This expects zero or more flonums, separated by commas, and
-     assembles Vax `f' format 32-bit floating point constants.
+     assembles Vax 'f' format 32-bit floating point constants.
 
-`.gfloat'
+'.gfloat'
      This expects zero or more flonums, separated by commas, and
-     assembles Vax `g' format 64-bit floating point constants.
+     assembles Vax 'g' format 64-bit floating point constants.
 
-`.hfloat'
+'.hfloat'
      This expects zero or more flonums, separated by commas, and
-     assembles Vax `h' format 128-bit floating point constants.
-
+     assembles Vax 'h' format 128-bit floating point constants.
 
 
 File: as.info,  Node: VAX-opcodes,  Next: VAX-branch,  Prev: VAX-directives,  Up: Vax-Dependent
@@ -21969,9 +21481,9 @@ File: as.info,  Node: VAX-opcodes,  Next: VAX-branch,  Prev: VAX-directives,  Up
 9.49.4 VAX Opcodes
 ------------------
 
-All DEC mnemonics are supported.  Beware that `case...' instructions
-have exactly 3 operands.  The dispatch table that follows the `case...'
-instruction should be made with `.word' statements.  This is compatible
+All DEC mnemonics are supported.  Beware that 'case...' instructions
+have exactly 3 operands.  The dispatch table that follows the 'case...'
+instruction should be made with '.word' statements.  This is compatible
 with all unix assemblers we know of.
 
 
@@ -21980,98 +21492,80 @@ File: as.info,  Node: VAX-branch,  Next: VAX-operands,  Prev: VAX-opcodes,  Up:
 9.49.5 VAX Branch Improvement
 -----------------------------
 
-Certain pseudo opcodes are permitted.  They are for branch
-instructions.  They expand to the shortest branch instruction that
-reaches the target.  Generally these mnemonics are made by substituting
-`j' for `b' at the start of a DEC mnemonic.  This feature is included
-both for compatibility and to help compilers.  If you do not need this
-feature, avoid these opcodes.  Here are the mnemonics, and the code
-they can expand into.
-
-`jbsb'
-     `Jsb' is already an instruction mnemonic, so we chose `jbsb'.
-    (byte displacement)
-          `bsbb ...'
-
-    (word displacement)
-          `bsbw ...'
-
-    (long displacement)
-          `jsb ...'
-
-`jbr'
-`jr'
+Certain pseudo opcodes are permitted.  They are for branch instructions.
+They expand to the shortest branch instruction that reaches the target.
+Generally these mnemonics are made by substituting 'j' for 'b' at the
+start of a DEC mnemonic.  This feature is included both for
+compatibility and to help compilers.  If you do not need this feature,
+avoid these opcodes.  Here are the mnemonics, and the code they can
+expand into.
+
+'jbsb'
+     'Jsb' is already an instruction mnemonic, so we chose 'jbsb'.
+     (byte displacement)
+          'bsbb ...'
+     (word displacement)
+          'bsbw ...'
+     (long displacement)
+          'jsb ...'
+'jbr'
+'jr'
      Unconditional branch.
-    (byte displacement)
-          `brb ...'
-
-    (word displacement)
-          `brw ...'
-
-    (long displacement)
-          `jmp ...'
-
-`jCOND'
-     COND may be any one of the conditional branches `neq', `nequ',
-     `eql', `eqlu', `gtr', `geq', `lss', `gtru', `lequ', `vc', `vs',
-     `gequ', `cc', `lssu', `cs'.  COND may also be one of the bit tests
-     `bs', `bc', `bss', `bcs', `bsc', `bcc', `bssi', `bcci', `lbs',
-     `lbc'.  NOTCOND is the opposite condition to COND.
-    (byte displacement)
-          `bCOND ...'
-
-    (word displacement)
-          `bNOTCOND foo ; brw ... ; foo:'
-
-    (long displacement)
-          `bNOTCOND foo ; jmp ... ; foo:'
-
-`jacbX'
-     X may be one of `b d f g h l w'.
-    (word displacement)
-          `OPCODE ...'
-
-    (long displacement)
+     (byte displacement)
+          'brb ...'
+     (word displacement)
+          'brw ...'
+     (long displacement)
+          'jmp ...'
+'jCOND'
+     COND may be any one of the conditional branches 'neq', 'nequ',
+     'eql', 'eqlu', 'gtr', 'geq', 'lss', 'gtru', 'lequ', 'vc', 'vs',
+     'gequ', 'cc', 'lssu', 'cs'.  COND may also be one of the bit tests
+     'bs', 'bc', 'bss', 'bcs', 'bsc', 'bcc', 'bssi', 'bcci', 'lbs',
+     'lbc'.  NOTCOND is the opposite condition to COND.
+     (byte displacement)
+          'bCOND ...'
+     (word displacement)
+          'bNOTCOND foo ; brw ... ; foo:'
+     (long displacement)
+          'bNOTCOND foo ; jmp ... ; foo:'
+'jacbX'
+     X may be one of 'b d f g h l w'.
+     (word displacement)
+          'OPCODE ...'
+     (long displacement)
                OPCODE ..., foo ;
                brb bar ;
                foo: jmp ... ;
                bar:
-
-`jaobYYY'
-     YYY may be one of `lss leq'.
-
-`jsobZZZ'
-     ZZZ may be one of `geq gtr'.
-    (byte displacement)
-          `OPCODE ...'
-
-    (word displacement)
+'jaobYYY'
+     YYY may be one of 'lss leq'.
+'jsobZZZ'
+     ZZZ may be one of 'geq gtr'.
+     (byte displacement)
+          'OPCODE ...'
+     (word displacement)
                OPCODE ..., foo ;
                brb bar ;
                foo: brw DESTINATION ;
                bar:
-
-    (long displacement)
+     (long displacement)
                OPCODE ..., foo ;
                brb bar ;
                foo: jmp DESTINATION ;
                bar:
-
-`aobleq'
-`aoblss'
-`sobgeq'
-`sobgtr'
-
-    (byte displacement)
-          `OPCODE ...'
-
-    (word displacement)
+'aobleq'
+'aoblss'
+'sobgeq'
+'sobgtr'
+     (byte displacement)
+          'OPCODE ...'
+     (word displacement)
                OPCODE ..., foo ;
                brb bar ;
                foo: brw DESTINATION ;
                bar:
-
-    (long displacement)
+     (long displacement)
                OPCODE ..., foo ;
                brb bar ;
                foo: jmp DESTINATION ;
@@ -22083,18 +21577,18 @@ File: as.info,  Node: VAX-operands,  Next: VAX-no,  Prev: VAX-branch,  Up: Vax-D
 9.49.6 VAX Operands
 -------------------
 
-The immediate character is `$' for Unix compatibility, not `#' as DEC
+The immediate character is '$' for Unix compatibility, not '#' as DEC
 writes it.
 
-   The indirect character is `*' for Unix compatibility, not `@' as DEC
+   The indirect character is '*' for Unix compatibility, not '@' as DEC
 writes it.
 
-   The displacement sizing character is ``' (an accent grave) for Unix
-compatibility, not `^' as DEC writes it.  The letter preceding ``' may
-have either case.  `G' is not understood, but all other letters (`b i l
+   The displacement sizing character is '`' (an accent grave) for Unix
+compatibility, not '^' as DEC writes it.  The letter preceding '`' may
+have either case.  'G' is not understood, but all other letters ('b i l
 s w') are understood.
 
-   Register names understood are `r0 r1 r2 ... r15 ap fp sp pc'.  Upper
+   Register names understood are 'r0 r1 r2 ... r15 ap fp sp pc'.  Upper
 and lower case letters are equivalent.
 
    For instance
@@ -22109,7 +21603,7 @@ File: as.info,  Node: VAX-no,  Next: VAX-Syntax,  Prev: VAX-operands,  Up: Vax-D
 9.49.7 Not Supported on VAX
 ---------------------------
 
-Vax bit fields can not be assembled with `as'.  Someone can add the
+Vax bit fields can not be assembled with 'as'.  Someone can add the
 required code if they really need it.
 
 
@@ -22128,15 +21622,15 @@ File: as.info,  Node: VAX-Chars,  Up: VAX-Syntax
 9.49.8.1 Special Characters
 ...........................
 
-The presence of a `#' appearing anywhere on a line indicates the start
+The presence of a '#' appearing anywhere on a line indicates the start
 of a comment that extends to the end of that line.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line can also be a
-logical line number directive (*note Comments::) or a preprocessor
-control command (*note Preprocessing::).
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line can also be a logical
+line number directive (*note Comments::) or a preprocessor control
+command (*note Preprocessing::).
 
-   The `;' character can be used to separate statements on the same
+   The ';' character can be used to separate statements on the same
 line.
 
 
@@ -22159,12 +21653,12 @@ File: as.info,  Node: Visium Options,  Next: Visium Syntax,  Up: Visium-Dependen
 
 The Visium assembler implements one machine-specific option:
 
-`-mtune=ARCH'
+'-mtune=ARCH'
      This option specifies the target architecture.  If an attempt is
-     made to assemble an instruction that will not execute on the
-     target architecture, the assembler will issue an error message.
+     made to assemble an instruction that will not execute on the target
+     architecture, the assembler will issue an error message.
 
-     The following names are recognized: `mcm24' `mcm' `gr5' `gr6'
+     The following names are recognized: 'mcm24' 'mcm' 'gr5' 'gr6'
 
 
 File: as.info,  Node: Visium Syntax,  Next: Visium Opcodes,  Prev: Visium Options,  Up: Visium-Dependent
@@ -22183,13 +21677,13 @@ File: as.info,  Node: Visium Characters,  Next: Visium Registers,  Up: Visium Sy
 9.50.2.1 Special Characters
 ...........................
 
-Line comments are introduced either by the `!' character or by the `;'
+Line comments are introduced either by the '!' character or by the ';'
 character appearing anywhere on a line.
 
-   A hash character (`#') as the first character on a line also marks
-the start of a line comment, but in this case it could also be a
-logical line number directive (*note Comments::) or a preprocessor
-control command (*note Preprocessing::).
+   A hash character ('#') as the first character on a line also marks
+the start of a line comment, but in this case it could also be a logical
+line number directive (*note Comments::) or a preprocessor control
+command (*note Preprocessing::).
 
    The Visium assembler does not currently support a line separator
 character.
@@ -22201,7 +21695,7 @@ File: as.info,  Node: Visium Registers,  Prev: Visium Characters,  Up: Visium Sy
 .......................
 
 Registers can be specified either by using their canonical mnemonic
-names or by using their alias if they have one, for example `sp'.
+names or by using their alias if they have one, for example 'sp'.
 
 
 File: as.info,  Node: Visium Opcodes,  Prev: Visium Syntax,  Up: Visium-Dependent
@@ -22209,8 +21703,8 @@ File: as.info,  Node: Visium Opcodes,  Prev: Visium Syntax,  Up: Visium-Dependen
 9.50.3 Opcodes
 --------------
 
-All the standard opcodes of the architecture are implemented, along
-with the following three pseudo-instructions: `cmp', `cmpc', `move'.
+All the standard opcodes of the architecture are implemented, along with
+the following three pseudo-instructions: 'cmp', 'cmpc', 'move'.
 
    In addition, the following two illegal opcodes are implemented and
 used by the simulation:
@@ -22238,35 +21732,34 @@ File: as.info,  Node: XGATE-Opts,  Next: XGATE-Syntax,  Up: XGATE-Dependent
 9.51.1 XGATE Options
 --------------------
 
-The Freescale XGATE version of `as' has a few machine dependent options.
+The Freescale XGATE version of 'as' has a few machine dependent options.
 
-`-mshort'
+'-mshort'
      This option controls the ABI and indicates to use a 16-bit integer
-     ABI.  It has no effect on the assembled instructions.  This is the
+     ABI. It has no effect on the assembled instructions.  This is the
      default.
 
-`-mlong'
+'-mlong'
      This option controls the ABI and indicates to use a 32-bit integer
      ABI.
 
-`-mshort-double'
+'-mshort-double'
      This option controls the ABI and indicates to use a 32-bit float
-     ABI.  This is the default.
+     ABI. This is the default.
 
-`-mlong-double'
+'-mlong-double'
      This option controls the ABI and indicates to use a 64-bit float
      ABI.
 
-`--print-insn-syntax'
-     You can use the `--print-insn-syntax' option to obtain the syntax
+'--print-insn-syntax'
+     You can use the '--print-insn-syntax' option to obtain the syntax
      description of the instruction when an error is detected.
 
-`--print-opcodes'
-     The `--print-opcodes' option prints the list of all the
-     instructions with their syntax. Once the list is printed `as'
+'--print-opcodes'
+     The '--print-opcodes' option prints the list of all the
+     instructions with their syntax.  Once the list is printed 'as'
      exits.
 
-
 
 File: as.info,  Node: XGATE-Syntax,  Next: XGATE-Directives,  Prev: XGATE-Opts,  Up: XGATE-Dependent
 
@@ -22274,22 +21767,21 @@ File: as.info,  Node: XGATE-Syntax,  Next: XGATE-Directives,  Prev: XGATE-Opts,
 -------------
 
 In XGATE RISC syntax, the instruction name comes first and it may be
-followed by up to three operands. Operands are separated by commas
-(`,'). `as' will complain if too many operands are specified for a
-given instruction. The same will happen if you specified too few
+followed by up to three operands.  Operands are separated by commas
+(',').  'as' will complain if too many operands are specified for a
+given instruction.  The same will happen if you specified too few
 operands.
 
      nop
      ldl  #23
      CMP  R1, R2
 
-   The presence of a `;' character or a `!' character anywhere on a
-line indicates the start of a comment that extends to the end of that
-line.
+   The presence of a ';' character or a '!' character anywhere on a line
+indicates the start of a comment that extends to the end of that line.
 
-   A `*' or a `#' character at the start of a line also introduces a
+   A '*' or a '#' character at the start of a line also introduces a
 line comment, but these characters do not work elsewhere on the line.
-If the first character of the line is a `#' then as well as starting a
+If the first character of the line is a '#' then as well as starting a
 comment, the line could also be logical line number directive (*note
 Comments::) or a preprocessor control command (*note Preprocessing::).
 
@@ -22298,52 +21790,51 @@ character.
 
    The following addressing modes are understood for XGATE:
 "Inherent"
-     `'
+     ''
 
 "Immediate 3 Bit Wide"
-     `#NUMBER'
+     '#NUMBER'
 
 "Immediate 4 Bit Wide"
-     `#NUMBER'
+     '#NUMBER'
 
 "Immediate 8 Bit Wide"
-     `#NUMBER'
+     '#NUMBER'
 
 "Monadic Addressing"
-     `REG'
+     'REG'
 
 "Dyadic Addressing"
-     `REG, REG'
+     'REG, REG'
 
 "Triadic Addressing"
-     `REG, REG, REG'
+     'REG, REG, REG'
 
 "Relative Addressing 9 Bit Wide"
-     `*SYMBOL'
+     '*SYMBOL'
 
 "Relative Addressing 10 Bit Wide"
-     `*SYMBOL'
+     '*SYMBOL'
 
 "Index Register plus Immediate Offset"
-     `REG, (REG, #NUMBER)'
+     'REG, (REG, #NUMBER)'
 
 "Index Register plus Register Offset"
-     `REG, REG, REG'
+     'REG, REG, REG'
 
 "Index Register plus Register Offset with Post-increment"
-     `REG, REG, REG+'
+     'REG, REG, REG+'
 
 "Index Register plus Register Offset with Pre-decrement"
-     `REG, REG, -REG'
-
-     The register can be either `R0', `R1', `R2', `R3', `R4', `R5',
-     `R6' or `R7'.
+     'REG, REG, -REG'
 
+     The register can be either 'R0', 'R1', 'R2', 'R3', 'R4', 'R5', 'R6'
+     or 'R7'.
 
    Convience macro opcodes to deal with 16-bit values have been added.
 
 "Immediate 16 Bit Wide"
-     `#NUMBER', or `*SYMBOL'
+     '#NUMBER', or '*SYMBOL'
 
      For example:
 
@@ -22359,7 +21850,7 @@ File: as.info,  Node: XGATE-Directives,  Next: XGATE-Float,  Prev: XGATE-Syntax,
 9.51.3 Assembler Directives
 ---------------------------
 
-The XGATE version of `as' have the following specific assembler
+The XGATE version of 'as' have the following specific assembler
 directives:
 
 
@@ -22372,15 +21863,15 @@ Packed decimal (P) format floating literals are not supported(yet).
 
    The floating point formats generated by directives are these.
 
-`.float'
-     `Single' precision floating point constants.
+'.float'
+     'Single' precision floating point constants.
 
-`.double'
-     `Double' precision floating point constants.
+'.double'
+     'Double' precision floating point constants.
 
-`.extend'
-`.ldouble'
-     `Extended' precision (`long double') floating point constants.
+'.extend'
+'.ldouble'
+     'Extended' precision ('long double') floating point constants.
 
 
 File: as.info,  Node: XGATE-opcodes,  Prev: XGATE-Float,  Up: XGATE-Dependent
@@ -22416,15 +21907,15 @@ File: as.info,  Node: XStormy16-Chars,  Up: XStormy16 Syntax
 9.52.1.1 Special Characters
 ...........................
 
-`#' is the line comment character.  If a `#' appears as the first
-character of a line, the whole line is treated as a comment, but in
-this case the line can also be a logical line number directive (*note
+'#' is the line comment character.  If a '#' appears as the first
+character of a line, the whole line is treated as a comment, but in this
+case the line can also be a logical line number directive (*note
 Comments::) or a preprocessor control command (*note Preprocessing::).
 
-   A semicolon (`;') can be used to start a comment that extends from
+   A semicolon (';') can be used to start a comment that extends from
 wherever the character appears on the line up to the end of the line.
 
-   The `|' character can be used to separate statements on the same
+   The '|' character can be used to separate statements on the same
 line.
 
 
@@ -22433,52 +21924,50 @@ File: as.info,  Node: XStormy16 Directives,  Next: XStormy16 Opcodes,  Prev: XSt
 9.52.2 XStormy16 Machine Directives
 -----------------------------------
 
-`.16bit_pointers'
-     Like the `--16bit-pointers' command line option this directive
+'.16bit_pointers'
+     Like the '--16bit-pointers' command line option this directive
      indicates that the assembly code makes use of 16-bit pointers.
 
-`.32bit_pointers'
-     Like the `--32bit-pointers' command line option this directive
+'.32bit_pointers'
+     Like the '--32bit-pointers' command line option this directive
      indicates that the assembly code makes use of 32-bit pointers.
 
-`.no_pointers'
-     Like the `--no-pointers' command line option this directive
+'.no_pointers'
+     Like the '--no-pointers' command line option this directive
      indicates that the assembly code does not makes use pointers.
 
-
 
 File: as.info,  Node: XStormy16 Opcodes,  Prev: XStormy16 Directives,  Up: XSTORMY16-Dependent
 
 9.52.3 XStormy16 Pseudo-Opcodes
 -------------------------------
 
-`as' implements all the standard XStormy16 opcodes.
+'as' implements all the standard XStormy16 opcodes.
 
-   `as' also implements the following pseudo ops:
+   'as' also implements the following pseudo ops:
 
-`@lo()'
+'@lo()'
      Computes the lower 16 bits of the given expression and stores it
      into the immediate operand field of the given instruction.  For
      example:
 
-     `add r6, @lo(here - there)'
+     'add r6, @lo(here - there)'
 
      computes the difference between the address of labels 'here' and
      'there', takes the lower 16 bits of this difference and adds it to
      register 6.
 
-`@hi()'
+'@hi()'
      Computes the higher 16 bits of the given expression and stores it
      into the immediate operand field of the given instruction.  For
      example:
 
-     `addc r7, @hi(here - there)'
+     'addc r7, @hi(here - there)'
 
      computes the difference between the address of labels 'here' and
-     'there', takes the upper 16 bits of this difference, shifts it
-     down 16 bits and then adds it, along with the carry bit, to the
-     value in register 7.
-
+     'there', takes the upper 16 bits of this difference, shifts it down
+     16 bits and then adds it, along with the carry bit, to the value in
+     register 7.
 
 
 File: as.info,  Node: Xtensa-Dependent,  Next: Z80-Dependent,  Prev: XSTORMY16-Dependent,  Up: Machine Dependencies
@@ -22486,10 +21975,10 @@ File: as.info,  Node: Xtensa-Dependent,  Next: Z80-Dependent,  Prev: XSTORMY16-D
 9.53 Xtensa Dependent Features
 ==============================
 
-   This chapter covers features of the GNU assembler that are specific
-to the Xtensa architecture.  For details about the Xtensa instruction
-set, please consult the `Xtensa Instruction Set Architecture (ISA)
-Reference Manual'.
+This chapter covers features of the GNU assembler that are specific to
+the Xtensa architecture.  For details about the Xtensa instruction set,
+please consult the 'Xtensa Instruction Set Architecture (ISA) Reference
+Manual'.
 
 * Menu:
 
@@ -22505,81 +21994,80 @@ File: as.info,  Node: Xtensa Options,  Next: Xtensa Syntax,  Up: Xtensa-Dependen
 9.53.1 Command Line Options
 ---------------------------
 
-`--text-section-literals | --no-text-section-literals'
+'--text-section-literals | --no-text-section-literals'
      Control the treatment of literal pools.  The default is
-     `--no-text-section-literals', which places literals in separate
+     '--no-text-section-literals', which places literals in separate
      sections in the output file.  This allows the literal pool to be
-     placed in a data RAM/ROM.  With `--text-section-literals', the
-     literals are interspersed in the text section in order to keep
-     them as close as possible to their references.  This may be
-     necessary for large assembly files, where the literals would
-     otherwise be out of range of the `L32R' instructions in the text
-     section.  Literals are grouped into pools following
-     `.literal_position' directives or preceding `ENTRY' instructions.
-     These options only affect literals referenced via PC-relative
-     `L32R' instructions; literals for absolute mode `L32R'
-     instructions are handled separately.  *Note literal: Literal
-     Directive.
-
-`--auto-litpools | --no-auto-litpools'
+     placed in a data RAM/ROM. With '--text-section-literals', the
+     literals are interspersed in the text section in order to keep them
+     as close as possible to their references.  This may be necessary
+     for large assembly files, where the literals would otherwise be out
+     of range of the 'L32R' instructions in the text section.  Literals
+     are grouped into pools following '.literal_position' directives or
+     preceding 'ENTRY' instructions.  These options only affect literals
+     referenced via PC-relative 'L32R' instructions; literals for
+     absolute mode 'L32R' instructions are handled separately.  *Note
+     literal: Literal Directive.
+
+'--auto-litpools | --no-auto-litpools'
      Control the treatment of literal pools.  The default is
-     `--no-auto-litpools', which in the absence of
-     `--text-section-literals' places literals in separate sections in
+     '--no-auto-litpools', which in the absence of
+     '--text-section-literals' places literals in separate sections in
      the output file.  This allows the literal pool to be placed in a
-     data RAM/ROM.  With `--auto-litpools', the literals are
-     interspersed in the text section in order to keep them as close as
-     possible to their references, explicit `.literal_position'
-     directives are not required.  This may be necessary for very large
-     functions, where single literal pool at the beginning of the
-     function may not be reachable by `L32R' instructions at the end.
-     These options only affect literals referenced via PC-relative
-     `L32R' instructions; literals for absolute mode `L32R'
-     instructions are handled separately.  When used together with
-     `--text-section-literals', `--auto-litpools' takes precedence.
-     *Note literal: Literal Directive.
-
-`--absolute-literals | --no-absolute-literals'
-     Indicate to the assembler whether `L32R' instructions use absolute
+     data RAM/ROM. With '--auto-litpools', the literals are interspersed
+     in the text section in order to keep them as close as possible to
+     their references, explicit '.literal_position' directives are not
+     required.  This may be necessary for very large functions, where
+     single literal pool at the beginning of the function may not be
+     reachable by 'L32R' instructions at the end.  These options only
+     affect literals referenced via PC-relative 'L32R' instructions;
+     literals for absolute mode 'L32R' instructions are handled
+     separately.  When used together with '--text-section-literals',
+     '--auto-litpools' takes precedence.  *Note literal: Literal
+     Directive.
+
+'--absolute-literals | --no-absolute-literals'
+     Indicate to the assembler whether 'L32R' instructions use absolute
      or PC-relative addressing.  If the processor includes the absolute
-     addressing option, the default is to use absolute `L32R'
-     relocations.  Otherwise, only the PC-relative `L32R' relocations
+     addressing option, the default is to use absolute 'L32R'
+     relocations.  Otherwise, only the PC-relative 'L32R' relocations
      can be used.
 
-`--target-align | --no-target-align'
-     Enable or disable automatic alignment to reduce branch penalties
-     at some expense in code size.  *Note Automatic Instruction
-     Alignment: Xtensa Automatic Alignment.  This optimization is
-     enabled by default.  Note that the assembler will always align
-     instructions like `LOOP' that have fixed alignment requirements.
+'--target-align | --no-target-align'
+     Enable or disable automatic alignment to reduce branch penalties at
+     some expense in code size.  *Note Automatic Instruction Alignment:
+     Xtensa Automatic Alignment.  This optimization is enabled by
+     default.  Note that the assembler will always align instructions
+     like 'LOOP' that have fixed alignment requirements.
 
-`--longcalls | --no-longcalls'
+'--longcalls | --no-longcalls'
      Enable or disable transformation of call instructions to allow
      calls across a greater range of addresses.  *Note Function Call
      Relaxation: Xtensa Call Relaxation.  This option should be used
      when call targets can potentially be out of range.  It may degrade
      both code size and performance, but the linker can generally
      optimize away the unnecessary overhead when a call ends up within
-     range.  The default is `--no-longcalls'.
+     range.  The default is '--no-longcalls'.
 
-`--transform | --no-transform'
+'--transform | --no-transform'
      Enable or disable all assembler transformations of Xtensa
      instructions, including both relaxation and optimization.  The
-     default is `--transform'; `--no-transform' should only be used in
+     default is '--transform'; '--no-transform' should only be used in
      the rare cases when the instructions must be exactly as specified
-     in the assembly source.  Using `--no-transform' causes out of range
+     in the assembly source.  Using '--no-transform' causes out of range
      instruction operands to be errors.
 
-`--rename-section OLDNAME=NEWNAME'
+'--rename-section OLDNAME=NEWNAME'
      Rename the OLDNAME section to NEWNAME.  This option can be used
      multiple times to rename multiple sections.
 
-`--trampolines | --no-trampolines'
+'--trampolines | --no-trampolines'
      Enable or disable transformation of jump instructions to allow
-     jumps across a greater range of addresses.  *Note Jump
-     Trampolines: Xtensa Jump Relaxation.  This option should be used
-     when jump targets can potentially be out of range.  In the absence
-     of such jumps this option does not affect code size or
-     performance.  The default is `--trampolines'.
+     jumps across a greater range of addresses.  *Note Jump Trampolines:
+     Xtensa Jump Relaxation.  This option should be used when jump
+     targets can potentially be out of range.  In the absence of such
+     jumps this option does not affect code size or performance.  The
+     default is '--trampolines'.
 
 
 File: as.info,  Node: Xtensa Syntax,  Next: Xtensa Optimizations,  Prev: Xtensa Options,  Up: Xtensa-Dependent
@@ -22587,11 +22075,11 @@ File: as.info,  Node: Xtensa Syntax,  Next: Xtensa Optimizations,  Prev: Xtensa
 9.53.2 Assembler Syntax
 -----------------------
 
-Block comments are delimited by `/*' and `*/'.  End of line comments
-may be introduced with either `#' or `//'.
+Block comments are delimited by '/*' and '*/'.  End of line comments may
+be introduced with either '#' or '//'.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line could also be a
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line could also be a
 logical line number directive (*note Comments::) or a preprocessor
 control command (*note Preprocessing::).
 
@@ -22600,7 +22088,7 @@ whitespace and an optional comma-separated list of operands:
 
      OPCODE [OPERAND, ...]
 
-   Instructions must be separated by a newline or semicolon (`;').
+   Instructions must be separated by a newline or semicolon (';').
 
    FLIX instructions, which bundle multiple opcodes together in a single
 instruction, are specified by enclosing the bundled opcodes inside
@@ -22643,11 +22131,11 @@ File: as.info,  Node: Xtensa Opcodes,  Next: Xtensa Registers,  Up: Xtensa Synta
 9.53.2.1 Opcode Names
 .....................
 
-See the `Xtensa Instruction Set Architecture (ISA) Reference Manual'
-for a complete list of opcodes and descriptions of their semantics.
+See the 'Xtensa Instruction Set Architecture (ISA) Reference Manual' for
+a complete list of opcodes and descriptions of their semantics.
 
-   If an opcode name is prefixed with an underscore character (`_'),
-`as' will not transform that instruction in any way.  The underscore
+   If an opcode name is prefixed with an underscore character ('_'),
+'as' will not transform that instruction in any way.  The underscore
 prefix disables both optimization (*note Xtensa Optimizations: Xtensa
 Optimizations.) and relaxation (*note Xtensa Relaxation: Xtensa
 Relaxation.) for that particular instruction.  Only use the underscore
@@ -22658,19 +22146,19 @@ disabling relaxation.
 
    Note that this special handling of underscore prefixes only applies
 to Xtensa opcodes, not to either built-in macros or user-defined macros.
-When an underscore prefix is used with a macro (e.g., `_MOV'), it
-refers to a different macro.  The assembler generally provides built-in
-macros both with and without the underscore prefix, where the underscore
+When an underscore prefix is used with a macro (e.g., '_MOV'), it refers
+to a different macro.  The assembler generally provides built-in macros
+both with and without the underscore prefix, where the underscore
 versions behave as if the underscore carries through to the instructions
-in the macros.  For example, `_MOV' may expand to `_MOV.N'.
+in the macros.  For example, '_MOV' may expand to '_MOV.N'.
 
    The underscore prefix only applies to individual instructions, not to
 series of instructions.  For example, if a series of instructions have
 underscore prefixes, the assembler will not transform the individual
 instructions, but it may insert other instructions between them (e.g.,
-to align a `LOOP' instruction).  To prevent the assembler from
-modifying a series of instructions as a whole, use the `no-transform'
-directive.  *Note transform: Transform Directive.
+to align a 'LOOP' instruction).  To prevent the assembler from modifying
+a series of instructions as a whole, use the 'no-transform' directive.
+*Note transform: Transform Directive.
 
 
 File: as.info,  Node: Xtensa Registers,  Prev: Xtensa Opcodes,  Up: Xtensa Syntax
@@ -22680,11 +22168,11 @@ File: as.info,  Node: Xtensa Registers,  Prev: Xtensa Opcodes,  Up: Xtensa Synta
 
 The assembly syntax for a register file entry is the "short" name for a
 TIE register file followed by the index into that register file.  For
-example, the general-purpose `AR' register file has a short name of
-`a', so these registers are named `a0'...`a15'.  As a special feature,
-`sp' is also supported as a synonym for `a1'.  Additional registers may
-be added by processor configuration options and by designer-defined TIE
-extensions.  An initial `$' character is optional in all register names.
+example, the general-purpose 'AR' register file has a short name of 'a',
+so these registers are named 'a0'...'a15'.  As a special feature, 'sp'
+is also supported as a synonym for 'a1'.  Additional registers may be
+added by processor configuration options and by designer-defined TIE
+extensions.  An initial '$' character is optional in all register names.
 
 
 File: as.info,  Node: Xtensa Optimizations,  Next: Xtensa Relaxation,  Prev: Xtensa Syntax,  Up: Xtensa-Dependent
@@ -22692,7 +22180,7 @@ File: as.info,  Node: Xtensa Optimizations,  Next: Xtensa Relaxation,  Prev: Xte
 9.53.3 Xtensa Optimizations
 ---------------------------
 
-The optimizations currently supported by `as' are generation of density
+The optimizations currently supported by 'as' are generation of density
 instructions where appropriate and automatic branch target alignment.
 
 * Menu:
@@ -22713,9 +22201,9 @@ assembler automatically translates instructions from the core Xtensa
 instruction set into equivalent instructions from the Xtensa code
 density option.  This translation can be disabled by using underscore
 prefixes (*note Opcode Names: Xtensa Opcodes.), by using the
-`--no-transform' command-line option (*note Command Line Options:
-Xtensa Options.), or by using the `no-transform' directive (*note
-transform: Transform Directive.).
+'--no-transform' command-line option (*note Command Line Options: Xtensa
+Options.), or by using the 'no-transform' directive (*note transform:
+Transform Directive.).
 
    It is a good idea _not_ to use the density instructions directly.
 The assembler will automatically select dense instructions where
@@ -22738,10 +22226,9 @@ align branch targets so they do not cross instruction fetch boundaries.
 instruction fetch widths.)  An instruction immediately following a call
 is treated as a branch target in this context, because it will be the
 target of a return from the call.  This alignment has the potential to
-reduce branch penalties at some expense in code size.  This
-optimization is enabled by default.  You can disable it with the
-`--no-target-align' command-line option (*note Command Line Options:
-Xtensa Options.).
+reduce branch penalties at some expense in code size.  This optimization
+is enabled by default.  You can disable it with the '--no-target-align'
+command-line option (*note Command Line Options: Xtensa Options.).
 
    The target alignment optimization is done without adding instructions
 that could increase the execution time of the program.  If there are
@@ -22749,23 +22236,23 @@ density instructions in the code preceding a target, the assembler can
 change the target alignment by widening some of those instructions to
 the equivalent 24-bit instructions.  Extra bytes of padding can be
 inserted immediately following unconditional jump and return
-instructions.  This approach is usually successful in aligning many,
-but not all, branch targets.
-
-   The `LOOP' family of instructions must be aligned such that the
-first instruction in the loop body does not cross an instruction fetch
-boundary (e.g., with a 32-bit fetch width, a `LOOP' instruction must be
-on either a 1 or 2 mod 4 byte boundary).  The assembler knows about
-this restriction and inserts the minimal number of 2 or 3 byte no-op
+instructions.  This approach is usually successful in aligning many, but
+not all, branch targets.
+
+   The 'LOOP' family of instructions must be aligned such that the first
+instruction in the loop body does not cross an instruction fetch
+boundary (e.g., with a 32-bit fetch width, a 'LOOP' instruction must be
+on either a 1 or 2 mod 4 byte boundary).  The assembler knows about this
+restriction and inserts the minimal number of 2 or 3 byte no-op
 instructions to satisfy it.  When no-op instructions are added, any
 label immediately preceding the original loop will be moved in order to
 refer to the loop instruction, not the newly generated no-op
 instruction.  To preserve binary compatibility across processors with
 different fetch widths, the assembler conservatively assumes a 32-bit
-fetch width when aligning `LOOP' instructions (except if the first
+fetch width when aligning 'LOOP' instructions (except if the first
 instruction in the loop is a 64-bit instruction).
 
-   Previous versions of the assembler automatically aligned `ENTRY'
+   Previous versions of the assembler automatically aligned 'ENTRY'
 instructions to 4-byte boundaries, but that alignment is now the
 programmer's responsibility.
 
@@ -22776,12 +22263,12 @@ File: as.info,  Node: Xtensa Relaxation,  Next: Xtensa Directives,  Prev: Xtensa
 ------------------------
 
 When an instruction operand is outside the range allowed for that
-particular instruction field, `as' can transform the code to use a
+particular instruction field, 'as' can transform the code to use a
 functionally-equivalent instruction or sequence of instructions.  This
 process is known as "relaxation".  This is typically done for branch
 instructions because the distance of the branch targets is not known
 until assembly-time.  The Xtensa assembler offers branch relaxation and
-also extends this concept to function calls, `MOVI' instructions and
+also extends this concept to function calls, 'MOVI' instructions and
 other instructions with immediate fields.
 
 * Menu:
@@ -22810,21 +22297,21 @@ replace the branch with a branch around a jump.  For example,
          j L
      M:
 
-   (The `BNEZ.N' instruction would be used in this example only if the
-density option is available.  Otherwise, `BNEZ' would be used.)
+   (The 'BNEZ.N' instruction would be used in this example only if the
+density option is available.  Otherwise, 'BNEZ' would be used.)
 
    This relaxation works well because the unconditional jump instruction
 has a much larger offset range than the various conditional branches.
 However, an error will occur if a branch target is beyond the range of a
-jump instruction.  `as' cannot relax unconditional jumps.  Similarly,
-an error will occur if the original input contains an unconditional
-jump to a target that is out of range.
+jump instruction.  'as' cannot relax unconditional jumps.  Similarly, an
+error will occur if the original input contains an unconditional jump to
+a target that is out of range.
 
    Branch relaxation is enabled by default.  It can be disabled by using
 underscore prefixes (*note Opcode Names: Xtensa Opcodes.), the
-`--no-transform' command-line option (*note Command Line Options:
-Xtensa Options.), or the `no-transform' directive (*note transform:
-Transform Directive.).
+'--no-transform' command-line option (*note Command Line Options: Xtensa
+Options.), or the 'no-transform' directive (*note transform: Transform
+Directive.).
 
 
 File: as.info,  Node: Xtensa Call Relaxation,  Next: Xtensa Jump Relaxation,  Prev: Xtensa Branch Relaxation,  Up: Xtensa Relaxation
@@ -22833,15 +22320,14 @@ File: as.info,  Node: Xtensa Call Relaxation,  Next: Xtensa Jump Relaxation,  Pr
 .................................
 
 Function calls may require relaxation because the Xtensa immediate call
-instructions (`CALL0', `CALL4', `CALL8' and `CALL12') provide a
+instructions ('CALL0', 'CALL4', 'CALL8' and 'CALL12') provide a
 PC-relative offset of only 512 Kbytes in either direction.  For larger
-programs, it may be necessary to use indirect calls (`CALLX0',
-`CALLX4', `CALLX8' and `CALLX12') where the target address is specified
-in a register.  The Xtensa assembler can automatically relax immediate
-call instructions into indirect call instructions.  This relaxation is
-done by loading the address of the called function into the callee's
-return address register and then using a `CALLX' instruction.  So, for
-example:
+programs, it may be necessary to use indirect calls ('CALLX0', 'CALLX4',
+'CALLX8' and 'CALLX12') where the target address is specified in a
+register.  The Xtensa assembler can automatically relax immediate call
+instructions into indirect call instructions.  This relaxation is done
+by loading the address of the called function into the callee's return
+address register and then using a 'CALLX' instruction.  So, for example:
 
          call8 func
 
@@ -22862,7 +22348,7 @@ assembler for those cases where direct calls are sufficient.
 effect on both code size and performance, although the linker can
 usually eliminate the unnecessary overhead.  If a program is too large
 and some of the calls are out of range, function call relaxation can be
-enabled using the `--longcalls' command-line option or the `longcalls'
+enabled using the '--longcalls' command-line option or the 'longcalls'
 directive (*note longcalls: Longcalls Directive.).
 
 
@@ -22872,10 +22358,10 @@ File: as.info,  Node: Xtensa Jump Relaxation,  Next: Xtensa Immediate Relaxation
 ........................
 
 Jump instruction may require relaxation because the Xtensa jump
-instruction (`J') provide a PC-relative offset of only 128 Kbytes in
-either direction.  One option is to use jump long (`J.L') instruction,
-which depending on jump distance may be assembled as jump (`J') or
-indirect jump (`JX').  However it needs a free register.  When there's
+instruction ('J') provide a PC-relative offset of only 128 Kbytes in
+either direction.  One option is to use jump long ('J.L') instruction,
+which depending on jump distance may be assembled as jump ('J') or
+indirect jump ('JX').  However it needs a free register.  When there's
 no spare register it is possible to plant intermediate jump sites
 (trampolines) between the jump instruction and its target.  These sites
 may be located in areas unreachable by normal code execution flow, in
@@ -22931,11 +22417,10 @@ trampolines between the jump instruction and its target.
    This relaxation does not apply to jumps to undefined symbols,
 assuming they will reach their targets once resolved.
 
-   Jump relaxation is enabled by default because it does not affect
-code size or performance while the code itself is small.  This
-relaxation may be disabled completely with `--no-trampolines' or
-`--no-transform' command-line options (*note Command Line Options:
-Xtensa Options.).
+   Jump relaxation is enabled by default because it does not affect code
+size or performance while the code itself is small.  This relaxation may
+be disabled completely with '--no-trampolines' or '--no-transform'
+command-line options (*note Command Line Options: Xtensa Options.).
 
 
 File: as.info,  Node: Xtensa Immediate Relaxation,  Prev: Xtensa Jump Relaxation,  Up: Xtensa Relaxation
@@ -22944,14 +22429,14 @@ File: as.info,  Node: Xtensa Immediate Relaxation,  Prev: Xtensa Jump Relaxation
 .........................................
 
 The assembler normally performs the following other relaxations.  They
-can be disabled by using underscore prefixes (*note Opcode Names:
-Xtensa Opcodes.), the `--no-transform' command-line option (*note
-Command Line Options: Xtensa Options.), or the `no-transform' directive
-(*note transform: Transform Directive.).
+can be disabled by using underscore prefixes (*note Opcode Names: Xtensa
+Opcodes.), the '--no-transform' command-line option (*note Command Line
+Options: Xtensa Options.), or the 'no-transform' directive (*note
+transform: Transform Directive.).
 
-   The `MOVI' machine instruction can only materialize values in the
+   The 'MOVI' machine instruction can only materialize values in the
 range from -2048 to 2047.  Values outside this range are best
-materialized with `L32R' instructions.  Thus:
+materialized with 'L32R' instructions.  Thus:
 
          movi a0, 100000
 
@@ -22960,11 +22445,11 @@ materialized with `L32R' instructions.  Thus:
          .literal .L1, 100000
          l32r a0, .L1
 
-   The `L8UI' machine instruction can only be used with immediate
-offsets in the range from 0 to 255. The `L16SI' and `L16UI' machine
-instructions can only be used with offsets from 0 to 510.  The `L32I'
+   The 'L8UI' machine instruction can only be used with immediate
+offsets in the range from 0 to 255.  The 'L16SI' and 'L16UI' machine
+instructions can only be used with offsets from 0 to 510.  The 'L32I'
 machine instruction can only be used with offsets from 0 to 1020.  A
-load offset outside these ranges can be materialized with an `L32R'
+load offset outside these ranges can be materialized with an 'L32R'
 instruction if the destination register of the load is different than
 the source address register.  For example:
 
@@ -22980,16 +22465,16 @@ the source address register.  For example:
 If the load destination and source address register are the same, an
 out-of-range offset causes an error.
 
-   The Xtensa `ADDI' instruction only allows immediate operands in the
+   The Xtensa 'ADDI' instruction only allows immediate operands in the
 range from -128 to 127.  There are a number of alternate instruction
-sequences for the `ADDI' operation.  First, if the immediate is 0, the
-`ADDI' will be turned into a `MOV.N' instruction (or the equivalent
-`OR' instruction if the code density option is not available).  If the
-`ADDI' immediate is outside of the range -128 to 127, but inside the
-range -32896 to 32639, an `ADDMI' instruction or `ADDMI'/`ADDI'
-sequence will be used.  Finally, if the immediate is outside of this
-range and a free register is available, an `L32R'/`ADD' sequence will
-be used with a literal allocated from the literal pool.
+sequences for the 'ADDI' operation.  First, if the immediate is 0, the
+'ADDI' will be turned into a 'MOV.N' instruction (or the equivalent 'OR'
+instruction if the code density option is not available).  If the 'ADDI'
+immediate is outside of the range -128 to 127, but inside the range
+-32896 to 32639, an 'ADDMI' instruction or 'ADDMI'/'ADDI' sequence will
+be used.  Finally, if the immediate is outside of this range and a free
+register is available, an 'L32R'/'ADD' sequence will be used with a
+literal allocated from the literal pool.
 
    For example:
 
@@ -23023,9 +22508,9 @@ The Xtensa assembler supports a region-based directive syntax:
    All the Xtensa-specific directives that apply to a region of code use
 this syntax.
 
-   The directive applies to code between the `.begin' and the `.end'.
-The state of the option after the `.end' reverts to what it was before
-the `.begin'.  A nested `.begin'/`.end' region can further change the
+   The directive applies to code between the '.begin' and the '.end'.
+The state of the option after the '.end' reverts to what it was before
+the '.begin'.  A nested '.begin'/'.end' region can further change the
 state of the directive without having to be aware of its outer state.
 For example, consider:
 
@@ -23037,16 +22522,15 @@ For example, consider:
      N:  add a0, a1, a2
          .end no-transform
 
-   The `ADD' opcodes at `L' and `N' in the outer `no-transform' region
-both result in `ADD' machine instructions, but the assembler selects an
-`ADD.N' instruction for the `ADD' at `M' in the inner `transform'
+   The 'ADD' opcodes at 'L' and 'N' in the outer 'no-transform' region
+both result in 'ADD' machine instructions, but the assembler selects an
+'ADD.N' instruction for the 'ADD' at 'M' in the inner 'transform'
 region.
 
-   The advantage of this style is that it works well inside macros
-which can preserve the context of their callers.
+   The advantage of this style is that it works well inside macros which
+can preserve the context of their callers.
 
    The following directives are available:
-
 * Menu:
 
 * Schedule Directive::         Enable instruction scheduling.
@@ -23063,13 +22547,13 @@ File: as.info,  Node: Schedule Directive,  Next: Longcalls Directive,  Up: Xtens
 9.53.5.1 schedule
 .................
 
-The `schedule' directive is recognized only for compatibility with
+The 'schedule' directive is recognized only for compatibility with
 Tensilica's assembler.
 
          .begin [no-]schedule
          .end [no-]schedule
 
-   This directive is ignored and has no effect on `as'.
+   This directive is ignored and has no effect on 'as'.
 
 
 File: as.info,  Node: Longcalls Directive,  Next: Transform Directive,  Prev: Schedule Directive,  Up: Xtensa Directives
@@ -23077,14 +22561,14 @@ File: as.info,  Node: Longcalls Directive,  Next: Transform Directive,  Prev: Sc
 9.53.5.2 longcalls
 ..................
 
-The `longcalls' directive enables or disables function call relaxation.
+The 'longcalls' directive enables or disables function call relaxation.
 *Note Function Call Relaxation: Xtensa Call Relaxation.
 
          .begin [no-]longcalls
          .end [no-]longcalls
 
-   Call relaxation is disabled by default unless the `--longcalls'
-command-line option is specified.  The `longcalls' directive overrides
+   Call relaxation is disabled by default unless the '--longcalls'
+command-line option is specified.  The 'longcalls' directive overrides
 the default determined by the command-line options.
 
 
@@ -23100,8 +22584,8 @@ optimization (*note Xtensa Optimizations: Xtensa Optimizations.).
          .begin [no-]transform
          .end [no-]transform
 
-   Transformations are enabled by default unless the `--no-transform'
-option is used.  The `transform' directive overrides the default
+   Transformations are enabled by default unless the '--no-transform'
+option is used.  The 'transform' directive overrides the default
 determined by the command-line options.  An underscore opcode prefix,
 disabling transformation of that opcode, always takes precedence over
 both directives and command-line flags.
@@ -23112,14 +22596,14 @@ File: as.info,  Node: Literal Directive,  Next: Literal Position Directive,  Pre
 9.53.5.4 literal
 ................
 
-The `.literal' directive is used to define literal pool data, i.e.,
-read-only 32-bit data accessed via `L32R' instructions.
+The '.literal' directive is used to define literal pool data, i.e.,
+read-only 32-bit data accessed via 'L32R' instructions.
 
          .literal LABEL, VALUE[, VALUE...]
 
-   This directive is similar to the standard `.word' directive, except
+   This directive is similar to the standard '.word' directive, except
 that the actual location of the literal data is determined by the
-assembler and linker, not by the position of the `.literal' directive.
+assembler and linker, not by the position of the '.literal' directive.
 Using this directive gives the assembler freedom to locate the literal
 data in the most appropriate place and possibly to combine identical
 literals.  For example, the code:
@@ -23128,59 +22612,58 @@ literals.  For example, the code:
          .literal .L1, sym
          l32r    a4, .L1
 
-   can be used to load a pointer to the symbol `sym' into register
-`a4'.  The value of `sym' will not be placed between the `ENTRY' and
-`L32R' instructions; instead, the assembler puts the data in a literal
-pool.
+   can be used to load a pointer to the symbol 'sym' into register 'a4'.
+The value of 'sym' will not be placed between the 'ENTRY' and 'L32R'
+instructions; instead, the assembler puts the data in a literal pool.
 
    Literal pools are placed by default in separate literal sections;
-however, when using the `--text-section-literals' option (*note Command
+however, when using the '--text-section-literals' option (*note Command
 Line Options: Xtensa Options.), the literal pools for PC-relative mode
-`L32R' instructions are placed in the current section.(1) These text
-section literal pools are created automatically before `ENTRY'
-instructions and manually after `.literal_position' directives (*note
+'L32R' instructions are placed in the current section.(1)  These text
+section literal pools are created automatically before 'ENTRY'
+instructions and manually after '.literal_position' directives (*note
 literal_position: Literal Position Directive.).  If there are no
-preceding `ENTRY' instructions, explicit `.literal_position' directives
-must be used to place the text section literal pools; otherwise, `as'
+preceding 'ENTRY' instructions, explicit '.literal_position' directives
+must be used to place the text section literal pools; otherwise, 'as'
 will report an error.
 
    When literals are placed in separate sections, the literal section
 names are derived from the names of the sections where the literals are
-defined.  The base literal section names are `.literal' for PC-relative
-mode `L32R' instructions and `.lit4' for absolute mode `L32R'
+defined.  The base literal section names are '.literal' for PC-relative
+mode 'L32R' instructions and '.lit4' for absolute mode 'L32R'
 instructions (*note absolute-literals: Absolute Literals Directive.).
-These base names are used for literals defined in the default `.text'
+These base names are used for literals defined in the default '.text'
 section.  For literals defined in other sections or within the scope of
-a `literal_prefix' directive (*note literal_prefix: Literal Prefix
+a 'literal_prefix' directive (*note literal_prefix: Literal Prefix
 Directive.), the following rules determine the literal section name:
 
   1. If the current section is a member of a section group, the literal
      section name includes the group name as a suffix to the base
-     `.literal' or `.lit4' name, with a period to separate the base
-     name and group name.  The literal section is also made a member of
-     the group.
+     '.literal' or '.lit4' name, with a period to separate the base name
+     and group name.  The literal section is also made a member of the
+     group.
 
-  2. If the current section name (or `literal_prefix' value) begins with
-     "`.gnu.linkonce.KIND.'", the literal section name is formed by
-     replacing "`.KIND'" with the base `.literal' or `.lit4' name.  For
+  2. If the current section name (or 'literal_prefix' value) begins with
+     "'.gnu.linkonce.KIND.'", the literal section name is formed by
+     replacing "'.KIND'" with the base '.literal' or '.lit4' name.  For
      example, for literals defined in a section named
-     `.gnu.linkonce.t.func', the literal section will be
-     `.gnu.linkonce.literal.func' or `.gnu.linkonce.lit4.func'.
+     '.gnu.linkonce.t.func', the literal section will be
+     '.gnu.linkonce.literal.func' or '.gnu.linkonce.lit4.func'.
 
-  3. If the current section name (or `literal_prefix' value) ends with
-     `.text', the literal section name is formed by replacing that
-     suffix with the base `.literal' or `.lit4' name.  For example, for
-     literals defined in a section named `.iram0.text', the literal
-     section will be `.iram0.literal' or `.iram0.lit4'.
+  3. If the current section name (or 'literal_prefix' value) ends with
+     '.text', the literal section name is formed by replacing that
+     suffix with the base '.literal' or '.lit4' name.  For example, for
+     literals defined in a section named '.iram0.text', the literal
+     section will be '.iram0.literal' or '.iram0.lit4'.
 
-  4. If none of the preceding conditions apply, the literal section
-     name is formed by adding the base `.literal' or `.lit4' name as a
-     suffix to the current section name (or `literal_prefix' value).
+  4. If none of the preceding conditions apply, the literal section name
+     is formed by adding the base '.literal' or '.lit4' name as a suffix
+     to the current section name (or 'literal_prefix' value).
 
    ---------- Footnotes ----------
 
-   (1) Literals for the `.init' and `.fini' sections are always placed
-in separate sections, even when `--text-section-literals' is enabled.
+   (1) Literals for the '.init' and '.fini' sections are always placed
+in separate sections, even when '--text-section-literals' is enabled.
 
 
 File: as.info,  Node: Literal Position Directive,  Next: Literal Prefix Directive,  Prev: Literal Directive,  Up: Xtensa Directives
@@ -23188,33 +22671,33 @@ File: as.info,  Node: Literal Position Directive,  Next: Literal Prefix Directiv
 9.53.5.5 literal_position
 .........................
 
-When using `--text-section-literals' to place literals inline in the
-section being assembled, the `.literal_position' directive can be used
+When using '--text-section-literals' to place literals inline in the
+section being assembled, the '.literal_position' directive can be used
 to mark a potential location for a literal pool.
 
          .literal_position
 
-   The `.literal_position' directive is ignored when the
-`--text-section-literals' option is not used or when `L32R'
-instructions use the absolute addressing mode.
+   The '.literal_position' directive is ignored when the
+'--text-section-literals' option is not used or when 'L32R' instructions
+use the absolute addressing mode.
 
    The assembler will automatically place text section literal pools
-before `ENTRY' instructions, so the `.literal_position' directive is
+before 'ENTRY' instructions, so the '.literal_position' directive is
 only needed to specify some other location for a literal pool.  You may
 need to add an explicit jump instruction to skip over an inline literal
 pool.
 
-   For example, an interrupt vector does not begin with an `ENTRY'
+   For example, an interrupt vector does not begin with an 'ENTRY'
 instruction so the assembler will be unable to automatically find a good
 place to put a literal pool.  Moreover, the code for the interrupt
 vector must be at a specific starting address, so the literal pool
 cannot come before the start of the code.  The literal pool for the
 vector must be explicitly positioned in the middle of the vector (before
 any uses of the literals, due to the negative offsets used by
-PC-relative `L32R' instructions).  The `.literal_position' directive
-can be used to do this.  In the following code, the literal for `M'
-will automatically be aligned correctly and is placed after the
-unconditional jump.
+PC-relative 'L32R' instructions).  The '.literal_position' directive can
+be used to do this.  In the following code, the literal for 'M' will
+automatically be aligned correctly and is placed after the unconditional
+jump.
 
          .global M
      code_start:
@@ -23230,7 +22713,7 @@ File: as.info,  Node: Literal Prefix Directive,  Next: Absolute Literals Directi
 9.53.5.6 literal_prefix
 .......................
 
-The `literal_prefix' directive allows you to override the default
+The 'literal_prefix' directive allows you to override the default
 literal section names, which are derived from the names of the sections
 where the literals are defined.
 
@@ -23242,7 +22725,7 @@ names are derived from the NAME argument instead of the name of the
 current section.  The rules used to derive the literal section names do
 not change.  *Note literal: Literal Directive.  If the NAME argument is
 omitted, the literal sections revert to the defaults.  This directive
-has no effect when using the `--text-section-literals' option (*note
+has no effect when using the '--text-section-literals' option (*note
 Command Line Options: Xtensa Options.).
 
 
@@ -23251,27 +22734,27 @@ File: as.info,  Node: Absolute Literals Directive,  Prev: Literal Prefix Directi
 9.53.5.7 absolute-literals
 ..........................
 
-The `absolute-literals' and `no-absolute-literals' directives control
-the absolute vs. PC-relative mode for `L32R' instructions.  These are
+The 'absolute-literals' and 'no-absolute-literals' directives control
+the absolute vs. PC-relative mode for 'L32R' instructions.  These are
 relevant only for Xtensa configurations that include the absolute
-addressing option for `L32R' instructions.
+addressing option for 'L32R' instructions.
 
          .begin [no-]absolute-literals
          .end [no-]absolute-literals
 
-   These directives do not change the `L32R' mode--they only cause the
-assembler to emit the appropriate kind of relocation for `L32R'
+   These directives do not change the 'L32R' mode--they only cause the
+assembler to emit the appropriate kind of relocation for 'L32R'
 instructions and to place the literal values in the appropriate section.
-To change the `L32R' mode, the program must write the `LITBASE' special
+To change the 'L32R' mode, the program must write the 'LITBASE' special
 register.  It is the programmer's responsibility to keep track of the
 mode and indicate to the assembler which mode is used in each region of
 code.
 
-   If the Xtensa configuration includes the absolute `L32R' addressing
-option, the default is to assume absolute `L32R' addressing unless the
-`--no-absolute-literals' command-line option is specified.  Otherwise,
-the default is to assume PC-relative `L32R' addressing.  The
-`absolute-literals' directive can then be used to override the default
+   If the Xtensa configuration includes the absolute 'L32R' addressing
+option, the default is to assume absolute 'L32R' addressing unless the
+'--no-absolute-literals' command-line option is specified.  Otherwise,
+the default is to assume PC-relative 'L32R' addressing.  The
+'absolute-literals' directive can then be used to override the default
 determined by the command-line options.
 
 
@@ -23294,46 +22777,40 @@ File: as.info,  Node: Z80 Options,  Next: Z80 Syntax,  Up: Z80-Dependent
 9.54.1 Options
 --------------
 
-The Zilog Z80 and Ascii R800 version of `as' have a few machine
+The Zilog Z80 and Ascii R800 version of 'as' have a few machine
 dependent options.
-`-z80'
-     Produce code for the Z80 processor. There are additional options to
-     request warnings and error messages for undocumented instructions.
-
-`-ignore-undocumented-instructions'
-`-Wnud'
+'-z80'
+     Produce code for the Z80 processor.  There are additional options
+     to request warnings and error messages for undocumented
+     instructions.
+'-ignore-undocumented-instructions'
+'-Wnud'
      Silently assemble undocumented Z80-instructions that have been
      adopted as documented R800-instructions.
-
-`-ignore-unportable-instructions'
-`-Wnup'
+'-ignore-unportable-instructions'
+'-Wnup'
      Silently assemble all undocumented Z80-instructions.
-
-`-warn-undocumented-instructions'
-`-Wud'
-     Issue warnings for undocumented Z80-instructions that work on
-     R800, do not assemble other undocumented instructions without
-     warning.
-
-`-warn-unportable-instructions'
-`-Wup'
+'-warn-undocumented-instructions'
+'-Wud'
+     Issue warnings for undocumented Z80-instructions that work on R800,
+     do not assemble other undocumented instructions without warning.
+'-warn-unportable-instructions'
+'-Wup'
      Issue warnings for other undocumented Z80-instructions, do not
      treat any undocumented instructions as errors.
-
-`-forbid-undocumented-instructions'
-`-Fud'
+'-forbid-undocumented-instructions'
+'-Fud'
      Treat all undocumented z80-instructions as errors.
-
-`-forbid-unportable-instructions'
-`-Fup'
+'-forbid-unportable-instructions'
+'-Fup'
      Treat undocumented z80-instructions that do not work on R800 as
      errors.
 
-`-r800'
-     Produce code for the R800 processor. The assembler does not support
-     undocumented instructions for the R800.  In line with common
-     practice, `as' uses Z80 instruction names for the R800 processor,
-     as far as they exist.
+'-r800'
+     Produce code for the R800 processor.  The assembler does not
+     support undocumented instructions for the R800.  In line with
+     common practice, 'as' uses Z80 instruction names for the R800
+     processor, as far as they exist.
 
 
 File: as.info,  Node: Z80 Syntax,  Next: Z80 Floating Point,  Prev: Z80 Options,  Up: Z80-Dependent
@@ -23342,14 +22819,14 @@ File: as.info,  Node: Z80 Syntax,  Next: Z80 Floating Point,  Prev: Z80 Options,
 -------------
 
 The assembler syntax closely follows the 'Z80 family CPU User Manual' by
-Zilog.  In expressions a single `=' may be used as "is equal to"
+Zilog.  In expressions a single '=' may be used as "is equal to"
 comparison operator.
 
-   Suffices can be used to indicate the radix of integer constants; `H'
-or `h' for hexadecimal, `D' or `d' for decimal, `Q', `O', `q' or `o'
-for octal, and `B' for binary.
+   Suffices can be used to indicate the radix of integer constants; 'H'
+or 'h' for hexadecimal, 'D' or 'd' for decimal, 'Q', 'O', 'q' or 'o' for
+octal, and 'B' for binary.
 
-   The suffix `b' denotes a backreference to local label.
+   The suffix 'b' denotes a backreference to local label.
 
 * Menu:
 
@@ -23363,21 +22840,21 @@ File: as.info,  Node: Z80-Chars,  Next: Z80-Regs,  Up: Z80 Syntax
 9.54.2.1 Special Characters
 ...........................
 
-The semicolon `;' is the line comment character;
+The semicolon ';' is the line comment character;
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line could also be a
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line could also be a
 logical line number directive (*note Comments::) or a preprocessor
 control command (*note Preprocessing::).
 
    The Z80 assembler does not support a line separator character.
 
-   The dollar sign `$' can be used as a prefix for hexadecimal numbers
+   The dollar sign '$' can be used as a prefix for hexadecimal numbers
 and as a symbol denoting the current location counter.
 
-   A backslash `\' is an ordinary character for the Z80 assembler.
+   A backslash '\' is an ordinary character for the Z80 assembler.
 
-   The single quote `'' must be followed by a closing quote. If there
+   The single quote ''' must be followed by a closing quote.  If there
 is one character in between, it is a character constant, otherwise it is
 a string constant.
 
@@ -23388,9 +22865,9 @@ File: as.info,  Node: Z80-Regs,  Next: Z80-Case,  Prev: Z80-Chars,  Up: Z80 Synt
 .......................
 
 The registers are referred to with the letters assigned to them by
-Zilog. In addition `as' recognizes `ixl' and `ixh' as the least and
-most significant octet in `ix', and similarly `iyl' and  `iyh' as parts
-of `iy'.
+Zilog.  In addition 'as' recognizes 'ixl' and 'ixh' as the least and
+most significant octet in 'ix', and similarly 'iyl' and 'iyh' as parts
+of 'iy'.
 
 
 File: as.info,  Node: Z80-Case,  Prev: Z80-Regs,  Up: Z80 Syntax
@@ -23399,10 +22876,10 @@ File: as.info,  Node: Z80-Case,  Prev: Z80-Regs,  Up: Z80 Syntax
 .........................
 
 Upper and lower case are equivalent in register names, opcodes,
-condition codes  and assembler directives.  The case of letters is
-significant in labels and symbol names. The case is also important to
-distinguish the suffix `b' for a backward reference to a local label
-from the suffix `B' for a number in binary notation.
+condition codes and assembler directives.  The case of letters is
+significant in labels and symbol names.  The case is also important to
+distinguish the suffix 'b' for a backward reference to a local label
+from the suffix 'B' for a number in binary notation.
 
 
 File: as.info,  Node: Z80 Floating Point,  Next: Z80 Directives,  Prev: Z80 Syntax,  Up: Z80-Dependent
@@ -23418,51 +22895,50 @@ File: as.info,  Node: Z80 Directives,  Next: Z80 Opcodes,  Prev: Z80 Floating Po
 9.54.4 Z80 Assembler Directives
 -------------------------------
 
-`as' for the Z80 supports some additional directives for compatibility
+'as' for the Z80 supports some additional directives for compatibility
 with other assemblers.
 
-   These are the additional directives in `as' for the Z80:
+   These are the additional directives in 'as' for the Z80:
 
-`db EXPRESSION|STRING[,EXPRESSION|STRING...]'
-`defb EXPRESSION|STRING[,EXPRESSION|STRING...]'
+'db EXPRESSION|STRING[,EXPRESSION|STRING...]'
+'defb EXPRESSION|STRING[,EXPRESSION|STRING...]'
      For each STRING the characters are copied to the object file, for
      each other EXPRESSION the value is stored in one byte.  A warning
      is issued in case of an overflow.
 
-`dw EXPRESSION[,EXPRESSION...]'
-`defw EXPRESSION[,EXPRESSION...]'
+'dw EXPRESSION[,EXPRESSION...]'
+'defw EXPRESSION[,EXPRESSION...]'
      For each EXPRESSION the value is stored in two bytes, ignoring
      overflow.
 
-`d24 EXPRESSION[,EXPRESSION...]'
-`def24 EXPRESSION[,EXPRESSION...]'
+'d24 EXPRESSION[,EXPRESSION...]'
+'def24 EXPRESSION[,EXPRESSION...]'
      For each EXPRESSION the value is stored in three bytes, ignoring
      overflow.
 
-`d32 EXPRESSION[,EXPRESSION...]'
-`def32 EXPRESSION[,EXPRESSION...]'
+'d32 EXPRESSION[,EXPRESSION...]'
+'def32 EXPRESSION[,EXPRESSION...]'
      For each EXPRESSION the value is stored in four bytes, ignoring
      overflow.
 
-`ds COUNT[, VALUE]'
-`defs COUNT[, VALUE]'
-     Fill COUNT bytes in the object file with VALUE, if VALUE is
-     omitted it defaults to zero.
+'ds COUNT[, VALUE]'
+'defs COUNT[, VALUE]'
+     Fill COUNT bytes in the object file with VALUE, if VALUE is omitted
+     it defaults to zero.
 
-`SYMBOL equ EXPRESSION'
-`SYMBOL defl EXPRESSION'
-     These directives set the value of SYMBOL to EXPRESSION. If `equ'
+'SYMBOL equ EXPRESSION'
+'SYMBOL defl EXPRESSION'
+     These directives set the value of SYMBOL to EXPRESSION.  If 'equ'
      is used, it is an error if SYMBOL is already defined.  Symbols
-     defined with `equ' are not protected from redefinition.
+     defined with 'equ' are not protected from redefinition.
 
-`set'
+'set'
      This is a normal instruction on Z80, and not an assembler
      directive.
 
-`psect NAME'
+'psect NAME'
      A synonym for *Note Section::, no second argument should be given.
 
-
 
 File: as.info,  Node: Z80 Opcodes,  Prev: Z80 Directives,  Up: Z80-Dependent
 
@@ -23473,36 +22949,36 @@ In line with common practice, Z80 mnemonics are used for both the Z80
 and the R800.
 
    In many instructions it is possible to use one of the half index
-registers (`ixl',`ixh',`iyl',`iyh') in stead of an 8-bit general
-purpose register. This yields instructions that are documented on the
-R800 and undocumented on the Z80.  Similarly `in f,(c)' is documented
-on the R800 and undocumented on the Z80.
+registers ('ixl','ixh','iyl','iyh') in stead of an 8-bit general purpose
+register.  This yields instructions that are documented on the R800 and
+undocumented on the Z80.  Similarly 'in f,(c)' is documented on the R800
+and undocumented on the Z80.
 
    The assembler also supports the following undocumented
 Z80-instructions, that have not been adopted in the R800 instruction
 set:
-`out (c),0'
+'out (c),0'
      Sends zero to the port pointed to by register c.
 
-`sli M'
-     Equivalent to `M = (M<<1)+1', the operand M can be any operand
-     that is valid for `sla'. One can use `sll' as a synonym for `sli'.
+'sli M'
+     Equivalent to 'M = (M<<1)+1', the operand M can be any operand that
+     is valid for 'sla'.  One can use 'sll' as a synonym for 'sli'.
 
-`OP (ix+D), R'
+'OP (ix+D), R'
      This is equivalent to
 
           ld R, (ix+D)
           OPC R
           ld (ix+D), R
 
-     The operation `OPC' may be any of `res B,', `set B,', `rl', `rlc',
-     `rr', `rrc', `sla', `sli', `sra' and `srl', and the register `R'
-     may be any of `a', `b', `c', `d', `e', `h' and `l'.
+     The operation 'OPC' may be any of 'res B,', 'set B,', 'rl', 'rlc',
+     'rr', 'rrc', 'sla', 'sli', 'sra' and 'srl', and the register 'R'
+     may be any of 'a', 'b', 'c', 'd', 'e', 'h' and 'l'.
 
-`OPC (iy+D), R'
-     As above, but with `iy' instead of `ix'.
+'OPC (iy+D), R'
+     As above, but with 'iy' instead of 'ix'.
 
-   The web site at `http://www.z80.info' is a good starting place to
+   The web site at <http://www.z80.info> is a good starting place to
 find more information on programming the Z80.
 
 
@@ -23511,14 +22987,14 @@ File: as.info,  Node: Z8000-Dependent,  Prev: Z80-Dependent,  Up: Machine Depend
 9.55 Z8000 Dependent Features
 =============================
 
-   The Z8000 as supports both members of the Z8000 family: the
-unsegmented Z8002, with 16 bit addresses, and the segmented Z8001 with
-24 bit addresses.
+The Z8000 as supports both members of the Z8000 family: the unsegmented
+Z8002, with 16 bit addresses, and the segmented Z8001 with 24 bit
+addresses.
 
    When the assembler is in unsegmented mode (specified with the
-`unsegm' directive), an address takes up one word (16 bit) sized
+'unsegm' directive), an address takes up one word (16 bit) sized
 register.  When the assembler is in segmented mode (specified with the
-`segm' directive), a 24-bit address takes up a long (32 bit) register.
+'segm' directive), a 24-bit address takes up a long (32 bit) register.
 *Note Assembler Directives for the Z8000: Z8000 Directives, for a list
 of other Z8000 specific assembler directives.
 
@@ -23535,10 +23011,10 @@ File: as.info,  Node: Z8000 Options,  Next: Z8000 Syntax,  Up: Z8000-Dependent
 9.55.1 Options
 --------------
 
-`-z8001'
+'-z8001'
      Generate segmented code by default.
 
-`-z8002'
+'-z8002'
      Generate unsegmented code by default.
 
 
@@ -23559,14 +23035,14 @@ File: as.info,  Node: Z8000-Chars,  Next: Z8000-Regs,  Up: Z8000 Syntax
 9.55.2.1 Special Characters
 ...........................
 
-`!' is the line comment character.
+'!' is the line comment character.
 
-   If a `#' appears as the first character of a line then the whole
-line is treated as a comment, but in this case the line could also be a
+   If a '#' appears as the first character of a line then the whole line
+is treated as a comment, but in this case the line could also be a
 logical line number directive (*note Comments::) or a preprocessor
 control command (*note Preprocessing::).
 
-   You can use `;' instead of a newline to separate statements.
+   You can use ';' instead of a newline to separate statements.
 
 
 File: as.info,  Node: Z8000-Regs,  Next: Z8000-Addressing,  Prev: Z8000-Chars,  Up: Z8000 Syntax
@@ -23576,10 +23052,10 @@ File: as.info,  Node: Z8000-Regs,  Next: Z8000-Addressing,  Prev: Z8000-Chars,
 
 The Z8000 has sixteen 16 bit registers, numbered 0 to 15.  You can refer
 to different sized groups of registers by register number, with the
-prefix `r' for 16 bit registers, `rr' for 32 bit registers and `rq' for
-64 bit registers.  You can also refer to the contents of the first
-eight (of the sixteen 16 bit registers) by bytes.  They are named `rlN'
-and `rhN'.
+prefix 'r' for 16 bit registers, 'rr' for 32 bit registers and 'rq' for
+64 bit registers.  You can also refer to the contents of the first eight
+(of the sixteen 16 bit registers) by bytes.  They are named 'rlN' and
+'rhN'.
 
 _byte registers_
      rl0 rh0 rl1 rh1 rl2 rh2 rl3 rh3
@@ -23602,40 +23078,39 @@ File: as.info,  Node: Z8000-Addressing,  Prev: Z8000-Regs,  Up: Z8000 Syntax
 
 as understands the following addressing modes for the Z8000:
 
-`rlN'
-`rhN'
-`rN'
-`rrN'
-`rqN'
-     Register direct:  8bit, 16bit, 32bit, and 64bit registers.
+'rlN'
+'rhN'
+'rN'
+'rrN'
+'rqN'
+     Register direct: 8bit, 16bit, 32bit, and 64bit registers.
 
-`@rN'
-`@rrN'
-     Indirect register:  @rrN in segmented mode, @rN in unsegmented
-     mode.
+'@rN'
+'@rrN'
+     Indirect register: @rrN in segmented mode, @rN in unsegmented mode.
 
-`ADDR'
+'ADDR'
      Direct: the 16 bit or 24 bit address (depending on whether the
-     assembler is in segmented or unsegmented mode) of the operand is
-     in the instruction.
+     assembler is in segmented or unsegmented mode) of the operand is in
+     the instruction.
 
-`address(rN)'
+'address(rN)'
      Indexed: the 16 or 24 bit address is added to the 16 bit register
      to produce the final address in memory of the operand.
 
-`rN(#IMM)'
-`rrN(#IMM)'
+'rN(#IMM)'
+'rrN(#IMM)'
      Base Address: the 16 or 24 bit register is added to the 16 bit sign
      extended immediate displacement to produce the final address in
      memory of the operand.
 
-`rN(rM)'
-`rrN(rM)'
+'rN(rM)'
+'rrN(rM)'
      Base Index: the 16 or 24 bit register rN or rrN is added to the
-     sign extended 16 bit index register rM to produce the final
-     address in memory of the operand.
+     sign extended 16 bit index register rM to produce the final address
+     in memory of the operand.
 
-`#XX'
+'#XX'
      Immediate data XX.
 
 
@@ -23645,41 +23120,41 @@ File: as.info,  Node: Z8000 Directives,  Next: Z8000 Opcodes,  Prev: Z8000 Synta
 -----------------------------------------
 
 The Z8000 port of as includes additional assembler directives, for
-compatibility with other Z8000 assemblers.  These do not begin with `.'
+compatibility with other Z8000 assemblers.  These do not begin with '.'
 (unlike the ordinary as directives).
 
-`segm'
-`.z8001'
+'segm'
+'.z8001'
      Generate code for the segmented Z8001.
 
-`unsegm'
-`.z8002'
+'unsegm'
+'.z8002'
      Generate code for the unsegmented Z8002.
 
-`name'
-     Synonym for `.file'
+'name'
+     Synonym for '.file'
 
-`global'
-     Synonym for `.global'
+'global'
+     Synonym for '.global'
 
-`wval'
-     Synonym for `.word'
+'wval'
+     Synonym for '.word'
 
-`lval'
-     Synonym for `.long'
+'lval'
+     Synonym for '.long'
 
-`bval'
-     Synonym for `.byte'
+'bval'
+     Synonym for '.byte'
 
-`sval'
-     Assemble a string.  `sval' expects one string literal, delimited by
+'sval'
+     Assemble a string.  'sval' expects one string literal, delimited by
      single quotes.  It assembles each byte of the string into
-     consecutive addresses.  You can use the escape sequence `%XX'
+     consecutive addresses.  You can use the escape sequence '%XX'
      (where XX represents a two-digit hexadecimal number) to represent
      the character whose ASCII value is XX.  Use this feature to
      describe single quote and other characters that may not appear in
      string literals as themselves.  For example, the C statement
-     `char *a = "he said \"it's 50% off\"";' is represented in Z8000
+     'char *a = "he said \"it's 50% off\"";' is represented in Z8000
      assembly language (shown with the assembler output in hex at the
      left) as
 
@@ -23690,14 +23165,14 @@ compatibility with other Z8000 assemblers.  These do not begin with `.'
           25206F66
           662200
 
-`rsect'
-     synonym for `.section'
+'rsect'
+     synonym for '.section'
 
-`block'
-     synonym for `.space'
+'block'
+     synonym for '.space'
 
-`even'
-     special case of `.align'; aligns output to even byte boundary.
+'even'
+     special case of '.align'; aligns output to even byte boundary.
 
 
 File: as.info,  Node: Z8000 Opcodes,  Prev: Z8000 Directives,  Up: Z8000-Dependent
@@ -23706,7 +23181,7 @@ File: as.info,  Node: Z8000 Opcodes,  Prev: Z8000 Directives,  Up: Z8000-Depende
 --------------
 
 For detailed information on the Z8000 machine instruction set, see
-`Z8000 Technical Manual'.
+'Z8000 Technical Manual'.
 
    The following table summarizes the opcodes and their arguments:
 
@@ -23868,12 +23343,12 @@ File: as.info,  Node: Reporting Bugs,  Next: Acknowledgements,  Prev: Machine De
 10 Reporting Bugs
 *****************
 
-Your bug reports play an essential role in making `as' reliable.
+Your bug reports play an essential role in making 'as' reliable.
 
    Reporting a bug may help you by bringing a solution to your problem,
 or it may not.  But in any case the principal function of a bug report
-is to help the entire community by making the next version of `as' work
-better.  Bug reports are your contribution to the maintenance of `as'.
+is to help the entire community by making the next version of 'as' work
+better.  Bug reports are your contribution to the maintenance of 'as'.
 
    In order for a bug report to serve its purpose, you must include the
 information that enables us to fix the bug.
@@ -23893,17 +23368,17 @@ If you are not sure whether you have found a bug, here are some
 guidelines:
 
    * If the assembler gets a fatal signal, for any input whatever, that
-     is a `as' bug.  Reliable assemblers never crash.
+     is a 'as' bug.  Reliable assemblers never crash.
 
-   * If `as' produces an error message for valid input, that is a bug.
+   * If 'as' produces an error message for valid input, that is a bug.
 
-   * If `as' does not produce an error message for invalid input, that
+   * If 'as' does not produce an error message for invalid input, that
      is a bug.  However, you should note that your idea of "invalid
      input" might be our idea of "an extension" or "support for
      traditional practice".
 
    * If you are an experienced user of assemblers, your suggestions for
-     improvement of `as' are welcome in any case.
+     improvement of 'as' are welcome in any case.
 
 
 File: as.info,  Node: Bug Reporting,  Prev: Bug Criteria,  Up: Reporting Bugs
@@ -23912,33 +23387,32 @@ File: as.info,  Node: Bug Reporting,  Prev: Bug Criteria,  Up: Reporting Bugs
 =======================
 
 A number of companies and individuals offer support for GNU products.
-If you obtained `as' from a support organization, we recommend you
+If you obtained 'as' from a support organization, we recommend you
 contact that organization first.
 
    You can find contact information for many support companies and
-individuals in the file `etc/SERVICE' in the GNU Emacs distribution.
+individuals in the file 'etc/SERVICE' in the GNU Emacs distribution.
 
-   In any event, we also recommend that you send bug reports for `as'
-to `http://www.sourceware.org/bugzilla/'.
+   In any event, we also recommend that you send bug reports for 'as' to
+<http://www.sourceware.org/bugzilla/>.
 
-   The fundamental principle of reporting bugs usefully is this:
-*report all the facts*.  If you are not sure whether to state a fact or
-leave it out, state it!
+   The fundamental principle of reporting bugs usefully is this: *report
+all the facts*.  If you are not sure whether to state a fact or leave it
+out, state it!
 
    Often people omit facts because they think they know what causes the
 problem and assume that some details do not matter.  Thus, you might
 assume that the name of a symbol you use in an example does not matter.
-Well, probably it does not, but one cannot be sure.  Perhaps the bug
-is a stray memory reference which happens to fetch from the location
-where that name is stored in memory; perhaps, if the name were
-different, the contents of that location would fool the assembler into
-doing the right thing despite the bug.  Play it safe and give a
-specific, complete example.  That is the easiest thing for you to do,
-and the most helpful.
+Well, probably it does not, but one cannot be sure.  Perhaps the bug is
+a stray memory reference which happens to fetch from the location where
+that name is stored in memory; perhaps, if the name were different, the
+contents of that location would fool the assembler into doing the right
+thing despite the bug.  Play it safe and give a specific, complete
+example.  That is the easiest thing for you to do, and the most helpful.
 
    Keep in mind that the purpose of a bug report is to enable us to fix
-the bug if it is new to us.  Therefore, always write your bug reports
-on the assumption that the bug has not been reported previously.
+the bug if it is new to us.  Therefore, always write your bug reports on
+the assumption that the bug has not been reported previously.
 
    Sometimes people give a few sketchy facts and ask, "Does this ring a
 bell?"  This cannot help us fix a bug, so it is basically useless.  We
@@ -23947,24 +23421,24 @@ might as well expedite matters by sending them to begin with.
 
    To enable us to fix the bug, you should include all these things:
 
-   * The version of `as'.  `as' announces it if you start it with the
-     `--version' argument.
+   * The version of 'as'.  'as' announces it if you start it with the
+     '--version' argument.
 
      Without this, we will not know whether there is any point in
-     looking for the bug in the current version of `as'.
+     looking for the bug in the current version of 'as'.
 
-   * Any patches you may have applied to the `as' source.
+   * Any patches you may have applied to the 'as' source.
 
    * The type of machine you are using, and the operating system name
      and version number.
 
-   * What compiler (and its version) was used to compile `as'--e.g.
-     "`gcc-2.7'".
+   * What compiler (and its version) was used to compile 'as'--e.g.
+     "'gcc-2.7'".
 
    * The command arguments you gave the assembler to assemble your
      example and observe the bug.  To guarantee you will not omit
-     something important, list them all.  A copy of the Makefile (or
-     the output from make) is sufficient.
+     something important, list them all.  A copy of the Makefile (or the
+     output from make) is sufficient.
 
      If we were to try to guess the arguments, we would probably guess
      wrong and then we might not encounter the bug.
@@ -23972,23 +23446,22 @@ might as well expedite matters by sending them to begin with.
    * A complete input file that will reproduce the bug.  If the bug is
      observed when the assembler is invoked via a compiler, send the
      assembler source, not the high level language source.  Most
-     compilers will produce the assembler source when run with the `-S'
-     option.  If you are using `gcc', use the options `-v
-     --save-temps'; this will save the assembler source in a file with
-     an extension of `.s', and also show you exactly how `as' is being
-     run.
+     compilers will produce the assembler source when run with the '-S'
+     option.  If you are using 'gcc', use the options '-v --save-temps';
+     this will save the assembler source in a file with an extension of
+     '.s', and also show you exactly how 'as' is being run.
 
    * A description of what behavior you observe that you believe is
      incorrect.  For example, "It gets a fatal signal."
 
-     Of course, if the bug is that `as' gets a fatal signal, then we
+     Of course, if the bug is that 'as' gets a fatal signal, then we
      will certainly notice it.  But if the bug is incorrect output, we
      might not notice unless it is glaringly wrong.  You might as well
      not give us a chance to make a mistake.
 
      Even if the problem you experience is a fatal signal, you should
      still say so explicitly.  Suppose something strange is going on,
-     such as, your copy of `as' is out of sync, or you have encountered
+     such as, your copy of 'as' is out of sync, or you have encountered
      a bug in the C library on your system.  (This has happened!)  Your
      copy might crash and ours would not.  If you told us to expect a
      crash, then when ours fails to crash, we would know that the bug
@@ -23996,15 +23469,15 @@ might as well expedite matters by sending them to begin with.
      crash, then we would not be able to draw any conclusion from our
      observations.
 
-   * If you wish to suggest changes to the `as' source, send us context
-     diffs, as generated by `diff' with the `-u', `-c', or `-p' option.
+   * If you wish to suggest changes to the 'as' source, send us context
+     diffs, as generated by 'diff' with the '-u', '-c', or '-p' option.
      Always send diffs from the old file to the new file.  If you even
-     discuss something in the `as' source, refer to it by context, not
+     discuss something in the 'as' source, refer to it by context, not
      by line number.
 
-     The line numbers in our development sources will not match those
-     in your sources.  Your line numbers would convey no useful
-     information to us.
+     The line numbers in our development sources will not match those in
+     your sources.  Your line numbers would convey no useful information
+     to us.
 
    Here are some things that are not necessary:
 
@@ -24019,8 +23492,8 @@ might as well expedite matters by sending them to begin with.
      debugger with breakpoints, not by pure deduction from a series of
      examples.  We recommend that you save your time for something else.
 
-     Of course, if you can find a simpler example to report _instead_
-     of the original one, that is a convenience for us.  Errors in the
+     Of course, if you can find a simpler example to report _instead_ of
+     the original one, that is a convenience for us.  Errors in the
      output will be easier to spot, running under the debugger will take
      less time, and so on.
 
@@ -24032,15 +23505,15 @@ might as well expedite matters by sending them to begin with.
 
      A patch for the bug does help us if it is a good one.  But do not
      omit the necessary information, such as the test case, on the
-     assumption that a patch is all we need.  We might see problems
-     with your patch and decide to fix the problem another way, or we
-     might not understand it at all.
+     assumption that a patch is all we need.  We might see problems with
+     your patch and decide to fix the problem another way, or we might
+     not understand it at all.
 
-     Sometimes with a program as complicated as `as' it is very hard to
+     Sometimes with a program as complicated as 'as' it is very hard to
      construct an example that will make the program follow a certain
      path through the code.  If you do not send us the example, we will
-     not be able to construct one, so we will not be able to verify
-     that the bug is fixed.
+     not be able to construct one, so we will not be able to verify that
+     the bug is fixed.
 
      And if we cannot understand what bug you are trying to fix, or why
      your patch should be an improvement, we will not install it.  A
@@ -24060,27 +23533,27 @@ File: as.info,  Node: Acknowledgements,  Next: GNU Free Documentation License,
 If you have contributed to GAS and your name isn't listed here, it is
 not meant as a slight.  We just don't know about it.  Send mail to the
 maintainer, and we'll correct the situation.  Currently the maintainer
-is Nick Clifton (email address `nickc@redhat.com').
+is Nick Clifton (email address 'nickc@redhat.com').
 
    Dean Elsner wrote the original GNU assembler for the VAX.(1)
 
    Jay Fenlason maintained GAS for a while, adding support for
 GDB-specific debug information and the 68k series machines, most of the
-preprocessing pass, and extensive changes in `messages.c',
-`input-file.c', `write.c'.
+preprocessing pass, and extensive changes in 'messages.c',
+'input-file.c', 'write.c'.
 
    K. Richard Pixley maintained GAS for a while, adding various
 enhancements and many bug fixes, including merging support for several
 processors, breaking GAS up to handle multiple object file format back
 ends (including heavy rewrite, testing, an integration of the coff and
 b.out back ends), adding configuration including heavy testing and
-verification of cross assemblers and file splits and renaming,
-converted GAS to strictly ANSI C including full prototypes, added
-support for m680[34]0 and cpu32, did considerable work on i960
-including a COFF port (including considerable amounts of reverse
-engineering), a SPARC opcode file rewrite, DECstation, rs6000, and
-hp300hpux host ports, updated "know" assertions and made them work,
-much other reorganization, cleanup, and lint.
+verification of cross assemblers and file splits and renaming, converted
+GAS to strictly ANSI C including full prototypes, added support for
+m680[34]0 and cpu32, did considerable work on i960 including a COFF port
+(including considerable amounts of reverse engineering), a SPARC opcode
+file rewrite, DECstation, rs6000, and hp300hpux host ports, updated
+"know" assertions and made them work, much other reorganization,
+cleanup, and lint.
 
    Ken Raeburn wrote the high-level BFD interface code to replace most
 of the code in format-specific I/O modules.
@@ -24096,10 +23569,10 @@ Youngdale has done much work with it since.
 of Buffalo University and Torbjorn Granlund of the Swedish Institute of
 Computer Science.
 
-   Keith Knowles at the Open Software Foundation wrote the original
-MIPS back end (`tc-mips.c', `tc-mips.h'), and contributed Rose format
-support (which hasn't been merged in yet).  Ralph Campbell worked with
-the MIPS code to support a.out format.
+   Keith Knowles at the Open Software Foundation wrote the original MIPS
+back end ('tc-mips.c', 'tc-mips.h'), and contributed Rose format support
+(which hasn't been merged in yet).  Ralph Campbell worked with the MIPS
+code to support a.out format.
 
    Support for the Zilog Z8k and Renesas H8/300 processors (tc-z8k,
 tc-h8300), and IEEE 695 object file format (obj-ieee), was written by
@@ -24107,39 +23580,39 @@ Steve Chamberlain of Cygnus Support.  Steve also modified the COFF back
 end to use BFD for some low-level operations, for use with the H8/300
 and AMD 29k targets.
 
-   John Gilmore built the AMD 29000 support, added `.include' support,
+   John Gilmore built the AMD 29000 support, added '.include' support,
 and simplified the configuration of which versions accept which
 directives.  He updated the 68k machine description so that Motorola's
-opcodes always produced fixed-size instructions (e.g., `jsr'), while
-synthetic instructions remained shrinkable (`jbsr').  John fixed many
+opcodes always produced fixed-size instructions (e.g., 'jsr'), while
+synthetic instructions remained shrinkable ('jbsr').  John fixed many
 bugs, including true tested cross-compilation support, and one bug in
 relaxation that took a week and required the proverbial one-bit fix.
 
-   Ian Lance Taylor of Cygnus Support merged the Motorola and MIT
-syntax for the 68k, completed support for some COFF targets (68k, i386
-SVR3, and SCO Unix), added support for MIPS ECOFF and ELF targets,
-wrote the initial RS/6000 and PowerPC assembler, and made a few other
-minor patches.
+   Ian Lance Taylor of Cygnus Support merged the Motorola and MIT syntax
+for the 68k, completed support for some COFF targets (68k, i386 SVR3,
+and SCO Unix), added support for MIPS ECOFF and ELF targets, wrote the
+initial RS/6000 and PowerPC assembler, and made a few other minor
+patches.
 
    Steve Chamberlain made GAS able to generate listings.
 
    Hewlett-Packard contributed support for the HP9000/300.
 
    Jeff Law wrote GAS and BFD support for the native HPPA object format
-(SOM) along with a fairly extensive HPPA testsuite (for both SOM and
-ELF object formats).  This work was supported by both the Center for
+(SOM) along with a fairly extensive HPPA testsuite (for both SOM and ELF
+object formats).  This work was supported by both the Center for
 Software Science at the University of Utah and Cygnus Support.
 
    Support for ELF format files has been worked on by Mark Eichin of
 Cygnus Support (original, incomplete implementation for SPARC), Pete
-Hoogenboom and Jeff Law at the University of Utah (HPPA mainly),
-Michael Meissner of the Open Software Foundation (i386 mainly), and Ken
-Raeburn of Cygnus Support (sparc, and some initial 64-bit support).
+Hoogenboom and Jeff Law at the University of Utah (HPPA mainly), Michael
+Meissner of the Open Software Foundation (i386 mainly), and Ken Raeburn
+of Cygnus Support (sparc, and some initial 64-bit support).
 
    Linas Vepstas added GAS support for the ESA/390 "IBM 370"
 architecture.
 
-   Richard Henderson rewrote the Alpha assembler. Klaus Kaempf wrote
+   Richard Henderson rewrote the Alpha assembler.  Klaus Kaempf wrote
 GAS and BFD support for openVMS/Alpha.
 
    Timothy Wall, Michael Hayes, and Greg Smart contributed to the
@@ -24148,8 +23621,8 @@ various tic* flavors.
    David Heine, Sterling Augustine, Bob Wilson and John Ruttenberg from
 Tensilica, Inc. added support for Xtensa processors.
 
-   Several engineers at Cygnus Support have also provided many small
-bug fixes and configuration enhancements.
+   Several engineers at Cygnus Support have also provided many small bug
+fixes and configuration enhancements.
 
    Jon Beniston added support for the Lattice Mico32 architecture.
 
@@ -24171,7 +23644,7 @@ Appendix A GNU Free Documentation License
                      Version 1.3, 3 November 2008
 
      Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
-     `http://fsf.org/'
+     <http://fsf.org/>
 
      Everyone is permitted to copy and distribute verbatim copies
      of this license document, but changing it is not allowed.
@@ -24196,21 +23669,21 @@ Appendix A GNU Free Documentation License
      free program should come with manuals providing the same freedoms
      that the software does.  But this License is not limited to
      software manuals; it can be used for any textual work, regardless
-     of subject matter or whether it is published as a printed book.
-     We recommend this License principally for works whose purpose is
+     of subject matter or whether it is published as a printed book.  We
+     recommend this License principally for works whose purpose is
      instruction or reference.
 
   1. APPLICABILITY AND DEFINITIONS
 
      This License applies to any manual or other work, in any medium,
-     that contains a notice placed by the copyright holder saying it
-     can be distributed under the terms of this License.  Such a notice
+     that contains a notice placed by the copyright holder saying it can
+     be distributed under the terms of this License.  Such a notice
      grants a world-wide, royalty-free license, unlimited in duration,
      to use that work under the conditions stated herein.  The
      "Document", below, refers to any such manual or work.  Any member
-     of the public is a licensee, and is addressed as "you".  You
-     accept the license if you copy, modify or distribute the work in a
-     way requiring permission under copyright law.
+     of the public is a licensee, and is addressed as "you".  You accept
+     the license if you copy, modify or distribute the work in a way
+     requiring permission under copyright law.
 
      A "Modified Version" of the Document means any work containing the
      Document or a portion of it, either copied verbatim, or with
@@ -24228,12 +23701,12 @@ Appendix A GNU Free Documentation License
      regarding them.
 
      The "Invariant Sections" are certain Secondary Sections whose
-     titles are designated, as being those of Invariant Sections, in
-     the notice that says that the Document is released under this
-     License.  If a section does not fit the above definition of
-     Secondary then it is not allowed to be designated as Invariant.
-     The Document may contain zero Invariant Sections.  If the Document
-     does not identify any Invariant Sections then there are none.
+     titles are designated, as being those of Invariant Sections, in the
+     notice that says that the Document is released under this License.
+     If a section does not fit the above definition of Secondary then it
+     is not allowed to be designated as Invariant.  The Document may
+     contain zero Invariant Sections.  If the Document does not identify
+     any Invariant Sections then there are none.
 
      The "Cover Texts" are certain short passages of text that are
      listed, as Front-Cover Texts or Back-Cover Texts, in the notice
@@ -24244,27 +23717,27 @@ Appendix A GNU Free Documentation License
      A "Transparent" copy of the Document means a machine-readable copy,
      represented in a format whose specification is available to the
      general public, that is suitable for revising the document
-     straightforwardly with generic text editors or (for images
-     composed of pixels) generic paint programs or (for drawings) some
-     widely available drawing editor, and that is suitable for input to
-     text formatters or for automatic translation to a variety of
-     formats suitable for input to text formatters.  A copy made in an
-     otherwise Transparent file format whose markup, or absence of
-     markup, has been arranged to thwart or discourage subsequent
-     modification by readers is not Transparent.  An image format is
-     not Transparent if used for any substantial amount of text.  A
-     copy that is not "Transparent" is called "Opaque".
+     straightforwardly with generic text editors or (for images composed
+     of pixels) generic paint programs or (for drawings) some widely
+     available drawing editor, and that is suitable for input to text
+     formatters or for automatic translation to a variety of formats
+     suitable for input to text formatters.  A copy made in an otherwise
+     Transparent file format whose markup, or absence of markup, has
+     been arranged to thwart or discourage subsequent modification by
+     readers is not Transparent.  An image format is not Transparent if
+     used for any substantial amount of text.  A copy that is not
+     "Transparent" is called "Opaque".
 
      Examples of suitable formats for Transparent copies include plain
      ASCII without markup, Texinfo input format, LaTeX input format,
-     SGML or XML using a publicly available DTD, and
-     standard-conforming simple HTML, PostScript or PDF designed for
-     human modification.  Examples of transparent image formats include
-     PNG, XCF and JPG.  Opaque formats include proprietary formats that
-     can be read and edited only by proprietary word processors, SGML or
-     XML for which the DTD and/or processing tools are not generally
-     available, and the machine-generated HTML, PostScript or PDF
-     produced by some word processors for output purposes only.
+     SGML or XML using a publicly available DTD, and standard-conforming
+     simple HTML, PostScript or PDF designed for human modification.
+     Examples of transparent image formats include PNG, XCF and JPG.
+     Opaque formats include proprietary formats that can be read and
+     edited only by proprietary word processors, SGML or XML for which
+     the DTD and/or processing tools are not generally available, and
+     the machine-generated HTML, PostScript or PDF produced by some word
+     processors for output purposes only.
 
      The "Title Page" means, for a printed book, the title page itself,
      plus such following pages as are needed to hold, legibly, the
@@ -24302,8 +23775,8 @@ Appendix A GNU Free Documentation License
      may not use technical measures to obstruct or control the reading
      or further copying of the copies you make or distribute.  However,
      you may accept compensation in exchange for copies.  If you
-     distribute a large enough number of copies you must also follow
-     the conditions in section 3.
+     distribute a large enough number of copies you must also follow the
+     conditions in section 3.
 
      You may also lend copies, under the same conditions stated above,
      and you may publicly display copies.
@@ -24317,12 +23790,11 @@ Appendix A GNU Free Documentation License
      these Cover Texts: Front-Cover Texts on the front cover, and
      Back-Cover Texts on the back cover.  Both covers must also clearly
      and legibly identify you as the publisher of these copies.  The
-     front cover must present the full title with all words of the
-     title equally prominent and visible.  You may add other material
-     on the covers in addition.  Copying with changes limited to the
-     covers, as long as they preserve the title of the Document and
-     satisfy these conditions, can be treated as verbatim copying in
-     other respects.
+     front cover must present the full title with all words of the title
+     equally prominent and visible.  You may add other material on the
+     covers in addition.  Copying with changes limited to the covers, as
+     long as they preserve the title of the Document and satisfy these
+     conditions, can be treated as verbatim copying in other respects.
 
      If the required texts for either cover are too voluminous to fit
      legibly, you should put the first ones listed (as many as fit
@@ -24330,40 +23802,39 @@ Appendix A GNU Free Documentation License
      adjacent pages.
 
      If you publish or distribute Opaque copies of the Document
-     numbering more than 100, you must either include a
-     machine-readable Transparent copy along with each Opaque copy, or
-     state in or with each Opaque copy a computer-network location from
-     which the general network-using public has access to download
-     using public-standard network protocols a complete Transparent
-     copy of the Document, free of added material.  If you use the
-     latter option, you must take reasonably prudent steps, when you
-     begin distribution of Opaque copies in quantity, to ensure that
-     this Transparent copy will remain thus accessible at the stated
-     location until at least one year after the last time you
-     distribute an Opaque copy (directly or through your agents or
-     retailers) of that edition to the public.
+     numbering more than 100, you must either include a machine-readable
+     Transparent copy along with each Opaque copy, or state in or with
+     each Opaque copy a computer-network location from which the general
+     network-using public has access to download using public-standard
+     network protocols a complete Transparent copy of the Document, free
+     of added material.  If you use the latter option, you must take
+     reasonably prudent steps, when you begin distribution of Opaque
+     copies in quantity, to ensure that this Transparent copy will
+     remain thus accessible at the stated location until at least one
+     year after the last time you distribute an Opaque copy (directly or
+     through your agents or retailers) of that edition to the public.
 
      It is requested, but not required, that you contact the authors of
-     the Document well before redistributing any large number of
-     copies, to give them a chance to provide you with an updated
-     version of the Document.
+     the Document well before redistributing any large number of copies,
+     to give them a chance to provide you with an updated version of the
+     Document.
 
   4. MODIFICATIONS
 
      You may copy and distribute a Modified Version of the Document
      under the conditions of sections 2 and 3 above, provided that you
-     release the Modified Version under precisely this License, with
-     the Modified Version filling the role of the Document, thus
-     licensing distribution and modification of the Modified Version to
-     whoever possesses a copy of it.  In addition, you must do these
-     things in the Modified Version:
+     release the Modified Version under precisely this License, with the
+     Modified Version filling the role of the Document, thus licensing
+     distribution and modification of the Modified Version to whoever
+     possesses a copy of it.  In addition, you must do these things in
+     the Modified Version:
 
        A. Use in the Title Page (and on the covers, if any) a title
-          distinct from that of the Document, and from those of
-          previous versions (which should, if there were any, be listed
-          in the History section of the Document).  You may use the
-          same title as a previous version if the original publisher of
-          that version gives permission.
+          distinct from that of the Document, and from those of previous
+          versions (which should, if there were any, be listed in the
+          History section of the Document).  You may use the same title
+          as a previous version if the original publisher of that
+          version gives permission.
 
        B. List on the Title Page, as authors, one or more persons or
           entities responsible for authorship of the modifications in
@@ -24393,31 +23864,30 @@ Appendix A GNU Free Documentation License
 
        I. Preserve the section Entitled "History", Preserve its Title,
           and add to it an item stating at least the title, year, new
-          authors, and publisher of the Modified Version as given on
-          the Title Page.  If there is no section Entitled "History" in
-          the Document, create one stating the title, year, authors,
-          and publisher of the Document as given on its Title Page,
-          then add an item describing the Modified Version as stated in
-          the previous sentence.
+          authors, and publisher of the Modified Version as given on the
+          Title Page.  If there is no section Entitled "History" in the
+          Document, create one stating the title, year, authors, and
+          publisher of the Document as given on its Title Page, then add
+          an item describing the Modified Version as stated in the
+          previous sentence.
 
        J. Preserve the network location, if any, given in the Document
           for public access to a Transparent copy of the Document, and
           likewise the network locations given in the Document for
-          previous versions it was based on.  These may be placed in
-          the "History" section.  You may omit a network location for a
-          work that was published at least four years before the
-          Document itself, or if the original publisher of the version
-          it refers to gives permission.
+          previous versions it was based on.  These may be placed in the
+          "History" section.  You may omit a network location for a work
+          that was published at least four years before the Document
+          itself, or if the original publisher of the version it refers
+          to gives permission.
 
        K. For any section Entitled "Acknowledgements" or "Dedications",
-          Preserve the Title of the section, and preserve in the
-          section all the substance and tone of each of the contributor
+          Preserve the Title of the section, and preserve in the section
+          all the substance and tone of each of the contributor
           acknowledgements and/or dedications given therein.
 
-       L. Preserve all the Invariant Sections of the Document,
-          unaltered in their text and in their titles.  Section numbers
-          or the equivalent are not considered part of the section
-          titles.
+       L. Preserve all the Invariant Sections of the Document, unaltered
+          in their text and in their titles.  Section numbers or the
+          equivalent are not considered part of the section titles.
 
        M. Delete any section Entitled "Endorsements".  Such a section
           may not be included in the Modified Version.
@@ -24430,11 +23900,11 @@ Appendix A GNU Free Documentation License
 
      If the Modified Version includes new front-matter sections or
      appendices that qualify as Secondary Sections and contain no
-     material copied from the Document, you may at your option
-     designate some or all of these sections as invariant.  To do this,
-     add their titles to the list of Invariant Sections in the Modified
-     Version's license notice.  These titles must be distinct from any
-     other section titles.
+     material copied from the Document, you may at your option designate
+     some or all of these sections as invariant.  To do this, add their
+     titles to the list of Invariant Sections in the Modified Version's
+     license notice.  These titles must be distinct from any other
+     section titles.
 
      You may add a section Entitled "Endorsements", provided it contains
      nothing but endorsements of your Modified Version by various
@@ -24443,15 +23913,15 @@ Appendix A GNU Free Documentation License
      definition of a standard.
 
      You may add a passage of up to five words as a Front-Cover Text,
-     and a passage of up to 25 words as a Back-Cover Text, to the end
-     of the list of Cover Texts in the Modified Version.  Only one
-     passage of Front-Cover Text and one of Back-Cover Text may be
-     added by (or through arrangements made by) any one entity.  If the
-     Document already includes a cover text for the same cover,
-     previously added by you or by arrangement made by the same entity
-     you are acting on behalf of, you may not add another; but you may
-     replace the old one, on explicit permission from the previous
-     publisher that added the old one.
+     and a passage of up to 25 words as a Back-Cover Text, to the end of
+     the list of Cover Texts in the Modified Version.  Only one passage
+     of Front-Cover Text and one of Back-Cover Text may be added by (or
+     through arrangements made by) any one entity.  If the Document
+     already includes a cover text for the same cover, previously added
+     by you or by arrangement made by the same entity you are acting on
+     behalf of, you may not add another; but you may replace the old
+     one, on explicit permission from the previous publisher that added
+     the old one.
 
      The author(s) and publisher(s) of the Document do not by this
      License give permission to use their names for publicity for or to
@@ -24461,8 +23931,8 @@ Appendix A GNU Free Documentation License
 
      You may combine the Document with other documents released under
      this License, under the terms defined in section 4 above for
-     modified versions, provided that you include in the combination
-     all of the Invariant Sections of all of the original documents,
+     modified versions, provided that you include in the combination all
+     of the Invariant Sections of all of the original documents,
      unmodified, and list them all as Invariant Sections of your
      combined work in its license notice, and that you preserve all
      their Warranty Disclaimers.
@@ -24489,20 +23959,20 @@ Appendix A GNU Free Documentation License
      documents released under this License, and replace the individual
      copies of this License in the various documents with a single copy
      that is included in the collection, provided that you follow the
-     rules of this License for verbatim copying of each of the
-     documents in all other respects.
+     rules of this License for verbatim copying of each of the documents
+     in all other respects.
 
      You may extract a single document from such a collection, and
      distribute it individually under this License, provided you insert
-     a copy of this License into the extracted document, and follow
-     this License in all other respects regarding verbatim copying of
-     that document.
+     a copy of this License into the extracted document, and follow this
+     License in all other respects regarding verbatim copying of that
+     document.
 
   7. AGGREGATION WITH INDEPENDENT WORKS
 
      A compilation of the Document or its derivatives with other
-     separate and independent documents or works, in or on a volume of
-     a storage or distribution medium, is called an "aggregate" if the
+     separate and independent documents or works, in or on a volume of a
+     storage or distribution medium, is called an "aggregate" if the
      copyright resulting from the compilation is not used to limit the
      legal rights of the compilation's users beyond what the individual
      works permit.  When the Document is included in an aggregate, this
@@ -24547,8 +24017,8 @@ Appendix A GNU Free Documentation License
 
      However, if you cease all violation of this License, then your
      license from a particular copyright holder is reinstated (a)
-     provisionally, unless and until the copyright holder explicitly
-     and finally terminates your license, and (b) permanently, if the
+     provisionally, unless and until the copyright holder explicitly and
+     finally terminates your license, and (b) permanently, if the
      copyright holder fails to notify you of the violation by some
      reasonable means prior to 60 days after the cessation.
 
@@ -24560,33 +24030,33 @@ Appendix A GNU Free Documentation License
      after your receipt of the notice.
 
      Termination of your rights under this section does not terminate
-     the licenses of parties who have received copies or rights from
-     you under this License.  If your rights have been terminated and
-     not permanently reinstated, receipt of a copy of some or all of
-     the same material does not give you any rights to use it.
+     the licenses of parties who have received copies or rights from you
+     under this License.  If your rights have been terminated and not
+     permanently reinstated, receipt of a copy of some or all of the
+     same material does not give you any rights to use it.
 
- 10. FUTURE REVISIONS OF THIS LICENSE
+  10. FUTURE REVISIONS OF THIS LICENSE
 
      The Free Software Foundation may publish new, revised versions of
      the GNU Free Documentation License from time to time.  Such new
      versions will be similar in spirit to the present version, but may
      differ in detail to address new problems or concerns.  See
-     `http://www.gnu.org/copyleft/'.
+     <http://www.gnu.org/copyleft/>.
 
      Each version of the License is given a distinguishing version
      number.  If the Document specifies that a particular numbered
      version of this License "or any later version" applies to it, you
      have the option of following the terms and conditions either of
      that specified version or of any later version that has been
-     published (not as a draft) by the Free Software Foundation.  If
-     the Document does not specify a version number of this License,
-     you may choose any version ever published (not as a draft) by the
-     Free Software Foundation.  If the Document specifies that a proxy
-     can decide which future versions of this License can be used, that
+     published (not as a draft) by the Free Software Foundation.  If the
+     Document does not specify a version number of this License, you may
+     choose any version ever published (not as a draft) by the Free
+     Software Foundation.  If the Document specifies that a proxy can
+     decide which future versions of this License can be used, that
      proxy's public statement of acceptance of a version permanently
      authorizes you to choose that version for the Document.
 
- 11. RELICENSING
+  11. RELICENSING
 
      "Massive Multiauthor Collaboration Site" (or "MMC Site") means any
      World Wide Web server that publishes copyrightable works and also
@@ -24616,7 +24086,6 @@ Appendix A GNU Free Documentation License
      site under CC-BY-SA on the same site at any time before August 1,
      2009, provided the MMC is eligible for relicensing.
 
-
 ADDENDUM: How to use this License for your documents
 ====================================================
 
@@ -24633,7 +24102,7 @@ notices just after the title page:
        Free Documentation License''.
 
    If you have Invariant Sections, Front-Cover Texts and Back-Cover
-Texts, replace the "with...Texts." line with this:
+Texts, replace the "with...Texts."  line with this:
 
          with the Invariant Sections being LIST THEIR TITLES, with
          the Front-Cover Texts being LIST, and with the Back-Cover Texts
@@ -24644,9 +24113,9 @@ combination of the three, merge those two alternatives to suit the
 situation.
 
    If your document contains nontrivial examples of program code, we
-recommend releasing these examples in parallel under your choice of
-free software license, such as the GNU General Public License, to
-permit their use in free software.
+recommend releasing these examples in parallel under your choice of free
+software license, such as the GNU General Public License, to permit
+their use in free software.
 
 
 File: as.info,  Node: AS Index,  Prev: GNU Free Documentation License,  Up: Top
@@ -24657,23 +24126,23 @@ AS Index
  [index ]
 * Menu:
 
-*  \" (doublequote character):           Strings.            (line   43)
-*  \\ (\ character):                     Strings.            (line   40)
-*  \b (backspace character):             Strings.            (line   15)
-*  \DDD (octal character code):          Strings.            (line   30)
-*  \f (formfeed character):              Strings.            (line   18)
-*  \n (newline character):               Strings.            (line   21)
-*  \r (carriage return character):       Strings.            (line   24)
-*  \t (tab):                             Strings.            (line   27)
-*  \XD... (hex character code):          Strings.            (line   36)
+* \" (doublequote character):            Strings.            (line   43)
+* \b (backspace character):              Strings.            (line   15)
+* \DDD (octal character code):           Strings.            (line   30)
+* \f (formfeed character):               Strings.            (line   18)
+* \n (newline character):                Strings.            (line   21)
+* \r (carriage return character):        Strings.            (line   24)
+* \t (tab):                              Strings.            (line   27)
+* \XD... (hex character code):           Strings.            (line   36)
+* \\ (\ character):                      Strings.            (line   40)
 * #:                                     Comments.           (line   33)
-* #APP:                                  Preprocessing.      (line   27)
-* #NO_APP:                               Preprocessing.      (line   27)
-* $ in symbol names <1>:                 SH-Chars.           (line   15)
+* #APP:                                  Preprocessing.      (line   26)
+* #NO_APP:                               Preprocessing.      (line   26)
+* $ in symbol names:                     D10V-Chars.         (line   46)
+* $ in symbol names <1>:                 D30V-Chars.         (line   70)
 * $ in symbol names <2>:                 Meta-Chars.         (line   10)
-* $ in symbol names <3>:                 D30V-Chars.         (line   70)
-* $ in symbol names <4>:                 D10V-Chars.         (line   53)
-* $ in symbol names:                     SH64-Chars.         (line   15)
+* $ in symbol names <3>:                 SH-Chars.           (line   15)
+* $ in symbol names <4>:                 SH64-Chars.         (line   15)
 * $a:                                    ARM Mapping Symbols.
                                                              (line    9)
 * $acos math builtin, TIC54X:            TIC54X-Builtins.    (line   10)
@@ -24685,9 +24154,9 @@ AS Index
 * $cosh math builtin, TIC54X:            TIC54X-Builtins.    (line   25)
 * $cvf math builtin, TIC54X:             TIC54X-Builtins.    (line   31)
 * $cvi math builtin, TIC54X:             TIC54X-Builtins.    (line   34)
-* $d <1>:                                AArch64 Mapping Symbols.
+* $d:                                    AArch64 Mapping Symbols.
                                                              (line   12)
-* $d:                                    ARM Mapping Symbols.
+* $d <1>:                                ARM Mapping Symbols.
                                                              (line   15)
 * $exp math builtin, TIC54X:             TIC54X-Builtins.    (line   37)
 * $fabs math builtin, TIC54X:            TIC54X-Builtins.    (line   40)
@@ -24732,17 +24201,17 @@ AS Index
 * --32 option, x86-64:                   i386-Options.       (line    8)
 * --64 option, i386:                     i386-Options.       (line    8)
 * --64 option, x86-64:                   i386-Options.       (line    8)
-* --absolute-literals:                   Xtensa Options.     (line   40)
+* --absolute-literals:                   Xtensa Options.     (line   39)
 * --allow-reg-prefix:                    SH Options.         (line    9)
 * --alternate:                           alternate.          (line    6)
-* --auto-litpools:                       Xtensa Options.     (line   23)
-* --base-size-default-16:                M68K-Opts.          (line   65)
-* --base-size-default-32:                M68K-Opts.          (line   65)
+* --auto-litpools:                       Xtensa Options.     (line   22)
+* --base-size-default-16:                M68K-Opts.          (line   66)
+* --base-size-default-32:                M68K-Opts.          (line   66)
 * --big:                                 SH Options.         (line    9)
-* --bitwise-or option, M680x0:           M68K-Opts.          (line   58)
-* --compress-debug-sections= option:     Overview.           (line  345)
-* --disp-size-default-16:                M68K-Opts.          (line   74)
-* --disp-size-default-32:                M68K-Opts.          (line   74)
+* --bitwise-or option, M680x0:           M68K-Opts.          (line   59)
+* --compress-debug-sections= option:     Overview.           (line  346)
+* --disp-size-default-16:                M68K-Opts.          (line   75)
+* --disp-size-default-32:                M68K-Opts.          (line   75)
 * --divide option, i386:                 i386-Options.       (line   24)
 * --dsp:                                 SH Options.         (line    9)
 * --emulation=crisaout command line option, CRIS: CRIS-Opts. (line    9)
@@ -24750,11 +24219,11 @@ AS Index
 * --enforce-aligned-data:                Sparc-Aligned-Data. (line   11)
 * --fatal-warnings:                      W.                  (line   16)
 * --fdpic:                               SH Options.         (line   31)
-* --fix-v4bx command line option, ARM:   ARM Options.        (line  190)
+* --fix-v4bx command line option, ARM:   ARM Options.        (line  191)
 * --fixed-special-register-names command line option, MMIX: MMIX-Opts.
                                                              (line    8)
-* --force-long-branches:                 M68HC11-Opts.       (line   82)
-* --generate-example:                    M68HC11-Opts.       (line   99)
+* --force-long-branches:                 M68HC11-Opts.       (line   81)
+* --generate-example:                    M68HC11-Opts.       (line   98)
 * --globalize-symbols command line option, MMIX: MMIX-Opts.  (line   12)
 * --gnu-syntax command line option, MMIX: MMIX-Opts.         (line   16)
 * --linker-allocated-gregs command line option, MMIX: MMIX-Opts.
@@ -24764,47 +24233,47 @@ AS Index
 * --listing-lhs-width2:                  listing.            (line   21)
 * --listing-rhs-width:                   listing.            (line   28)
 * --little:                              SH Options.         (line    9)
-* --longcalls:                           Xtensa Options.     (line   54)
+* --longcalls:                           Xtensa Options.     (line   53)
 * --march=ARCHITECTURE command line option, CRIS: CRIS-Opts. (line   34)
 * --MD:                                  MD.                 (line    6)
-* --mul-bug-abort command line option, CRIS: CRIS-Opts.      (line   62)
-* --no-absolute-literals:                Xtensa Options.     (line   40)
-* --no-auto-litpools:                    Xtensa Options.     (line   23)
+* --mul-bug-abort command line option, CRIS: CRIS-Opts.      (line   63)
+* --no-absolute-literals:                Xtensa Options.     (line   39)
+* --no-auto-litpools:                    Xtensa Options.     (line   22)
 * --no-expand command line option, MMIX: MMIX-Opts.          (line   31)
-* --no-longcalls:                        Xtensa Options.     (line   54)
+* --no-longcalls:                        Xtensa Options.     (line   53)
 * --no-merge-gregs command line option, MMIX: MMIX-Opts.     (line   36)
-* --no-mul-bug-abort command line option, CRIS: CRIS-Opts.   (line   62)
+* --no-mul-bug-abort command line option, CRIS: CRIS-Opts.   (line   63)
 * --no-pad-sections:                     no-pad-sections.    (line    6)
 * --no-predefined-syms command line option, MMIX: MMIX-Opts. (line   22)
 * --no-pushj-stubs command line option, MMIX: MMIX-Opts.     (line   54)
 * --no-stubs command line option, MMIX:  MMIX-Opts.          (line   54)
-* --no-target-align:                     Xtensa Options.     (line   47)
+* --no-target-align:                     Xtensa Options.     (line   46)
 * --no-text-section-literals:            Xtensa Options.     (line    7)
-* --no-trampolines:                      Xtensa Options.     (line   75)
-* --no-transform:                        Xtensa Options.     (line   63)
+* --no-trampolines:                      Xtensa Options.     (line   74)
+* --no-transform:                        Xtensa Options.     (line   62)
 * --no-underscore command line option, CRIS: CRIS-Opts.      (line   15)
 * --no-warn:                             W.                  (line   11)
-* --pcrel:                               M68K-Opts.          (line   86)
+* --pcrel:                               M68K-Opts.          (line   87)
 * --pic command line option, CRIS:       CRIS-Opts.          (line   27)
-* --print-insn-syntax <1>:               M68HC11-Opts.       (line   88)
-* --print-insn-syntax:                   XGATE-Opts.         (line   25)
+* --print-insn-syntax:                   M68HC11-Opts.       (line   87)
+* --print-insn-syntax <1>:               XGATE-Opts.         (line   25)
+* --print-opcodes:                       M68HC11-Opts.       (line   91)
 * --print-opcodes <1>:                   XGATE-Opts.         (line   29)
-* --print-opcodes:                       M68HC11-Opts.       (line   92)
-* --register-prefix-optional option, M680x0: M68K-Opts.      (line   45)
+* --register-prefix-optional option, M680x0: M68K-Opts.      (line   46)
 * --relax:                               SH Options.         (line    9)
 * --relax command line option, MMIX:     MMIX-Opts.          (line   19)
-* --rename-section:                      Xtensa Options.     (line   71)
+* --rename-section:                      Xtensa Options.     (line   70)
 * --renesas:                             SH Options.         (line    9)
-* --sectname-subst:                      Section.            (line   81)
+* --sectname-subst:                      Section.            (line   71)
 * --short-branches:                      M68HC11-Opts.       (line   67)
 * --small:                               SH Options.         (line    9)
 * --statistics:                          statistics.         (line    6)
 * --strict-direct-mode:                  M68HC11-Opts.       (line   57)
-* --target-align:                        Xtensa Options.     (line   47)
+* --target-align:                        Xtensa Options.     (line   46)
 * --text-section-literals:               Xtensa Options.     (line    7)
 * --traditional-format:                  traditional-format. (line    6)
-* --trampolines:                         Xtensa Options.     (line   75)
-* --transform:                           Xtensa Options.     (line   63)
+* --trampolines:                         Xtensa Options.     (line   74)
+* --transform:                           Xtensa Options.     (line   62)
 * --underscore command line option, CRIS: CRIS-Opts.         (line   15)
 * --warn:                                W.                  (line   19)
 * --x32 option, i386:                    i386-Options.       (line    8)
@@ -24847,23 +24316,25 @@ AS Index
 * -D:                                    D.                  (line    6)
 * -D, ignored on VAX:                    VAX-Opts.           (line   11)
 * -d, VAX option:                        VAX-Opts.           (line   16)
-* -eabi= command line option, ARM:       ARM Options.        (line  166)
+* -eabi= command line option, ARM:       ARM Options.        (line  167)
 * -EB command line option, AArch64:      AArch64 Options.    (line    6)
-* -EB command line option, ARC:          ARC Options.        (line   85)
-* -EB command line option, ARM:          ARM Options.        (line  171)
+* -EB command line option, ARC:          ARC Options.        (line   84)
+* -EB command line option, ARM:          ARM Options.        (line  172)
 * -EB option (MIPS):                     MIPS Options.       (line   13)
 * -EB option, M32R:                      M32R-Opts.          (line   39)
 * -EB option, TILE-Gx:                   TILE-Gx Options.    (line   11)
 * -EL command line option, AArch64:      AArch64 Options.    (line   10)
-* -EL command line option, ARC:          ARC Options.        (line   89)
-* -EL command line option, ARM:          ARM Options.        (line  182)
+* -EL command line option, ARC:          ARC Options.        (line   88)
+* -EL command line option, ARM:          ARM Options.        (line  183)
 * -EL option (MIPS):                     MIPS Options.       (line   13)
 * -EL option, M32R:                      M32R-Opts.          (line   32)
 * -EL option, TILE-Gx:                   TILE-Gx Options.    (line   11)
 * -f:                                    f.                  (line    6)
 * -F command line option, Alpha:         Alpha Options.      (line   57)
-* -G command line option, Alpha:         Alpha Options.      (line   53)
+* -fno-pic option, RISC-V:               RISC-V-Opts.        (line   11)
+* -fpic option, RISC-V:                  RISC-V-Opts.        (line    8)
 * -g command line option, Alpha:         Alpha Options.      (line   47)
+* -G command line option, Alpha:         Alpha Options.      (line   53)
 * -G option (MIPS):                      MIPS Options.       (line    8)
 * -h option, VAX/VMS:                    VAX-Opts.           (line   45)
 * -H option, VAX/VMS:                    VAX-Opts.           (line   81)
@@ -24872,11 +24343,11 @@ AS Index
 * -Ip option, M32RX:                     M32R-Opts.          (line   97)
 * -J, ignored on VAX:                    VAX-Opts.           (line   27)
 * -K:                                    K.                  (line    6)
-* -k command line option, ARM:           ARM Options.        (line  186)
+* -k command line option, ARM:           ARM Options.        (line  187)
 * -KPIC option, M32R:                    M32R-Opts.          (line   42)
 * -KPIC option, MIPS:                    MIPS Options.       (line   21)
 * -L:                                    L.                  (line    6)
-* -l option, M680x0:                     M68K-Opts.          (line   33)
+* -l option, M680x0:                     M68K-Opts.          (line   34)
 * -little option, M32R:                  M32R-Opts.          (line   27)
 * -M:                                    M.                  (line    6)
 * -m11/03:                               PDP-11-Options.     (line  140)
@@ -24916,31 +24387,24 @@ AS Index
 * -m64 option, s390:                     s390 Options.       (line    8)
 * -m64 option, TILE-Gx:                  TILE-Gx Options.    (line    8)
 * -m64bit-doubles:                       RX-Opts.            (line   15)
-* -m68000 and related options:           M68K-Opts.          (line   98)
+* -m68000 and related options:           M68K-Opts.          (line   99)
 * -m68hc11:                              M68HC11-Opts.       (line    9)
 * -m68hc12:                              M68HC11-Opts.       (line   14)
 * -m68hcs12:                             M68HC11-Opts.       (line   21)
 * -m8byte-align command line option, V850: V850 Options.     (line   86)
-* -m[no-]68851 command line option, M680x0: M68K-Opts.       (line   21)
-* -m[no-]68881 command line option, M680x0: M68K-Opts.       (line   21)
-* -m[no-]div command line option, M680x0: M68K-Opts.         (line   21)
-* -m[no-]emac command line option, M680x0: M68K-Opts.        (line   21)
-* -m[no-]float command line option, M680x0: M68K-Opts.       (line   21)
-* -m[no-]mac command line option, M680x0: M68K-Opts.         (line   21)
-* -m[no-]usp command line option, M680x0: M68K-Opts.         (line   21)
 * -mabi= command line option, AArch64:   AArch64 Options.    (line   14)
-* -mabi=ABI option, RISC-V:              RISC-V-Opts.        (line   12)
+* -mabi=ABI option, RISC-V:              RISC-V-Opts.        (line   18)
 * -madd-bnd-prefix option, i386:         i386-Options.       (line  134)
 * -madd-bnd-prefix option, x86-64:       i386-Options.       (line  134)
 * -mall:                                 PDP-11-Options.     (line   26)
 * -mall-enabled command line option, LM32: LM32 Options.     (line   30)
 * -mall-extensions:                      PDP-11-Options.     (line   26)
-* -mall-opcodes command line option, AVR: AVR Options.       (line  109)
+* -mall-opcodes command line option, AVR: AVR Options.       (line  108)
 * -mamd64 option, x86-64:                i386-Options.       (line  190)
-* -mapcs-26 command line option, ARM:    ARM Options.        (line  138)
-* -mapcs-32 command line option, ARM:    ARM Options.        (line  138)
-* -mapcs-float command line option, ARM: ARM Options.        (line  152)
-* -mapcs-reentrant command line option, ARM: ARM Options.    (line  157)
+* -mapcs-26 command line option, ARM:    ARM Options.        (line  139)
+* -mapcs-32 command line option, ARM:    ARM Options.        (line  139)
+* -mapcs-float command line option, ARM: ARM Options.        (line  153)
+* -mapcs-reentrant command line option, ARM: ARM Options.    (line  158)
 * -march= command line option, AArch64:  AArch64 Options.    (line   39)
 * -march= command line option, ARM:      ARM Options.        (line   73)
 * -march= command line option, M680x0:   M68K-Opts.          (line    8)
@@ -24948,8 +24412,8 @@ AS Index
 * -march= option, i386:                  i386-Options.       (line   31)
 * -march= option, s390:                  s390 Options.       (line   25)
 * -march= option, x86-64:                i386-Options.       (line   31)
-* -march=ISA option, RISC-V:             RISC-V-Opts.        (line    8)
-* -matpcs command line option, ARM:      ARM Options.        (line  144)
+* -march=ISA option, RISC-V:             RISC-V-Opts.        (line   14)
+* -matpcs command line option, ARM:      ARM Options.        (line  145)
 * -mavxscalar= option, i386:             i386-Options.       (line   92)
 * -mavxscalar= option, x86-64:           i386-Options.       (line   92)
 * -mbarrel-shift-enabled command line option, LM32: LM32 Options.
@@ -24957,9 +24421,9 @@ AS Index
 * -mbig-endian:                          RX-Opts.            (line   20)
 * -mbig-obj option, x86-64:              i386-Options.       (line  148)
 * -mbreak-enabled command line option, LM32: LM32 Options.   (line   27)
-* -mccs command line option, ARM:        ARM Options.        (line  199)
+* -mccs command line option, ARM:        ARM Options.        (line  200)
 * -mcis:                                 PDP-11-Options.     (line   32)
-* -mcode-density command line option, ARC: ARC Options.      (line   94)
+* -mcode-density command line option, ARC: ARC Options.      (line   93)
 * -mconstant-gp command line option, IA-64: IA-64 Options.   (line    6)
 * -mCPU command line option, Alpha:      Alpha Options.      (line    6)
 * -mcpu option, cpu:                     TIC54X-Opts.        (line   15)
@@ -24973,7 +24437,7 @@ AS Index
 * -mdcache-enabled command line option, LM32: LM32 Options.  (line   24)
 * -mdebug command line option, Alpha:    Alpha Options.      (line   25)
 * -mdivide-enabled command line option, LM32: LM32 Options.  (line    9)
-* -mdpfp command line option, ARC:       ARC Options.        (line  109)
+* -mdpfp command line option, ARC:       ARC Options.        (line  108)
 * -mdsbt command line option, TIC6X:     TIC6X Options.      (line   13)
 * -me option, stderr redirect:           TIC54X-Opts.        (line   20)
 * -meis:                                 PDP-11-Options.     (line   46)
@@ -24996,17 +24460,17 @@ AS Index
 * -mfence-as-lock-add= option, i386:     i386-Options.       (line  161)
 * -mfence-as-lock-add= option, x86-64:   i386-Options.       (line  161)
 * -mfis:                                 PDP-11-Options.     (line   51)
-* -mfloat-abi= command line option, ARM: ARM Options.        (line  161)
+* -mfloat-abi= command line option, ARM: ARM Options.        (line  162)
 * -mfp-11:                               PDP-11-Options.     (line   56)
 * -mfpp:                                 PDP-11-Options.     (line   56)
 * -mfpu:                                 PDP-11-Options.     (line   56)
 * -mfpu= command line option, ARM:       ARM Options.        (line   90)
-* -mfpuda command line option, ARC:      ARC Options.        (line  112)
+* -mfpuda command line option, ARC:      ARC Options.        (line  111)
 * -mgcc-abi:                             RX-Opts.            (line   63)
 * -mgcc-abi command line option, V850:   V850 Options.       (line   79)
 * -mhard-float command line option, V850: V850 Options.      (line  101)
 * -micache-enabled command line option, LM32: LM32 Options.  (line   21)
-* -mimplicit-it command line option, ARM: ARM Options.       (line  122)
+* -mimplicit-it command line option, ARM: ARM Options.       (line  123)
 * -mint-register:                        RX-Opts.            (line   57)
 * -mintel64 option, x86-64:              i386-Options.       (line  190)
 * -mip2022 option, IP2K:                 IP2K-Opts.          (line   14)
@@ -25024,13 +24488,14 @@ AS Index
 * -mkd11q:                               PDP-11-Options.     (line  110)
 * -mkd11z:                               PDP-11-Options.     (line  118)
 * -mkev11:                               PDP-11-Options.     (line   51)
+* -mkev11 <1>:                           PDP-11-Options.     (line   51)
 * -mlimited-eis:                         PDP-11-Options.     (line   64)
-* -mlink-relax command line option, AVR: AVR Options.        (line  121)
+* -mlink-relax command line option, AVR: AVR Options.        (line  120)
 * -mlittle-endian:                       RX-Opts.            (line   26)
-* -mlong <1>:                            M68HC11-Opts.       (line   45)
-* -mlong:                                XGATE-Opts.         (line   13)
-* -mlong-double <1>:                     XGATE-Opts.         (line   21)
+* -mlong:                                M68HC11-Opts.       (line   45)
+* -mlong <1>:                            XGATE-Opts.         (line   13)
 * -mlong-double:                         M68HC11-Opts.       (line   53)
+* -mlong-double <1>:                     XGATE-Opts.         (line   21)
 * -mm9s12x:                              M68HC11-Opts.       (line   27)
 * -mm9s12xg:                             M68HC11-Opts.       (line   32)
 * -mmcu= command line option, AVR:       AVR Options.        (line    6)
@@ -25044,7 +24509,7 @@ AS Index
 * -mmxps:                                PDP-11-Options.     (line   77)
 * -mnaked-reg option, i386:              i386-Options.       (line  129)
 * -mnaked-reg option, x86-64:            i386-Options.       (line  129)
-* -mnan= command line option, MIPS:      MIPS Options.       (line  380)
+* -mnan= command line option, MIPS:      MIPS Options.       (line  379)
 * -mno-allow-string-insns:               RX-Opts.            (line   82)
 * -mno-cis:                              PDP-11-Options.     (line   32)
 * -mno-csm:                              PDP-11-Options.     (line   43)
@@ -25059,7 +24524,7 @@ AS Index
 * -mno-fpu:                              PDP-11-Options.     (line   56)
 * -mno-kev11:                            PDP-11-Options.     (line   51)
 * -mno-limited-eis:                      PDP-11-Options.     (line   64)
-* -mno-link-relax command line option, AVR: AVR Options.     (line  125)
+* -mno-link-relax command line option, AVR: AVR Options.     (line  124)
 * -mno-mfpt:                             PDP-11-Options.     (line   70)
 * -mno-microcode:                        PDP-11-Options.     (line   83)
 * -mno-mutiproc:                         PDP-11-Options.     (line   73)
@@ -25067,14 +24532,14 @@ AS Index
 * -mno-pic:                              PDP-11-Options.     (line   11)
 * -mno-pic command line option, TIC6X:   TIC6X Options.      (line   36)
 * -mno-regnames option, s390:            s390 Options.       (line   50)
-* -mno-skip-bug command line option, AVR: AVR Options.       (line  112)
+* -mno-skip-bug command line option, AVR: AVR Options.       (line  111)
 * -mno-spl:                              PDP-11-Options.     (line   80)
 * -mno-sym32:                            MIPS Options.       (line  288)
 * -mno-verbose-error command line option, AArch64: AArch64 Options.
                                                              (line   59)
-* -mno-wrap command line option, AVR:    AVR Options.        (line  115)
+* -mno-wrap command line option, AVR:    AVR Options.        (line  114)
 * -mnopic command line option, Blackfin: Blackfin Options.   (line   22)
-* -mnps400 command line option, ARC:     ARC Options.        (line  103)
+* -mnps400 command line option, ARC:     ARC Options.        (line  102)
 * -momit-lock-prefix= option, i386:      i386-Options.       (line  152)
 * -momit-lock-prefix= option, x86-64:    i386-Options.       (line  152)
 * -mpic:                                 PDP-11-Options.     (line   11)
@@ -25082,24 +24547,24 @@ AS Index
 * -mpid:                                 RX-Opts.            (line   50)
 * -mpid= command line option, TIC6X:     TIC6X Options.      (line   23)
 * -mregnames option, s390:               s390 Options.       (line   47)
-* -mrelax command line option, ARC:      ARC Options.        (line   98)
+* -mrelax command line option, ARC:      ARC Options.        (line   97)
 * -mrelax command line option, V850:     V850 Options.       (line   72)
 * -mrelax-relocations= option, i386:     i386-Options.       (line  170)
 * -mrelax-relocations= option, x86-64:   i386-Options.       (line  170)
 * -mrh850-abi command line option, V850: V850 Options.       (line   82)
-* -mrmw command line option, AVR:        AVR Options.        (line  118)
+* -mrmw command line option, AVR:        AVR Options.        (line  117)
 * -mrx-abi:                              RX-Opts.            (line   69)
 * -mshared option, i386:                 i386-Options.       (line  139)
 * -mshared option, x86-64:               i386-Options.       (line  139)
-* -mshort <1>:                           M68HC11-Opts.       (line   40)
-* -mshort:                               XGATE-Opts.         (line    8)
-* -mshort-double <1>:                    M68HC11-Opts.       (line   49)
-* -mshort-double:                        XGATE-Opts.         (line   17)
+* -mshort:                               M68HC11-Opts.       (line   40)
+* -mshort <1>:                           XGATE-Opts.         (line    8)
+* -mshort-double:                        M68HC11-Opts.       (line   49)
+* -mshort-double <1>:                    XGATE-Opts.         (line   17)
 * -msign-extend-enabled command line option, LM32: LM32 Options.
                                                              (line   15)
 * -msmall-data-limit:                    RX-Opts.            (line   42)
 * -msoft-float command line option, V850: V850 Options.      (line   95)
-* -mspfp command line option, ARC:       ARC Options.        (line  106)
+* -mspfp command line option, ARC:       ARC Options.        (line  105)
 * -mspl:                                 PDP-11-Options.     (line   80)
 * -msse-check= option, i386:             i386-Options.       (line   82)
 * -msse-check= option, x86-64:           i386-Options.       (line   82)
@@ -25109,8 +24574,8 @@ AS Index
 * -msyntax= option, i386:                i386-Options.       (line  123)
 * -msyntax= option, x86-64:              i386-Options.       (line  123)
 * -mt11:                                 PDP-11-Options.     (line  130)
-* -mthumb command line option, ARM:      ARM Options.        (line  113)
-* -mthumb-interwork command line option, ARM: ARM Options.   (line  118)
+* -mthumb command line option, ARM:      ARM Options.        (line  114)
+* -mthumb-interwork command line option, ARM: ARM Options.   (line  119)
 * -mtune= option, i386:                  i386-Options.       (line   70)
 * -mtune= option, x86-64:                i386-Options.       (line   70)
 * -mtune=ARCH command line option, Visium: Visium Options.   (line    8)
@@ -25129,10 +24594,17 @@ AS Index
                                                              (line   55)
 * -mvxworks-pic option, MIPS:            MIPS Options.       (line   26)
 * -mwarn-areg-zero option, s390:         s390 Options.       (line   53)
-* -mwarn-deprecated command line option, ARM: ARM Options.   (line  194)
-* -mwarn-syms command line option, ARM:  ARM Options.        (line  202)
+* -mwarn-deprecated command line option, ARM: ARM Options.   (line  195)
+* -mwarn-syms command line option, ARM:  ARM Options.        (line  203)
 * -mzarch option, s390:                  s390 Options.       (line   17)
-* -N command line option, CRIS:          CRIS-Opts.          (line   58)
+* -m[no-]68851 command line option, M680x0: M68K-Opts.       (line   21)
+* -m[no-]68881 command line option, M680x0: M68K-Opts.       (line   21)
+* -m[no-]div command line option, M680x0: M68K-Opts.         (line   21)
+* -m[no-]emac command line option, M680x0: M68K-Opts.        (line   21)
+* -m[no-]float command line option, M680x0: M68K-Opts.       (line   21)
+* -m[no-]mac command line option, M680x0: M68K-Opts.         (line   21)
+* -m[no-]usp command line option, M680x0: M68K-Opts.         (line   21)
+* -N command line option, CRIS:          CRIS-Opts.          (line   59)
 * -nIp option, M32RX:                    M32R-Opts.          (line  101)
 * -no-bitinst, M32R2:                    M32R-Opts.          (line   54)
 * -no-ignore-parallel-conflicts option, M32RX: M32R-Opts.    (line   93)
@@ -25148,7 +24620,7 @@ AS Index
 * -O option, M32RX:                      M32R-Opts.          (line   59)
 * -parallel option, M32RX:               M32R-Opts.          (line   46)
 * -R:                                    R.                  (line    6)
-* -r800 command line option, Z80:        Z80 Options.        (line   41)
+* -r800 command line option, Z80:        Z80 Options.        (line   35)
 * -relax command line option, Alpha:     Alpha Options.      (line   32)
 * -replace command line option, Alpha:   Alpha Options.      (line   40)
 * -S, ignored on VAX:                    VAX-Opts.           (line   11)
@@ -25188,83 +24660,83 @@ AS Index
 * .arch directive, TIC6X:                TIC6X Directives.   (line   10)
 * .arch_extension directive, AArch64:    AArch64 Directives. (line   13)
 * .arch_extension directive, ARM:        ARM Directives.     (line   25)
-* .arm directive, ARM:                   ARM Directives.     (line   34)
+* .arm directive, ARM:                   ARM Directives.     (line   33)
 * .big directive, M32RX:                 M32R-Directives.    (line   88)
-* .bss directive, AArch64:               AArch64 Directives. (line   22)
-* .bss directive, ARM:                   ARM Directives.     (line   37)
+* .bss directive, AArch64:               AArch64 Directives. (line   21)
+* .bss directive, ARM:                   ARM Directives.     (line   36)
 * .c6xabi_attribute directive, TIC6X:    TIC6X Directives.   (line   20)
-* .cantunwind directive, ARM:            ARM Directives.     (line   40)
+* .cantunwind directive, ARM:            ARM Directives.     (line   39)
 * .cantunwind directive, TIC6X:          TIC6X Directives.   (line   13)
-* .code directive, ARM:                  ARM Directives.     (line   44)
-* .cpu directive, AArch64:               AArch64 Directives. (line   25)
-* .cpu directive, ARM:                   ARM Directives.     (line   48)
-* .dn and .qn directives, ARM:           ARM Directives.     (line   55)
-* .dword directive, AArch64:             AArch64 Directives. (line   29)
+* .code directive, ARM:                  ARM Directives.     (line   43)
+* .cpu directive, AArch64:               AArch64 Directives. (line   24)
+* .cpu directive, ARM:                   ARM Directives.     (line   47)
+* .dn and .qn directives, ARM:           ARM Directives.     (line   54)
+* .dword directive, AArch64:             AArch64 Directives. (line   28)
 * .eabi_attribute directive, ARM:        ARM Directives.     (line   78)
 * .ehtype directive, TIC6X:              TIC6X Directives.   (line   31)
 * .endp directive, TIC6X:                TIC6X Directives.   (line   34)
-* .even directive, AArch64:              AArch64 Directives. (line   32)
+* .even directive, AArch64:              AArch64 Directives. (line   31)
 * .even directive, ARM:                  ARM Directives.     (line  106)
 * .extend directive, ARM:                ARM Directives.     (line  109)
 * .fnend directive, ARM:                 ARM Directives.     (line  115)
-* .fnstart directive, ARM:               ARM Directives.     (line  124)
-* .force_thumb directive, ARM:           ARM Directives.     (line  127)
-* .fpu directive, ARM:                   ARM Directives.     (line  131)
+* .fnstart directive, ARM:               ARM Directives.     (line  123)
+* .force_thumb directive, ARM:           ARM Directives.     (line  126)
+* .fpu directive, ARM:                   ARM Directives.     (line  130)
 * .global:                               MIPS insn.          (line   12)
 * .gnu_attribute 4, N directive, MIPS:   MIPS FP ABI History.
                                                              (line    6)
 * .gnu_attribute Tag_GNU_MIPS_ABI_FP, N directive, MIPS: MIPS FP ABI History.
                                                              (line    6)
-* .handlerdata directive, ARM:           ARM Directives.     (line  135)
+* .handlerdata directive, ARM:           ARM Directives.     (line  134)
 * .handlerdata directive, TIC6X:         TIC6X Directives.   (line   39)
 * .insn:                                 MIPS insn.          (line    6)
 * .insn directive, s390:                 s390 Directives.    (line   11)
-* .inst directive, AArch64:              AArch64 Directives. (line   36)
-* .inst directive, ARM:                  ARM Directives.     (line  144)
+* .inst directive, AArch64:              AArch64 Directives. (line   35)
+* .inst directive, ARM:                  ARM Directives.     (line  143)
 * .ldouble directive, ARM:               ARM Directives.     (line  109)
 * .little directive, M32RX:              M32R-Directives.    (line   82)
 * .long directive, s390:                 s390 Directives.    (line   16)
-* .ltorg directive, AArch64:             AArch64 Directives. (line   40)
-* .ltorg directive, ARM:                 ARM Directives.     (line  154)
-* .ltorg directive, s390:                s390 Directives.    (line   88)
+* .ltorg directive, AArch64:             AArch64 Directives. (line   39)
+* .ltorg directive, ARM:                 ARM Directives.     (line  153)
+* .ltorg directive, s390:                s390 Directives.    (line   79)
 * .m32r directive, M32R:                 M32R-Directives.    (line   66)
 * .m32r2 directive, M32R2:               M32R-Directives.    (line   77)
 * .m32rx directive, M32RX:               M32R-Directives.    (line   72)
-* .machine directive, s390:              s390 Directives.    (line   93)
-* .machinemode directive, s390:          s390 Directives.    (line  109)
+* .machine directive, s390:              s390 Directives.    (line   84)
+* .machinemode directive, s390:          s390 Directives.    (line  101)
 * .module:                               MIPS assembly options.
                                                              (line    6)
 * .module fp=NN directive, MIPS:         MIPS FP ABI Selection.
                                                              (line    6)
-* .movsp directive, ARM:                 ARM Directives.     (line  168)
+* .movsp directive, ARM:                 ARM Directives.     (line  167)
 * .nan directive, MIPS:                  MIPS NaN Encodings. (line    6)
+* .nocmp directive, TIC6X:               TIC6X Directives.   (line   47)
 * .no_pointers directive, XStormy16:     XStormy16 Directives.
                                                              (line   14)
-* .nocmp directive, TIC6X:               TIC6X Directives.   (line   47)
 * .o:                                    Object.             (line    6)
-* .object_arch directive, ARM:           ARM Directives.     (line  173)
-* .packed directive, ARM:                ARM Directives.     (line  179)
-* .pad directive, ARM:                   ARM Directives.     (line  184)
+* .object_arch directive, ARM:           ARM Directives.     (line  172)
+* .packed directive, ARM:                ARM Directives.     (line  178)
+* .pad directive, ARM:                   ARM Directives.     (line  183)
 * .param on HPPA:                        HPPA Directives.    (line   19)
-* .personality directive, ARM:           ARM Directives.     (line  189)
+* .personality directive, ARM:           ARM Directives.     (line  188)
 * .personality directive, TIC6X:         TIC6X Directives.   (line   55)
-* .personalityindex directive, ARM:      ARM Directives.     (line  192)
+* .personalityindex directive, ARM:      ARM Directives.     (line  191)
 * .personalityindex directive, TIC6X:    TIC6X Directives.   (line   51)
-* .pool directive, AArch64:              AArch64 Directives. (line   54)
-* .pool directive, ARM:                  ARM Directives.     (line  196)
+* .pool directive, AArch64:              AArch64 Directives. (line   53)
+* .pool directive, ARM:                  ARM Directives.     (line  195)
 * .quad directive, s390:                 s390 Directives.    (line   16)
-* .req directive, AArch64:               AArch64 Directives. (line   57)
-* .req directive, ARM:                   ARM Directives.     (line  199)
+* .req directive, AArch64:               AArch64 Directives. (line   56)
+* .req directive, ARM:                   ARM Directives.     (line  198)
 * .require_canonical_reg_names directive, TILE-Gx: TILE-Gx Directives.
                                                              (line   19)
 * .require_canonical_reg_names directive, TILEPro: TILEPro Directives.
                                                              (line   19)
-* .save directive, ARM:                  ARM Directives.     (line  204)
+* .save directive, ARM:                  ARM Directives.     (line  203)
 * .scomm directive, TIC6X:               TIC6X Directives.   (line   58)
-* .secrel32 directive, ARM:              ARM Directives.     (line  242)
-* .set arch=CPU:                         MIPS ISA.           (line   19)
-* .set at:                               MIPS Macros.        (line   42)
-* .set at=REG:                           MIPS Macros.        (line   36)
+* .secrel32 directive, ARM:              ARM Directives.     (line  241)
+* .set arch=CPU:                         MIPS ISA.           (line   18)
+* .set at:                               MIPS Macros.        (line   41)
+* .set at=REG:                           MIPS Macros.        (line   35)
 * .set autoextend:                       MIPS autoextend.    (line    6)
 * .set doublefloat:                      MIPS Floating-Point.
                                                              (line   12)
@@ -25273,51 +24745,51 @@ AS Index
 * .set dspr2:                            MIPS ASE Instruction Generation Overrides.
                                                              (line   26)
 * .set dspr3:                            MIPS ASE Instruction Generation Overrides.
-                                                             (line   32)
+                                                             (line   31)
 * .set hardfloat:                        MIPS Floating-Point.
                                                              (line    6)
 * .set insn32:                           MIPS assembly options.
                                                              (line   18)
-* .set macro:                            MIPS Macros.        (line   31)
+* .set macro:                            MIPS Macros.        (line   30)
 * .set mcu:                              MIPS ASE Instruction Generation Overrides.
-                                                             (line   43)
+                                                             (line   42)
 * .set mdmx:                             MIPS ASE Instruction Generation Overrides.
                                                              (line   16)
 * .set mips3d:                           MIPS ASE Instruction Generation Overrides.
                                                              (line    6)
 * .set mipsN:                            MIPS ISA.           (line    6)
 * .set msa:                              MIPS ASE Instruction Generation Overrides.
-                                                             (line   48)
+                                                             (line   47)
 * .set mt:                               MIPS ASE Instruction Generation Overrides.
-                                                             (line   38)
-* .set noat:                             MIPS Macros.        (line   42)
+                                                             (line   37)
+* .set noat:                             MIPS Macros.        (line   41)
 * .set noautoextend:                     MIPS autoextend.    (line    6)
 * .set nodsp:                            MIPS ASE Instruction Generation Overrides.
                                                              (line   21)
 * .set nodspr2:                          MIPS ASE Instruction Generation Overrides.
                                                              (line   26)
 * .set nodspr3:                          MIPS ASE Instruction Generation Overrides.
-                                                             (line   32)
+                                                             (line   31)
 * .set noinsn32:                         MIPS assembly options.
                                                              (line   18)
-* .set nomacro:                          MIPS Macros.        (line   31)
+* .set nomacro:                          MIPS Macros.        (line   30)
 * .set nomcu:                            MIPS ASE Instruction Generation Overrides.
-                                                             (line   43)
+                                                             (line   42)
 * .set nomdmx:                           MIPS ASE Instruction Generation Overrides.
                                                              (line   16)
 * .set nomips3d:                         MIPS ASE Instruction Generation Overrides.
                                                              (line    6)
 * .set nomsa:                            MIPS ASE Instruction Generation Overrides.
-                                                             (line   48)
+                                                             (line   47)
 * .set nomt:                             MIPS ASE Instruction Generation Overrides.
-                                                             (line   38)
+                                                             (line   37)
 * .set nosmartmips:                      MIPS ASE Instruction Generation Overrides.
                                                              (line   11)
 * .set nosym32:                          MIPS Symbol Sizes.  (line    6)
 * .set novirt:                           MIPS ASE Instruction Generation Overrides.
-                                                             (line   53)
+                                                             (line   52)
 * .set noxpa:                            MIPS ASE Instruction Generation Overrides.
-                                                             (line   58)
+                                                             (line   57)
 * .set pop:                              MIPS Option Stack.  (line    6)
 * .set push:                             MIPS Option Stack.  (line    6)
 * .set singlefloat:                      MIPS Floating-Point.
@@ -25328,22 +24800,22 @@ AS Index
                                                              (line    6)
 * .set sym32:                            MIPS Symbol Sizes.  (line    6)
 * .set virt:                             MIPS ASE Instruction Generation Overrides.
-                                                             (line   53)
+                                                             (line   52)
 * .set xpa:                              MIPS ASE Instruction Generation Overrides.
-                                                             (line   58)
-* .setfp directive, ARM:                 ARM Directives.     (line  228)
+                                                             (line   57)
+* .setfp directive, ARM:                 ARM Directives.     (line  227)
 * .short directive, s390:                s390 Directives.    (line   16)
-* .syntax directive, ARM:                ARM Directives.     (line  247)
-* .thumb directive, ARM:                 ARM Directives.     (line  251)
-* .thumb_func directive, ARM:            ARM Directives.     (line  254)
-* .thumb_set directive, ARM:             ARM Directives.     (line  265)
-* .tlsdescadd directive, AArch64:        AArch64 Directives. (line   62)
-* .tlsdesccall directive, AArch64:       AArch64 Directives. (line   65)
-* .tlsdescldr directive, AArch64:        AArch64 Directives. (line   68)
-* .tlsdescseq directive, ARM:            ARM Directives.     (line  272)
-* .unreq directive, AArch64:             AArch64 Directives. (line   71)
-* .unreq directive, ARM:                 ARM Directives.     (line  277)
-* .unwind_raw directive, ARM:            ARM Directives.     (line  288)
+* .syntax directive, ARM:                ARM Directives.     (line  246)
+* .thumb directive, ARM:                 ARM Directives.     (line  250)
+* .thumb_func directive, ARM:            ARM Directives.     (line  253)
+* .thumb_set directive, ARM:             ARM Directives.     (line  264)
+* .tlsdescadd directive, AArch64:        AArch64 Directives. (line   61)
+* .tlsdesccall directive, AArch64:       AArch64 Directives. (line   64)
+* .tlsdescldr directive, AArch64:        AArch64 Directives. (line   67)
+* .tlsdescseq directive, ARM:            ARM Directives.     (line  271)
+* .unreq directive, AArch64:             AArch64 Directives. (line   70)
+* .unreq directive, ARM:                 ARM Directives.     (line  276)
+* .unwind_raw directive, ARM:            ARM Directives.     (line  287)
 * .v850 directive, V850:                 V850 Directives.    (line   14)
 * .v850e directive, V850:                V850 Directives.    (line   20)
 * .v850e1 directive, V850:               V850 Directives.    (line   26)
@@ -25351,8 +24823,8 @@ AS Index
 * .v850e2v3 directive, V850:             V850 Directives.    (line   38)
 * .v850e2v4 directive, V850:             V850 Directives.    (line   44)
 * .v850e3v5 directive, V850:             V850 Directives.    (line   50)
-* .vsave directive, ARM:                 ARM Directives.     (line  295)
-* .xword directive, AArch64:             AArch64 Directives. (line   82)
+* .vsave directive, ARM:                 ARM Directives.     (line  294)
+* .xword directive, AArch64:             AArch64 Directives. (line   81)
 * .z8001:                                Z8000 Directives.   (line   11)
 * .z8002:                                Z8000 Directives.   (line   15)
 * 16-bit code, i386:                     i386-16bit.         (line    6)
@@ -25382,7 +24854,6 @@ AS Index
                                                              (line   11)
 * a.out:                                 Object.             (line    6)
 * a.out symbol attributes:               a.out Symbols.      (line    6)
-* A_DIR environment variable, TIC54X:    TIC54X-Env.         (line    6)
 * AArch64 floating point (IEEE):         AArch64 Floating Point.
                                                              (line    6)
 * AArch64 immediate character:           AArch64-Chars.      (line   13)
@@ -25395,7 +24866,7 @@ AS Index
 * AArch64 relocations:                   AArch64-Relocations.
                                                              (line    6)
 * AArch64 support:                       AArch64-Dependent.  (line    6)
-* ABI options, SH64:                     SH64 Options.       (line   29)
+* ABI options, SH64:                     SH64 Options.       (line   25)
 * abort directive:                       Abort.              (line    6)
 * ABORT directive:                       ABORT (COFF).       (line    6)
 * absolute section:                      Ld Sections.        (line   29)
@@ -25403,17 +24874,17 @@ AS Index
                                                              (line    6)
 * ADDI instructions, relaxation:         Xtensa Immediate Relaxation.
                                                              (line   43)
-* addition, permitted arguments:         Infix Ops.          (line   44)
+* addition, permitted arguments:         Infix Ops.          (line   45)
 * addresses:                             Expressions.        (line    6)
-* addresses, format of:                  Secs Background.    (line   68)
+* addresses, format of:                  Secs Background.    (line   65)
 * addressing modes, D10V:                D10V-Addressing.    (line    6)
 * addressing modes, D30V:                D30V-Addressing.    (line    6)
 * addressing modes, H8/300:              H8/300-Addressing.  (line    6)
 * addressing modes, M680x0:              M68K-Syntax.        (line   21)
-* addressing modes, M68HC11:             M68HC11-Syntax.     (line   30)
+* addressing modes, M68HC11:             M68HC11-Syntax.     (line   29)
 * addressing modes, SH:                  SH-Addressing.      (line    6)
 * addressing modes, SH64:                SH64-Addressing.    (line    6)
-* addressing modes, XGATE:               XGATE-Syntax.       (line   29)
+* addressing modes, XGATE:               XGATE-Syntax.       (line   28)
 * addressing modes, Z8000:               Z8000-Addressing.   (line    6)
 * ADR reg,<label> pseudo op, ARM:        ARM Opcodes.        (line   25)
 * ADRL reg,<label> pseudo op, ARM:       ARM Opcodes.        (line   35)
@@ -25439,27 +24910,27 @@ AS Index
 * Alpha registers:                       Alpha-Regs.         (line    6)
 * Alpha relocations:                     Alpha-Relocs.       (line    6)
 * Alpha support:                         Alpha-Dependent.    (line    6)
-* Alpha Syntax:                          Alpha Options.      (line   61)
-* Alpha-only directives:                 Alpha Directives.   (line   10)
+* Alpha Syntax:                          Alpha Options.      (line   60)
+* Alpha-only directives:                 Alpha Directives.   (line    9)
 * Altera Nios II support:                NiosII-Dependent.   (line    6)
 * altered difference tables:             Word.               (line   12)
 * alternate syntax for the 680x0:        M68K-Moto-Syntax.   (line    6)
-* ARC Branch Target Address:             ARC-Regs.           (line   61)
-* ARC BTA saved on exception entry:      ARC-Regs.           (line   80)
-* ARC Build configuration for: BTA Registers: ARC-Regs.      (line   90)
-* ARC Build configuration for: Core Registers: ARC-Regs.     (line   98)
-* ARC Build configuration for: Interrupts: ARC-Regs.         (line   94)
-* ARC Build Configuration Registers Version: ARC-Regs.       (line   86)
+* ARC Branch Target Address:             ARC-Regs.           (line   60)
+* ARC BTA saved on exception entry:      ARC-Regs.           (line   79)
+* ARC Build configuration for: BTA Registers: ARC-Regs.      (line   89)
+* ARC Build configuration for: Core Registers: ARC-Regs.     (line   97)
+* ARC Build configuration for: Interrupts: ARC-Regs.         (line   93)
+* ARC Build Configuration Registers Version: ARC-Regs.       (line   85)
 * ARC C preprocessor macro separator:    ARC-Chars.          (line   31)
 * ARC core general registers:            ARC-Regs.           (line   10)
-* ARC DCCM RAM Configuration Register:   ARC-Regs.           (line  102)
-* ARC Exception Cause Register:          ARC-Regs.           (line   64)
-* ARC Exception Return Address:          ARC-Regs.           (line   77)
+* ARC DCCM RAM Configuration Register:   ARC-Regs.           (line  101)
+* ARC Exception Cause Register:          ARC-Regs.           (line   63)
+* ARC Exception Return Address:          ARC-Regs.           (line   76)
 * ARC extension core registers:          ARC-Regs.           (line   38)
 * ARC frame pointer:                     ARC-Regs.           (line   17)
 * ARC global pointer:                    ARC-Regs.           (line   14)
 * ARC interrupt link register:           ARC-Regs.           (line   27)
-* ARC Interrupt Vector Base address:     ARC-Regs.           (line   67)
+* ARC Interrupt Vector Base address:     ARC-Regs.           (line   66)
 * ARC level 1 interrupt link register:   ARC-Regs.           (line   23)
 * ARC level 2 interrupt link register:   ARC-Regs.           (line   31)
 * ARC line comment character:            ARC-Chars.          (line   11)
@@ -25469,16 +24940,16 @@ AS Index
 * ARC machine directives:                ARC Directives.     (line    6)
 * ARC opcodes:                           ARC Opcodes.        (line    6)
 * ARC options:                           ARC Options.        (line    6)
-* ARC Processor Identification register: ARC-Regs.           (line   52)
-* ARC Program Counter:                   ARC-Regs.           (line   55)
+* ARC Processor Identification register: ARC-Regs.           (line   51)
+* ARC Program Counter:                   ARC-Regs.           (line   54)
 * ARC register name prefix character:    ARC-Chars.          (line    7)
 * ARC register names:                    ARC-Regs.           (line    6)
-* ARC Saved User Stack Pointer:          ARC-Regs.           (line   74)
+* ARC Saved User Stack Pointer:          ARC-Regs.           (line   73)
 * ARC stack pointer:                     ARC-Regs.           (line   20)
-* ARC Status register:                   ARC-Regs.           (line   58)
-* ARC STATUS32 saved on exception:       ARC-Regs.           (line   83)
+* ARC Status register:                   ARC-Regs.           (line   57)
+* ARC STATUS32 saved on exception:       ARC-Regs.           (line   82)
 * ARC Stored STATUS32 register on entry to level P0 interrupts: ARC-Regs.
-                                                             (line   70)
+                                                             (line   69)
 * ARC support:                           ARC-Dependent.      (line    6)
 * ARC symbol prefix character:           ARC-Chars.          (line   20)
 * ARC word aligned program counter:      ARC-Regs.           (line   44)
@@ -25494,14 +24965,14 @@ AS Index
 * architecture options, M32R:            M32R-Opts.          (line   21)
 * architecture options, M32R2:           M32R-Opts.          (line   17)
 * architecture options, M32RX:           M32R-Opts.          (line    9)
-* architecture options, M680x0:          M68K-Opts.          (line   98)
+* architecture options, M680x0:          M68K-Opts.          (line   99)
 * Architecture variant option, CRIS:     CRIS-Opts.          (line   34)
 * architectures, Meta:                   Meta Options.       (line    6)
 * architectures, PowerPC:                PowerPC-Opts.       (line    6)
 * architectures, SCORE:                  SCORE-Opts.         (line    6)
 * architectures, SPARC:                  Sparc-Opts.         (line    6)
-* arguments for addition:                Infix Ops.          (line   44)
-* arguments for subtraction:             Infix Ops.          (line   49)
+* arguments for addition:                Infix Ops.          (line   45)
+* arguments for subtraction:             Infix Ops.          (line   50)
 * arguments in expressions:              Arguments.          (line    6)
 * arithmetic functions:                  Operators.          (line    6)
 * arithmetic operands:                   Arguments.          (line    6)
@@ -25518,11 +24989,11 @@ AS Index
 * ARM support:                           ARM-Dependent.      (line    6)
 * ascii directive:                       Ascii.              (line    6)
 * asciz directive:                       Asciz.              (line    6)
-* asg directive, TIC54X:                 TIC54X-Directives.  (line   20)
+* asg directive, TIC54X:                 TIC54X-Directives.  (line   18)
 * assembler bugs, reporting:             Bug Reporting.      (line    6)
 * assembler crash:                       Bug Criteria.       (line    9)
 * assembler directive .3byte, RX:        RX-Directives.      (line    9)
-* assembler directive .arch, CRIS:       CRIS-Pseudos.       (line   45)
+* assembler directive .arch, CRIS:       CRIS-Pseudos.       (line   50)
 * assembler directive .dword, CRIS:      CRIS-Pseudos.       (line   12)
 * assembler directive .far, M68HC11:     M68HC11-Directives. (line   20)
 * assembler directive .fetchalign, RX:   RX-Directives.      (line   13)
@@ -25530,19 +25001,19 @@ AS Index
                                                              (line   26)
 * assembler directive .mode, M68HC11:    M68HC11-Directives. (line   16)
 * assembler directive .relax, M68HC11:   M68HC11-Directives. (line   10)
-* assembler directive .syntax, CRIS:     CRIS-Pseudos.       (line   17)
+* assembler directive .syntax, CRIS:     CRIS-Pseudos.       (line   18)
 * assembler directive .xrefb, M68HC11:   M68HC11-Directives. (line   31)
-* assembler directive BSPEC, MMIX:       MMIX-Pseudos.       (line  131)
-* assembler directive BYTE, MMIX:        MMIX-Pseudos.       (line   97)
-* assembler directive ESPEC, MMIX:       MMIX-Pseudos.       (line  131)
-* assembler directive GREG, MMIX:        MMIX-Pseudos.       (line   50)
-* assembler directive IS, MMIX:          MMIX-Pseudos.       (line   42)
+* assembler directive BSPEC, MMIX:       MMIX-Pseudos.       (line  137)
+* assembler directive BYTE, MMIX:        MMIX-Pseudos.       (line  101)
+* assembler directive ESPEC, MMIX:       MMIX-Pseudos.       (line  137)
+* assembler directive GREG, MMIX:        MMIX-Pseudos.       (line   53)
+* assembler directive IS, MMIX:          MMIX-Pseudos.       (line   44)
 * assembler directive LOC, MMIX:         MMIX-Pseudos.       (line    7)
-* assembler directive LOCAL, MMIX:       MMIX-Pseudos.       (line   28)
-* assembler directive OCTA, MMIX:        MMIX-Pseudos.       (line  108)
-* assembler directive PREFIX, MMIX:      MMIX-Pseudos.       (line  120)
-* assembler directive TETRA, MMIX:       MMIX-Pseudos.       (line  108)
-* assembler directive WYDE, MMIX:        MMIX-Pseudos.       (line  108)
+* assembler directive LOCAL, MMIX:       MMIX-Pseudos.       (line   29)
+* assembler directive OCTA, MMIX:        MMIX-Pseudos.       (line  113)
+* assembler directive PREFIX, MMIX:      MMIX-Pseudos.       (line  125)
+* assembler directive TETRA, MMIX:       MMIX-Pseudos.       (line  113)
+* assembler directive WYDE, MMIX:        MMIX-Pseudos.       (line  113)
 * assembler directives, CRIS:            CRIS-Pseudos.       (line    6)
 * assembler directives, M68HC11:         M68HC11-Directives. (line    6)
 * assembler directives, M68HC12:         M68HC11-Directives. (line    6)
@@ -25554,13 +25025,13 @@ AS Index
 * assembler version:                     v.                  (line    6)
 * assembler, and linker:                 Secs Background.    (line   10)
 * assembly listings, enabling:           a.                  (line    6)
-* assigning values to symbols <1>:       Setting Symbols.    (line    6)
-* assigning values to symbols:           Equ.                (line    6)
-* at register, MIPS:                     MIPS Macros.        (line   36)
+* assigning values to symbols:           Setting Symbols.    (line    6)
+* assigning values to symbols <1>:       Equ.                (line    6)
+* at register, MIPS:                     MIPS Macros.        (line   35)
 * atmp directive, i860:                  Directives-i860.    (line   16)
+* attributes, symbol:                    Symbol Attributes.  (line    6)
 * att_syntax pseudo op, i386:            i386-Variations.    (line    6)
 * att_syntax pseudo op, x86-64:          i386-Variations.    (line    6)
-* attributes, symbol:                    Symbol Attributes.  (line    6)
 * auxiliary attributes, COFF symbols:    COFF Symbols.       (line   19)
 * auxiliary symbol information, COFF:    Dim.                (line    6)
 * AVR line comment character:            AVR-Chars.          (line    6)
@@ -25570,14 +25041,15 @@ AS Index
 * AVR options (none):                    AVR Options.        (line    6)
 * AVR register names:                    AVR-Regs.           (line    6)
 * AVR support:                           AVR-Dependent.      (line    6)
+* A_DIR environment variable, TIC54X:    TIC54X-Env.         (line    6)
 * backslash (\\):                        Strings.            (line   40)
 * backspace (\b):                        Strings.            (line   15)
 * balign directive:                      Balign.             (line    6)
 * balignl directive:                     Balign.             (line   27)
 * balignw directive:                     Balign.             (line   27)
-* bes directive, TIC54X:                 TIC54X-Directives.  (line  196)
-* big endian output, MIPS:               Overview.           (line  828)
-* big endian output, PJ:                 Overview.           (line  731)
+* bes directive, TIC54X:                 TIC54X-Directives.  (line  194)
+* big endian output, MIPS:               Overview.           (line  806)
+* big endian output, PJ:                 Overview.           (line  713)
 * big-endian output, MIPS:               MIPS Options.       (line   13)
 * big-endian output, TIC6X:              TIC6X Options.      (line   46)
 * bignums:                               Bignums.            (line    6)
@@ -25601,49 +25073,48 @@ AS Index
                                                              (line    6)
 * branch recording, i960:                Options-i960.       (line   22)
 * branch statistics table, i960:         Options-i960.       (line   40)
-* Branch Target Address, ARC:            ARC-Regs.           (line   61)
+* Branch Target Address, ARC:            ARC-Regs.           (line   60)
 * branch target alignment:               Xtensa Automatic Alignment.
                                                              (line    6)
-* break directive, TIC54X:               TIC54X-Directives.  (line  143)
+* break directive, TIC54X:               TIC54X-Directives.  (line  141)
 * BSD syntax:                            PDP-11-Syntax.      (line    6)
 * bss directive, i960:                   Directives-i960.    (line    6)
-* bss directive, TIC54X:                 TIC54X-Directives.  (line   29)
-* bss section <1>:                       bss.                (line    6)
+* bss directive, TIC54X:                 TIC54X-Directives.  (line   27)
 * bss section:                           Ld Sections.        (line   20)
-* BTA saved on exception entry, ARC:     ARC-Regs.           (line   80)
+* bss section <1>:                       bss.                (line    6)
+* BTA saved on exception entry, ARC:     ARC-Regs.           (line   79)
 * bug criteria:                          Bug Criteria.       (line    6)
 * bug reports:                           Bug Reporting.      (line    6)
 * bugs in assembler:                     Reporting Bugs.     (line    6)
-* Build configuration for: BTA Registers, ARC: ARC-Regs.     (line   90)
-* Build configuration for: Core Registers, ARC: ARC-Regs.    (line   98)
-* Build configuration for: Interrupts, ARC: ARC-Regs.        (line   94)
-* Build Configuration Registers Version, ARC: ARC-Regs.      (line   86)
+* Build configuration for: BTA Registers, ARC: ARC-Regs.     (line   89)
+* Build configuration for: Core Registers, ARC: ARC-Regs.    (line   97)
+* Build configuration for: Interrupts, ARC: ARC-Regs.        (line   93)
+* Build Configuration Registers Version, ARC: ARC-Regs.      (line   85)
 * Built-in symbols, CRIS:                CRIS-Symbols.       (line    6)
 * builtin math functions, TIC54X:        TIC54X-Builtins.    (line    6)
 * builtin subsym functions, TIC54X:      TIC54X-Macros.      (line   16)
 * bundle:                                Bundle directives.  (line    9)
-* bundle-locked:                         Bundle directives.  (line   38)
+* bundle-locked:                         Bundle directives.  (line   39)
 * bundle_align_mode directive:           Bundle directives.  (line    9)
 * bundle_lock directive:                 Bundle directives.  (line   31)
 * bundle_unlock directive:               Bundle directives.  (line   31)
 * bus lock prefixes, i386:               i386-Prefixes.      (line   36)
 * bval:                                  Z8000 Directives.   (line   30)
 * byte directive:                        Byte.               (line    6)
-* byte directive, TIC54X:                TIC54X-Directives.  (line   36)
+* byte directive, TIC54X:                TIC54X-Directives.  (line   34)
 * C preprocessor macro separator, ARC:   ARC-Chars.          (line   31)
 * C54XDSP_DIR environment variable, TIC54X: TIC54X-Env.      (line    6)
-* c_mode directive, TIC54X:              TIC54X-Directives.  (line   51)
 * call directive, Nios II:               Nios II Relocations.
                                                              (line   38)
-* call instructions, i386:               i386-Mnemonics.     (line   59)
+* call instructions, i386:               i386-Mnemonics.     (line   58)
 * call instructions, relaxation:         Xtensa Call Relaxation.
                                                              (line    6)
-* call instructions, x86-64:             i386-Mnemonics.     (line   59)
+* call instructions, x86-64:             i386-Mnemonics.     (line   58)
+* callj, i960 pseudo-opcode:             callj-i960.         (line    6)
 * call_hiadj directive, Nios II:         Nios II Relocations.
                                                              (line   38)
 * call_lo directive, Nios II:            Nios II Relocations.
                                                              (line   38)
-* callj, i960 pseudo-opcode:             callj-i960.         (line    6)
 * carriage return (backslash-r):         Strings.            (line   24)
 * case sensitivity, Z80:                 Z80-Case.           (line    6)
 * cfi_endproc directive:                 CFI directives.     (line   40)
@@ -25652,14 +25123,14 @@ AS Index
 * cfi_personality_id directive:          CFI directives.     (line   59)
 * cfi_sections directive:                CFI directives.     (line    9)
 * cfi_startproc directive:               CFI directives.     (line   30)
-* char directive, TIC54X:                TIC54X-Directives.  (line   36)
+* char directive, TIC54X:                TIC54X-Directives.  (line   34)
 * character constant, Z80:               Z80-Chars.          (line   20)
 * character constants:                   Characters.         (line    6)
 * character escape codes:                Strings.            (line   15)
 * character escapes, Z80:                Z80-Chars.          (line   18)
 * character, single:                     Chars.              (line    6)
 * characters used in symbols:            Symbol Intro.       (line    6)
-* clink directive, TIC54X:               TIC54X-Directives.  (line   45)
+* clink directive, TIC54X:               TIC54X-Directives.  (line   43)
 * code16 directive, i386:                i386-16bit.         (line    6)
 * code16gcc directive, i386:             i386-16bit.         (line    6)
 * code32 directive, i386:                i386-16bit.         (line    6)
@@ -25689,7 +25160,7 @@ AS Index
                                                              (line   13)
 * compare/branch instructions, i960:     Compare-and-branch-i960.
                                                              (line    6)
-* comparison expressions:                Infix Ops.          (line   55)
+* comparison expressions:                Infix Ops.          (line   56)
 * conditional assembly:                  If.                 (line    6)
 * constant, single character:            Chars.              (line    6)
 * constants:                             Constants.          (line    6)
@@ -25702,16 +25173,16 @@ AS Index
 * constants, Sparc:                      Sparc-Constants.    (line    6)
 * constants, string:                     Strings.            (line    6)
 * constants, TIC54X:                     TIC54X-Constants.   (line    6)
-* conversion instructions, i386:         i386-Mnemonics.     (line   40)
-* conversion instructions, x86-64:       i386-Mnemonics.     (line   40)
+* conversion instructions, i386:         i386-Mnemonics.     (line   39)
+* conversion instructions, x86-64:       i386-Mnemonics.     (line   39)
 * coprocessor wait, i386:                i386-Prefixes.      (line   40)
-* copy directive, TIC54X:                TIC54X-Directives.  (line   54)
+* copy directive, TIC54X:                TIC54X-Directives.  (line   52)
 * core general registers, ARC:           ARC-Regs.           (line   10)
 * cpu directive, ARC:                    ARC Directives.     (line   27)
 * cpu directive, M680x0:                 M68K-Directives.    (line   30)
 * cpu directive, MSP 430:                MSP430 Directives.  (line   22)
 * CR16 line comment character:           CR16-Chars.         (line    6)
-* CR16 line separator:                   CR16-Chars.         (line   13)
+* CR16 line separator:                   CR16-Chars.         (line   12)
 * CR16 Operand Qualifiers:               CR16 Operand Qualifiers.
                                                              (line    6)
 * CR16 support:                          CR16-Dependent.     (line    6)
@@ -25719,41 +25190,42 @@ AS Index
 * CRIS --emulation=crisaout command line option: CRIS-Opts.  (line    9)
 * CRIS --emulation=criself command line option: CRIS-Opts.   (line    9)
 * CRIS --march=ARCHITECTURE command line option: CRIS-Opts.  (line   34)
-* CRIS --mul-bug-abort command line option: CRIS-Opts.       (line   62)
-* CRIS --no-mul-bug-abort command line option: CRIS-Opts.    (line   62)
+* CRIS --mul-bug-abort command line option: CRIS-Opts.       (line   63)
+* CRIS --no-mul-bug-abort command line option: CRIS-Opts.    (line   63)
 * CRIS --no-underscore command line option: CRIS-Opts.       (line   15)
 * CRIS --pic command line option:        CRIS-Opts.          (line   27)
 * CRIS --underscore command line option: CRIS-Opts.          (line   15)
-* CRIS -N command line option:           CRIS-Opts.          (line   58)
+* CRIS -N command line option:           CRIS-Opts.          (line   59)
 * CRIS architecture variant option:      CRIS-Opts.          (line   34)
-* CRIS assembler directive .arch:        CRIS-Pseudos.       (line   45)
+* CRIS assembler directive .arch:        CRIS-Pseudos.       (line   50)
 * CRIS assembler directive .dword:       CRIS-Pseudos.       (line   12)
-* CRIS assembler directive .syntax:      CRIS-Pseudos.       (line   17)
+* CRIS assembler directive .syntax:      CRIS-Pseudos.       (line   18)
 * CRIS assembler directives:             CRIS-Pseudos.       (line    6)
 * CRIS built-in symbols:                 CRIS-Symbols.       (line    6)
 * CRIS instruction expansion:            CRIS-Expand.        (line    6)
 * CRIS line comment characters:          CRIS-Chars.         (line    6)
 * CRIS options:                          CRIS-Opts.          (line    6)
 * CRIS position-independent code:        CRIS-Opts.          (line   27)
-* CRIS pseudo-op .arch:                  CRIS-Pseudos.       (line   45)
+* CRIS pseudo-op .arch:                  CRIS-Pseudos.       (line   50)
 * CRIS pseudo-op .dword:                 CRIS-Pseudos.       (line   12)
-* CRIS pseudo-op .syntax:                CRIS-Pseudos.       (line   17)
+* CRIS pseudo-op .syntax:                CRIS-Pseudos.       (line   18)
 * CRIS pseudo-ops:                       CRIS-Pseudos.       (line    6)
 * CRIS register names:                   CRIS-Regs.          (line    6)
 * CRIS support:                          CRIS-Dependent.     (line    6)
 * CRIS symbols in position-independent code: CRIS-Pic.       (line    6)
-* ctbp register, V850:                   V850-Regs.          (line  131)
-* ctoff pseudo-op, V850:                 V850 Opcodes.       (line  111)
-* ctpc register, V850:                   V850-Regs.          (line  119)
-* ctpsw register, V850:                  V850-Regs.          (line  122)
+* ctbp register, V850:                   V850-Regs.          (line   90)
+* ctoff pseudo-op, V850:                 V850 Opcodes.       (line  110)
+* ctpc register, V850:                   V850-Regs.          (line   82)
+* ctpsw register, V850:                  V850-Regs.          (line   84)
 * current address:                       Dot.                (line    6)
 * current address, advancing:            Org.                (line    6)
+* c_mode directive, TIC54X:              TIC54X-Directives.  (line   49)
 * D10V @word modifier:                   D10V-Word.          (line    6)
 * D10V addressing modes:                 D10V-Addressing.    (line    6)
 * D10V floating point:                   D10V-Float.         (line    6)
 * D10V line comment character:           D10V-Chars.         (line    6)
 * D10V opcode summary:                   D10V-Opcodes.       (line    6)
-* D10V optimization:                     Overview.           (line  591)
+* D10V optimization:                     Overview.           (line  579)
 * D10V options:                          D10V-Opts.          (line    6)
 * D10V registers:                        D10V-Regs.          (line    6)
 * D10V size modifiers:                   D10V-Size.          (line    6)
@@ -25765,10 +25237,10 @@ AS Index
 * D30V floating point:                   D30V-Float.         (line    6)
 * D30V Guarded Execution:                D30V-Guarded.       (line    6)
 * D30V line comment character:           D30V-Chars.         (line    6)
-* D30V nops:                             Overview.           (line  599)
-* D30V nops after 32-bit multiply:       Overview.           (line  602)
+* D30V nops:                             Overview.           (line  587)
+* D30V nops after 32-bit multiply:       Overview.           (line  590)
 * D30V opcode summary:                   D30V-Opcodes.       (line    6)
-* D30V optimization:                     Overview.           (line  596)
+* D30V optimization:                     Overview.           (line  584)
 * D30V options:                          D30V-Opts.          (line    6)
 * D30V registers:                        D30V-Regs.          (line    6)
 * D30V size modifiers:                   D30V-Size.          (line    6)
@@ -25779,28 +25251,28 @@ AS Index
 * data alignment on SPARC:               Sparc-Aligned-Data. (line    6)
 * data and text sections, joining:       R.                  (line    6)
 * data directive:                        Data.               (line    6)
-* data directive, TIC54X:                TIC54X-Directives.  (line   61)
+* data directive, TIC54X:                TIC54X-Directives.  (line   59)
 * data relocations, ARM:                 ARM-Relocations.    (line    6)
 * data section:                          Ld Sections.        (line    9)
 * data1 directive, M680x0:               M68K-Directives.    (line    9)
 * data2 directive, M680x0:               M68K-Directives.    (line   12)
 * datalabel, SH64:                       SH64-Addressing.    (line   16)
-* dbpc register, V850:                   V850-Regs.          (line  125)
-* dbpsw register, V850:                  V850-Regs.          (line  128)
-* DCCM RAM Configuration Register, ARC:  ARC-Regs.           (line  102)
+* dbpc register, V850:                   V850-Regs.          (line   86)
+* dbpsw register, V850:                  V850-Regs.          (line   88)
+* DCCM RAM Configuration Register, ARC:  ARC-Regs.           (line  101)
 * debuggers, and symbol order:           Symbols.            (line   10)
 * debugging COFF symbols:                Def.                (line    6)
 * DEC syntax:                            PDP-11-Syntax.      (line    6)
 * decimal integers:                      Integers.           (line   12)
 * def directive:                         Def.                (line    6)
-* def directive, TIC54X:                 TIC54X-Directives.  (line  103)
+* def directive, TIC54X:                 TIC54X-Directives.  (line  101)
 * density instructions:                  Density Instructions.
                                                              (line    6)
 * dependency tracking:                   MD.                 (line    6)
 * deprecated directives:                 Deprecated.         (line    6)
 * desc directive:                        Desc.               (line    6)
 * descriptor, of a.out symbol:           Symbol Desc.        (line    6)
-* dfloat directive, VAX:                 VAX-directives.     (line   10)
+* dfloat directive, VAX:                 VAX-directives.     (line    9)
 * difference tables altered:             Word.               (line   12)
 * difference tables, warning:            K.                  (line    6)
 * differences, mmixal:                   MMIX-mmixal.        (line    6)
@@ -25820,58 +25292,58 @@ AS Index
 * Disable single-precision floating-point operations: MIPS Floating-Point.
                                                              (line   12)
 * displacement sizing character, VAX:    VAX-operands.       (line   12)
-* dollar local symbols:                  Symbol Names.       (line  114)
+* dollar local symbols:                  Symbol Names.       (line  113)
 * dot (symbol):                          Dot.                (line    6)
 * double directive:                      Double.             (line    6)
 * double directive, i386:                i386-Float.         (line   14)
 * double directive, M680x0:              M68K-Float.         (line   14)
 * double directive, M68HC11:             M68HC11-Float.      (line   14)
 * double directive, RX:                  RX-Float.           (line   11)
-* double directive, TIC54X:              TIC54X-Directives.  (line   64)
+* double directive, TIC54X:              TIC54X-Directives.  (line   62)
 * double directive, VAX:                 VAX-float.          (line   15)
 * double directive, x86-64:              i386-Float.         (line   14)
 * double directive, XGATE:               XGATE-Float.        (line   13)
 * doublequote (\"):                      Strings.            (line   43)
-* drlist directive, TIC54X:              TIC54X-Directives.  (line   73)
-* drnolist directive, TIC54X:            TIC54X-Directives.  (line   73)
+* drlist directive, TIC54X:              TIC54X-Directives.  (line   71)
+* drnolist directive, TIC54X:            TIC54X-Directives.  (line   71)
 * dual directive, i860:                  Directives-i860.    (line    6)
 * dword directive, Nios II:              Nios II Directives. (line   16)
-* EB command line option, Nios II:       Nios II Options.    (line   23)
-* ecr register, V850:                    V850-Regs.          (line  113)
+* EB command line option, Nios II:       Nios II Options.    (line   22)
+* ecr register, V850:                    V850-Regs.          (line   78)
 * eight-byte integer:                    Quad.               (line    9)
-* eipc register, V850:                   V850-Regs.          (line  101)
-* eipsw register, V850:                  V850-Regs.          (line  104)
+* eipc register, V850:                   V850-Regs.          (line   70)
+* eipsw register, V850:                  V850-Regs.          (line   72)
 * eject directive:                       Eject.              (line    6)
-* EL command line option, Nios II:       Nios II Options.    (line   26)
+* EL command line option, Nios II:       Nios II Options.    (line   25)
 * ELF symbol type:                       Type.               (line   22)
 * else directive:                        Else.               (line    6)
 * elseif directive:                      Elseif.             (line    6)
 * empty expressions:                     Empty Exprs.        (line    6)
-* emsg directive, TIC54X:                TIC54X-Directives.  (line   77)
-* emulation:                             Overview.           (line 1029)
-* encoding options, i386:                i386-Mnemonics.     (line   35)
-* encoding options, x86-64:              i386-Mnemonics.     (line   35)
+* emsg directive, TIC54X:                TIC54X-Directives.  (line   75)
+* emulation:                             Overview.           (line 1007)
+* encoding options, i386:                i386-Mnemonics.     (line   34)
+* encoding options, x86-64:              i386-Mnemonics.     (line   34)
 * end directive:                         End.                (line    6)
 * enddual directive, i860:               Directives-i860.    (line   11)
 * endef directive:                       Endef.              (line    6)
 * endfunc directive:                     Endfunc.            (line    6)
-* endianness, MIPS:                      Overview.           (line  828)
-* endianness, PJ:                        Overview.           (line  731)
+* endianness, MIPS:                      Overview.           (line  806)
+* endianness, PJ:                        Overview.           (line  713)
 * endif directive:                       Endif.              (line    6)
-* endloop directive, TIC54X:             TIC54X-Directives.  (line  143)
-* endm directive:                        Macro.              (line  138)
-* endm directive, TIC54X:                TIC54X-Directives.  (line  153)
-* endstruct directive, TIC54X:           TIC54X-Directives.  (line  216)
-* endunion directive, TIC54X:            TIC54X-Directives.  (line  250)
+* endloop directive, TIC54X:             TIC54X-Directives.  (line  141)
+* endm directive:                        Macro.              (line  137)
+* endm directive, TIC54X:                TIC54X-Directives.  (line  151)
+* endstruct directive, TIC54X:           TIC54X-Directives.  (line  214)
+* endunion directive, TIC54X:            TIC54X-Directives.  (line  248)
 * environment settings, TIC54X:          TIC54X-Env.         (line    6)
 * EOF, newline must precede:             Statements.         (line   14)
-* ep register, V850:                     V850-Regs.          (line   95)
+* ep register, V850:                     V850-Regs.          (line   66)
 * Epiphany line comment character:       Epiphany-Chars.     (line    6)
 * Epiphany line separator:               Epiphany-Chars.     (line   14)
 * Epiphany options:                      Epiphany Options.   (line    6)
 * Epiphany support:                      Epiphany-Dependent. (line    6)
 * equ directive:                         Equ.                (line    6)
-* equ directive, TIC54X:                 TIC54X-Directives.  (line  191)
+* equ directive, TIC54X:                 TIC54X-Directives.  (line  189)
 * equiv directive:                       Equiv.              (line    6)
 * eqv directive:                         Eqv.                (line    6)
 * err directive:                         Err.                (line    6)
@@ -25883,42 +25355,42 @@ AS Index
 * ESA/390 floating point (IEEE):         ESA/390 Floating Point.
                                                              (line    6)
 * ESA/390 support:                       ESA/390-Dependent.  (line    6)
-* ESA/390 Syntax:                        ESA/390 Options.    (line    8)
+* ESA/390 Syntax:                        ESA/390 Options.    (line    7)
 * ESA/390-only directives:               ESA/390 Directives. (line   12)
 * escape codes, character:               Strings.            (line   15)
-* eval directive, TIC54X:                TIC54X-Directives.  (line   24)
+* eval directive, TIC54X:                TIC54X-Directives.  (line   22)
 * even:                                  Z8000 Directives.   (line   58)
 * even directive, M680x0:                M68K-Directives.    (line   15)
 * even directive, TIC54X:                TIC54X-Directives.  (line    6)
-* Exception Cause Register, ARC:         ARC-Regs.           (line   64)
-* Exception Return Address, ARC:         ARC-Regs.           (line   77)
-* exitm directive:                       Macro.              (line  141)
+* Exception Cause Register, ARC:         ARC-Regs.           (line   63)
+* Exception Return Address, ARC:         ARC-Regs.           (line   76)
+* exitm directive:                       Macro.              (line  140)
 * expr (internal section):               As Sections.        (line   17)
 * expression arguments:                  Arguments.          (line    6)
 * expressions:                           Expressions.        (line    6)
-* expressions, comparison:               Infix Ops.          (line   55)
+* expressions, comparison:               Infix Ops.          (line   56)
 * expressions, empty:                    Empty Exprs.        (line    6)
 * expressions, integer:                  Integer Exprs.      (line    6)
-* extAuxRegister directive, ARC:         ARC Directives.     (line  106)
-* extCondCode directive, ARC:            ARC Directives.     (line  128)
-* extCoreRegister directive, ARC:        ARC Directives.     (line  139)
+* extAuxRegister directive, ARC:         ARC Directives.     (line  105)
+* extCondCode directive, ARC:            ARC Directives.     (line  126)
+* extCoreRegister directive, ARC:        ARC Directives.     (line  137)
 * extend directive M680x0:               M68K-Float.         (line   17)
 * extend directive M68HC11:              M68HC11-Float.      (line   17)
 * extend directive XGATE:                XGATE-Float.        (line   16)
 * extended directive, i960:              Directives-i960.    (line   13)
 * extension core registers, ARC:         ARC-Regs.           (line   38)
 * extern directive:                      Extern.             (line    6)
-* extInstruction directive, ARC:         ARC Directives.     (line  167)
+* extInstruction directive, ARC:         ARC Directives.     (line  164)
 * fail directive:                        Fail.               (line    6)
-* far_mode directive, TIC54X:            TIC54X-Directives.  (line   82)
+* far_mode directive, TIC54X:            TIC54X-Directives.  (line   80)
 * faster processing (-f):                f.                  (line    6)
 * fatal signal:                          Bug Criteria.       (line    9)
-* fclist directive, TIC54X:              TIC54X-Directives.  (line   87)
-* fcnolist directive, TIC54X:            TIC54X-Directives.  (line   87)
-* fepc register, V850:                   V850-Regs.          (line  107)
-* fepsw register, V850:                  V850-Regs.          (line  110)
-* ffloat directive, VAX:                 VAX-directives.     (line   14)
-* field directive, TIC54X:               TIC54X-Directives.  (line   91)
+* fclist directive, TIC54X:              TIC54X-Directives.  (line   85)
+* fcnolist directive, TIC54X:            TIC54X-Directives.  (line   85)
+* fepc register, V850:                   V850-Regs.          (line   74)
+* fepsw register, V850:                  V850-Regs.          (line   76)
+* ffloat directive, VAX:                 VAX-directives.     (line   13)
+* field directive, TIC54X:               TIC54X-Directives.  (line   89)
 * file directive:                        File.               (line    6)
 * file directive, MSP 430:               MSP430 Directives.  (line    6)
 * file name, logical:                    File.               (line   13)
@@ -25926,8 +25398,8 @@ AS Index
 * files, including:                      Include.            (line    6)
 * files, input:                          Input Files.        (line    6)
 * fill directive:                        Fill.               (line    6)
-* filling memory <1>:                    Skip.               (line    6)
-* filling memory:                        Space.              (line    6)
+* filling memory:                        Skip.               (line    6)
+* filling memory <1>:                    Space.              (line    6)
 * filling memory with zero bytes:        Zero.               (line    6)
 * FLIX syntax:                           Xtensa Syntax.      (line    6)
 * float directive:                       Float.              (line    6)
@@ -25935,14 +25407,14 @@ AS Index
 * float directive, M680x0:               M68K-Float.         (line   11)
 * float directive, M68HC11:              M68HC11-Float.      (line   11)
 * float directive, RX:                   RX-Float.           (line    8)
-* float directive, TIC54X:               TIC54X-Directives.  (line   64)
+* float directive, TIC54X:               TIC54X-Directives.  (line   62)
 * float directive, VAX:                  VAX-float.          (line   15)
 * float directive, x86-64:               i386-Float.         (line   14)
 * float directive, XGATE:                XGATE-Float.        (line   10)
 * floating point numbers:                Flonums.            (line    6)
 * floating point numbers (double):       Double.             (line    6)
-* floating point numbers (single) <1>:   Single.             (line    6)
 * floating point numbers (single):       Float.              (line    6)
+* floating point numbers (single) <1>:   Single.             (line    6)
 * floating point, AArch64 (IEEE):        AArch64 Floating Point.
                                                              (line    6)
 * floating point, Alpha (IEEE):          Alpha Floating Point.
@@ -25982,25 +25454,25 @@ AS Index
 * func directive:                        Func.               (line    6)
 * functions, in expressions:             Operators.          (line    6)
 * gbr960, i960 postprocessor:            Options-i960.       (line   40)
-* gfloat directive, VAX:                 VAX-directives.     (line   18)
+* gfloat directive, VAX:                 VAX-directives.     (line   17)
 * global:                                Z8000 Directives.   (line   21)
 * global directive:                      Global.             (line    6)
-* global directive, TIC54X:              TIC54X-Directives.  (line  103)
+* global directive, TIC54X:              TIC54X-Directives.  (line  101)
 * global pointer, ARC:                   ARC-Regs.           (line   14)
 * got directive, Nios II:                Nios II Relocations.
                                                              (line   38)
-* got_hiadj directive, Nios II:          Nios II Relocations.
-                                                             (line   38)
-* got_lo directive, Nios II:             Nios II Relocations.
-                                                             (line   38)
 * gotoff directive, Nios II:             Nios II Relocations.
                                                              (line   38)
 * gotoff_hiadj directive, Nios II:       Nios II Relocations.
                                                              (line   38)
 * gotoff_lo directive, Nios II:          Nios II Relocations.
                                                              (line   38)
+* got_hiadj directive, Nios II:          Nios II Relocations.
+                                                             (line   38)
+* got_lo directive, Nios II:             Nios II Relocations.
+                                                             (line   38)
 * gp register, MIPS:                     MIPS Small Data.    (line    6)
-* gp register, V850:                     V850-Regs.          (line   17)
+* gp register, V850:                     V850-Regs.          (line   14)
 * gprel directive, Nios II:              Nios II Relocations.
                                                              (line   26)
 * grouping data:                         Sub-Sections.       (line    6)
@@ -26013,16 +25485,16 @@ AS Index
 * H8/300 opcode summary:                 H8/300 Opcodes.     (line    6)
 * H8/300 options:                        H8/300 Options.     (line    6)
 * H8/300 registers:                      H8/300-Regs.        (line    6)
-* H8/300 size suffixes:                  H8/300 Opcodes.     (line  163)
+* H8/300 size suffixes:                  H8/300 Opcodes.     (line  160)
 * H8/300 support:                        H8/300-Dependent.   (line    6)
 * H8/300H, assembling for:               H8/300 Directives.  (line    8)
 * half directive, Nios II:               Nios II Directives. (line   10)
 * half directive, SPARC:                 Sparc-Directives.   (line   17)
-* half directive, TIC54X:                TIC54X-Directives.  (line  111)
-* hex character code (\XD...):           Strings.            (line   36)
+* half directive, TIC54X:                TIC54X-Directives.  (line  109)
+* hex character code (\XD...):           Strings.            (line   36)
 * hexadecimal integers:                  Integers.           (line   15)
 * hexadecimal prefix, Z80:               Z80-Chars.          (line   15)
-* hfloat directive, VAX:                 VAX-directives.     (line   22)
+* hfloat directive, VAX:                 VAX-directives.     (line   21)
 * hi directive, Nios II:                 Nios II Relocations.
                                                              (line   20)
 * hi pseudo-op, V850:                    V850 Opcodes.       (line   33)
@@ -26035,33 +25507,33 @@ AS Index
 * HPPA directives not supported:         HPPA Directives.    (line   11)
 * HPPA floating point (IEEE):            HPPA Floating Point.
                                                              (line    6)
-* HPPA Syntax:                           HPPA Options.       (line    8)
+* HPPA Syntax:                           HPPA Options.       (line    7)
 * HPPA-only directives:                  HPPA Directives.    (line   24)
 * hword directive:                       hword.              (line    6)
 * i370 support:                          ESA/390-Dependent.  (line    6)
 * i386 16-bit code:                      i386-16bit.         (line    6)
 * i386 arch directive:                   i386-Arch.          (line    6)
 * i386 att_syntax pseudo op:             i386-Variations.    (line    6)
-* i386 conversion instructions:          i386-Mnemonics.     (line   40)
+* i386 conversion instructions:          i386-Mnemonics.     (line   39)
 * i386 floating point:                   i386-Float.         (line    6)
 * i386 immediate operands:               i386-Variations.    (line   15)
 * i386 instruction naming:               i386-Mnemonics.     (line    9)
 * i386 instruction prefixes:             i386-Prefixes.      (line    6)
 * i386 intel_syntax pseudo op:           i386-Variations.    (line    6)
 * i386 jump optimization:                i386-Jumps.         (line    6)
-* i386 jump, call, return:               i386-Variations.    (line   41)
+* i386 jump, call, return:               i386-Variations.    (line   40)
 * i386 jump/call operands:               i386-Variations.    (line   15)
 * i386 line comment character:           i386-Chars.         (line    6)
 * i386 line separator:                   i386-Chars.         (line   18)
 * i386 memory references:                i386-Memory.        (line    6)
-* i386 mnemonic compatibility:           i386-Mnemonics.     (line   65)
+* i386 mnemonic compatibility:           i386-Mnemonics.     (line   64)
 * i386 mul, imul instructions:           i386-Notes.         (line    6)
 * i386 options:                          i386-Options.       (line    6)
 * i386 register operands:                i386-Variations.    (line   15)
 * i386 registers:                        i386-Regs.          (line    6)
-* i386 sections:                         i386-Variations.    (line   47)
-* i386 size suffixes:                    i386-Variations.    (line   29)
-* i386 source, destination operands:     i386-Variations.    (line   22)
+* i386 sections:                         i386-Variations.    (line   46)
+* i386 size suffixes:                    i386-Variations.    (line   28)
+* i386 source, destination operands:     i386-Variations.    (line   21)
 * i386 support:                          i386-Dependent.     (line    6)
 * i386 syntax compatibility:             i386-Variations.    (line    6)
 * i80386 support:                        i386-Dependent.     (line    6)
@@ -26092,7 +25564,7 @@ AS Index
 * IA-64 registers:                       IA-64-Regs.         (line    6)
 * IA-64 relocations:                     IA-64-Relocs.       (line    6)
 * IA-64 support:                         IA-64-Dependent.    (line    6)
-* IA-64 Syntax:                          IA-64 Options.      (line   87)
+* IA-64 Syntax:                          IA-64 Options.      (line   85)
 * ident directive:                       Ident.              (line    6)
 * identifiers, ARM:                      ARM-Chars.          (line   19)
 * identifiers, MSP 430:                  MSP430-Chars.       (line   17)
@@ -26146,7 +25618,7 @@ AS Index
 * instruction prefixes, i386:            i386-Prefixes.      (line    6)
 * instruction set, M680x0:               M68K-opcodes.       (line    6)
 * instruction set, M68HC11:              M68HC11-opcodes.    (line    6)
-* instruction set, XGATE:                XGATE-opcodes.      (line    6)
+* instruction set, XGATE:                XGATE-opcodes.      (line    5)
 * instruction summary, AVR:              AVR Opcodes.        (line    6)
 * instruction summary, D10V:             D10V-Opcodes.       (line    6)
 * instruction summary, D30V:             D30V-Opcodes.       (line    6)
@@ -26160,7 +25632,7 @@ AS Index
 * int directive:                         Int.                (line    6)
 * int directive, H8/300:                 H8/300 Directives.  (line    6)
 * int directive, i386:                   i386-Float.         (line   21)
-* int directive, TIC54X:                 TIC54X-Directives.  (line  111)
+* int directive, TIC54X:                 TIC54X-Directives.  (line  109)
 * int directive, x86-64:                 i386-Float.         (line   21)
 * integer expressions:                   Integer Exprs.      (line    6)
 * integer, 16-byte:                      Octa.               (line    6)
@@ -26178,10 +25650,11 @@ AS Index
 * internal assembler sections:           As Sections.        (line    6)
 * internal directive:                    Internal.           (line    6)
 * interrupt link register, ARC:          ARC-Regs.           (line   27)
-* Interrupt Vector Base address, ARC:    ARC-Regs.           (line   67)
+* Interrupt Vector Base address, ARC:    ARC-Regs.           (line   66)
 * invalid input:                         Bug Criteria.       (line   14)
 * invocation summary:                    Overview.           (line    6)
 * IP2K architecture options:             IP2K-Opts.          (line    9)
+* IP2K architecture options <1>:         IP2K-Opts.          (line   14)
 * IP2K line comment character:           IP2K-Chars.         (line    6)
 * IP2K line separator:                   IP2K-Chars.         (line   14)
 * IP2K options:                          IP2K-Opts.          (line    6)
@@ -26190,10 +25663,10 @@ AS Index
 * irpc directive:                        Irpc.               (line    6)
 * ISA options, SH64:                     SH64 Options.       (line    6)
 * joining text and data sections:        R.                  (line    6)
-* jump instructions, i386:               i386-Mnemonics.     (line   59)
+* jump instructions, i386:               i386-Mnemonics.     (line   58)
 * jump instructions, relaxation:         Xtensa Jump Relaxation.
                                                              (line    6)
-* jump instructions, x86-64:             i386-Mnemonics.     (line   59)
+* jump instructions, x86-64:             i386-Mnemonics.     (line   58)
 * jump optimization, i386:               i386-Jumps.         (line    6)
 * jump optimization, x86-64:             i386-Jumps.         (line    6)
 * jump/call operands, i386:              i386-Variations.    (line   15)
@@ -26207,21 +25680,21 @@ AS Index
 * L8UI instructions, relaxation:         Xtensa Immediate Relaxation.
                                                              (line   23)
 * label (:):                             Statements.         (line   31)
-* label directive, TIC54X:               TIC54X-Directives.  (line  123)
+* label directive, TIC54X:               TIC54X-Directives.  (line  121)
 * labels:                                Labels.             (line    6)
-* lcomm directive <1>:                   ARC Directives.     (line    9)
 * lcomm directive:                       Lcomm.              (line    6)
+* lcomm directive <1>:                   ARC Directives.     (line    9)
 * lcomm directive, COFF:                 i386-Directives.    (line    6)
 * lcommon directive, ARC:                ARC Directives.     (line   24)
 * ld:                                    Object.             (line   15)
 * ldouble directive M680x0:              M68K-Float.         (line   17)
 * ldouble directive M68HC11:             M68HC11-Float.      (line   17)
 * ldouble directive XGATE:               XGATE-Float.        (line   16)
-* ldouble directive, TIC54X:             TIC54X-Directives.  (line   64)
+* ldouble directive, TIC54X:             TIC54X-Directives.  (line   62)
 * LDR reg,=<expr> pseudo op, AArch64:    AArch64 Opcodes.    (line    9)
 * LDR reg,=<label> pseudo op, ARM:       ARM Opcodes.        (line   15)
 * leafproc directive, i960:              Directives-i960.    (line   18)
-* length directive, TIC54X:              TIC54X-Directives.  (line  127)
+* length directive, TIC54X:              TIC54X-Directives.  (line  125)
 * length of symbols:                     Symbol Intro.       (line   19)
 * level 1 interrupt link register, ARC:  ARC-Regs.           (line   23)
 * level 2 interrupt link register, ARC:  ARC-Regs.           (line   31)
@@ -26283,7 +25756,7 @@ AS Index
 * line separator, ARC:                   ARC-Chars.          (line   27)
 * line separator, ARM:                   ARM-Chars.          (line   14)
 * line separator, AVR:                   AVR-Chars.          (line   14)
-* line separator, CR16:                  CR16-Chars.         (line   13)
+* line separator, CR16:                  CR16-Chars.         (line   12)
 * line separator, Epiphany:              Epiphany-Chars.     (line   14)
 * line separator, H8/300:                H8/300-Chars.       (line    8)
 * line separator, i386:                  i386-Chars.         (line   18)
@@ -26294,7 +25767,7 @@ AS Index
 * line separator, LM32:                  LM32-Chars.         (line   12)
 * line separator, M32C:                  M32C-Chars.         (line   14)
 * line separator, M680x0:                M68K-Chars.         (line   20)
-* line separator, M68HC11:               M68HC11-Syntax.     (line   27)
+* line separator, M68HC11:               M68HC11-Syntax.     (line   26)
 * line separator, Meta:                  Meta-Chars.         (line    8)
 * line separator, MicroBlaze:            MicroBlaze-Chars.   (line   14)
 * line separator, MIPS:                  MIPS-Chars.         (line   14)
@@ -26314,7 +25787,7 @@ AS Index
 * line separator, V850:                  V850-Chars.         (line   13)
 * line separator, VAX:                   VAX-Chars.          (line   14)
 * line separator, Visium:                Visium Characters.  (line   14)
-* line separator, XGATE:                 XGATE-Syntax.       (line   26)
+* line separator, XGATE:                 XGATE-Syntax.       (line   25)
 * line separator, XStormy16:             XStormy16-Chars.    (line   14)
 * line separator, Z80:                   Z80-Chars.          (line   13)
 * line separator, Z8000:                 Z8000-Chars.        (line   13)
@@ -26324,7 +25797,7 @@ AS Index
 * linker, and assembler:                 Secs Background.    (line   10)
 * linkonce directive:                    Linkonce.           (line    6)
 * list directive:                        List.               (line    6)
-* list directive, TIC54X:                TIC54X-Directives.  (line  131)
+* list directive, TIC54X:                TIC54X-Directives.  (line  129)
 * listing control, turning off:          Nolist.             (line    6)
 * listing control, turning on:           List.               (line    6)
 * listing control: new page:             Eject.              (line    6)
@@ -26339,8 +25812,8 @@ AS Index
                                                              (line    6)
 * literal_prefix directive:              Literal Prefix Directive.
                                                              (line    6)
-* little endian output, MIPS:            Overview.           (line  831)
-* little endian output, PJ:              Overview.           (line  734)
+* little endian output, MIPS:            Overview.           (line  809)
+* little endian output, PJ:              Overview.           (line  716)
 * little-endian output, MIPS:            MIPS Options.       (line   13)
 * little-endian output, TIC6X:           TIC6X Options.      (line   46)
 * LM32 line comment character:           LM32-Chars.         (line    6)
@@ -26355,7 +25828,6 @@ AS Index
                                                              (line   23)
 * lo pseudo-op, V850:                    V850 Opcodes.       (line   22)
 * loc directive:                         Loc.                (line    6)
-* loc_mark_labels directive:             Loc_mark_labels.    (line    6)
 * local common symbols:                  Lcomm.              (line    6)
 * local directive:                       Local.              (line    6)
 * local labels:                          Symbol Names.       (line   43)
@@ -26364,23 +25836,24 @@ AS Index
 * location counter:                      Dot.                (line    6)
 * location counter, advancing:           Org.                (line    6)
 * location counter, Z80:                 Z80-Chars.          (line   15)
+* loc_mark_labels directive:             Loc_mark_labels.    (line    6)
 * logical file name:                     File.               (line   13)
 * logical line number:                   Line.               (line    6)
 * logical line numbers:                  Comments.           (line   33)
 * long directive:                        Long.               (line    6)
 * long directive, i386:                  i386-Float.         (line   21)
-* long directive, TIC54X:                TIC54X-Directives.  (line  135)
+* long directive, TIC54X:                TIC54X-Directives.  (line  133)
 * long directive, x86-64:                i386-Float.         (line   21)
-* longcall pseudo-op, V850:              V850 Opcodes.       (line  123)
+* longcall pseudo-op, V850:              V850 Opcodes.       (line  122)
 * longcalls directive:                   Longcalls Directive.
                                                              (line    6)
-* longjump pseudo-op, V850:              V850 Opcodes.       (line  129)
+* longjump pseudo-op, V850:              V850 Opcodes.       (line  128)
 * loop counter, ARC:                     ARC-Regs.           (line   41)
-* loop directive, TIC54X:                TIC54X-Directives.  (line  143)
+* loop directive, TIC54X:                TIC54X-Directives.  (line  141)
 * LOOP instructions, alignment:          Xtensa Automatic Alignment.
                                                              (line    6)
 * low directive, M32R:                   M32R-Directives.    (line    9)
-* lp register, V850:                     V850-Regs.          (line   98)
+* lp register, V850:                     V850-Regs.          (line   68)
 * lval:                                  Z8000 Directives.   (line   27)
 * LWP, i386:                             i386-LWP.           (line    6)
 * LWP, x86-64:                           i386-LWP.           (line    6)
@@ -26392,12 +25865,14 @@ AS Index
 * M32C options:                          M32C-Opts.          (line    6)
 * M32C support:                          M32C-Dependent.     (line    6)
 * M32R architecture options:             M32R-Opts.          (line    9)
+* M32R architecture options <1>:         M32R-Opts.          (line   17)
+* M32R architecture options <2>:         M32R-Opts.          (line   21)
 * M32R directives:                       M32R-Directives.    (line    6)
 * M32R options:                          M32R-Opts.          (line    6)
 * M32R support:                          M32R-Dependent.     (line    6)
 * M32R warnings:                         M32R-Warnings.      (line    6)
 * M680x0 addressing modes:               M68K-Syntax.        (line   21)
-* M680x0 architecture options:           M68K-Opts.          (line   98)
+* M680x0 architecture options:           M68K-Opts.          (line   99)
 * M680x0 branch improvement:             M68K-Branch.        (line    6)
 * M680x0 directives:                     M68K-Directives.    (line    6)
 * M680x0 floating point:                 M68K-Float.         (line    6)
@@ -26410,7 +25885,7 @@ AS Index
 * M680x0 size modifiers:                 M68K-Syntax.        (line    8)
 * M680x0 support:                        M68K-Dependent.     (line    6)
 * M680x0 syntax:                         M68K-Syntax.        (line    8)
-* M68HC11 addressing modes:              M68HC11-Syntax.     (line   30)
+* M68HC11 addressing modes:              M68HC11-Syntax.     (line   29)
 * M68HC11 and M68HC12 support:           M68HC11-Dependent.  (line    6)
 * M68HC11 assembler directive .far:      M68HC11-Directives. (line   20)
 * M68HC11 assembler directive .interrupt: M68HC11-Directives.
@@ -26422,7 +25897,7 @@ AS Index
 * M68HC11 branch improvement:            M68HC11-Branch.     (line    6)
 * M68HC11 floating point:                M68HC11-Float.      (line    6)
 * M68HC11 line comment character:        M68HC11-Syntax.     (line   17)
-* M68HC11 line separator:                M68HC11-Syntax.     (line   27)
+* M68HC11 line separator:                M68HC11-Syntax.     (line   26)
 * M68HC11 modifiers:                     M68HC11-Modifiers.  (line    6)
 * M68HC11 opcodes:                       M68HC11-opcodes.    (line    6)
 * M68HC11 options:                       M68HC11-Opts.       (line    6)
@@ -26459,9 +25934,9 @@ AS Index
                                                              (line    6)
 * machine-independent syntax:            Syntax.             (line    6)
 * macro directive:                       Macro.              (line   28)
-* macro directive, TIC54X:               TIC54X-Directives.  (line  153)
+* macro directive, TIC54X:               TIC54X-Directives.  (line  151)
 * macros:                                Macro.              (line    6)
-* macros, count executed:                Macro.              (line  143)
+* macros, count executed:                Macro.              (line  142)
 * Macros, MSP 430:                       MSP430-Macros.      (line    6)
 * macros, TIC54X:                        TIC54X-Macros.      (line    6)
 * make rules:                            MD.                 (line    6)
@@ -26469,7 +25944,7 @@ AS Index
 * marc600 command line option, ARC:      ARC Options.        (line   14)
 * mARC601 command line option, ARC:      ARC Options.        (line   27)
 * mARC700 command line option, ARC:      ARC Options.        (line   39)
-* march command line option, Nios II:    Nios II Options.    (line   29)
+* march command line option, Nios II:    Nios II Options.    (line   28)
 * math builtins, TIC54X:                 TIC54X-Builtins.    (line    6)
 * Maximum number of continuation lines:  listing.            (line   34)
 * mEM command line option, ARC:          ARC Options.        (line   42)
@@ -26492,13 +25967,13 @@ AS Index
 * MicroBlaze line comment character:     MicroBlaze-Chars.   (line    6)
 * MicroBlaze line separator:             MicroBlaze-Chars.   (line   14)
 * MicroBlaze support:                    MicroBlaze-Dependent.
-                                                             (line   13)
-* minus, permitted arguments:            Infix Ops.          (line   49)
+                                                             (line   12)
+* minus, permitted arguments:            Infix Ops.          (line   50)
 * MIPS 32-bit microMIPS instruction generation override: MIPS assembly options.
                                                              (line   18)
 * MIPS architecture options:             MIPS Options.       (line   29)
 * MIPS big-endian output:                MIPS Options.       (line   13)
-* MIPS CPU override:                     MIPS ISA.           (line   19)
+* MIPS CPU override:                     MIPS ISA.           (line   18)
 * MIPS directives to override command line options: MIPS assembly options.
                                                              (line    6)
 * MIPS DSP Release 1 instruction generation override: MIPS ASE Instruction Generation Overrides.
@@ -26506,68 +25981,68 @@ AS Index
 * MIPS DSP Release 2 instruction generation override: MIPS ASE Instruction Generation Overrides.
                                                              (line   26)
 * MIPS DSP Release 3 instruction generation override: MIPS ASE Instruction Generation Overrides.
-                                                             (line   32)
-* MIPS endianness:                       Overview.           (line  828)
+                                                             (line   31)
+* MIPS endianness:                       Overview.           (line  806)
 * MIPS eXtended Physical Address (XPA) instruction generation override: MIPS ASE Instruction Generation Overrides.
-                                                             (line   58)
+                                                             (line   57)
 * MIPS IEEE 754 NaN data encoding selection: MIPS NaN Encodings.
                                                              (line    6)
-* MIPS ISA:                              Overview.           (line  834)
+* MIPS ISA:                              Overview.           (line  812)
 * MIPS ISA override:                     MIPS ISA.           (line    6)
 * MIPS line comment character:           MIPS-Chars.         (line    6)
 * MIPS line separator:                   MIPS-Chars.         (line   14)
 * MIPS little-endian output:             MIPS Options.       (line   13)
 * MIPS MCU instruction generation override: MIPS ASE Instruction Generation Overrides.
-                                                             (line   43)
+                                                             (line   42)
 * MIPS MDMX instruction generation override: MIPS ASE Instruction Generation Overrides.
                                                              (line   16)
 * MIPS MIPS-3D instruction generation override: MIPS ASE Instruction Generation Overrides.
                                                              (line    6)
 * MIPS MT instruction generation override: MIPS ASE Instruction Generation Overrides.
-                                                             (line   38)
+                                                             (line   37)
 * MIPS option stack:                     MIPS Option Stack.  (line    6)
 * MIPS processor:                        MIPS-Dependent.     (line    6)
 * MIPS SIMD Architecture instruction generation override: MIPS ASE Instruction Generation Overrides.
-                                                             (line   48)
+                                                             (line   47)
 * MIT:                                   M68K-Syntax.        (line    6)
-* mlib directive, TIC54X:                TIC54X-Directives.  (line  159)
-* mlist directive, TIC54X:               TIC54X-Directives.  (line  164)
-* MMIX assembler directive BSPEC:        MMIX-Pseudos.       (line  131)
-* MMIX assembler directive BYTE:         MMIX-Pseudos.       (line   97)
-* MMIX assembler directive ESPEC:        MMIX-Pseudos.       (line  131)
-* MMIX assembler directive GREG:         MMIX-Pseudos.       (line   50)
-* MMIX assembler directive IS:           MMIX-Pseudos.       (line   42)
+* mlib directive, TIC54X:                TIC54X-Directives.  (line  157)
+* mlist directive, TIC54X:               TIC54X-Directives.  (line  162)
+* MMIX assembler directive BSPEC:        MMIX-Pseudos.       (line  137)
+* MMIX assembler directive BYTE:         MMIX-Pseudos.       (line  101)
+* MMIX assembler directive ESPEC:        MMIX-Pseudos.       (line  137)
+* MMIX assembler directive GREG:         MMIX-Pseudos.       (line   53)
+* MMIX assembler directive IS:           MMIX-Pseudos.       (line   44)
 * MMIX assembler directive LOC:          MMIX-Pseudos.       (line    7)
-* MMIX assembler directive LOCAL:        MMIX-Pseudos.       (line   28)
-* MMIX assembler directive OCTA:         MMIX-Pseudos.       (line  108)
-* MMIX assembler directive PREFIX:       MMIX-Pseudos.       (line  120)
-* MMIX assembler directive TETRA:        MMIX-Pseudos.       (line  108)
-* MMIX assembler directive WYDE:         MMIX-Pseudos.       (line  108)
+* MMIX assembler directive LOCAL:        MMIX-Pseudos.       (line   29)
+* MMIX assembler directive OCTA:         MMIX-Pseudos.       (line  113)
+* MMIX assembler directive PREFIX:       MMIX-Pseudos.       (line  125)
+* MMIX assembler directive TETRA:        MMIX-Pseudos.       (line  113)
+* MMIX assembler directive WYDE:         MMIX-Pseudos.       (line  113)
 * MMIX assembler directives:             MMIX-Pseudos.       (line    6)
 * MMIX line comment characters:          MMIX-Chars.         (line    6)
 * MMIX options:                          MMIX-Opts.          (line    6)
-* MMIX pseudo-op BSPEC:                  MMIX-Pseudos.       (line  131)
-* MMIX pseudo-op BYTE:                   MMIX-Pseudos.       (line   97)
-* MMIX pseudo-op ESPEC:                  MMIX-Pseudos.       (line  131)
-* MMIX pseudo-op GREG:                   MMIX-Pseudos.       (line   50)
-* MMIX pseudo-op IS:                     MMIX-Pseudos.       (line   42)
+* MMIX pseudo-op BSPEC:                  MMIX-Pseudos.       (line  137)
+* MMIX pseudo-op BYTE:                   MMIX-Pseudos.       (line  101)
+* MMIX pseudo-op ESPEC:                  MMIX-Pseudos.       (line  137)
+* MMIX pseudo-op GREG:                   MMIX-Pseudos.       (line   53)
+* MMIX pseudo-op IS:                     MMIX-Pseudos.       (line   44)
 * MMIX pseudo-op LOC:                    MMIX-Pseudos.       (line    7)
-* MMIX pseudo-op LOCAL:                  MMIX-Pseudos.       (line   28)
-* MMIX pseudo-op OCTA:                   MMIX-Pseudos.       (line  108)
-* MMIX pseudo-op PREFIX:                 MMIX-Pseudos.       (line  120)
-* MMIX pseudo-op TETRA:                  MMIX-Pseudos.       (line  108)
-* MMIX pseudo-op WYDE:                   MMIX-Pseudos.       (line  108)
+* MMIX pseudo-op LOCAL:                  MMIX-Pseudos.       (line   29)
+* MMIX pseudo-op OCTA:                   MMIX-Pseudos.       (line  113)
+* MMIX pseudo-op PREFIX:                 MMIX-Pseudos.       (line  125)
+* MMIX pseudo-op TETRA:                  MMIX-Pseudos.       (line  113)
+* MMIX pseudo-op WYDE:                   MMIX-Pseudos.       (line  113)
 * MMIX pseudo-ops:                       MMIX-Pseudos.       (line    6)
 * MMIX register names:                   MMIX-Regs.          (line    6)
 * MMIX support:                          MMIX-Dependent.     (line    6)
 * mmixal differences:                    MMIX-mmixal.        (line    6)
-* mmregs directive, TIC54X:              TIC54X-Directives.  (line  169)
-* mmsg directive, TIC54X:                TIC54X-Directives.  (line   77)
+* mmregs directive, TIC54X:              TIC54X-Directives.  (line  167)
+* mmsg directive, TIC54X:                TIC54X-Directives.  (line   75)
 * MMX, i386:                             i386-SIMD.          (line    6)
 * MMX, x86-64:                           i386-SIMD.          (line    6)
-* mnemonic compatibility, i386:          i386-Mnemonics.     (line   65)
-* mnemonic suffixes, i386:               i386-Variations.    (line   29)
-* mnemonic suffixes, x86-64:             i386-Variations.    (line   29)
+* mnemonic compatibility, i386:          i386-Mnemonics.     (line   64)
+* mnemonic suffixes, i386:               i386-Variations.    (line   28)
+* mnemonic suffixes, x86-64:             i386-Variations.    (line   28)
 * mnemonics for opcodes, VAX:            VAX-opcodes.        (line    6)
 * mnemonics, AVR:                        AVR Opcodes.        (line    6)
 * mnemonics, D10V:                       D10V-Opcodes.       (line    6)
@@ -26577,7 +26052,7 @@ AS Index
 * mnemonics, SH:                         SH Opcodes.         (line    6)
 * mnemonics, SH64:                       SH64 Opcodes.       (line    6)
 * mnemonics, Z8000:                      Z8000 Opcodes.      (line    6)
-* mnolist directive, TIC54X:             TIC54X-Directives.  (line  164)
+* mnolist directive, TIC54X:             TIC54X-Directives.  (line  162)
 * mnps400 command line option, ARC:      ARC Options.        (line   79)
 * modifiers, M32C:                       M32C-Modifiers.     (line    6)
 * Motorola syntax for the 680x0:         M68K-Moto-Syntax.   (line    6)
@@ -26614,7 +26089,7 @@ AS Index
 * NDS32 options:                         NDS32 Options.      (line    6)
 * NDS32 processor:                       NDS32-Dependent.    (line    6)
 * new page, in listings:                 Eject.              (line    6)
-* newblock directive, TIC54X:            TIC54X-Directives.  (line  175)
+* newblock directive, TIC54X:            TIC54X-Directives.  (line  173)
 * newline (\n):                          Strings.            (line   21)
 * newline, required at file end:         Statements.         (line   14)
 * Nios II line comment character:        Nios II Chars.      (line    6)
@@ -26630,19 +26105,19 @@ AS Index
                                                              (line    6)
 * no-longcalls directive:                Longcalls Directive.
                                                              (line    6)
-* no-relax command line option, Nios II: Nios II Options.    (line   20)
+* no-relax command line option, Nios II: Nios II Options.    (line   19)
 * no-schedule directive:                 Schedule Directive. (line    6)
 * no-transform directive:                Transform Directive.
                                                              (line    6)
 * nolist directive:                      Nolist.             (line    6)
-* nolist directive, TIC54X:              TIC54X-Directives.  (line  131)
+* nolist directive, TIC54X:              TIC54X-Directives.  (line  129)
 * NOP pseudo op, ARM:                    ARM Opcodes.        (line    9)
 * notes for Alpha:                       Alpha Notes.        (line    6)
 * NS32K line comment character:          NS32K-Chars.        (line    6)
 * NS32K line separator:                  NS32K-Chars.        (line   18)
 * null-terminated strings:               Asciz.              (line    6)
 * number constants:                      Numbers.            (line    6)
-* number of macros executed:             Macro.              (line  143)
+* number of macros executed:             Macro.              (line  142)
 * numbered subsections:                  Sub-Sections.       (line    6)
 * numbers, 16-bit:                       hword.              (line    6)
 * numeric values:                        Expressions.        (line    6)
@@ -26687,11 +26162,11 @@ AS Index
 * operator precedence:                   Infix Ops.          (line   11)
 * operators, in expressions:             Operators.          (line    6)
 * operators, permitted arguments:        Infix Ops.          (line    6)
-* optimization, D10V:                    Overview.           (line  591)
-* optimization, D30V:                    Overview.           (line  596)
+* optimization, D10V:                    Overview.           (line  579)
+* optimization, D30V:                    Overview.           (line  584)
 * optimizations:                         Xtensa Optimizations.
                                                              (line    6)
-* option directive, TIC54X:              TIC54X-Directives.  (line  179)
+* option directive, TIC54X:              TIC54X-Directives.  (line  177)
 * option summary:                        Overview.           (line    6)
 * options for AArch64 (none):            AArch64 Options.    (line    6)
 * options for Alpha:                     Alpha Options.      (line    6)
@@ -26762,15 +26237,15 @@ AS Index
 * PDP-11 line separator:                 PDP-11-Syntax.      (line   19)
 * PDP-11 support:                        PDP-11-Dependent.   (line    6)
 * PDP-11 syntax:                         PDP-11-Syntax.      (line    6)
-* PIC code generation for ARM:           ARM Options.        (line  186)
+* PIC code generation for ARM:           ARM Options.        (line  187)
 * PIC code generation for M32R:          M32R-Opts.          (line   42)
 * PIC selection, MIPS:                   MIPS Options.       (line   21)
-* PJ endianness:                         Overview.           (line  731)
+* PJ endianness:                         Overview.           (line  713)
 * PJ line comment character:             PJ-Chars.           (line    6)
 * PJ line separator:                     PJ-Chars.           (line   14)
 * PJ options:                            PJ Options.         (line    6)
 * PJ support:                            PJ-Dependent.       (line    6)
-* plus, permitted arguments:             Infix Ops.          (line   44)
+* plus, permitted arguments:             Infix Ops.          (line   45)
 * popsection directive:                  PopSection.         (line    6)
 * Position-independent code, CRIS:       CRIS-Opts.          (line   27)
 * Position-independent code, symbols in, CRIS: CRIS-Pic.     (line    6)
@@ -26785,31 +26260,31 @@ AS Index
 * prefix operators:                      Prefix Ops.         (line    6)
 * prefixes, i386:                        i386-Prefixes.      (line    6)
 * preprocessing:                         Preprocessing.      (line    6)
-* preprocessing, turning on and off:     Preprocessing.      (line   27)
+* preprocessing, turning on and off:     Preprocessing.      (line   26)
 * previous directive:                    Previous.           (line    6)
 * primary attributes, COFF symbols:      COFF Symbols.       (line   13)
 * print directive:                       Print.              (line    6)
 * proc directive, SPARC:                 Sparc-Directives.   (line   25)
-* Processor Identification register, ARC: ARC-Regs.          (line   52)
+* Processor Identification register, ARC: ARC-Regs.          (line   51)
 * profiler directive, MSP 430:           MSP430 Directives.  (line   26)
 * profiling capability for MSP 430:      MSP430 Profiling Capability.
                                                              (line    6)
-* Program Counter, ARC:                  ARC-Regs.           (line   55)
+* Program Counter, ARC:                  ARC-Regs.           (line   54)
 * protected directive:                   Protected.          (line    6)
-* pseudo-op .arch, CRIS:                 CRIS-Pseudos.       (line   45)
+* pseudo-op .arch, CRIS:                 CRIS-Pseudos.       (line   50)
 * pseudo-op .dword, CRIS:                CRIS-Pseudos.       (line   12)
-* pseudo-op .syntax, CRIS:               CRIS-Pseudos.       (line   17)
-* pseudo-op BSPEC, MMIX:                 MMIX-Pseudos.       (line  131)
-* pseudo-op BYTE, MMIX:                  MMIX-Pseudos.       (line   97)
-* pseudo-op ESPEC, MMIX:                 MMIX-Pseudos.       (line  131)
-* pseudo-op GREG, MMIX:                  MMIX-Pseudos.       (line   50)
-* pseudo-op IS, MMIX:                    MMIX-Pseudos.       (line   42)
+* pseudo-op .syntax, CRIS:               CRIS-Pseudos.       (line   18)
+* pseudo-op BSPEC, MMIX:                 MMIX-Pseudos.       (line  137)
+* pseudo-op BYTE, MMIX:                  MMIX-Pseudos.       (line  101)
+* pseudo-op ESPEC, MMIX:                 MMIX-Pseudos.       (line  137)
+* pseudo-op GREG, MMIX:                  MMIX-Pseudos.       (line   53)
+* pseudo-op IS, MMIX:                    MMIX-Pseudos.       (line   44)
 * pseudo-op LOC, MMIX:                   MMIX-Pseudos.       (line    7)
-* pseudo-op LOCAL, MMIX:                 MMIX-Pseudos.       (line   28)
-* pseudo-op OCTA, MMIX:                  MMIX-Pseudos.       (line  108)
-* pseudo-op PREFIX, MMIX:                MMIX-Pseudos.       (line  120)
-* pseudo-op TETRA, MMIX:                 MMIX-Pseudos.       (line  108)
-* pseudo-op WYDE, MMIX:                  MMIX-Pseudos.       (line  108)
+* pseudo-op LOCAL, MMIX:                 MMIX-Pseudos.       (line   29)
+* pseudo-op OCTA, MMIX:                  MMIX-Pseudos.       (line  113)
+* pseudo-op PREFIX, MMIX:                MMIX-Pseudos.       (line  125)
+* pseudo-op TETRA, MMIX:                 MMIX-Pseudos.       (line  113)
+* pseudo-op WYDE, MMIX:                  MMIX-Pseudos.       (line  113)
 * pseudo-opcodes for XStormy16:          XStormy16 Opcodes.  (line    6)
 * pseudo-opcodes, M680x0:                M68K-Branch.        (line    6)
 * pseudo-opcodes, M68HC11:               M68HC11-Branch.     (line    6)
@@ -26819,8 +26294,8 @@ AS Index
 * pseudo-ops, MMIX:                      MMIX-Pseudos.       (line    6)
 * psize directive:                       Psize.              (line    6)
 * PSR bits:                              IA-64-Bits.         (line    6)
-* pstring directive, TIC54X:             TIC54X-Directives.  (line  208)
-* psw register, V850:                    V850-Regs.          (line  116)
+* pstring directive, TIC54X:             TIC54X-Directives.  (line  206)
+* psw register, V850:                    V850-Regs.          (line   80)
 * purgem directive:                      Purgem.             (line    6)
 * purpose of GNU assembler:              GNU Assembler.      (line   12)
 * pushsection directive:                 PushSection.        (line    6)
@@ -26828,7 +26303,7 @@ AS Index
 * quad directive, i386:                  i386-Float.         (line   21)
 * quad directive, x86-64:                i386-Float.         (line   21)
 * real-mode code, i386:                  i386-16bit.         (line    6)
-* ref directive, TIC54X:                 TIC54X-Directives.  (line  103)
+* ref directive, TIC54X:                 TIC54X-Directives.  (line  101)
 * refsym directive, MSP 430:             MSP430 Directives.  (line   30)
 * register directive, SPARC:             Sparc-Directives.   (line   29)
 * register name prefix character, ARC:   ARC-Chars.          (line    7)
@@ -26898,8 +26373,8 @@ AS Index
 * reporting bugs in assembler:           Reporting Bugs.     (line    6)
 * rept directive:                        Rept.               (line    6)
 * reserve directive, SPARC:              Sparc-Directives.   (line   39)
-* return instructions, i386:             i386-Variations.    (line   41)
-* return instructions, x86-64:           i386-Variations.    (line   41)
+* return instructions, i386:             i386-Variations.    (line   40)
+* return instructions, x86-64:           i386-Variations.    (line   40)
 * REX prefixes, i386:                    i386-Prefixes.      (line   46)
 * RISC-V support:                        RISC-V-Dependent.   (line    6)
 * RL78 assembler directives:             RL78-Directives.    (line    6)
@@ -26936,8 +26411,8 @@ AS Index
 * s390 options:                          s390 Options.       (line    6)
 * s390 register naming:                  s390 Register.      (line    6)
 * s390 support:                          S/390-Dependent.    (line    6)
-* Saved User Stack Pointer, ARC:         ARC-Regs.           (line   74)
-* sblock directive, TIC54X:              TIC54X-Directives.  (line  182)
+* Saved User Stack Pointer, ARC:         ARC-Regs.           (line   73)
+* sblock directive, TIC54X:              TIC54X-Directives.  (line  180)
 * sbttl directive:                       Sbttl.              (line    6)
 * schedule directive:                    Schedule Directive. (line    6)
 * scl directive:                         Scl.                (line    6)
@@ -26949,30 +26424,30 @@ AS Index
 * SCORE processor:                       SCORE-Dependent.    (line    6)
 * sdaoff pseudo-op, V850:                V850 Opcodes.       (line   65)
 * search path for .include:              I.                  (line    6)
-* sect directive, TIC54X:                TIC54X-Directives.  (line  188)
+* sect directive, TIC54X:                TIC54X-Directives.  (line  186)
 * section directive (COFF version):      Section.            (line   16)
-* section directive (ELF version):       Section.            (line   77)
+* section directive (ELF version):       Section.            (line   67)
 * section directive, V850:               V850 Directives.    (line    9)
-* section name substitution:             Section.            (line   81)
+* section name substitution:             Section.            (line   71)
 * section override prefixes, i386:       i386-Prefixes.      (line   23)
-* Section Stack <1>:                     PopSection.         (line    6)
-* Section Stack <2>:                     SubSection.         (line    6)
-* Section Stack <3>:                     Section.            (line   72)
-* Section Stack <4>:                     PushSection.        (line    6)
-* Section Stack:                         Previous.           (line    6)
-* section-relative addressing:           Secs Background.    (line   68)
+* Section Stack:                         PopSection.         (line    6)
+* Section Stack <1>:                     Previous.           (line    6)
+* Section Stack <2>:                     PushSection.        (line    6)
+* Section Stack <3>:                     Section.            (line   62)
+* Section Stack <4>:                     SubSection.         (line    6)
+* section-relative addressing:           Secs Background.    (line   65)
 * sections:                              Sections.           (line    6)
 * sections in messages, internal:        As Sections.        (line    6)
-* sections, i386:                        i386-Variations.    (line   47)
+* sections, i386:                        i386-Variations.    (line   46)
 * sections, named:                       Ld Sections.        (line    8)
-* sections, x86-64:                      i386-Variations.    (line   47)
+* sections, x86-64:                      i386-Variations.    (line   46)
 * seg directive, SPARC:                  Sparc-Directives.   (line   44)
 * segm:                                  Z8000 Directives.   (line   10)
 * set at directive, Nios II:             Nios II Directives. (line   35)
 * set break directive, Nios II:          Nios II Directives. (line   43)
 * set directive:                         Set.                (line    6)
 * set directive, Nios II:                Nios II Directives. (line   57)
-* set directive, TIC54X:                 TIC54X-Directives.  (line  191)
+* set directive, TIC54X:                 TIC54X-Directives.  (line  189)
 * set noat directive, Nios II:           Nios II Directives. (line   31)
 * set nobreak directive, Nios II:        Nios II Directives. (line   39)
 * set norelax directive, Nios II:        Nios II Directives. (line   46)
@@ -26987,7 +26462,7 @@ AS Index
 * SH options:                            SH Options.         (line    6)
 * SH registers:                          SH-Regs.            (line    6)
 * SH support:                            SH-Dependent.       (line    6)
-* SH64 ABI options:                      SH64 Options.       (line   29)
+* SH64 ABI options:                      SH64 Options.       (line   25)
 * SH64 addressing modes:                 SH64-Addressing.    (line    6)
 * SH64 ISA options:                      SH64 Options.       (line    6)
 * SH64 line comment character:           SH64-Chars.         (line    6)
@@ -26999,7 +26474,7 @@ AS Index
 * SH64 support:                          SH64-Dependent.     (line    6)
 * shigh directive, M32R:                 M32R-Directives.    (line   26)
 * short directive:                       Short.              (line    6)
-* short directive, TIC54X:               TIC54X-Directives.  (line  111)
+* short directive, TIC54X:               TIC54X-Directives.  (line  109)
 * SIMD, i386:                            i386-SIMD.          (line    6)
 * SIMD, x86-64:                          i386-SIMD.          (line    6)
 * single character constant:             Chars.              (line    6)
@@ -27015,11 +26490,11 @@ AS Index
 * size modifiers, D30V:                  D30V-Size.          (line    6)
 * size modifiers, M680x0:                M68K-Syntax.        (line    8)
 * size prefixes, i386:                   i386-Prefixes.      (line   27)
-* size suffixes, H8/300:                 H8/300 Opcodes.     (line  163)
+* size suffixes, H8/300:                 H8/300 Opcodes.     (line  160)
 * size, translations, Sparc:             Sparc-Size-Translations.
                                                              (line    6)
-* sizes operands, i386:                  i386-Variations.    (line   29)
-* sizes operands, x86-64:                i386-Variations.    (line   29)
+* sizes operands, i386:                  i386-Variations.    (line   28)
+* sizes operands, x86-64:                i386-Variations.    (line   28)
 * skip directive:                        Skip.               (line    6)
 * skip directive, M680x0:                M68K-Directives.    (line   19)
 * skip directive, SPARC:                 Sparc-Directives.   (line   48)
@@ -27029,12 +26504,12 @@ AS Index
                                                              (line   11)
 * SOM symbol attributes:                 SOM Symbols.        (line    6)
 * source program:                        Input Files.        (line    6)
-* source, destination operands; i386:    i386-Variations.    (line   22)
-* source, destination operands; x86-64:  i386-Variations.    (line   22)
+* source, destination operands; i386:    i386-Variations.    (line   21)
+* source, destination operands; x86-64:  i386-Variations.    (line   21)
 * sp register:                           Xtensa Registers.   (line    6)
-* sp register, V850:                     V850-Regs.          (line   14)
+* sp register, V850:                     V850-Regs.          (line   12)
 * space directive:                       Space.              (line    6)
-* space directive, TIC54X:               TIC54X-Directives.  (line  196)
+* space directive, TIC54X:               TIC54X-Directives.  (line  194)
 * space used, maximum for assembly:      statistics.         (line    6)
 * SPARC architectures:                   Sparc-Opts.         (line    6)
 * Sparc constants:                       Sparc-Constants.    (line    6)
@@ -27052,11 +26527,11 @@ AS Index
 * SPARC syntax:                          Sparc-Aligned-Data. (line   21)
 * special characters, M680x0:            M68K-Chars.         (line    6)
 * special purpose registers, MSP 430:    MSP430-Regs.        (line   11)
-* sslist directive, TIC54X:              TIC54X-Directives.  (line  203)
-* ssnolist directive, TIC54X:            TIC54X-Directives.  (line  203)
+* sslist directive, TIC54X:              TIC54X-Directives.  (line  201)
+* ssnolist directive, TIC54X:            TIC54X-Directives.  (line  201)
 * stabd directive:                       Stab.               (line   38)
-* stabn directive:                       Stab.               (line   48)
-* stabs directive:                       Stab.               (line   51)
+* stabn directive:                       Stab.               (line   49)
+* stabs directive:                       Stab.               (line   52)
 * stabX directives:                      Stab.               (line    6)
 * stack pointer, ARC:                    ARC-Regs.           (line   20)
 * standard assembler sections:           Secs Background.    (line   27)
@@ -27067,7 +26542,7 @@ AS Index
 * statement separator, ARC:              ARC-Chars.          (line   27)
 * statement separator, ARM:              ARM-Chars.          (line   14)
 * statement separator, AVR:              AVR-Chars.          (line   14)
-* statement separator, CR16:             CR16-Chars.         (line   13)
+* statement separator, CR16:             CR16-Chars.         (line   12)
 * statement separator, Epiphany:         Epiphany-Chars.     (line   14)
 * statement separator, H8/300:           H8/300-Chars.       (line    8)
 * statement separator, i386:             i386-Chars.         (line   18)
@@ -27077,7 +26552,7 @@ AS Index
 * statement separator, IP2K:             IP2K-Chars.         (line   14)
 * statement separator, LM32:             LM32-Chars.         (line   12)
 * statement separator, M32C:             M32C-Chars.         (line   14)
-* statement separator, M68HC11:          M68HC11-Syntax.     (line   27)
+* statement separator, M68HC11:          M68HC11-Syntax.     (line   26)
 * statement separator, Meta:             Meta-Chars.         (line    8)
 * statement separator, MicroBlaze:       MicroBlaze-Chars.   (line   14)
 * statement separator, MIPS:             MIPS-Chars.         (line   14)
@@ -27097,21 +26572,21 @@ AS Index
 * statement separator, V850:             V850-Chars.         (line   13)
 * statement separator, VAX:              VAX-Chars.          (line   14)
 * statement separator, Visium:           Visium Characters.  (line   14)
-* statement separator, XGATE:            XGATE-Syntax.       (line   26)
+* statement separator, XGATE:            XGATE-Syntax.       (line   25)
 * statement separator, XStormy16:        XStormy16-Chars.    (line   14)
 * statement separator, Z80:              Z80-Chars.          (line   13)
 * statement separator, Z8000:            Z8000-Chars.        (line   13)
 * statements, structure of:              Statements.         (line    6)
 * statistics, about assembly:            statistics.         (line    6)
-* Status register, ARC:                  ARC-Regs.           (line   58)
-* STATUS32 saved on exception, ARC:      ARC-Regs.           (line   83)
+* Status register, ARC:                  ARC-Regs.           (line   57)
+* STATUS32 saved on exception, ARC:      ARC-Regs.           (line   82)
 * stopping the assembly:                 Abort.              (line    6)
 * Stored STATUS32 register on entry to level P0 interrupts, ARC: ARC-Regs.
-                                                             (line   70)
+                                                             (line   69)
 * string constants:                      Strings.            (line    6)
 * string directive:                      String.             (line    8)
 * string directive on HPPA:              HPPA Directives.    (line  137)
-* string directive, TIC54X:              TIC54X-Directives.  (line  208)
+* string directive, TIC54X:              TIC54X-Directives.  (line  206)
 * string literals:                       Ascii.              (line    6)
 * string, copying to object file:        String.             (line    8)
 * string16 directive:                    String.             (line    8)
@@ -27123,7 +26598,7 @@ AS Index
 * string8 directive:                     String.             (line    8)
 * string8, copying to object file:       String.             (line    8)
 * struct directive:                      Struct.             (line    6)
-* struct directive, TIC54X:              TIC54X-Directives.  (line  216)
+* struct directive, TIC54X:              TIC54X-Directives.  (line  214)
 * structure debugging, COFF:             Tag.                (line    6)
 * sub-instruction ordering, D10V:        D10V-Chars.         (line   14)
 * sub-instruction ordering, D30V:        D30V-Chars.         (line   14)
@@ -27133,7 +26608,7 @@ AS Index
 * subsection directive:                  SubSection.         (line    6)
 * subsym builtins, TIC54X:               TIC54X-Macros.      (line   16)
 * subtitles for listings:                Sbttl.              (line    6)
-* subtraction, permitted arguments:      Infix Ops.          (line   49)
+* subtraction, permitted arguments:      Infix Ops.          (line   50)
 * summary of options:                    Overview.           (line    6)
 * support:                               HPPA-Dependent.     (line    6)
 * supporting files, including:           Include.            (line    6)
@@ -27144,18 +26619,18 @@ AS Index
 * symbol attributes, COFF:               COFF Symbols.       (line    6)
 * symbol attributes, SOM:                SOM Symbols.        (line    6)
 * symbol descriptor, COFF:               Desc.               (line    6)
+* symbol modifiers:                      AVR-Modifiers.      (line   12)
 * symbol modifiers <1>:                  LM32-Modifiers.     (line   12)
 * symbol modifiers <2>:                  M32C-Modifiers.     (line   11)
-* symbol modifiers <3>:                  AVR-Modifiers.      (line   12)
-* symbol modifiers:                      M68HC11-Modifiers.  (line   12)
+* symbol modifiers <3>:                  M68HC11-Modifiers.  (line   12)
 * symbol modifiers, TILE-Gx:             TILE-Gx Modifiers.  (line    6)
 * symbol modifiers, TILEPro:             TILEPro Modifiers.  (line    6)
 * symbol names:                          Symbol Names.       (line    6)
+* symbol names, $ in:                    D10V-Chars.         (line   46)
 * symbol names, $ in <1>:                D30V-Chars.         (line   70)
-* symbol names, $ in <2>:                D10V-Chars.         (line   53)
-* symbol names, $ in <3>:                Meta-Chars.         (line   10)
-* symbol names, $ in <4>:                SH-Chars.           (line   15)
-* symbol names, $ in:                    SH64-Chars.         (line   15)
+* symbol names, $ in <2>:                Meta-Chars.         (line   10)
+* symbol names, $ in <3>:                SH-Chars.           (line   15)
+* symbol names, $ in <4>:                SH64-Chars.         (line   15)
 * symbol names, local:                   Symbol Names.       (line   30)
 * symbol names, temporary:               Symbol Names.       (line   43)
 * symbol prefix character, ARC:          ARC-Chars.          (line   20)
@@ -27186,21 +26661,22 @@ AS Index
 * syntax, D30V:                          D30V-Syntax.        (line    6)
 * syntax, LM32:                          LM32-Modifiers.     (line    6)
 * syntax, M680x0:                        M68K-Syntax.        (line    8)
-* syntax, M68HC11 <1>:                   M68HC11-Syntax.     (line    6)
-* syntax, M68HC11:                       M68HC11-Modifiers.  (line    6)
+* syntax, M68HC11:                       M68HC11-Syntax.     (line    6)
+* syntax, M68HC11 <1>:                   M68HC11-Modifiers.  (line    6)
 * syntax, machine-independent:           Syntax.             (line    6)
 * syntax, RL78:                          RL78-Modifiers.     (line    6)
 * syntax, RX:                            RX-Modifiers.       (line    6)
-* syntax, SPARC:                         Sparc-Aligned-Data. (line   21)
+* syntax, SPARC:                         Sparc-Aligned-Data. (line   20)
 * syntax, TILE-Gx:                       TILE-Gx Syntax.     (line    6)
 * syntax, TILEPro:                       TILEPro Syntax.     (line    6)
 * syntax, XGATE:                         XGATE-Syntax.       (line    6)
 * syntax, Xtensa assembler:              Xtensa Syntax.      (line    6)
 * sysproc directive, i960:               Directives-i960.    (line   37)
 * tab (\t):                              Strings.            (line   27)
-* tab directive, TIC54X:                 TIC54X-Directives.  (line  247)
+* tab directive, TIC54X:                 TIC54X-Directives.  (line  245)
 * tag directive:                         Tag.                (line    6)
-* tag directive, TIC54X:                 TIC54X-Directives.  (line  250)
+* tag directive, TIC54X:                 TIC54X-Directives.  (line  214)
+* tag directive, TIC54X <1>:             TIC54X-Directives.  (line  248)
 * TBM, i386:                             i386-TBM.           (line    6)
 * TBM, x86-64:                           i386-TBM.           (line    6)
 * tdaoff pseudo-op, V850:                V850 Opcodes.       (line   81)
@@ -27252,29 +26728,29 @@ AS Index
 * tls_le directive, Nios II:             Nios II Relocations.
                                                              (line   38)
 * TMS320C6X support:                     TIC6X-Dependent.    (line    6)
-* tp register, V850:                     V850-Regs.          (line   20)
+* tp register, V850:                     V850-Regs.          (line   16)
 * transform directive:                   Transform Directive.
                                                              (line    6)
 * trusted compiler:                      f.                  (line    6)
-* turning preprocessing on and off:      Preprocessing.      (line   27)
+* turning preprocessing on and off:      Preprocessing.      (line   26)
 * type directive (COFF version):         Type.               (line   11)
 * type directive (ELF version):          Type.               (line   22)
 * type of a symbol:                      Symbol Type.        (line    6)
 * ualong directive, SH:                  SH Directives.      (line    6)
 * uaquad directive, SH:                  SH Directives.      (line    6)
 * uaword directive, SH:                  SH Directives.      (line    6)
-* ubyte directive, TIC54X:               TIC54X-Directives.  (line   36)
-* uchar directive, TIC54X:               TIC54X-Directives.  (line   36)
-* uhalf directive, TIC54X:               TIC54X-Directives.  (line  111)
-* uint directive, TIC54X:                TIC54X-Directives.  (line  111)
+* ubyte directive, TIC54X:               TIC54X-Directives.  (line   34)
+* uchar directive, TIC54X:               TIC54X-Directives.  (line   34)
+* uhalf directive, TIC54X:               TIC54X-Directives.  (line  109)
+* uint directive, TIC54X:                TIC54X-Directives.  (line  109)
 * uleb128 directive:                     Uleb128.            (line    6)
-* ulong directive, TIC54X:               TIC54X-Directives.  (line  135)
+* ulong directive, TIC54X:               TIC54X-Directives.  (line  133)
 * undefined section:                     Ld Sections.        (line   36)
-* union directive, TIC54X:               TIC54X-Directives.  (line  250)
+* union directive, TIC54X:               TIC54X-Directives.  (line  248)
 * unsegm:                                Z8000 Directives.   (line   14)
-* usect directive, TIC54X:               TIC54X-Directives.  (line  262)
-* ushort directive, TIC54X:              TIC54X-Directives.  (line  111)
-* uword directive, TIC54X:               TIC54X-Directives.  (line  111)
+* usect directive, TIC54X:               TIC54X-Directives.  (line  260)
+* ushort directive, TIC54X:              TIC54X-Directives.  (line  109)
+* uword directive, TIC54X:               TIC54X-Directives.  (line  109)
 * V850 command line options:             V850 Options.       (line    9)
 * V850 floating point (IEEE):            V850 Floating Point.
                                                              (line    6)
@@ -27288,7 +26764,7 @@ AS Index
 * val directive:                         Val.                (line    6)
 * value attribute, COFF:                 Val.                (line    6)
 * value of a symbol:                     Symbol Value.       (line    6)
-* var directive, TIC54X:                 TIC54X-Directives.  (line  272)
+* var directive, TIC54X:                 TIC54X-Directives.  (line  270)
 * VAX bitfields not supported:           VAX-no.             (line    6)
 * VAX branch improvement:                VAX-branch.         (line    6)
 * VAX command-line options ignored:      VAX-Opts.           (line    6)
@@ -27306,14 +26782,14 @@ AS Index
 * Vax-11 C compatibility:                VAX-Opts.           (line   42)
 * VAX/VMS options:                       VAX-Opts.           (line   42)
 * version directive:                     Version.            (line    6)
-* version directive, TIC54X:             TIC54X-Directives.  (line  276)
+* version directive, TIC54X:             TIC54X-Directives.  (line  274)
 * version of assembler:                  v.                  (line    6)
 * versions of symbols:                   Symver.             (line    6)
 * Virtualization instruction generation override: MIPS ASE Instruction Generation Overrides.
-                                                             (line   53)
-* visibility <1>:                        Protected.          (line    6)
-* visibility <2>:                        Internal.           (line    6)
+                                                             (line   52)
 * visibility:                            Hidden.             (line    6)
+* visibility <1>:                        Internal.           (line    6)
+* visibility <2>:                        Protected.          (line    6)
 * Visium line comment character:         Visium Characters.  (line    6)
 * Visium line separator:                 Visium Characters.  (line   14)
 * Visium options:                        Visium Options.     (line    6)
@@ -27333,54 +26809,54 @@ AS Index
 * weakref directive:                     Weakref.            (line    6)
 * whitespace:                            Whitespace.         (line    6)
 * whitespace, removed by preprocessor:   Preprocessing.      (line    7)
-* wide floating point directives, VAX:   VAX-directives.     (line   10)
-* width directive, TIC54X:               TIC54X-Directives.  (line  127)
+* wide floating point directives, VAX:   VAX-directives.     (line    9)
+* width directive, TIC54X:               TIC54X-Directives.  (line  125)
 * Width of continuation lines of disassembly output: listing.
                                                              (line   21)
 * Width of first line disassembly output: listing.           (line   16)
 * Width of source line output:           listing.            (line   28)
-* wmsg directive, TIC54X:                TIC54X-Directives.  (line   77)
+* wmsg directive, TIC54X:                TIC54X-Directives.  (line   75)
 * word aligned program counter, ARC:     ARC-Regs.           (line   44)
 * word directive:                        Word.               (line    6)
 * word directive, H8/300:                H8/300 Directives.  (line    6)
 * word directive, i386:                  i386-Float.         (line   21)
 * word directive, Nios II:               Nios II Directives. (line   13)
 * word directive, SPARC:                 Sparc-Directives.   (line   51)
-* word directive, TIC54X:                TIC54X-Directives.  (line  111)
+* word directive, TIC54X:                TIC54X-Directives.  (line  109)
 * word directive, x86-64:                i386-Float.         (line   21)
 * writing patterns in memory:            Fill.               (line    6)
 * wval:                                  Z8000 Directives.   (line   24)
 * x86 machine directives:                i386-Directives.    (line    6)
 * x86-64 arch directive:                 i386-Arch.          (line    6)
 * x86-64 att_syntax pseudo op:           i386-Variations.    (line    6)
-* x86-64 conversion instructions:        i386-Mnemonics.     (line   40)
+* x86-64 conversion instructions:        i386-Mnemonics.     (line   39)
 * x86-64 floating point:                 i386-Float.         (line    6)
 * x86-64 immediate operands:             i386-Variations.    (line   15)
 * x86-64 instruction naming:             i386-Mnemonics.     (line    9)
 * x86-64 intel_syntax pseudo op:         i386-Variations.    (line    6)
 * x86-64 jump optimization:              i386-Jumps.         (line    6)
-* x86-64 jump, call, return:             i386-Variations.    (line   41)
+* x86-64 jump, call, return:             i386-Variations.    (line   40)
 * x86-64 jump/call operands:             i386-Variations.    (line   15)
 * x86-64 memory references:              i386-Memory.        (line    6)
 * x86-64 options:                        i386-Options.       (line    6)
 * x86-64 register operands:              i386-Variations.    (line   15)
 * x86-64 registers:                      i386-Regs.          (line    6)
-* x86-64 sections:                       i386-Variations.    (line   47)
-* x86-64 size suffixes:                  i386-Variations.    (line   29)
-* x86-64 source, destination operands:   i386-Variations.    (line   22)
+* x86-64 sections:                       i386-Variations.    (line   46)
+* x86-64 size suffixes:                  i386-Variations.    (line   28)
+* x86-64 source, destination operands:   i386-Variations.    (line   21)
 * x86-64 support:                        i386-Dependent.     (line    6)
 * x86-64 syntax compatibility:           i386-Variations.    (line    6)
-* xfloat directive, TIC54X:              TIC54X-Directives.  (line   64)
-* XGATE addressing modes:                XGATE-Syntax.       (line   29)
+* xfloat directive, TIC54X:              TIC54X-Directives.  (line   62)
+* XGATE addressing modes:                XGATE-Syntax.       (line   28)
 * XGATE assembler directives:            XGATE-Directives.   (line    6)
 * XGATE floating point:                  XGATE-Float.        (line    6)
 * XGATE line comment character:          XGATE-Syntax.       (line   16)
-* XGATE line separator:                  XGATE-Syntax.       (line   26)
+* XGATE line separator:                  XGATE-Syntax.       (line   25)
 * XGATE opcodes:                         XGATE-opcodes.      (line    6)
 * XGATE options:                         XGATE-Opts.         (line    6)
 * XGATE support:                         XGATE-Dependent.    (line    6)
 * XGATE syntax:                          XGATE-Syntax.       (line    6)
-* xlong directive, TIC54X:               TIC54X-Directives.  (line  135)
+* xlong directive, TIC54X:               TIC54X-Directives.  (line  133)
 * XStormy16 comment character:           XStormy16-Chars.    (line   11)
 * XStormy16 line comment character:      XStormy16-Chars.    (line    6)
 * XStormy16 line separator:              XStormy16-Chars.    (line   14)
@@ -27403,9 +26879,9 @@ AS Index
 * Z80 options:                           Z80 Options.        (line    6)
 * Z80 registers:                         Z80-Regs.           (line    6)
 * Z80 support:                           Z80-Dependent.      (line    6)
-* Z80 Syntax:                            Z80 Options.        (line   47)
-* Z80, \:                                Z80-Chars.          (line   18)
+* Z80 Syntax:                            Z80 Options.        (line   40)
 * Z80, case sensitivity:                 Z80-Case.           (line    6)
+* Z80, \:                                Z80-Chars.          (line   18)
 * Z80-only directives:                   Z80 Directives.     (line    9)
 * Z800 addressing modes:                 Z8000-Addressing.   (line    6)
 * Z8000 directives:                      Z8000 Directives.   (line    6)
@@ -27415,7 +26891,7 @@ AS Index
 * Z8000 options:                         Z8000 Options.      (line    6)
 * Z8000 registers:                       Z8000-Regs.         (line    6)
 * Z8000 support:                         Z8000-Dependent.    (line    6)
-* zdaoff pseudo-op, V850:                V850 Opcodes.       (line   99)
+* zdaoff pseudo-op, V850:                V850 Opcodes.       (line   98)
 * zero directive:                        Zero.               (line    6)
 * zero register, V850:                   V850-Regs.          (line    7)
 * zero-terminated strings:               Asciz.              (line    6)
@@ -27423,656 +26899,656 @@ AS Index
 
 
 Tag Table:
-Node: Top739
-Node: Overview1725
-Node: Manual40121
-Node: GNU Assembler41065
-Node: Object Formats42236
-Node: Command Line42688
-Node: Input Files43775
-Node: Object45756
-Node: Errors46652
-Node: Invoking48216
-Node: a50233
-Node: alternate52144
-Node: D52316
-Node: f52549
-Node: I53057
-Node: K53601
-Node: L53905
-Node: listing54644
-Node: M56303
-Node: MD60704
-Node: no-pad-sections61144
-Node: o61519
-Node: R61987
-Node: statistics63017
-Node: traditional-format63424
-Node: v63897
-Node: W64172
-Node: Z65079
-Node: Syntax65601
-Node: Preprocessing66193
-Node: Whitespace67756
-Node: Comments68152
-Node: Symbol Intro70163
-Node: Statements71146
-Node: Constants73135
-Node: Characters73766
-Node: Strings74268
-Node: Chars76443
-Node: Numbers77296
-Node: Integers77836
-Node: Bignums78492
-Node: Flonums78848
-Node: Sections80595
-Node: Secs Background80973
-Node: Ld Sections86012
-Node: As Sections88396
-Node: Sub-Sections89306
-Node: bss92451
-Node: Symbols93401
-Node: Labels94049
-Node: Setting Symbols94780
-Node: Symbol Names95334
-Node: Dot100799
-Node: Symbol Attributes101246
-Node: Symbol Value101983
-Node: Symbol Type103028
-Node: a.out Symbols103416
-Node: Symbol Desc103678
-Node: Symbol Other103973
-Node: COFF Symbols104142
-Node: SOM Symbols104815
-Node: Expressions105257
-Node: Empty Exprs106006
-Node: Integer Exprs106353
-Node: Arguments106748
-Node: Operators107854
-Node: Prefix Ops108189
-Node: Infix Ops108517
-Node: Pseudo Ops110907
-Node: Abort116576
-Node: ABORT (COFF)116988
-Node: Align117196
-Node: Altmacro119478
-Node: Ascii120807
-Node: Asciz121116
-Node: Balign121361
-Node: Bundle directives123237
-Node: Byte126219
-Node: CFI directives126478
-Node: Comm135787
-Ref: Comm-Footnote-1137388
-Node: Data137750
-Node: Def138067
-Node: Desc138299
-Node: Dim138799
-Node: Double139056
-Node: Eject139394
-Node: Else139569
-Node: Elseif139869
-Node: End140163
-Node: Endef140378
-Node: Endfunc140555
-Node: Endif140730
-Node: Equ140991
-Node: Equiv141505
-Node: Eqv142061
-Node: Err142425
-Node: Error142736
-Node: Exitm143181
-Node: Extern143350
-Node: Fail143611
-Node: File144056
-Node: Fill145385
-Node: Float146349
-Node: Func146691
-Node: Global147281
-Node: Gnu_attribute148038
-Node: Hidden148263
-Node: hword148849
-Node: Ident149177
-Node: If149751
-Node: Incbin152810
-Node: Include153505
-Node: Int154056
-Node: Internal154437
-Node: Irp155085
-Node: Irpc155964
-Node: Lcomm156881
-Node: Lflags157629
-Node: Line157823
-Node: Linkonce158736
-Node: List159965
-Node: Ln160573
-Node: Loc160723
-Node: Loc_mark_labels162109
-Node: Local162593
-Node: Long163205
-Node: Macro163383
-Node: MRI169305
-Node: Noaltmacro169643
-Node: Nolist169812
-Node: Octa170242
-Node: Offset170579
-Node: Org170906
-Node: P2align172191
-Node: PopSection174119
-Node: Previous174627
-Node: Print176040
-Node: Protected176269
-Node: Psize176916
-Node: Purgem177600
-Node: PushSection177821
-Node: Quad178564
-Node: Reloc179020
-Node: Rept179781
-Node: Sbttl180195
-Node: Scl180560
-Node: Section180901
-Ref: Section Name Substitutions182975
-Node: Set189070
-Node: Short190152
-Node: Single190473
-Node: Size190818
-Node: Skip191490
-Node: Sleb128191812
-Node: Space192134
-Node: Stab192773
-Node: String194775
-Node: Struct195767
-Node: SubSection196490
-Node: Symver197051
-Node: Tag199442
-Node: Text199822
-Node: Title200141
-Node: Type200520
-Node: Uleb128202831
-Node: Val203153
-Node: Version203401
-Node: VTableEntry203674
-Node: VTableInherit203962
-Node: Warning204410
-Node: Weak204644
-Node: Weakref205313
-Node: Word206278
-Node: Zero208118
-Node: Deprecated208530
-Node: Object Attributes208765
-Node: GNU Object Attributes210485
-Node: Defining New Object Attributes214025
-Node: Machine Dependencies214822
-Node: AArch64-Dependent218833
-Node: AArch64 Options219315
-Node: AArch64 Extensions221950
-Node: AArch64 Syntax224692
-Node: AArch64-Chars224992
-Node: AArch64-Regs225478
-Node: AArch64-Relocations225772
-Node: AArch64 Floating Point226846
-Node: AArch64 Directives227071
-Node: AArch64 Opcodes229970
-Node: AArch64 Mapping Symbols230648
-Node: Alpha-Dependent231030
-Node: Alpha Notes231470
-Node: Alpha Options231751
-Node: Alpha Syntax234226
-Node: Alpha-Chars234695
-Node: Alpha-Regs235107
-Node: Alpha-Relocs235494
-Node: Alpha Floating Point241752
-Node: Alpha Directives241974
-Node: Alpha Opcodes247497
-Node: ARC-Dependent247792
-Node: ARC Options248237
-Node: ARC Syntax251345
-Node: ARC-Chars251573
-Node: ARC-Regs252696
-Node: ARC Directives255466
-Node: ARC Modifiers263479
-Node: ARC Symbols264490
-Node: ARC Opcodes265051
-Node: ARM-Dependent265297
-Node: ARM Options265762
-Node: ARM Syntax275855
-Node: ARM-Instruction-Set276223
-Node: ARM-Chars277443
-Node: ARM-Regs278154
-Node: ARM-Relocations278363
-Node: ARM-Neon-Alignment280048
-Node: ARM Floating Point280512
-Node: ARM Directives280711
-Ref: arm_fnend285159
-Ref: arm_fnstart285483
-Ref: arm_pad287891
-Ref: arm_save288493
-Ref: arm_setfp289194
-Node: ARM Opcodes292486
-Node: ARM Mapping Symbols294574
-Node: ARM Unwinding Tutorial295384
-Node: AVR-Dependent301586
-Node: AVR Options301876
-Node: AVR Syntax307919
-Node: AVR-Chars308206
-Node: AVR-Regs308765
-Node: AVR-Modifiers309344
-Node: AVR Opcodes311404
-Node: Blackfin-Dependent316650
-Node: Blackfin Options316962
-Node: Blackfin Syntax317936
-Node: Blackfin Directives324143
-Node: CR16-Dependent324889
-Node: CR16 Operand Qualifiers325189
-Node: CR16 Syntax327918
-Node: CR16-Chars328104
-Node: CRIS-Dependent328641
-Node: CRIS-Opts328987
-Ref: march-option330673
-Node: CRIS-Expand332490
-Node: CRIS-Symbols333673
-Node: CRIS-Syntax334842
-Node: CRIS-Chars335178
-Node: CRIS-Pic335729
-Ref: crispic335925
-Node: CRIS-Regs339465
-Node: CRIS-Pseudos339882
-Ref: crisnous340658
-Node: D10V-Dependent341940
-Node: D10V-Opts342291
-Node: D10V-Syntax343253
-Node: D10V-Size343782
-Node: D10V-Subs344755
-Node: D10V-Chars345790
-Node: D10V-Regs347702
-Node: D10V-Addressing348747
-Node: D10V-Word349433
-Node: D10V-Float349948
-Node: D10V-Opcodes350259
-Node: D30V-Dependent350652
-Node: D30V-Opts351009
-Node: D30V-Syntax351686
-Node: D30V-Size352220
-Node: D30V-Subs353193
-Node: D30V-Chars354230
-Node: D30V-Guarded356838
-Node: D30V-Regs357520
-Node: D30V-Addressing358661
-Node: D30V-Float359331
-Node: D30V-Opcodes359644
-Node: Epiphany-Dependent360039
-Node: Epiphany Options360327
-Node: Epiphany Syntax360726
-Node: Epiphany-Chars360927
-Node: H8/300-Dependent361481
-Node: H8/300 Options361897
-Node: H8/300 Syntax362338
-Node: H8/300-Chars362639
-Node: H8/300-Regs362938
-Node: H8/300-Addressing363857
-Node: H8/300 Floating Point364898
-Node: H8/300 Directives365225
-Node: H8/300 Opcodes366353
-Node: HPPA-Dependent374675
-Node: HPPA Notes375110
-Node: HPPA Options375868
-Node: HPPA Syntax376063
-Node: HPPA Floating Point377333
-Node: HPPA Directives377539
-Node: HPPA Opcodes386225
-Node: ESA/390-Dependent386484
-Node: ESA/390 Notes386944
-Node: ESA/390 Options387735
-Node: ESA/390 Syntax387945
-Node: ESA/390 Floating Point390118
-Node: ESA/390 Directives390397
-Node: ESA/390 Opcodes393686
-Node: i386-Dependent393948
-Node: i386-Options395278
-Node: i386-Directives403887
-Node: i386-Syntax404625
-Node: i386-Variations404930
-Node: i386-Chars407471
-Node: i386-Mnemonics408200
-Node: i386-Regs411564
-Node: i386-Prefixes414402
-Node: i386-Memory417162
-Node: i386-Jumps420099
-Node: i386-Float421220
-Node: i386-SIMD423049
-Node: i386-LWP424158
-Node: i386-BMI424992
-Node: i386-TBM425370
-Node: i386-16bit425900
-Node: i386-Arch427971
-Node: i386-Bugs431151
-Node: i386-Notes431905
-Node: i860-Dependent432763
-Node: Notes-i860433203
-Node: Options-i860434108
-Node: Directives-i860435471
-Node: Opcodes for i860436540
-Node: Syntax of i860438730
-Node: i860-Chars438914
-Node: i960-Dependent439473
-Node: Options-i960439920
-Node: Floating Point-i960443805
-Node: Directives-i960444073
-Node: Opcodes for i960446107
-Node: callj-i960446747
-Node: Compare-and-branch-i960447236
-Node: Syntax of i960449140
-Node: i960-Chars449340
-Node: IA-64-Dependent449883
-Node: IA-64 Options450184
-Node: IA-64 Syntax453335
-Node: IA-64-Chars453741
-Node: IA-64-Regs453971
-Node: IA-64-Bits454897
-Node: IA-64-Relocs455427
-Node: IA-64 Opcodes455899
-Node: IP2K-Dependent456171
-Node: IP2K-Opts456443
-Node: IP2K-Syntax456943
-Node: IP2K-Chars457117
-Node: LM32-Dependent457660
-Node: LM32 Options457955
-Node: LM32 Syntax458589
-Node: LM32-Regs458885
-Node: LM32-Modifiers459844
-Node: LM32-Chars461219
-Node: LM32 Opcodes461727
-Node: M32C-Dependent462031
-Node: M32C-Opts462540
-Node: M32C-Syntax462960
-Node: M32C-Modifiers463195
-Node: M32C-Chars464984
-Node: M32R-Dependent465550
-Node: M32R-Opts465871
-Node: M32R-Directives470034
-Node: M32R-Warnings474009
-Node: M68K-Dependent477015
-Node: M68K-Opts477482
-Node: M68K-Syntax484855
-Node: M68K-Moto-Syntax486695
-Node: M68K-Float489285
-Node: M68K-Directives489805
-Node: M68K-opcodes491133
-Node: M68K-Branch491359
-Node: M68K-Chars495557
-Node: M68HC11-Dependent496420
-Node: M68HC11-Opts496951
-Node: M68HC11-Syntax501256
-Node: M68HC11-Modifiers504047
-Node: M68HC11-Directives505875
-Node: M68HC11-Float507251
-Node: M68HC11-opcodes507779
-Node: M68HC11-Branch507961
-Node: Meta-Dependent510410
-Node: Meta Options510695
-Node: Meta Syntax511357
-Node: Meta-Chars511569
-Node: Meta-Regs511869
-Node: MicroBlaze-Dependent512145
-Node: MicroBlaze Directives512834
-Node: MicroBlaze Syntax514217
-Node: MicroBlaze-Chars514449
-Node: MIPS-Dependent515001
-Node: MIPS Options516438
-Node: MIPS Macros533133
-Ref: MIPS Macros-Footnote-1535847
-Node: MIPS Symbol Sizes535990
-Node: MIPS Small Data537662
-Node: MIPS ISA539825
-Node: MIPS assembly options541610
-Node: MIPS autoextend542743
-Node: MIPS insn543477
-Node: MIPS FP ABIs544757
-Node: MIPS FP ABI History545209
-Node: MIPS FP ABI Variants545969
-Node: MIPS FP ABI Selection548523
-Node: MIPS FP ABI Compatibility549587
-Node: MIPS NaN Encodings550397
-Node: MIPS Option Stack552360
-Node: MIPS ASE Instruction Generation Overrides553145
-Node: MIPS Floating-Point556160
-Node: MIPS Syntax557066
-Node: MIPS-Chars557328
-Node: MMIX-Dependent557870
-Node: MMIX-Opts558250
-Node: MMIX-Expand561854
-Node: MMIX-Syntax563169
-Ref: mmixsite563526
-Node: MMIX-Chars564367
-Node: MMIX-Symbols565241
-Node: MMIX-Regs567309
-Node: MMIX-Pseudos568334
-Ref: MMIX-loc568475
-Ref: MMIX-local569555
-Ref: MMIX-is570087
-Ref: MMIX-greg570358
-Ref: GREG-base571277
-Ref: MMIX-byte572594
-Ref: MMIX-constants573065
-Ref: MMIX-prefix573711
-Ref: MMIX-spec574085
-Node: MMIX-mmixal574419
-Node: MSP430-Dependent577917
-Node: MSP430 Options578386
-Node: MSP430 Syntax581565
-Node: MSP430-Macros581881
-Node: MSP430-Chars582612
-Node: MSP430-Regs583327
-Node: MSP430-Ext583887
-Node: MSP430 Floating Point585708
-Node: MSP430 Directives585932
-Node: MSP430 Opcodes587253
-Node: MSP430 Profiling Capability587648
-Node: NDS32-Dependent589977
-Node: NDS32 Options590589
-Node: NDS32 Syntax592490
-Node: NDS32-Chars592758
-Node: NDS32-Regs593225
-Node: NDS32-Ops594079
-Node: NiosII-Dependent597674
-Node: Nios II Options598093
-Node: Nios II Syntax599331
-Node: Nios II Chars599537
-Node: Nios II Relocations599728
-Node: Nios II Directives601300
-Node: Nios II Opcodes602863
-Node: NS32K-Dependent603138
-Node: NS32K Syntax603365
-Node: NS32K-Chars603514
-Node: PDP-11-Dependent604254
-Node: PDP-11-Options604644
-Node: PDP-11-Pseudos609715
-Node: PDP-11-Syntax610060
-Node: PDP-11-Mnemonics610892
-Node: PDP-11-Synthetic611194
-Node: PJ-Dependent611412
-Node: PJ Options611675
-Node: PJ Syntax611970
-Node: PJ-Chars612135
-Node: PPC-Dependent612684
-Node: PowerPC-Opts613017
-Node: PowerPC-Pseudo616644
-Node: PowerPC-Syntax617266
-Node: PowerPC-Chars617456
-Node: RL78-Dependent618207
-Node: RL78-Opts618609
-Node: RL78-Modifiers619444
-Node: RL78-Directives620220
-Node: RL78-Syntax620825
-Node: RL78-Chars621021
-Node: RISC-V-Dependent621577
-Node: RISC-V-Opts621799
-Node: RX-Dependent622333
-Node: RX-Opts622766
-Node: RX-Modifiers627014
-Node: RX-Directives628118
-Node: RX-Float628858
-Node: RX-Syntax629499
-Node: RX-Chars629678
-Node: S/390-Dependent630230
-Node: s390 Options631050
-Node: s390 Characters633165
-Node: s390 Syntax633686
-Node: s390 Register634587
-Node: s390 Mnemonics635400
-Node: s390 Operands638420
-Node: s390 Formats641039
-Node: s390 Aliases648910
-Node: s390 Operand Modifier652807
-Node: s390 Instruction Marker656608
-Node: s390 Literal Pool Entries657624
-Node: s390 Directives659547
-Node: s390 Floating Point664990
-Node: SCORE-Dependent665436
-Node: SCORE-Opts665738
-Node: SCORE-Pseudo667026
-Node: SCORE-Syntax669103
-Node: SCORE-Chars669285
-Node: SH-Dependent669843
-Node: SH Options670254
-Node: SH Syntax671309
-Node: SH-Chars671582
-Node: SH-Regs672125
-Node: SH-Addressing672739
-Node: SH Floating Point673648
-Node: SH Directives674742
-Node: SH Opcodes675143
-Node: SH64-Dependent679465
-Node: SH64 Options679827
-Node: SH64 Syntax681624
-Node: SH64-Chars681907
-Node: SH64-Regs682456
-Node: SH64-Addressing683552
-Node: SH64 Directives684735
-Node: SH64 Opcodes685720
-Node: Sparc-Dependent686436
-Node: Sparc-Opts686847
-Node: Sparc-Aligned-Data692187
-Node: Sparc-Syntax693019
-Node: Sparc-Chars693593
-Node: Sparc-Regs694156
-Node: Sparc-Constants700004
-Node: Sparc-Relocs704764
-Node: Sparc-Size-Translations709900
-Node: Sparc-Float711549
-Node: Sparc-Directives711744
-Node: TIC54X-Dependent713704
-Node: TIC54X-Opts714467
-Node: TIC54X-Block715510
-Node: TIC54X-Env715870
-Node: TIC54X-Constants716218
-Node: TIC54X-Subsyms716620
-Node: TIC54X-Locals718529
-Node: TIC54X-Builtins719273
-Node: TIC54X-Ext721744
-Node: TIC54X-Directives722315
-Node: TIC54X-Macros733216
-Node: TIC54X-MMRegs735327
-Node: TIC54X-Syntax735565
-Node: TIC54X-Chars735755
-Node: TIC6X-Dependent736446
-Node: TIC6X Options736749
-Node: TIC6X Syntax738750
-Node: TIC6X Directives739852
-Node: TILE-Gx-Dependent742137
-Node: TILE-Gx Options742447
-Node: TILE-Gx Syntax742797
-Node: TILE-Gx Opcodes745031
-Node: TILE-Gx Registers745319
-Node: TILE-Gx Modifiers746091
-Node: TILE-Gx Directives751063
-Node: TILEPro-Dependent751967
-Node: TILEPro Options752276
-Node: TILEPro Syntax752460
-Node: TILEPro Opcodes754694
-Node: TILEPro Registers754985
-Node: TILEPro Modifiers755755
-Node: TILEPro Directives760520
-Node: V850-Dependent761424
-Node: V850 Options761820
-Node: V850 Syntax766100
-Node: V850-Chars766340
-Node: V850-Regs766884
-Node: V850 Floating Point768452
-Node: V850 Directives768658
-Node: V850 Opcodes770725
-Node: Vax-Dependent776617
-Node: VAX-Opts777201
-Node: VAX-float780936
-Node: VAX-directives781568
-Node: VAX-opcodes782429
-Node: VAX-branch782818
-Node: VAX-operands785325
-Node: VAX-no786088
-Node: VAX-Syntax786344
-Node: VAX-Chars786510
-Node: Visium-Dependent787064
-Node: Visium Options787371
-Node: Visium Syntax787837
-Node: Visium Characters788082
-Node: Visium Registers788663
-Node: Visium Opcodes788935
-Node: XGATE-Dependent789361
-Node: XGATE-Opts789783
-Node: XGATE-Syntax790774
-Node: XGATE-Directives792853
-Node: XGATE-Float793092
-Node: XGATE-opcodes793589
-Node: XSTORMY16-Dependent793701
-Node: XStormy16 Syntax794047
-Node: XStormy16-Chars794237
-Node: XStormy16 Directives794850
-Node: XStormy16 Opcodes795505
-Node: Xtensa-Dependent796561
-Node: Xtensa Options797295
-Node: Xtensa Syntax801566
-Node: Xtensa Opcodes803710
-Node: Xtensa Registers805504
-Node: Xtensa Optimizations806137
-Node: Density Instructions806589
-Node: Xtensa Automatic Alignment807691
-Node: Xtensa Relaxation810138
-Node: Xtensa Branch Relaxation811103
-Node: Xtensa Call Relaxation812475
-Node: Xtensa Jump Relaxation814256
-Node: Xtensa Immediate Relaxation816356
-Node: Xtensa Directives818930
-Node: Schedule Directive820639
-Node: Longcalls Directive820979
-Node: Transform Directive821523
-Node: Literal Directive822265
-Ref: Literal Directive-Footnote-1825804
-Node: Literal Position Directive825946
-Node: Literal Prefix Directive827645
-Node: Absolute Literals Directive828543
-Node: Z80-Dependent829850
-Node: Z80 Options830238
-Node: Z80 Syntax831661
-Node: Z80-Chars832333
-Node: Z80-Regs833183
-Node: Z80-Case833535
-Node: Z80 Floating Point833980
-Node: Z80 Directives834174
-Node: Z80 Opcodes835799
-Node: Z8000-Dependent837143
-Node: Z8000 Options838082
-Node: Z8000 Syntax838299
-Node: Z8000-Chars838589
-Node: Z8000-Regs839071
-Node: Z8000-Addressing839861
-Node: Z8000 Directives840978
-Node: Z8000 Opcodes842587
-Node: Reporting Bugs852529
-Node: Bug Criteria853255
-Node: Bug Reporting854022
-Node: Acknowledgements860671
-Ref: Acknowledgements-Footnote-1865636
-Node: GNU Free Documentation License865662
-Node: AS Index890831
+Node: Top736
+Node: Overview1721
+Node: Manual40079
+Node: GNU Assembler41023
+Node: Object Formats42194
+Node: Command Line42646
+Node: Input Files43732
+Node: Object45713
+Node: Errors46609
+Node: Invoking48171
+Node: a50177
+Node: alternate52088
+Node: D52260
+Node: f52493
+Node: I53002
+Node: K53546
+Node: L53850
+Node: listing54589
+Node: M56248
+Node: MD60647
+Node: no-pad-sections61087
+Node: o61462
+Node: R61930
+Node: statistics62960
+Node: traditional-format63367
+Node: v63840
+Node: W64115
+Node: Z65022
+Node: Syntax65544
+Node: Preprocessing66136
+Node: Whitespace67700
+Node: Comments68096
+Node: Symbol Intro70107
+Node: Statements71092
+Node: Constants73080
+Node: Characters73711
+Node: Strings74213
+Node: Chars76387
+Node: Numbers77239
+Node: Integers77779
+Node: Bignums78435
+Node: Flonums78791
+Node: Sections80535
+Node: Secs Background80913
+Node: Ld Sections85946
+Node: As Sections88330
+Node: Sub-Sections89240
+Node: bss92388
+Node: Symbols93338
+Node: Labels93986
+Node: Setting Symbols94717
+Node: Symbol Names95271
+Node: Dot100738
+Node: Symbol Attributes101185
+Node: Symbol Value101918
+Node: Symbol Type102963
+Node: a.out Symbols103351
+Node: Symbol Desc103613
+Node: Symbol Other103909
+Node: COFF Symbols104078
+Node: SOM Symbols104751
+Node: Expressions105193
+Node: Empty Exprs105942
+Node: Integer Exprs106289
+Node: Arguments106684
+Node: Operators107790
+Node: Prefix Ops108125
+Node: Infix Ops108452
+Node: Pseudo Ops110846
+Node: Abort116492
+Node: ABORT (COFF)116905
+Node: Align117113
+Node: Altmacro119395
+Node: Ascii120726
+Node: Asciz121035
+Node: Balign121280
+Node: Bundle directives123156
+Node: Byte126137
+Node: CFI directives126396
+Node: Comm135709
+Ref: Comm-Footnote-1137309
+Node: Data137671
+Node: Def137988
+Node: Desc138220
+Node: Dim138720
+Node: Double138977
+Node: Eject139315
+Node: Else139490
+Node: Elseif139790
+Node: End140084
+Node: Endef140299
+Node: Endfunc140476
+Node: Endif140651
+Node: Equ140912
+Node: Equiv141426
+Node: Eqv141982
+Node: Err142346
+Node: Error142657
+Node: Exitm143102
+Node: Extern143271
+Node: Fail143532
+Node: File143977
+Node: Fill145306
+Node: Float146270
+Node: Func146612
+Node: Global147202
+Node: Gnu_attribute147959
+Node: Hidden148184
+Node: hword148770
+Node: Ident149098
+Node: If149672
+Node: Incbin152733
+Node: Include153427
+Node: Int153978
+Node: Internal154359
+Node: Irp155006
+Node: Irpc155885
+Node: Lcomm156801
+Node: Lflags157548
+Node: Line157742
+Node: Linkonce158658
+Node: List159887
+Node: Ln160494
+Node: Loc160644
+Node: Loc_mark_labels162029
+Node: Local162513
+Node: Long163125
+Node: Macro163303
+Node: MRI169234
+Node: Noaltmacro169572
+Node: Nolist169741
+Node: Octa170170
+Node: Offset170507
+Node: Org170834
+Node: P2align172119
+Node: PopSection174047
+Node: Previous174555
+Node: Print175967
+Node: Protected176196
+Node: Psize176843
+Node: Purgem177527
+Node: PushSection177748
+Node: Quad178492
+Node: Reloc178946
+Node: Rept179707
+Node: Sbttl180121
+Node: Scl180486
+Node: Section180827
+Ref: Section Name Substitutions182885
+Node: Set188954
+Node: Short190036
+Node: Single190357
+Node: Size190702
+Node: Skip191368
+Node: Sleb128191690
+Node: Space192012
+Node: Stab192651
+Node: String194654
+Node: Struct195646
+Node: SubSection196369
+Node: Symver196930
+Node: Tag199324
+Node: Text199704
+Node: Title200024
+Node: Type200403
+Node: Uleb128202707
+Node: Val203029
+Node: Version203277
+Node: VTableEntry203549
+Node: VTableInherit203837
+Node: Warning204285
+Node: Weak204519
+Node: Weakref205188
+Node: Word206153
+Node: Zero207993
+Node: Deprecated208405
+Node: Object Attributes208639
+Node: GNU Object Attributes210359
+Node: Defining New Object Attributes213884
+Node: Machine Dependencies214676
+Node: AArch64-Dependent218633
+Node: AArch64 Options219115
+Node: AArch64 Extensions221749
+Node: AArch64 Syntax224460
+Node: AArch64-Chars224760
+Node: AArch64-Regs225246
+Node: AArch64-Relocations225540
+Node: AArch64 Floating Point226614
+Node: AArch64 Directives226839
+Node: AArch64 Opcodes229725
+Node: AArch64 Mapping Symbols230402
+Node: Alpha-Dependent230783
+Node: Alpha Notes231223
+Node: Alpha Options231504
+Node: Alpha Syntax233979
+Node: Alpha-Chars234448
+Node: Alpha-Regs234860
+Node: Alpha-Relocs235247
+Node: Alpha Floating Point241493
+Node: Alpha Directives241715
+Node: Alpha Opcodes247242
+Node: ARC-Dependent247537
+Node: ARC Options247982
+Node: ARC Syntax251108
+Node: ARC-Chars251336
+Node: ARC-Regs252458
+Node: ARC Directives255226
+Node: ARC Modifiers263276
+Node: ARC Symbols264286
+Node: ARC Opcodes264840
+Node: ARM-Dependent265086
+Node: ARM Options265551
+Node: ARM Syntax275645
+Node: ARM-Instruction-Set276013
+Node: ARM-Chars277228
+Node: ARM-Regs277939
+Node: ARM-Relocations278148
+Node: ARM-Neon-Alignment279834
+Node: ARM Floating Point280299
+Node: ARM Directives280498
+Ref: arm_fnend284938
+Ref: arm_fnstart285257
+Ref: arm_pad287664
+Ref: arm_save288266
+Ref: arm_setfp288967
+Node: ARM Opcodes292253
+Node: ARM Mapping Symbols294340
+Node: ARM Unwinding Tutorial295149
+Node: AVR-Dependent301349
+Node: AVR Options301639
+Node: AVR Syntax307676
+Node: AVR-Chars307963
+Node: AVR-Regs308522
+Node: AVR-Modifiers309103
+Node: AVR Opcodes311167
+Node: Blackfin-Dependent316413
+Node: Blackfin Options316725
+Node: Blackfin Syntax317699
+Node: Blackfin Directives323908
+Node: CR16-Dependent324649
+Node: CR16 Operand Qualifiers324949
+Node: CR16 Syntax327658
+Node: CR16-Chars327844
+Node: CRIS-Dependent328381
+Node: CRIS-Opts328727
+Ref: march-option330412
+Node: CRIS-Expand332231
+Node: CRIS-Symbols333414
+Node: CRIS-Syntax334585
+Node: CRIS-Chars334921
+Node: CRIS-Pic335472
+Ref: crispic335667
+Node: CRIS-Regs339216
+Node: CRIS-Pseudos339633
+Ref: crisnous340410
+Node: D10V-Dependent341698
+Node: D10V-Opts342049
+Node: D10V-Syntax343018
+Node: D10V-Size343547
+Node: D10V-Subs344518
+Node: D10V-Chars345553
+Node: D10V-Regs347364
+Node: D10V-Addressing348391
+Node: D10V-Word349069
+Node: D10V-Float349584
+Node: D10V-Opcodes349895
+Node: D30V-Dependent350288
+Node: D30V-Opts350645
+Node: D30V-Syntax351323
+Node: D30V-Size351857
+Node: D30V-Subs352830
+Node: D30V-Chars353867
+Node: D30V-Guarded356477
+Node: D30V-Regs357154
+Node: D30V-Addressing358273
+Node: D30V-Float358935
+Node: D30V-Opcodes359248
+Node: Epiphany-Dependent359643
+Node: Epiphany Options359931
+Node: Epiphany Syntax360330
+Node: Epiphany-Chars360531
+Node: H8/300-Dependent361085
+Node: H8/300 Options361501
+Node: H8/300 Syntax361941
+Node: H8/300-Chars362242
+Node: H8/300-Regs362541
+Node: H8/300-Addressing363460
+Node: H8/300 Floating Point364484
+Node: H8/300 Directives364811
+Node: H8/300 Opcodes365939
+Node: HPPA-Dependent374258
+Node: HPPA Notes374693
+Node: HPPA Options375451
+Node: HPPA Syntax375646
+Node: HPPA Floating Point376916
+Node: HPPA Directives377122
+Node: HPPA Opcodes385804
+Node: ESA/390-Dependent386063
+Node: ESA/390 Notes386523
+Node: ESA/390 Options387314
+Node: ESA/390 Syntax387524
+Node: ESA/390 Floating Point389697
+Node: ESA/390 Directives389976
+Node: ESA/390 Opcodes393266
+Node: i386-Dependent393528
+Node: i386-Options394855
+Node: i386-Directives403463
+Node: i386-Syntax404200
+Node: i386-Variations404505
+Node: i386-Chars407042
+Node: i386-Mnemonics407771
+Node: i386-Regs411134
+Node: i386-Prefixes413964
+Node: i386-Memory416724
+Node: i386-Jumps419663
+Node: i386-Float420786
+Node: i386-SIMD422616
+Node: i386-LWP423725
+Node: i386-BMI424559
+Node: i386-TBM424937
+Node: i386-16bit425467
+Node: i386-Arch427538
+Node: i386-Bugs430716
+Node: i386-Notes431467
+Node: i860-Dependent432326
+Node: Notes-i860432766
+Node: Options-i860433673
+Node: Directives-i860435033
+Node: Opcodes for i860436105
+Node: Syntax of i860438294
+Node: i860-Chars438478
+Node: i960-Dependent439037
+Node: Options-i960439484
+Node: Floating Point-i960443370
+Node: Directives-i960443638
+Node: Opcodes for i960445672
+Node: callj-i960446312
+Node: Compare-and-branch-i960446802
+Node: Syntax of i960448706
+Node: i960-Chars448906
+Node: IA-64-Dependent449449
+Node: IA-64 Options449750
+Node: IA-64 Syntax452901
+Node: IA-64-Chars453307
+Node: IA-64-Regs453537
+Node: IA-64-Bits454463
+Node: IA-64-Relocs454993
+Node: IA-64 Opcodes455464
+Node: IP2K-Dependent455736
+Node: IP2K-Opts456008
+Node: IP2K-Syntax456507
+Node: IP2K-Chars456681
+Node: LM32-Dependent457224
+Node: LM32 Options457519
+Node: LM32 Syntax458152
+Node: LM32-Regs458448
+Node: LM32-Modifiers459389
+Node: LM32-Chars460769
+Node: LM32 Opcodes461277
+Node: M32C-Dependent461581
+Node: M32C-Opts462087
+Node: M32C-Syntax462506
+Node: M32C-Modifiers462741
+Node: M32C-Chars464533
+Node: M32R-Dependent465099
+Node: M32R-Opts465420
+Node: M32R-Directives469582
+Node: M32R-Warnings473556
+Node: M68K-Dependent476561
+Node: M68K-Opts477028
+Node: M68K-Syntax484450
+Node: M68K-Moto-Syntax486290
+Node: M68K-Float488874
+Node: M68K-Directives489394
+Node: M68K-opcodes490721
+Node: M68K-Branch490947
+Node: M68K-Chars495142
+Node: M68HC11-Dependent496005
+Node: M68HC11-Opts496536
+Node: M68HC11-Syntax500848
+Node: M68HC11-Modifiers503642
+Node: M68HC11-Directives505469
+Node: M68HC11-Float506843
+Node: M68HC11-opcodes507371
+Node: M68HC11-Branch507553
+Node: Meta-Dependent510003
+Node: Meta Options510288
+Node: Meta Syntax510950
+Node: Meta-Chars511162
+Node: Meta-Regs511462
+Node: MicroBlaze-Dependent511738
+Node: MicroBlaze Directives512425
+Node: MicroBlaze Syntax513816
+Node: MicroBlaze-Chars514048
+Node: MIPS-Dependent514600
+Node: MIPS Options516034
+Node: MIPS Macros532723
+Ref: MIPS Macros-Footnote-1535437
+Node: MIPS Symbol Sizes535580
+Node: MIPS Small Data537252
+Node: MIPS ISA539416
+Node: MIPS assembly options541200
+Node: MIPS autoextend542333
+Node: MIPS insn543067
+Node: MIPS FP ABIs544348
+Node: MIPS FP ABI History544800
+Node: MIPS FP ABI Variants545560
+Node: MIPS FP ABI Selection548113
+Node: MIPS FP ABI Compatibility549176
+Node: MIPS NaN Encodings549986
+Node: MIPS Option Stack551949
+Node: MIPS ASE Instruction Generation Overrides552734
+Node: MIPS Floating-Point555747
+Node: MIPS Syntax556653
+Node: MIPS-Chars556915
+Node: MMIX-Dependent557457
+Node: MMIX-Opts557837
+Node: MMIX-Expand561442
+Node: MMIX-Syntax562754
+Ref: mmixsite563110
+Node: MMIX-Chars563952
+Node: MMIX-Symbols564825
+Node: MMIX-Regs566896
+Node: MMIX-Pseudos567921
+Ref: MMIX-loc568063
+Ref: MMIX-local569144
+Ref: MMIX-is569677
+Ref: MMIX-greg569949
+Ref: GREG-base570867
+Ref: MMIX-byte572186
+Ref: MMIX-constants572658
+Ref: MMIX-prefix573300
+Ref: MMIX-spec573675
+Node: MMIX-mmixal574009
+Node: MSP430-Dependent577504
+Node: MSP430 Options577973
+Node: MSP430 Syntax581153
+Node: MSP430-Macros581469
+Node: MSP430-Chars582199
+Node: MSP430-Regs582914
+Node: MSP430-Ext583475
+Node: MSP430 Floating Point585294
+Node: MSP430 Directives585518
+Node: MSP430 Opcodes586833
+Node: MSP430 Profiling Capability587228
+Node: NDS32-Dependent589556
+Node: NDS32 Options590165
+Node: NDS32 Syntax592048
+Node: NDS32-Chars592316
+Node: NDS32-Regs592783
+Node: NDS32-Ops593637
+Node: NiosII-Dependent597234
+Node: Nios II Options597653
+Node: Nios II Syntax598885
+Node: Nios II Chars599091
+Node: Nios II Relocations599282
+Node: Nios II Directives600853
+Node: Nios II Opcodes602415
+Node: NS32K-Dependent602690
+Node: NS32K Syntax602917
+Node: NS32K-Chars603066
+Node: PDP-11-Dependent603806
+Node: PDP-11-Options604196
+Node: PDP-11-Pseudos609255
+Node: PDP-11-Syntax609600
+Node: PDP-11-Mnemonics610432
+Node: PDP-11-Synthetic610734
+Node: PJ-Dependent610952
+Node: PJ Options611215
+Node: PJ Syntax611510
+Node: PJ-Chars611675
+Node: PPC-Dependent612224
+Node: PowerPC-Opts612557
+Node: PowerPC-Pseudo616183
+Node: PowerPC-Syntax616804
+Node: PowerPC-Chars616994
+Node: RL78-Dependent617745
+Node: RL78-Opts618147
+Node: RL78-Modifiers618981
+Node: RL78-Directives619760
+Node: RL78-Syntax620364
+Node: RL78-Chars620560
+Node: RISC-V-Dependent621116
+Node: RISC-V-Opts621338
+Node: RX-Dependent621987
+Node: RX-Opts622420
+Node: RX-Modifiers626663
+Node: RX-Directives627766
+Node: RX-Float628505
+Node: RX-Syntax629140
+Node: RX-Chars629319
+Node: S/390-Dependent629871
+Node: s390 Options630690
+Node: s390 Characters632807
+Node: s390 Syntax633328
+Node: s390 Register634230
+Node: s390 Mnemonics635046
+Node: s390 Operands638068
+Node: s390 Formats640698
+Node: s390 Aliases648545
+Node: s390 Operand Modifier652510
+Node: s390 Instruction Marker656313
+Node: s390 Literal Pool Entries657327
+Node: s390 Directives659260
+Node: s390 Floating Point664712
+Node: SCORE-Dependent665160
+Node: SCORE-Opts665462
+Node: SCORE-Pseudo666749
+Node: SCORE-Syntax668831
+Node: SCORE-Chars669013
+Node: SH-Dependent669571
+Node: SH Options669982
+Node: SH Syntax671033
+Node: SH-Chars671306
+Node: SH-Regs671849
+Node: SH-Addressing672463
+Node: SH Floating Point673371
+Node: SH Directives674468
+Node: SH Opcodes674869
+Node: SH64-Dependent679190
+Node: SH64 Options679552
+Node: SH64 Syntax681343
+Node: SH64-Chars681626
+Node: SH64-Regs682175
+Node: SH64-Addressing683271
+Node: SH64 Directives684456
+Node: SH64 Opcodes685440
+Node: Sparc-Dependent686155
+Node: Sparc-Opts686566
+Node: Sparc-Aligned-Data691906
+Node: Sparc-Syntax692738
+Node: Sparc-Chars693312
+Node: Sparc-Regs693875
+Node: Sparc-Constants699723
+Node: Sparc-Relocs704483
+Node: Sparc-Size-Translations709601
+Node: Sparc-Float711251
+Node: Sparc-Directives711446
+Node: TIC54X-Dependent713408
+Node: TIC54X-Opts714171
+Node: TIC54X-Block715212
+Node: TIC54X-Env715572
+Node: TIC54X-Constants715920
+Node: TIC54X-Subsyms716317
+Node: TIC54X-Locals718221
+Node: TIC54X-Builtins718961
+Node: TIC54X-Ext721375
+Node: TIC54X-Directives721946
+Node: TIC54X-Macros732854
+Node: TIC54X-MMRegs734941
+Node: TIC54X-Syntax735178
+Node: TIC54X-Chars735368
+Node: TIC6X-Dependent736059
+Node: TIC6X Options736362
+Node: TIC6X Syntax738361
+Node: TIC6X Directives739464
+Node: TILE-Gx-Dependent741749
+Node: TILE-Gx Options742059
+Node: TILE-Gx Syntax742408
+Node: TILE-Gx Opcodes744644
+Node: TILE-Gx Registers744932
+Node: TILE-Gx Modifiers745703
+Node: TILE-Gx Directives750701
+Node: TILEPro-Dependent751604
+Node: TILEPro Options751913
+Node: TILEPro Syntax752097
+Node: TILEPro Opcodes754333
+Node: TILEPro Registers754624
+Node: TILEPro Modifiers755394
+Node: TILEPro Directives760182
+Node: V850-Dependent761085
+Node: V850 Options761481
+Node: V850 Syntax765759
+Node: V850-Chars765999
+Node: V850-Regs766543
+Node: V850 Floating Point768053
+Node: V850 Directives768259
+Node: V850 Opcodes770325
+Node: Vax-Dependent776204
+Node: VAX-Opts776788
+Node: VAX-float780509
+Node: VAX-directives781142
+Node: VAX-opcodes782002
+Node: VAX-branch782391
+Node: VAX-operands784895
+Node: VAX-no785658
+Node: VAX-Syntax785914
+Node: VAX-Chars786080
+Node: Visium-Dependent786634
+Node: Visium Options786941
+Node: Visium Syntax787407
+Node: Visium Characters787652
+Node: Visium Registers788233
+Node: Visium Opcodes788505
+Node: XGATE-Dependent788931
+Node: XGATE-Opts789353
+Node: XGATE-Syntax790342
+Node: XGATE-Directives792423
+Node: XGATE-Float792662
+Node: XGATE-opcodes793159
+Node: XSTORMY16-Dependent793271
+Node: XStormy16 Syntax793617
+Node: XStormy16-Chars793807
+Node: XStormy16 Directives794420
+Node: XStormy16 Opcodes795074
+Node: Xtensa-Dependent796129
+Node: Xtensa Options796860
+Node: Xtensa Syntax801127
+Node: Xtensa Opcodes803271
+Node: Xtensa Registers805064
+Node: Xtensa Optimizations805697
+Node: Density Instructions806149
+Node: Xtensa Automatic Alignment807251
+Node: Xtensa Relaxation809698
+Node: Xtensa Branch Relaxation810663
+Node: Xtensa Call Relaxation812035
+Node: Xtensa Jump Relaxation813816
+Node: Xtensa Immediate Relaxation815916
+Node: Xtensa Directives818491
+Node: Schedule Directive820199
+Node: Longcalls Directive820539
+Node: Transform Directive821083
+Node: Literal Directive821825
+Ref: Literal Directive-Footnote-1825364
+Node: Literal Position Directive825506
+Node: Literal Prefix Directive827205
+Node: Absolute Literals Directive828103
+Node: Z80-Dependent829410
+Node: Z80 Options829798
+Node: Z80 Syntax831217
+Node: Z80-Chars831889
+Node: Z80-Regs832740
+Node: Z80-Case833092
+Node: Z80 Floating Point833537
+Node: Z80 Directives833731
+Node: Z80 Opcodes835356
+Node: Z8000-Dependent836702
+Node: Z8000 Options837638
+Node: Z8000 Syntax837855
+Node: Z8000-Chars838145
+Node: Z8000-Regs838627
+Node: Z8000-Addressing839417
+Node: Z8000 Directives840527
+Node: Z8000 Opcodes842136
+Node: Reporting Bugs852078
+Node: Bug Criteria852804
+Node: Bug Reporting853571
+Node: Acknowledgements860215
+Ref: Acknowledgements-Footnote-1865181
+Node: GNU Free Documentation License865207
+Node: AS Index890357
 
 End Tag Table
diff --git a/gprof/ChangeLog b/gprof/ChangeLog
index 0c25d51..7a931ee 100644
--- a/gprof/ChangeLog
+++ b/gprof/ChangeLog
@@ -1,3 +1,7 @@
+2017-07-25  Tristan Gingold  <gingold@adacore.com>
+
+	* configure: Regenerate.
+
 2017-03-02  Tristan Gingold  <gingold@adacore.com>
 
 	* configure: Regenerate.
diff --git a/gprof/configure b/gprof/configure
index 9e6b8f3..48e46a0 100755
--- a/gprof/configure
+++ b/gprof/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for gprof 2.28.0.
+# Generated by GNU Autoconf 2.64 for gprof 2.28.1.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='gprof'
 PACKAGE_TARNAME='gprof'
-PACKAGE_VERSION='2.28.0'
-PACKAGE_STRING='gprof 2.28.0'
+PACKAGE_VERSION='2.28.1'
+PACKAGE_STRING='gprof 2.28.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1302,7 +1302,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures gprof 2.28.0 to adapt to many kinds of systems.
+\`configure' configures gprof 2.28.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1373,7 +1373,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of gprof 2.28.0:";;
+     short | recursive ) echo "Configuration of gprof 2.28.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1479,7 +1479,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-gprof configure 2.28.0
+gprof configure 2.28.1
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -1844,7 +1844,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by gprof $as_me 2.28.0, which was
+It was created by gprof $as_me 2.28.1, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -3653,7 +3653,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='gprof'
- VERSION='2.28.0'
+ VERSION='2.28.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -12787,7 +12787,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by gprof $as_me 2.28.0, which was
+This file was extended by gprof $as_me 2.28.1, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -12851,7 +12851,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-gprof config.status 2.28.0
+gprof config.status 2.28.1
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
diff --git a/ld/ChangeLog b/ld/ChangeLog
index 8458f13..4661a71 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,3 +1,7 @@
+2017-07-25  Tristan Gingold  <gingold@adacore.com>
+
+	* configure: Regenerate.
+
 2017-06-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>
 
 	Backport from mainline
diff --git a/ld/configure b/ld/configure
index a16c6db..6d6448c 100755
--- a/ld/configure
+++ b/ld/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for ld 2.28.0.
+# Generated by GNU Autoconf 2.64 for ld 2.28.1.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='ld'
 PACKAGE_TARNAME='ld'
-PACKAGE_VERSION='2.28.0'
-PACKAGE_STRING='ld 2.28.0'
+PACKAGE_VERSION='2.28.1'
+PACKAGE_STRING='ld 2.28.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1354,7 +1354,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures ld 2.28.0 to adapt to many kinds of systems.
+\`configure' configures ld 2.28.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1425,7 +1425,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of ld 2.28.0:";;
+     short | recursive ) echo "Configuration of ld 2.28.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1550,7 +1550,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-ld configure 2.28.0
+ld configure 2.28.1
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -2259,7 +2259,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by ld $as_me 2.28.0, which was
+It was created by ld $as_me 2.28.1, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -4069,7 +4069,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='ld'
- VERSION='2.28.0'
+ VERSION='2.28.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -17813,7 +17813,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by ld $as_me 2.28.0, which was
+This file was extended by ld $as_me 2.28.1, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -17877,7 +17877,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-ld config.status 2.28.0
+ld config.status 2.28.1
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
diff --git a/ld/ld.1 b/ld/ld.1
index 9a9bedd..4410520 100644
--- a/ld/ld.1
+++ b/ld/ld.1
@@ -1,4 +1,4 @@
-.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
+.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
 .\"
 .\" Standard preamble:
 .\" ========================================================================
@@ -133,7 +133,7 @@
 .\" ========================================================================
 .\"
 .IX Title "LD 1"
-.TH LD 1 "2017-03-02" "binutils-2.28" "GNU Development Tools"
+.TH LD 1 "2017-07-25" "binutils-2.28.1" "GNU Development Tools"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
@@ -1081,8 +1081,6 @@ overflow at run-time.  Supported for x86_64.
 .IP "\fBcall\-nop=prefix\-addr\fR" 4
 .IX Item "call-nop=prefix-addr"
 .PD 0
-.IP "\fBcall\-nop=prefix\-nop\fR" 4
-.IX Item "call-nop=prefix-nop"
 .IP "\fBcall\-nop=suffix\-nop\fR" 4
 .IX Item "call-nop=suffix-nop"
 .IP "\fBcall\-nop=prefix\-\fR\fIbyte\fR" 4
@@ -1093,7 +1091,6 @@ overflow at run-time.  Supported for x86_64.
 Specify the 1\-byte \f(CW\*(C`NOP\*(C'\fR padding when transforming indirect call
 to a locally defined function, foo, via its \s-1GOT\s0 slot.
 \&\fBcall\-nop=prefix\-addr\fR generates \f(CW\*(C`0x67 call foo\*(C'\fR.
-\&\fBcall\-nop=prefix\-nop\fR generates \f(CW\*(C`0x90 call foo\*(C'\fR.
 \&\fBcall\-nop=suffix\-nop\fR generates \f(CW\*(C`call foo 0x90\*(C'\fR.
 \&\fBcall\-nop=prefix\-\fR\fIbyte\fR generates \f(CW\*(C`\f(CIbyte\f(CW call foo\*(C'\fR.
 \&\fBcall\-nop=suffix\-\fR\fIbyte\fR generates \f(CW\*(C`call foo \f(CIbyte\f(CW\*(C'\fR.
diff --git a/ld/ld.info b/ld/ld.info
index e137535..1962b97 100644
--- a/ld/ld.info
+++ b/ld/ld.info
@@ -1,11 +1,6 @@
-This is ld.info, produced by makeinfo version 4.8 from ld.texinfo.
+This is ld.info, produced by makeinfo version 6.1 from ld.texinfo.
 
-INFO-DIR-SECTION Software development
-START-INFO-DIR-ENTRY
-* Ld: (ld).                       The GNU linker.
-END-INFO-DIR-ENTRY
-
-   This file documents the GNU linker LD (GNU Binutils) version 2.28.
+This file documents the GNU linker LD (GNU Binutils) version 2.28.
 
    Copyright (C) 1991-2017 Free Software Foundation, Inc.
 
@@ -15,6 +10,10 @@ any later version published by the Free Software Foundation; with no
 Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
 Texts.  A copy of the license is included in the section entitled "GNU
 Free Documentation License".
+INFO-DIR-SECTION Software development
+START-INFO-DIR-ENTRY
+* Ld: (ld).                       The GNU linker.
+END-INFO-DIR-ENTRY
 
 
 File: ld.info,  Node: Top,  Next: Overview,  Up: (dir)
@@ -25,17 +24,15 @@ LD
 This file documents the GNU linker ld (GNU Binutils) version 2.28.
 
    This document is distributed under the terms of the GNU Free
-Documentation License version 1.3.  A copy of the license is included
-in the section entitled "GNU Free Documentation License".
+Documentation License version 1.3.  A copy of the license is included in
+the section entitled "GNU Free Documentation License".
 
 * Menu:
 
 * Overview::                    Overview
 * Invocation::                  Invocation
 * Scripts::                     Linker Scripts
-
 * Machine Dependent::           Machine Dependent Features
-
 * BFD::                         BFD
 
 * Reporting Bugs::              Reporting Bugs
@@ -49,24 +46,24 @@ File: ld.info,  Node: Overview,  Next: Invocation,  Prev: Top,  Up: Top
 1 Overview
 **********
 
-`ld' combines a number of object and archive files, relocates their
-data and ties up symbol references. Usually the last step in compiling
-a program is to run `ld'.
+'ld' combines a number of object and archive files, relocates their data
+and ties up symbol references.  Usually the last step in compiling a
+program is to run 'ld'.
 
-   `ld' accepts Linker Command Language files written in a superset of
+   'ld' accepts Linker Command Language files written in a superset of
 AT&T's Link Editor Command Language syntax, to provide explicit and
 total control over the linking process.
 
-   This version of `ld' uses the general purpose BFD libraries to
-operate on object files. This allows `ld' to read, combine, and write
-object files in many different formats--for example, COFF or `a.out'.
+   This version of 'ld' uses the general purpose BFD libraries to
+operate on object files.  This allows 'ld' to read, combine, and write
+object files in many different formats--for example, COFF or 'a.out'.
 Different formats may be linked together to produce any available kind
 of object file.  *Note BFD::, for more information.
 
    Aside from its flexibility, the GNU linker is more helpful than other
 linkers in providing diagnostic information.  Many linkers abandon
 execution immediately upon encountering an error; whenever possible,
-`ld' continues executing, allowing you to identify other errors (or, in
+'ld' continues executing, allowing you to identify other errors (or, in
 some cases, to get an output file in spite of the error).
 
 
@@ -75,7 +72,7 @@ File: ld.info,  Node: Invocation,  Next: Scripts,  Prev: Overview,  Up: Top
 2 Invocation
 ************
 
-The GNU linker `ld' is meant to cover a broad range of situations, and
+The GNU linker 'ld' is meant to cover a broad range of situations, and
 to be as compatible as possible with other linkers.  As a result, you
 have many choices to control its behavior.
 
@@ -90,22 +87,22 @@ File: ld.info,  Node: Options,  Next: Environment,  Up: Invocation
 2.1 Command Line Options
 ========================
 
-   The linker supports a plethora of command-line options, but in actual
+The linker supports a plethora of command-line options, but in actual
 practice few of them are used in any particular context.  For instance,
-a frequent use of `ld' is to link standard Unix object files on a
+a frequent use of 'ld' is to link standard Unix object files on a
 standard, supported Unix system.  On such a system, to link a file
-`hello.o':
+'hello.o':
 
      ld -o OUTPUT /lib/crt0.o hello.o -lc
 
-   This tells `ld' to produce a file called OUTPUT as the result of
-linking the file `/lib/crt0.o' with `hello.o' and the library `libc.a',
+   This tells 'ld' to produce a file called OUTPUT as the result of
+linking the file '/lib/crt0.o' with 'hello.o' and the library 'libc.a',
 which will come from the standard search directories.  (See the
-discussion of the `-l' option below.)
+discussion of the '-l' option below.)
 
-   Some of the command-line options to `ld' may be specified at any
+   Some of the command-line options to 'ld' may be specified at any
 point in the command line.  However, options which refer to files, such
-as `-l' or `-T', cause the file to be read at the point at which the
+as '-l' or '-T', cause the file to be read at the point at which the
 option appears in the command line, relative to the object files and
 other file options.  Repeating non-file options with a different
 argument will either have no further effect, or override prior
@@ -119,22 +116,22 @@ command-line options, except that an object file argument may not be
 placed between an option and its argument.
 
    Usually the linker is invoked with at least one object file, but you
-can specify other forms of binary input files using `-l', `-R', and the
+can specify other forms of binary input files using '-l', '-R', and the
 script command language.  If _no_ binary input files at all are
 specified, the linker does not produce any output, and issues the
-message `No input files'.
+message 'No input files'.
 
    If the linker cannot recognize the format of an object file, it will
 assume that it is a linker script.  A script specified in this way
 augments the main linker script used for the link (either the default
-linker script or the one specified by using `-T').  This feature
-permits the linker to link against a file which appears to be an object
-or an archive, but actually merely defines some symbol values, or uses
-`INPUT' or `GROUP' to load other objects.  Specifying a script in this
-way merely augments the main linker script, with the extra commands
-placed after the main script; use the `-T' option to replace the
-default linker script entirely, but note the effect of the `INSERT'
-command.  *Note Scripts::.
+linker script or the one specified by using '-T').  This feature permits
+the linker to link against a file which appears to be an object or an
+archive, but actually merely defines some symbol values, or uses 'INPUT'
+or 'GROUP' to load other objects.  Specifying a script in this way
+merely augments the main linker script, with the extra commands placed
+after the main script; use the '-T' option to replace the default linker
+script entirely, but note the effect of the 'INSERT' command.  *Note
+Scripts::.
 
    For options whose names are a single letter, option arguments must
 either follow the option letter without intervening whitespace, or be
@@ -142,22 +139,22 @@ given as separate arguments immediately following the option that
 requires them.
 
    For options whose names are multiple letters, either one dash or two
-can precede the option name; for example, `-trace-symbol' and
-`--trace-symbol' are equivalent.  Note--there is one exception to this
-rule.  Multiple letter options that start with a lower case 'o' can
-only be preceded by two dashes.  This is to reduce confusion with the
-`-o' option.  So for example `-omagic' sets the output file name to
-`magic' whereas `--omagic' sets the NMAGIC flag on the output.
+can precede the option name; for example, '-trace-symbol' and
+'--trace-symbol' are equivalent.  Note--there is one exception to this
+rule.  Multiple letter options that start with a lower case 'o' can only
+be preceded by two dashes.  This is to reduce confusion with the '-o'
+option.  So for example '-omagic' sets the output file name to 'magic'
+whereas '--omagic' sets the NMAGIC flag on the output.
 
    Arguments to multiple-letter options must either be separated from
 the option name by an equals sign, or be given as separate arguments
 immediately following the option that requires them.  For example,
-`--trace-symbol foo' and `--trace-symbol=foo' are equivalent.  Unique
+'--trace-symbol foo' and '--trace-symbol=foo' are equivalent.  Unique
 abbreviations of the names of multiple-letter options are accepted.
 
    Note--if the linker is being invoked indirectly, via a compiler
-driver (e.g. `gcc') then all the linker command line options should be
-prefixed by `-Wl,' (or whatever is appropriate for the particular
+driver (e.g.  'gcc') then all the linker command line options should be
+prefixed by '-Wl,' (or whatever is appropriate for the particular
 compiler driver) like this:
 
        gcc -Wl,--start-group foo.o bar.o -Wl,--end-group
@@ -175,172 +172,171 @@ the joined forms of both single- and multiple-letter options, such as:
    Here is a table of the generic command line switches accepted by the
 GNU linker:
 
-`@FILE'
-     Read command-line options from FILE.  The options read are
-     inserted in place of the original @FILE option.  If FILE does not
-     exist, or cannot be read, then the option will be treated
-     literally, and not removed.
+'@FILE'
+     Read command-line options from FILE.  The options read are inserted
+     in place of the original @FILE option.  If FILE does not exist, or
+     cannot be read, then the option will be treated literally, and not
+     removed.
 
      Options in FILE are separated by whitespace.  A whitespace
      character may be included in an option by surrounding the entire
-     option in either single or double quotes.  Any character
-     (including a backslash) may be included by prefixing the character
-     to be included with a backslash.  The FILE may itself contain
-     additional @FILE options; any such options will be processed
-     recursively.
+     option in either single or double quotes.  Any character (including
+     a backslash) may be included by prefixing the character to be
+     included with a backslash.  The FILE may itself contain additional
+     @FILE options; any such options will be processed recursively.
 
-`-a KEYWORD'
+'-a KEYWORD'
      This option is supported for HP/UX compatibility.  The KEYWORD
-     argument must be one of the strings `archive', `shared', or
-     `default'.  `-aarchive' is functionally equivalent to `-Bstatic',
+     argument must be one of the strings 'archive', 'shared', or
+     'default'.  '-aarchive' is functionally equivalent to '-Bstatic',
      and the other two keywords are functionally equivalent to
-     `-Bdynamic'.  This option may be used any number of times.
+     '-Bdynamic'.  This option may be used any number of times.
 
-`--audit AUDITLIB'
-     Adds AUDITLIB to the `DT_AUDIT' entry of the dynamic section.
+'--audit AUDITLIB'
+     Adds AUDITLIB to the 'DT_AUDIT' entry of the dynamic section.
      AUDITLIB is not checked for existence, nor will it use the
      DT_SONAME specified in the library.  If specified multiple times
-     `DT_AUDIT' will contain a colon separated list of audit interfaces
-     to use. If the linker finds an object with an audit entry while
+     'DT_AUDIT' will contain a colon separated list of audit interfaces
+     to use.  If the linker finds an object with an audit entry while
      searching for shared libraries, it will add a corresponding
-     `DT_DEPAUDIT' entry in the output file.  This option is only
+     'DT_DEPAUDIT' entry in the output file.  This option is only
      meaningful on ELF platforms supporting the rtld-audit interface.
 
-`-A ARCHITECTURE'
-`--architecture=ARCHITECTURE'
-     In the current release of `ld', this option is useful only for the
-     Intel 960 family of architectures.  In that `ld' configuration, the
-     ARCHITECTURE argument identifies the particular architecture in
-     the 960 family, enabling some safeguards and modifying the
-     archive-library search path.  *Note `ld' and the Intel 960 family:
+'-A ARCHITECTURE'
+'--architecture=ARCHITECTURE'
+     In the current release of 'ld', this option is useful only for the
+     Intel 960 family of architectures.  In that 'ld' configuration, the
+     ARCHITECTURE argument identifies the particular architecture in the
+     960 family, enabling some safeguards and modifying the
+     archive-library search path.  *Note 'ld' and the Intel 960 family:
      i960, for details.
 
-     Future releases of `ld' may support similar functionality for
-     other architecture families.
+     Future releases of 'ld' may support similar functionality for other
+     architecture families.
 
-`-b INPUT-FORMAT'
-`--format=INPUT-FORMAT'
-     `ld' may be configured to support more than one kind of object
-     file.  If your `ld' is configured this way, you can use the `-b'
+'-b INPUT-FORMAT'
+'--format=INPUT-FORMAT'
+     'ld' may be configured to support more than one kind of object
+     file.  If your 'ld' is configured this way, you can use the '-b'
      option to specify the binary format for input object files that
-     follow this option on the command line.  Even when `ld' is
-     configured to support alternative object formats, you don't
-     usually need to specify this, as `ld' should be configured to
-     expect as a default input format the most usual format on each
-     machine.  INPUT-FORMAT is a text string, the name of a particular
-     format supported by the BFD libraries.  (You can list the
-     available binary formats with `objdump -i'.)  *Note BFD::.
+     follow this option on the command line.  Even when 'ld' is
+     configured to support alternative object formats, you don't usually
+     need to specify this, as 'ld' should be configured to expect as a
+     default input format the most usual format on each machine.
+     INPUT-FORMAT is a text string, the name of a particular format
+     supported by the BFD libraries.  (You can list the available binary
+     formats with 'objdump -i'.)  *Note BFD::.
 
      You may want to use this option if you are linking files with an
-     unusual binary format.  You can also use `-b' to switch formats
+     unusual binary format.  You can also use '-b' to switch formats
      explicitly (when linking object files of different formats), by
-     including `-b INPUT-FORMAT' before each group of object files in a
+     including '-b INPUT-FORMAT' before each group of object files in a
      particular format.
 
      The default format is taken from the environment variable
-     `GNUTARGET'.  *Note Environment::.  You can also define the input
-     format from a script, using the command `TARGET'; see *Note Format
+     'GNUTARGET'.  *Note Environment::.  You can also define the input
+     format from a script, using the command 'TARGET'; see *note Format
      Commands::.
 
-`-c MRI-COMMANDFILE'
-`--mri-script=MRI-COMMANDFILE'
-     For compatibility with linkers produced by MRI, `ld' accepts script
+'-c MRI-COMMANDFILE'
+'--mri-script=MRI-COMMANDFILE'
+     For compatibility with linkers produced by MRI, 'ld' accepts script
      files written in an alternate, restricted command language,
-     described in *Note MRI Compatible Script Files: MRI.  Introduce
-     MRI script files with the option `-c'; use the `-T' option to run
-     linker scripts written in the general-purpose `ld' scripting
-     language.  If MRI-CMDFILE does not exist, `ld' looks for it in the
-     directories specified by any `-L' options.
-
-`-d'
-`-dc'
-`-dp'
+     described in *note MRI Compatible Script Files: MRI. Introduce MRI
+     script files with the option '-c'; use the '-T' option to run
+     linker scripts written in the general-purpose 'ld' scripting
+     language.  If MRI-CMDFILE does not exist, 'ld' looks for it in the
+     directories specified by any '-L' options.
+
+'-d'
+'-dc'
+'-dp'
      These three options are equivalent; multiple forms are supported
      for compatibility with other linkers.  They assign space to common
-     symbols even if a relocatable output file is specified (with
-     `-r').  The script command `FORCE_COMMON_ALLOCATION' has the same
-     effect.  *Note Miscellaneous Commands::.
+     symbols even if a relocatable output file is specified (with '-r').
+     The script command 'FORCE_COMMON_ALLOCATION' has the same effect.
+     *Note Miscellaneous Commands::.
 
-`--depaudit AUDITLIB'
-`-P AUDITLIB'
-     Adds AUDITLIB to the `DT_DEPAUDIT' entry of the dynamic section.
+'--depaudit AUDITLIB'
+'-P AUDITLIB'
+     Adds AUDITLIB to the 'DT_DEPAUDIT' entry of the dynamic section.
      AUDITLIB is not checked for existence, nor will it use the
      DT_SONAME specified in the library.  If specified multiple times
-     `DT_DEPAUDIT' will contain a colon separated list of audit
-     interfaces to use.  This option is only meaningful on ELF
-     platforms supporting the rtld-audit interface.  The -P option is
-     provided for Solaris compatibility.
+     'DT_DEPAUDIT' will contain a colon separated list of audit
+     interfaces to use.  This option is only meaningful on ELF platforms
+     supporting the rtld-audit interface.  The -P option is provided for
+     Solaris compatibility.
 
-`-e ENTRY'
-`--entry=ENTRY'
+'-e ENTRY'
+'--entry=ENTRY'
      Use ENTRY as the explicit symbol for beginning execution of your
      program, rather than the default entry point.  If there is no
      symbol named ENTRY, the linker will try to parse ENTRY as a number,
      and use that as the entry address (the number will be interpreted
-     in base 10; you may use a leading `0x' for base 16, or a leading
-     `0' for base 8).  *Note Entry Point::, for a discussion of defaults
+     in base 10; you may use a leading '0x' for base 16, or a leading
+     '0' for base 8).  *Note Entry Point::, for a discussion of defaults
      and other ways of specifying the entry point.
 
-`--exclude-libs LIB,LIB,...'
-     Specifies a list of archive libraries from which symbols should
-     not be automatically exported.  The library names may be delimited
-     by commas or colons.  Specifying `--exclude-libs ALL' excludes
-     symbols in all archive libraries from automatic export.  This
-     option is available only for the i386 PE targeted port of the
-     linker and for ELF targeted ports.  For i386 PE, symbols
-     explicitly listed in a .def file are still exported, regardless of
-     this option.  For ELF targeted ports, symbols affected by this
-     option will be treated as hidden.
-
-`--exclude-modules-for-implib MODULE,MODULE,...'
+'--exclude-libs LIB,LIB,...'
+     Specifies a list of archive libraries from which symbols should not
+     be automatically exported.  The library names may be delimited by
+     commas or colons.  Specifying '--exclude-libs ALL' excludes symbols
+     in all archive libraries from automatic export.  This option is
+     available only for the i386 PE targeted port of the linker and for
+     ELF targeted ports.  For i386 PE, symbols explicitly listed in a
+     .def file are still exported, regardless of this option.  For ELF
+     targeted ports, symbols affected by this option will be treated as
+     hidden.
+
+'--exclude-modules-for-implib MODULE,MODULE,...'
      Specifies a list of object files or archive members, from which
      symbols should not be automatically exported, but which should be
-     copied wholesale into the import library being generated during
-     the link.  The module names may be delimited by commas or colons,
-     and must match exactly the filenames used by `ld' to open the
-     files; for archive members, this is simply the member name, but
-     for object files the name listed must include and match precisely
-     any path used to specify the input file on the linker's
-     command-line.  This option is available only for the i386 PE
-     targeted port of the linker.  Symbols explicitly listed in a .def
-     file are still exported, regardless of this option.
-
-`-E'
-`--export-dynamic'
-`--no-export-dynamic'
-     When creating a dynamically linked executable, using the `-E'
-     option or the `--export-dynamic' option causes the linker to add
+     copied wholesale into the import library being generated during the
+     link.  The module names may be delimited by commas or colons, and
+     must match exactly the filenames used by 'ld' to open the files;
+     for archive members, this is simply the member name, but for object
+     files the name listed must include and match precisely any path
+     used to specify the input file on the linker's command-line.  This
+     option is available only for the i386 PE targeted port of the
+     linker.  Symbols explicitly listed in a .def file are still
+     exported, regardless of this option.
+
+'-E'
+'--export-dynamic'
+'--no-export-dynamic'
+     When creating a dynamically linked executable, using the '-E'
+     option or the '--export-dynamic' option causes the linker to add
      all symbols to the dynamic symbol table.  The dynamic symbol table
-     is the set of symbols which are visible from dynamic objects at
-     run time.
+     is the set of symbols which are visible from dynamic objects at run
+     time.
 
      If you do not use either of these options (or use the
-     `--no-export-dynamic' option to restore the default behavior), the
-     dynamic symbol table will normally contain only those symbols
-     which are referenced by some dynamic object mentioned in the link.
+     '--no-export-dynamic' option to restore the default behavior), the
+     dynamic symbol table will normally contain only those symbols which
+     are referenced by some dynamic object mentioned in the link.
 
-     If you use `dlopen' to load a dynamic object which needs to refer
+     If you use 'dlopen' to load a dynamic object which needs to refer
      back to the symbols defined by the program, rather than some other
      dynamic object, then you will probably need to use this option when
      linking the program itself.
 
-     You can also use the dynamic list to control what symbols should
-     be added to the dynamic symbol table if the output format supports
-     it.  See the description of `--dynamic-list'.
+     You can also use the dynamic list to control what symbols should be
+     added to the dynamic symbol table if the output format supports it.
+     See the description of '--dynamic-list'.
 
      Note that this option is specific to ELF targeted ports.  PE
-     targets support a similar function to export all symbols from a
-     DLL or EXE; see the description of `--export-all-symbols' below.
+     targets support a similar function to export all symbols from a DLL
+     or EXE; see the description of '--export-all-symbols' below.
 
-`-EB'
+'-EB'
      Link big-endian objects.  This affects the default output format.
 
-`-EL'
+'-EL'
      Link little-endian objects.  This affects the default output
      format.
 
-`-f NAME'
-`--auxiliary=NAME'
+'-f NAME'
+'--auxiliary=NAME'
      When creating an ELF shared object, set the internal DT_AUXILIARY
      field to the specified name.  This tells the dynamic linker that
      the symbol table of the shared object should be used as an
@@ -360,13 +356,12 @@ GNU linker:
      entries will be created in the order in which they appear on the
      command line.
 
-`-F NAME'
-`--filter=NAME'
+'-F NAME'
+'--filter=NAME'
      When creating an ELF shared object, set the internal DT_FILTER
      field to the specified name.  This tells the dynamic linker that
-     the symbol table of the shared object which is being created
-     should be used as a filter on the symbol table of the shared
-     object NAME.
+     the symbol table of the shared object which is being created should
+     be used as a filter on the symbol table of the shared object NAME.
 
      If you later link a program against this filter object, then, when
      you run the program, the dynamic linker will see the DT_FILTER
@@ -376,128 +371,125 @@ GNU linker:
      filter object can be used to select a subset of the symbols
      provided by the object NAME.
 
-     Some older linkers used the `-F' option throughout a compilation
+     Some older linkers used the '-F' option throughout a compilation
      toolchain for specifying object-file format for both input and
-     output object files.  The GNU linker uses other mechanisms for
-     this purpose: the `-b', `--format', `--oformat' options, the
-     `TARGET' command in linker scripts, and the `GNUTARGET'
-     environment variable.  The GNU linker will ignore the `-F' option
-     when not creating an ELF shared object.
+     output object files.  The GNU linker uses other mechanisms for this
+     purpose: the '-b', '--format', '--oformat' options, the 'TARGET'
+     command in linker scripts, and the 'GNUTARGET' environment
+     variable.  The GNU linker will ignore the '-F' option when not
+     creating an ELF shared object.
 
-`-fini=NAME'
+'-fini=NAME'
      When creating an ELF executable or shared object, call NAME when
      the executable or shared object is unloaded, by setting DT_FINI to
-     the address of the function.  By default, the linker uses `_fini'
+     the address of the function.  By default, the linker uses '_fini'
      as the function to call.
 
-`-g'
+'-g'
      Ignored.  Provided for compatibility with other tools.
 
-`-G VALUE'
-`--gpsize=VALUE'
+'-G VALUE'
+'--gpsize=VALUE'
      Set the maximum size of objects to be optimized using the GP
      register to SIZE.  This is only meaningful for object file formats
      such as MIPS ELF that support putting large and small objects into
      different sections.  This is ignored for other object file formats.
 
-`-h NAME'
-`-soname=NAME'
+'-h NAME'
+'-soname=NAME'
      When creating an ELF shared object, set the internal DT_SONAME
      field to the specified name.  When an executable is linked with a
-     shared object which has a DT_SONAME field, then when the
-     executable is run the dynamic linker will attempt to load the
-     shared object specified by the DT_SONAME field rather than the
-     using the file name given to the linker.
+     shared object which has a DT_SONAME field, then when the executable
+     is run the dynamic linker will attempt to load the shared object
+     specified by the DT_SONAME field rather than the using the file
+     name given to the linker.
 
-`-i'
-     Perform an incremental link (same as option `-r').
+'-i'
+     Perform an incremental link (same as option '-r').
 
-`-init=NAME'
+'-init=NAME'
      When creating an ELF executable or shared object, call NAME when
      the executable or shared object is loaded, by setting DT_INIT to
-     the address of the function.  By default, the linker uses `_init'
+     the address of the function.  By default, the linker uses '_init'
      as the function to call.
 
-`-l NAMESPEC'
-`--library=NAMESPEC'
-     Add the archive or object file specified by NAMESPEC to the list
-     of files to link.  This option may be used any number of times.
-     If NAMESPEC is of the form `:FILENAME', `ld' will search the
-     library path for a file called FILENAME, otherwise it will search
-     the library path for a file called `libNAMESPEC.a'.
-
-     On systems which support shared libraries, `ld' may also search for
-     files other than `libNAMESPEC.a'.  Specifically, on ELF and SunOS
-     systems, `ld' will search a directory for a library called
-     `libNAMESPEC.so' before searching for one called `libNAMESPEC.a'.
-     (By convention, a `.so' extension indicates a shared library.)
-     Note that this behavior does not apply to `:FILENAME', which
-     always specifies a file called FILENAME.
+'-l NAMESPEC'
+'--library=NAMESPEC'
+     Add the archive or object file specified by NAMESPEC to the list of
+     files to link.  This option may be used any number of times.  If
+     NAMESPEC is of the form ':FILENAME', 'ld' will search the library
+     path for a file called FILENAME, otherwise it will search the
+     library path for a file called 'libNAMESPEC.a'.
+
+     On systems which support shared libraries, 'ld' may also search for
+     files other than 'libNAMESPEC.a'.  Specifically, on ELF and SunOS
+     systems, 'ld' will search a directory for a library called
+     'libNAMESPEC.so' before searching for one called 'libNAMESPEC.a'.
+     (By convention, a '.so' extension indicates a shared library.)
+     Note that this behavior does not apply to ':FILENAME', which always
+     specifies a file called FILENAME.
 
      The linker will search an archive only once, at the location where
      it is specified on the command line.  If the archive defines a
-     symbol which was undefined in some object which appeared before
-     the archive on the command line, the linker will include the
-     appropriate file(s) from the archive.  However, an undefined
-     symbol in an object appearing later on the command line will not
-     cause the linker to search the archive again.
+     symbol which was undefined in some object which appeared before the
+     archive on the command line, the linker will include the
+     appropriate file(s) from the archive.  However, an undefined symbol
+     in an object appearing later on the command line will not cause the
+     linker to search the archive again.
 
-     See the `-(' option for a way to force the linker to search
+     See the '-(' option for a way to force the linker to search
      archives multiple times.
 
      You may list the same archive multiple times on the command line.
 
      This type of archive searching is standard for Unix linkers.
-     However, if you are using `ld' on AIX, note that it is different
+     However, if you are using 'ld' on AIX, note that it is different
      from the behaviour of the AIX linker.
 
-`-L SEARCHDIR'
-`--library-path=SEARCHDIR'
-     Add path SEARCHDIR to the list of paths that `ld' will search for
-     archive libraries and `ld' control scripts.  You may use this
+'-L SEARCHDIR'
+'--library-path=SEARCHDIR'
+     Add path SEARCHDIR to the list of paths that 'ld' will search for
+     archive libraries and 'ld' control scripts.  You may use this
      option any number of times.  The directories are searched in the
-     order in which they are specified on the command line.
-     Directories specified on the command line are searched before the
-     default directories.  All `-L' options apply to all `-l' options,
-     regardless of the order in which the options appear.  `-L' options
-     do not affect how `ld' searches for a linker script unless `-T'
+     order in which they are specified on the command line.  Directories
+     specified on the command line are searched before the default
+     directories.  All '-L' options apply to all '-l' options,
+     regardless of the order in which the options appear.  '-L' options
+     do not affect how 'ld' searches for a linker script unless '-T'
      option is specified.
 
-     If SEARCHDIR begins with `=', then the `=' will be replaced by the
-     "sysroot prefix", controlled by the `--sysroot' option, or
+     If SEARCHDIR begins with '=', then the '=' will be replaced by the
+     "sysroot prefix", controlled by the '--sysroot' option, or
      specified when the linker is configured.
 
      The default set of paths searched (without being specified with
-     `-L') depends on which emulation mode `ld' is using, and in some
+     '-L') depends on which emulation mode 'ld' is using, and in some
      cases also on how it was configured.  *Note Environment::.
 
      The paths can also be specified in a link script with the
-     `SEARCH_DIR' command.  Directories specified this way are searched
+     'SEARCH_DIR' command.  Directories specified this way are searched
      at the point in which the linker script appears in the command
      line.
 
-`-m EMULATION'
+'-m EMULATION'
      Emulate the EMULATION linker.  You can list the available
-     emulations with the `--verbose' or `-V' options.
+     emulations with the '--verbose' or '-V' options.
 
-     If the `-m' option is not used, the emulation is taken from the
-     `LDEMULATION' environment variable, if that is defined.
+     If the '-m' option is not used, the emulation is taken from the
+     'LDEMULATION' environment variable, if that is defined.
 
      Otherwise, the default emulation depends upon how the linker was
      configured.
 
-`-M'
-`--print-map'
+'-M'
+'--print-map'
      Print a link map to the standard output.  A link map provides
      information about the link, including the following:
 
         * Where object files are mapped into memory.
-
         * How common symbols are allocated.
-
         * All archive members included in the link, with a mention of
           the symbol which caused the archive member to be brought in.
-
         * The values assigned to symbols.
 
           Note - symbols whose values are computed by an expression
@@ -505,74 +497,74 @@ GNU linker:
           symbol may not have correct result displayed in the link map.
           This is because the linker discards intermediate results and
           only retains the final value of an expression.  Under such
-          circumstances the linker will display the final value
-          enclosed by square brackets.  Thus for example a linker
-          script containing:
+          circumstances the linker will display the final value enclosed
+          by square brackets.  Thus for example a linker script
+          containing:
 
                   foo = 1
                   foo = foo * 4
                   foo = foo + 8
 
-          will produce the following output in the link map if the `-M'
+          will produce the following output in the link map if the '-M'
           option is used:
 
                   0x00000001                foo = 0x1
                   [0x0000000c]                foo = (foo * 0x4)
                   [0x0000000c]                foo = (foo + 0x8)
 
-          See *Note Expressions:: for more information about
-          expressions in linker scripts.
+          See *note Expressions:: for more information about expressions
+          in linker scripts.
 
-`-n'
-`--nmagic'
+'-n'
+'--nmagic'
      Turn off page alignment of sections, and disable linking against
      shared libraries.  If the output format supports Unix style magic
-     numbers, mark the output as `NMAGIC'.
+     numbers, mark the output as 'NMAGIC'.
 
-`-N'
-`--omagic'
+'-N'
+'--omagic'
      Set the text and data sections to be readable and writable.  Also,
      do not page-align the data segment, and disable linking against
      shared libraries.  If the output format supports Unix style magic
-     numbers, mark the output as `OMAGIC'. Note: Although a writable
-     text section is allowed for PE-COFF targets, it does not conform
-     to the format specification published by Microsoft.
+     numbers, mark the output as 'OMAGIC'.  Note: Although a writable
+     text section is allowed for PE-COFF targets, it does not conform to
+     the format specification published by Microsoft.
 
-`--no-omagic'
-     This option negates most of the effects of the `-N' option.  It
+'--no-omagic'
+     This option negates most of the effects of the '-N' option.  It
      sets the text section to be read-only, and forces the data segment
      to be page-aligned.  Note - this option does not enable linking
-     against shared libraries.  Use `-Bdynamic' for this.
+     against shared libraries.  Use '-Bdynamic' for this.
 
-`-o OUTPUT'
-`--output=OUTPUT'
-     Use OUTPUT as the name for the program produced by `ld'; if this
-     option is not specified, the name `a.out' is used by default.  The
-     script command `OUTPUT' can also specify the output file name.
+'-o OUTPUT'
+'--output=OUTPUT'
+     Use OUTPUT as the name for the program produced by 'ld'; if this
+     option is not specified, the name 'a.out' is used by default.  The
+     script command 'OUTPUT' can also specify the output file name.
 
-`-O LEVEL'
-     If LEVEL is a numeric values greater than zero `ld' optimizes the
+'-O LEVEL'
+     If LEVEL is a numeric values greater than zero 'ld' optimizes the
      output.  This might take significantly longer and therefore
      probably should only be enabled for the final binary.  At the
      moment this option only affects ELF shared library generation.
      Future releases of the linker may make more use of this option.
-     Also currently there is no difference in the linker's behaviour
-     for different non-zero values of this option.  Again this may
-     change with future releases.
+     Also currently there is no difference in the linker's behaviour for
+     different non-zero values of this option.  Again this may change
+     with future releases.
 
-`--push-state'
-     The `--push-state' allows to preserve the current state of the
+'--push-state'
+     The '--push-state' allows to preserve the current state of the
      flags which govern the input file handling so that they can all be
-     restored with one corresponding `--pop-state' option.
+     restored with one corresponding '--pop-state' option.
 
-     The option which are covered are: `-Bdynamic', `-Bstatic', `-dn',
-     `-dy', `-call_shared', `-non_shared', `-static', `-N', `-n',
-     `--whole-archive', `--no-whole-archive', `-r', `-Ur',
-     `--copy-dt-needed-entries', `--no-copy-dt-needed-entries',
-     `--as-needed', `--no-as-needed', and `-a'.
+     The option which are covered are: '-Bdynamic', '-Bstatic', '-dn',
+     '-dy', '-call_shared', '-non_shared', '-static', '-N', '-n',
+     '--whole-archive', '--no-whole-archive', '-r', '-Ur',
+     '--copy-dt-needed-entries', '--no-copy-dt-needed-entries',
+     '--as-needed', '--no-as-needed', and '-a'.
 
-     One target for this option are specifications for `pkg-config'.
-     When used with the `--libs' option all possibly needed libraries
+     One target for this option are specifications for 'pkg-config'.
+     When used with the '--libs' option all possibly needed libraries
      are listed and then possibly linked with all the time.  It is
      better to return something as follows:
 
@@ -581,168 +573,167 @@ GNU linker:
      Undoes the effect of -push-state, restores the previous values of
      the flags governing input file handling.
 
-`-q'
-`--emit-relocs'
+'-q'
+'--emit-relocs'
      Leave relocation sections and contents in fully linked executables.
-     Post link analysis and optimization tools may need this
-     information in order to perform correct modifications of
-     executables.  This results in larger executables.
+     Post link analysis and optimization tools may need this information
+     in order to perform correct modifications of executables.  This
+     results in larger executables.
 
      This option is currently only supported on ELF platforms.
 
-`--force-dynamic'
+'--force-dynamic'
      Force the output file to have dynamic sections.  This option is
      specific to VxWorks targets.
 
-`-r'
-`--relocatable'
-     Generate relocatable output--i.e., generate an output file that
-     can in turn serve as input to `ld'.  This is often called "partial
+'-r'
+'--relocatable'
+     Generate relocatable output--i.e., generate an output file that can
+     in turn serve as input to 'ld'.  This is often called "partial
      linking".  As a side effect, in environments that support standard
      Unix magic numbers, this option also sets the output file's magic
-     number to `OMAGIC'.  If this option is not specified, an absolute
+     number to 'OMAGIC'.  If this option is not specified, an absolute
      file is produced.  When linking C++ programs, this option _will
-     not_ resolve references to constructors; to do that, use `-Ur'.
+     not_ resolve references to constructors; to do that, use '-Ur'.
 
      When an input file does not have the same format as the output
-     file, partial linking is only supported if that input file does
-     not contain any relocations.  Different output formats can have
-     further restrictions; for example some `a.out'-based formats do
-     not support partial linking with input files in other formats at
-     all.
+     file, partial linking is only supported if that input file does not
+     contain any relocations.  Different output formats can have further
+     restrictions; for example some 'a.out'-based formats do not support
+     partial linking with input files in other formats at all.
 
-     This option does the same thing as `-i'.
+     This option does the same thing as '-i'.
 
-`-R FILENAME'
-`--just-symbols=FILENAME'
+'-R FILENAME'
+'--just-symbols=FILENAME'
      Read symbol names and their addresses from FILENAME, but do not
      relocate it or include it in the output.  This allows your output
      file to refer symbolically to absolute locations of memory defined
      in other programs.  You may use this option more than once.
 
-     For compatibility with other ELF linkers, if the `-R' option is
+     For compatibility with other ELF linkers, if the '-R' option is
      followed by a directory name, rather than a file name, it is
-     treated as the `-rpath' option.
+     treated as the '-rpath' option.
 
-`-s'
-`--strip-all'
+'-s'
+'--strip-all'
      Omit all symbol information from the output file.
 
-`-S'
-`--strip-debug'
+'-S'
+'--strip-debug'
      Omit debugger symbol information (but not all symbols) from the
      output file.
 
-`-t'
-`--trace'
-     Print the names of the input files as `ld' processes them.
+'-t'
+'--trace'
+     Print the names of the input files as 'ld' processes them.
 
-`-T SCRIPTFILE'
-`--script=SCRIPTFILE'
-     Use SCRIPTFILE as the linker script.  This script replaces `ld''s
+'-T SCRIPTFILE'
+'--script=SCRIPTFILE'
+     Use SCRIPTFILE as the linker script.  This script replaces 'ld''s
      default linker script (rather than adding to it), so COMMANDFILE
      must specify everything necessary to describe the output file.
      *Note Scripts::.  If SCRIPTFILE does not exist in the current
-     directory, `ld' looks for it in the directories specified by any
-     preceding `-L' options.  Multiple `-T' options accumulate.
+     directory, 'ld' looks for it in the directories specified by any
+     preceding '-L' options.  Multiple '-T' options accumulate.
 
-`-dT SCRIPTFILE'
-`--default-script=SCRIPTFILE'
+'-dT SCRIPTFILE'
+'--default-script=SCRIPTFILE'
      Use SCRIPTFILE as the default linker script.  *Note Scripts::.
 
-     This option is similar to the `--script' option except that
+     This option is similar to the '--script' option except that
      processing of the script is delayed until after the rest of the
      command line has been processed.  This allows options placed after
-     the `--default-script' option on the command line to affect the
+     the '--default-script' option on the command line to affect the
      behaviour of the linker script, which can be important when the
-     linker command line cannot be directly controlled by the user.
-     (eg because the command line is being constructed by another tool,
-     such as `gcc').
+     linker command line cannot be directly controlled by the user.  (eg
+     because the command line is being constructed by another tool, such
+     as 'gcc').
 
-`-u SYMBOL'
-`--undefined=SYMBOL'
+'-u SYMBOL'
+'--undefined=SYMBOL'
      Force SYMBOL to be entered in the output file as an undefined
      symbol.  Doing this may, for example, trigger linking of additional
-     modules from standard libraries.  `-u' may be repeated with
+     modules from standard libraries.  '-u' may be repeated with
      different option arguments to enter additional undefined symbols.
-     This option is equivalent to the `EXTERN' linker script command.
+     This option is equivalent to the 'EXTERN' linker script command.
 
      If this option is being used to force additional modules to be
      pulled into the link, and if it is an error for the symbol to
-     remain undefined, then the option `--require-defined' should be
+     remain undefined, then the option '--require-defined' should be
      used instead.
 
-`--require-defined=SYMBOL'
+'--require-defined=SYMBOL'
      Require that SYMBOL is defined in the output file.  This option is
-     the same as option `--undefined' except that if SYMBOL is not
+     the same as option '--undefined' except that if SYMBOL is not
      defined in the output file then the linker will issue an error and
      exit.  The same effect can be achieved in a linker script by using
-     `EXTERN', `ASSERT' and `DEFINED' together.  This option can be
-     used multiple times to require additional symbols.
+     'EXTERN', 'ASSERT' and 'DEFINED' together.  This option can be used
+     multiple times to require additional symbols.
 
-`-Ur'
+'-Ur'
      For anything other than C++ programs, this option is equivalent to
-     `-r': it generates relocatable output--i.e., an output file that
-     can in turn serve as input to `ld'.  When linking C++ programs,
-     `-Ur' _does_ resolve references to constructors, unlike `-r'.  It
-     does not work to use `-Ur' on files that were themselves linked
-     with `-Ur'; once the constructor table has been built, it cannot
-     be added to.  Use `-Ur' only for the last partial link, and `-r'
-     for the others.
-
-`--orphan-handling=MODE'
+     '-r': it generates relocatable output--i.e., an output file that
+     can in turn serve as input to 'ld'.  When linking C++ programs,
+     '-Ur' _does_ resolve references to constructors, unlike '-r'.  It
+     does not work to use '-Ur' on files that were themselves linked
+     with '-Ur'; once the constructor table has been built, it cannot be
+     added to.  Use '-Ur' only for the last partial link, and '-r' for
+     the others.
+
+'--orphan-handling=MODE'
      Control how orphan sections are handled.  An orphan section is one
      not specifically mentioned in a linker script.  *Note Orphan
      Sections::.
 
      MODE can have any of the following values:
 
-    `place'
+     'place'
           Orphan sections are placed into a suitable output section
-          following the strategy described in *Note Orphan Sections::.
-          The option `--unique' also effects how sections are placed.
+          following the strategy described in *note Orphan Sections::.
+          The option '--unique' also effects how sections are placed.
 
-    `discard'
+     'discard'
           All orphan sections are discarded, by placing them in the
-          `/DISCARD/' section (*note Output Section Discarding::).
+          '/DISCARD/' section (*note Output Section Discarding::).
 
-    `warn'
-          The linker will place the orphan section as for `place' and
+     'warn'
+          The linker will place the orphan section as for 'place' and
           also issue a warning.
 
-    `error'
+     'error'
           The linker will exit with an error if any orphan section is
           found.
 
-     The default if `--orphan-handling' is not given is `place'.
+     The default if '--orphan-handling' is not given is 'place'.
 
-`--unique[=SECTION]'
+'--unique[=SECTION]'
      Creates a separate output section for every input section matching
      SECTION, or if the optional wildcard SECTION argument is missing,
      for every orphan input section.  An orphan section is one not
      specifically mentioned in a linker script.  You may use this option
-     multiple times on the command line;  It prevents the normal
-     merging of input sections with the same name, overriding output
-     section assignments in a linker script.
-
-`-v'
-`--version'
-`-V'
-     Display the version number for `ld'.  The `-V' option also lists
+     multiple times on the command line; It prevents the normal merging
+     of input sections with the same name, overriding output section
+     assignments in a linker script.
+
+'-v'
+'--version'
+'-V'
+     Display the version number for 'ld'.  The '-V' option also lists
      the supported emulations.
 
-`-x'
-`--discard-all'
+'-x'
+'--discard-all'
      Delete all local symbols.
 
-`-X'
-`--discard-locals'
+'-X'
+'--discard-locals'
      Delete all temporary local symbols.  (These symbols start with
-     system-specific local label prefixes, typically `.L' for ELF
-     systems or `L' for traditional a.out systems.)
+     system-specific local label prefixes, typically '.L' for ELF
+     systems or 'L' for traditional a.out systems.)
 
-`-y SYMBOL'
-`--trace-symbol=SYMBOL'
+'-y SYMBOL'
+'--trace-symbol=SYMBOL'
      Print the name of each linked file in which SYMBOL appears.  This
      option may be given any number of times.  On many systems it is
      necessary to prepend an underscore.
@@ -750,33 +741,34 @@ GNU linker:
      This option is useful when you have an undefined symbol in your
      link but don't know where the reference is coming from.
 
-`-Y PATH'
+'-Y PATH'
      Add PATH to the default library search path.  This option exists
      for Solaris compatibility.
 
-`-z KEYWORD'
+'-z KEYWORD'
      The recognized keywords are:
-    `combreloc'
+
+     'combreloc'
           Combines multiple reloc sections and sorts them to make
           dynamic symbol lookup caching possible.
 
-    `common'
+     'common'
           Generate common symbols with the STT_COMMON type druing a
           relocatable link.
 
-    `defs'
+     'defs'
           Disallows undefined symbols in object files.  Undefined
           symbols in shared libraries are still allowed.
 
-    `execstack'
+     'execstack'
           Marks the object as requiring executable stack.
 
-    `global'
+     'global'
           This option is only meaningful when building a shared object.
           It makes the symbols defined by this shared object available
           for symbol resolution of subsequently loaded libraries.
 
-    `initfirst'
+     'initfirst'
           This option is only meaningful when building a shared object.
           It marks the object so that its runtime initialization will
           occur before the runtime initialization of any other objects
@@ -784,238 +776,232 @@ GNU linker:
           runtime finalization of the object will occur after the
           runtime finalization of any other objects.
 
-    `interpose'
+     'interpose'
           Marks the object that its symbol table interposes before all
           symbols but the primary executable.
 
-    `lazy'
+     'lazy'
           When generating an executable or shared library, mark it to
           tell the dynamic linker to defer function call resolution to
           the point when the function is called (lazy binding), rather
           than at load time.  Lazy binding is the default.
 
-    `loadfltr'
-          Marks  the object that its filters be processed immediately at
+     'loadfltr'
+          Marks the object that its filters be processed immediately at
           runtime.
 
-    `muldefs'
+     'muldefs'
           Allows multiple definitions.
 
-    `nocombreloc'
+     'nocombreloc'
           Disables multiple reloc sections combining.
 
-    `nocommon'
+     'nocommon'
           Generate common symbols with the STT_OBJECT type druing a
           relocatable link.
 
-    `nocopyreloc'
+     'nocopyreloc'
           Disable linker generated .dynbss variables used in place of
           variables defined in shared libraries.  May result in dynamic
           text relocations.
 
-    `nodefaultlib'
+     'nodefaultlib'
           Marks the object that the search for dependencies of this
           object will ignore any default library search paths.
 
-    `nodelete'
+     'nodelete'
           Marks the object shouldn't be unloaded at runtime.
 
-    `nodlopen'
-          Marks the object not available to `dlopen'.
+     'nodlopen'
+          Marks the object not available to 'dlopen'.
 
-    `nodump'
-          Marks the object can not be dumped by `dldump'.
+     'nodump'
+          Marks the object can not be dumped by 'dldump'.
 
-    `noexecstack'
+     'noexecstack'
           Marks the object as not requiring executable stack.
 
-    `text'
+     'text'
           Treat DT_TEXTREL in shared object as error.
 
-    `notext'
+     'notext'
           Don't treat DT_TEXTREL in shared object as error.
 
-    `textoff'
+     'textoff'
           Don't treat DT_TEXTREL in shared object as error.
 
-    `norelro'
-          Don't create an ELF `PT_GNU_RELRO' segment header in the
+     'norelro'
+          Don't create an ELF 'PT_GNU_RELRO' segment header in the
           object.
 
-    `now'
+     'now'
           When generating an executable or shared library, mark it to
           tell the dynamic linker to resolve all symbols when the
           program is started, or when the shared library is linked to
-          using dlopen, instead of deferring function call resolution
-          to the point when the function is first called.
+          using dlopen, instead of deferring function call resolution to
+          the point when the function is first called.
 
-    `origin'
+     'origin'
           Marks the object may contain $ORIGIN.
 
-    `relro'
-          Create an ELF `PT_GNU_RELRO' segment header in the object.
+     'relro'
+          Create an ELF 'PT_GNU_RELRO' segment header in the object.
 
-    `max-page-size=VALUE'
+     'max-page-size=VALUE'
           Set the emulation maximum page size to VALUE.
 
-    `common-page-size=VALUE'
+     'common-page-size=VALUE'
           Set the emulation common page size to VALUE.
 
-    `stack-size=VALUE'
-          Specify a stack size for in an ELF `PT_GNU_STACK' segment.
+     'stack-size=VALUE'
+          Specify a stack size for in an ELF 'PT_GNU_STACK' segment.
           Specifying zero will override any default non-zero sized
-          `PT_GNU_STACK' segment creation.
+          'PT_GNU_STACK' segment creation.
 
-    `bndplt'
-          Always generate BND prefix in PLT entries. Supported for
+     'bndplt'
+          Always generate BND prefix in PLT entries.  Supported for
           Linux/x86_64.
 
-    `noextern-protected-data'
+     'noextern-protected-data'
           Don't treat protected data symbol as external when building
-          shared library.  This option overrides linker backend
-          default.  It can be used to workaround incorrect relocations
-          against protected data symbols generated by compiler.
-          Updates on protected data symbols by another module aren't
-          visible to the resulting shared library.  Supported for i386
-          and x86-64.
-
-    `nodynamic-undefined-weak'
+          shared library.  This option overrides linker backend default.
+          It can be used to workaround incorrect relocations against
+          protected data symbols generated by compiler.  Updates on
+          protected data symbols by another module aren't visible to the
+          resulting shared library.  Supported for i386 and x86-64.
+
+     'nodynamic-undefined-weak'
           Don't treat undefined weak symbols as dynamic when building
-          executable.  This option overrides linker backend default.
-          It can be used to avoid dynamic relocations against undefined
+          executable.  This option overrides linker backend default.  It
+          can be used to avoid dynamic relocations against undefined
           weak symbols in executable.  Supported for i386 and x86-64.
 
-    `noreloc-overflow'
+     'noreloc-overflow'
           Disable relocation overflow check.  This can be used to
           disable relocation overflow check if there will be no dynamic
           relocation overflow at run-time.  Supported for x86_64.
 
-    `call-nop=prefix-addr'
-    `call-nop=prefix-nop'
-    `call-nop=suffix-nop'
-    `call-nop=prefix-BYTE'
-    `call-nop=suffix-BYTE'
-          Specify the 1-byte `NOP' padding when transforming indirect
+     'call-nop=prefix-addr'
+     'call-nop=suffix-nop'
+     'call-nop=prefix-BYTE'
+     'call-nop=suffix-BYTE'
+          Specify the 1-byte 'NOP' padding when transforming indirect
           call to a locally defined function, foo, via its GOT slot.
-          `call-nop=prefix-addr' generates `0x67 call foo'.
-          `call-nop=prefix-nop' generates `0x90 call foo'.
-          `call-nop=suffix-nop' generates `call foo 0x90'.
-          `call-nop=prefix-BYTE' generates `BYTE call foo'.
-          `call-nop=suffix-BYTE' generates `call foo BYTE'.  Supported
+          'call-nop=prefix-addr' generates '0x67 call foo'.
+          'call-nop=suffix-nop' generates 'call foo 0x90'.
+          'call-nop=prefix-BYTE' generates 'BYTE call foo'.
+          'call-nop=suffix-BYTE' generates 'call foo BYTE'.  Supported
           for i386 and x86_64.
 
-
      Other keywords are ignored for Solaris compatibility.
 
-`-( ARCHIVES -)'
-`--start-group ARCHIVES --end-group'
-     The ARCHIVES should be a list of archive files.  They may be
-     either explicit file names, or `-l' options.
+'-( ARCHIVES -)'
+'--start-group ARCHIVES --end-group'
+     The ARCHIVES should be a list of archive files.  They may be either
+     explicit file names, or '-l' options.
 
      The specified archives are searched repeatedly until no new
-     undefined references are created.  Normally, an archive is
-     searched only once in the order that it is specified on the
-     command line.  If a symbol in that archive is needed to resolve an
-     undefined symbol referred to by an object in an archive that
-     appears later on the command line, the linker would not be able to
-     resolve that reference.  By grouping the archives, they all be
-     searched repeatedly until all possible references are resolved.
+     undefined references are created.  Normally, an archive is searched
+     only once in the order that it is specified on the command line.
+     If a symbol in that archive is needed to resolve an undefined
+     symbol referred to by an object in an archive that appears later on
+     the command line, the linker would not be able to resolve that
+     reference.  By grouping the archives, they all be searched
+     repeatedly until all possible references are resolved.
 
      Using this option has a significant performance cost.  It is best
      to use it only when there are unavoidable circular references
      between two or more archives.
 
-`--accept-unknown-input-arch'
-`--no-accept-unknown-input-arch'
+'--accept-unknown-input-arch'
+'--no-accept-unknown-input-arch'
      Tells the linker to accept input files whose architecture cannot be
      recognised.  The assumption is that the user knows what they are
      doing and deliberately wants to link in these unknown input files.
-     This was the default behaviour of the linker, before release
-     2.14.  The default behaviour from release 2.14 onwards is to
-     reject such input files, and so the `--accept-unknown-input-arch'
-     option has been added to restore the old behaviour.
+     This was the default behaviour of the linker, before release 2.14.
+     The default behaviour from release 2.14 onwards is to reject such
+     input files, and so the '--accept-unknown-input-arch' option has
+     been added to restore the old behaviour.
 
-`--as-needed'
-`--no-as-needed'
+'--as-needed'
+'--no-as-needed'
      This option affects ELF DT_NEEDED tags for dynamic libraries
-     mentioned on the command line after the `--as-needed' option.
+     mentioned on the command line after the '--as-needed' option.
      Normally the linker will add a DT_NEEDED tag for each dynamic
      library mentioned on the command line, regardless of whether the
-     library is actually needed or not.  `--as-needed' causes a
+     library is actually needed or not.  '--as-needed' causes a
      DT_NEEDED tag to only be emitted for a library that _at that point
-     in the link_ satisfies a non-weak undefined symbol reference from
-     a regular object file or, if the library is not found in the
+     in the link_ satisfies a non-weak undefined symbol reference from a
+     regular object file or, if the library is not found in the
      DT_NEEDED lists of other needed libraries, a non-weak undefined
-     symbol reference from another needed dynamic library.  Object
-     files or libraries appearing on the command line _after_ the
-     library in question do not affect whether the library is seen as
-     needed.  This is similar to the rules for extraction of object
-     files from archives.  `--no-as-needed' restores the default
-     behaviour.
-
-`--add-needed'
-`--no-add-needed'
+     symbol reference from another needed dynamic library.  Object files
+     or libraries appearing on the command line _after_ the library in
+     question do not affect whether the library is seen as needed.  This
+     is similar to the rules for extraction of object files from
+     archives.  '--no-as-needed' restores the default behaviour.
+
+'--add-needed'
+'--no-add-needed'
      These two options have been deprecated because of the similarity of
-     their names to the `--as-needed' and `--no-as-needed' options.
-     They have been replaced by `--copy-dt-needed-entries' and
-     `--no-copy-dt-needed-entries'.
+     their names to the '--as-needed' and '--no-as-needed' options.
+     They have been replaced by '--copy-dt-needed-entries' and
+     '--no-copy-dt-needed-entries'.
 
-`-assert KEYWORD'
+'-assert KEYWORD'
      This option is ignored for SunOS compatibility.
 
-`-Bdynamic'
-`-dy'
-`-call_shared'
+'-Bdynamic'
+'-dy'
+'-call_shared'
      Link against dynamic libraries.  This is only meaningful on
-     platforms for which shared libraries are supported.  This option
-     is normally the default on such platforms.  The different variants
-     of this option are for compatibility with various systems.  You
-     may use this option multiple times on the command line: it affects
-     library searching for `-l' options which follow it.
-
-`-Bgroup'
-     Set the `DF_1_GROUP' flag in the `DT_FLAGS_1' entry in the dynamic
+     platforms for which shared libraries are supported.  This option is
+     normally the default on such platforms.  The different variants of
+     this option are for compatibility with various systems.  You may
+     use this option multiple times on the command line: it affects
+     library searching for '-l' options which follow it.
+
+'-Bgroup'
+     Set the 'DF_1_GROUP' flag in the 'DT_FLAGS_1' entry in the dynamic
      section.  This causes the runtime linker to handle lookups in this
      object and its dependencies to be performed only inside the group.
-     `--unresolved-symbols=report-all' is implied.  This option is only
+     '--unresolved-symbols=report-all' is implied.  This option is only
      meaningful on ELF platforms which support shared libraries.
 
-`-Bstatic'
-`-dn'
-`-non_shared'
-`-static'
+'-Bstatic'
+'-dn'
+'-non_shared'
+'-static'
      Do not link against shared libraries.  This is only meaningful on
      platforms for which shared libraries are supported.  The different
-     variants of this option are for compatibility with various
-     systems.  You may use this option multiple times on the command
-     line: it affects library searching for `-l' options which follow
-     it.  This option also implies `--unresolved-symbols=report-all'.
-     This option can be used with `-shared'.  Doing so means that a
-     shared library is being created but that all of the library's
-     external references must be resolved by pulling in entries from
-     static libraries.
-
-`-Bsymbolic'
+     variants of this option are for compatibility with various systems.
+     You may use this option multiple times on the command line: it
+     affects library searching for '-l' options which follow it.  This
+     option also implies '--unresolved-symbols=report-all'.  This option
+     can be used with '-shared'.  Doing so means that a shared library
+     is being created but that all of the library's external references
+     must be resolved by pulling in entries from static libraries.
+
+'-Bsymbolic'
      When creating a shared library, bind references to global symbols
      to the definition within the shared library, if any.  Normally, it
      is possible for a program linked against a shared library to
-     override the definition within the shared library.  This option
-     can also be used with the `--export-dynamic' option, when creating
-     a position independent executable, to bind references to global
+     override the definition within the shared library.  This option can
+     also be used with the '--export-dynamic' option, when creating a
+     position independent executable, to bind references to global
      symbols to the definition within the executable.  This option is
-     only meaningful on ELF platforms which support shared libraries
-     and position independent executables.
+     only meaningful on ELF platforms which support shared libraries and
+     position independent executables.
 
-`-Bsymbolic-functions'
+'-Bsymbolic-functions'
      When creating a shared library, bind references to global function
      symbols to the definition within the shared library, if any.  This
-     option can also be used with the `--export-dynamic' option, when
+     option can also be used with the '--export-dynamic' option, when
      creating a position independent executable, to bind references to
      global function symbols to the definition within the executable.
      This option is only meaningful on ELF platforms which support
      shared libraries and position independent executables.
 
-`--dynamic-list=DYNAMIC-LIST-FILE'
+'--dynamic-list=DYNAMIC-LIST-FILE'
      Specify the name of a dynamic list file to the linker.  This is
      typically used when creating shared libraries to specify a list of
      global symbols whose references shouldn't be bound to the
@@ -1025,45 +1011,45 @@ GNU linker:
      meaningful on ELF platforms which support shared libraries.
 
      The format of the dynamic list is the same as the version node
-     without scope and node name.  See *Note VERSION:: for more
+     without scope and node name.  See *note VERSION:: for more
      information.
 
-`--dynamic-list-data'
+'--dynamic-list-data'
      Include all global data symbols to the dynamic list.
 
-`--dynamic-list-cpp-new'
+'--dynamic-list-cpp-new'
      Provide the builtin dynamic list for C++ operator new and delete.
      It is mainly useful for building shared libstdc++.
 
-`--dynamic-list-cpp-typeinfo'
+'--dynamic-list-cpp-typeinfo'
      Provide the builtin dynamic list for C++ runtime type
      identification.
 
-`--check-sections'
-`--no-check-sections'
+'--check-sections'
+'--no-check-sections'
      Asks the linker _not_ to check section addresses after they have
      been assigned to see if there are any overlaps.  Normally the
      linker will perform this check, and if it finds any overlaps it
      will produce suitable error messages.  The linker does know about,
      and does make allowances for sections in overlays.  The default
      behaviour can be restored by using the command line switch
-     `--check-sections'.  Section overlap is not usually checked for
+     '--check-sections'.  Section overlap is not usually checked for
      relocatable links.  You can force checking in that case by using
-     the `--check-sections' option.
+     the '--check-sections' option.
 
-`--copy-dt-needed-entries'
-`--no-copy-dt-needed-entries'
+'--copy-dt-needed-entries'
+'--no-copy-dt-needed-entries'
      This option affects the treatment of dynamic libraries referred to
      by DT_NEEDED tags _inside_ ELF dynamic libraries mentioned on the
      command line.  Normally the linker won't add a DT_NEEDED tag to the
      output binary for each library mentioned in a DT_NEEDED tag in an
-     input dynamic library.  With `--copy-dt-needed-entries' specified
+     input dynamic library.  With '--copy-dt-needed-entries' specified
      on the command line however any dynamic libraries that follow it
-     will have their DT_NEEDED entries added.  The default behaviour
-     can be restored with `--no-copy-dt-needed-entries'.
+     will have their DT_NEEDED entries added.  The default behaviour can
+     be restored with '--no-copy-dt-needed-entries'.
 
      This option also has an effect on the resolution of symbols in
-     dynamic libraries.  With `--copy-dt-needed-entries' dynamic
+     dynamic libraries.  With '--copy-dt-needed-entries' dynamic
      libraries mentioned on the command line will be recursively
      searched, following their DT_NEEDED tags to other libraries, in
      order to resolve symbols required by the output binary.  With the
@@ -1071,98 +1057,98 @@ GNU linker:
      follow it will stop with the dynamic library itself.  No DT_NEEDED
      links will be traversed to resolve symbols.
 
-`--cref'
+'--cref'
      Output a cross reference table.  If a linker map file is being
      generated, the cross reference table is printed to the map file.
      Otherwise, it is printed on the standard output.
 
      The format of the table is intentionally simple, so that it may be
-     easily processed by a script if necessary.  The symbols are
-     printed out, sorted by name.  For each symbol, a list of file
-     names is given.  If the symbol is defined, the first file listed
-     is the location of the definition.  If the symbol is defined as a
-     common value then any files where this happens appear next.
-     Finally any files that reference the symbol are listed.
-
-`--no-define-common'
+     easily processed by a script if necessary.  The symbols are printed
+     out, sorted by name.  For each symbol, a list of file names is
+     given.  If the symbol is defined, the first file listed is the
+     location of the definition.  If the symbol is defined as a common
+     value then any files where this happens appear next.  Finally any
+     files that reference the symbol are listed.
+
+'--no-define-common'
      This option inhibits the assignment of addresses to common symbols.
-     The script command `INHIBIT_COMMON_ALLOCATION' has the same effect.
+     The script command 'INHIBIT_COMMON_ALLOCATION' has the same effect.
      *Note Miscellaneous Commands::.
 
-     The `--no-define-common' option allows decoupling the decision to
+     The '--no-define-common' option allows decoupling the decision to
      assign addresses to Common symbols from the choice of the output
-     file type; otherwise a non-Relocatable output type forces
-     assigning addresses to Common symbols.  Using `--no-define-common'
-     allows Common symbols that are referenced from a shared library to
-     be assigned addresses only in the main program.  This eliminates
-     the unused duplicate space in the shared library, and also
-     prevents any possible confusion over resolving to the wrong
-     duplicate when there are many dynamic modules with specialized
-     search paths for runtime symbol resolution.
-
-`--defsym=SYMBOL=EXPRESSION'
+     file type; otherwise a non-Relocatable output type forces assigning
+     addresses to Common symbols.  Using '--no-define-common' allows
+     Common symbols that are referenced from a shared library to be
+     assigned addresses only in the main program.  This eliminates the
+     unused duplicate space in the shared library, and also prevents any
+     possible confusion over resolving to the wrong duplicate when there
+     are many dynamic modules with specialized search paths for runtime
+     symbol resolution.
+
+'--defsym=SYMBOL=EXPRESSION'
      Create a global symbol in the output file, containing the absolute
-     address given by EXPRESSION.  You may use this option as many
-     times as necessary to define multiple symbols in the command line.
-     A limited form of arithmetic is supported for the EXPRESSION in
-     this context: you may give a hexadecimal constant or the name of
-     an existing symbol, or use `+' and `-' to add or subtract
-     hexadecimal constants or symbols.  If you need more elaborate
-     expressions, consider using the linker command language from a
-     script (*note Assignments::).  _Note:_ there should be no white
-     space between SYMBOL, the equals sign ("<=>"), and EXPRESSION.
-
-`--demangle[=STYLE]'
-`--no-demangle'
+     address given by EXPRESSION.  You may use this option as many times
+     as necessary to define multiple symbols in the command line.  A
+     limited form of arithmetic is supported for the EXPRESSION in this
+     context: you may give a hexadecimal constant or the name of an
+     existing symbol, or use '+' and '-' to add or subtract hexadecimal
+     constants or symbols.  If you need more elaborate expressions,
+     consider using the linker command language from a script (*note
+     Assignments::).  _Note:_ there should be no white space between
+     SYMBOL, the equals sign ("<=>"), and EXPRESSION.
+
+'--demangle[=STYLE]'
+'--no-demangle'
      These options control whether to demangle symbol names in error
-     messages and other output.  When the linker is told to demangle,
-     it tries to present symbol names in a readable fashion: it strips
-     leading underscores if they are used by the object file format,
-     and converts C++ mangled symbol names into user readable names.
+     messages and other output.  When the linker is told to demangle, it
+     tries to present symbol names in a readable fashion: it strips
+     leading underscores if they are used by the object file format, and
+     converts C++ mangled symbol names into user readable names.
      Different compilers have different mangling styles.  The optional
      demangling style argument can be used to choose an appropriate
      demangling style for your compiler.  The linker will demangle by
-     default unless the environment variable `COLLECT_NO_DEMANGLE' is
+     default unless the environment variable 'COLLECT_NO_DEMANGLE' is
      set.  These options may be used to override the default.
 
-`-IFILE'
-`--dynamic-linker=FILE'
+'-IFILE'
+'--dynamic-linker=FILE'
      Set the name of the dynamic linker.  This is only meaningful when
      generating dynamically linked ELF executables.  The default dynamic
-     linker is normally correct; don't use this unless you know what
-     you are doing.
+     linker is normally correct; don't use this unless you know what you
+     are doing.
 
-`--no-dynamic-linker'
+'--no-dynamic-linker'
      When producing an executable file, omit the request for a dynamic
      linker to be used at load-time.  This is only meaningful for ELF
      executables that contain dynamic relocations, and usually requires
      entry point code that is capable of processing these relocations.
 
-`--fatal-warnings'
-`--no-fatal-warnings'
+'--fatal-warnings'
+'--no-fatal-warnings'
      Treat all warnings as errors.  The default behaviour can be
-     restored with the option `--no-fatal-warnings'.
+     restored with the option '--no-fatal-warnings'.
 
-`--force-exe-suffix'
+'--force-exe-suffix'
      Make sure that an output file has a .exe suffix.
 
      If a successfully built fully linked output file does not have a
-     `.exe' or `.dll' suffix, this option forces the linker to copy the
-     output file to one of the same name with a `.exe' suffix. This
+     '.exe' or '.dll' suffix, this option forces the linker to copy the
+     output file to one of the same name with a '.exe' suffix.  This
      option is useful when using unmodified Unix makefiles on a
-     Microsoft Windows host, since some versions of Windows won't run
-     an image unless it ends in a `.exe' suffix.
+     Microsoft Windows host, since some versions of Windows won't run an
+     image unless it ends in a '.exe' suffix.
 
-`--gc-sections'
-`--no-gc-sections'
+'--gc-sections'
+'--no-gc-sections'
      Enable garbage collection of unused input sections.  It is ignored
      on targets that do not support this option.  The default behaviour
      (of not performing this garbage collection) can be restored by
-     specifying `--no-gc-sections' on the command line.  Note that
-     garbage collection for COFF and PE format targets is supported,
-     but the implementation is currently considered to be experimental.
+     specifying '--no-gc-sections' on the command line.  Note that
+     garbage collection for COFF and PE format targets is supported, but
+     the implementation is currently considered to be experimental.
 
-     `--gc-sections' decides which input sections are used by examining
+     '--gc-sections' decides which input sections are used by examining
      symbols and relocations.  The section containing the entry symbol
      and all sections containing symbols undefined on the command-line
      will be kept, as will sections containing symbols referenced by
@@ -1170,103 +1156,102 @@ GNU linker:
      linker must assume that any visible symbol is referenced.  Once
      this initial set of sections has been determined, the linker
      recursively marks as used any section referenced by their
-     relocations.  See `--entry' and `--undefined'.
+     relocations.  See '--entry' and '--undefined'.
 
      This option can be set when doing a partial link (enabled with
-     option `-r').  In this case the root of symbols kept must be
-     explicitly specified either by an `--entry' or `--undefined'
-     option or by a `ENTRY' command in the linker script.
+     option '-r').  In this case the root of symbols kept must be
+     explicitly specified either by an '--entry' or '--undefined' option
+     or by a 'ENTRY' command in the linker script.
 
-`--print-gc-sections'
-`--no-print-gc-sections'
+'--print-gc-sections'
+'--no-print-gc-sections'
      List all sections removed by garbage collection.  The listing is
      printed on stderr.  This option is only effective if garbage
-     collection has been enabled via the `--gc-sections') option.  The
+     collection has been enabled via the '--gc-sections') option.  The
      default behaviour (of not listing the sections that are removed)
-     can be restored by specifying `--no-print-gc-sections' on the
+     can be restored by specifying '--no-print-gc-sections' on the
      command line.
 
-`--gc-keep-exported'
-     When `--gc-sections' is enabled, this option prevents garbage
+'--gc-keep-exported'
+     When '--gc-sections' is enabled, this option prevents garbage
      collection of unused input sections that contain global symbols
-     having default or protected visibility.  This option is intended
-     to be used for executables where unreferenced sections would
-     otherwise be garbage collected regardless of the external
-     visibility of contained symbols.  Note that this option has no
-     effect when linking shared objects since it is already the default
-     behaviour.  This option is only supported for ELF format targets.
-
-`--print-output-format'
+     having default or protected visibility.  This option is intended to
+     be used for executables where unreferenced sections would otherwise
+     be garbage collected regardless of the external visibility of
+     contained symbols.  Note that this option has no effect when
+     linking shared objects since it is already the default behaviour.
+     This option is only supported for ELF format targets.
+
+'--print-output-format'
      Print the name of the default output format (perhaps influenced by
      other command-line options).  This is the string that would appear
-     in an `OUTPUT_FORMAT' linker script command (*note File
+     in an 'OUTPUT_FORMAT' linker script command (*note File
      Commands::).
 
-`--print-memory-usage'
-     Print used size, total size and used size of memory regions
-     created with the *Note MEMORY:: command.  This is useful on
-     embedded targets to have a quick view of amount of free memory.
-     The format of the output has one headline and one line per region.
-     It is both human readable and easily parsable by tools.  Here is
-     an example of an output:
+'--print-memory-usage'
+     Print used size, total size and used size of memory regions created
+     with the *note MEMORY:: command.  This is useful on embedded
+     targets to have a quick view of amount of free memory.  The format
+     of the output has one headline and one line per region.  It is both
+     human readable and easily parsable by tools.  Here is an example of
+     an output:
 
           Memory region         Used Size  Region Size  %age Used
                        ROM:        256 KB         1 MB     25.00%
                        RAM:          32 B         2 GB      0.00%
 
-`--help'
+'--help'
      Print a summary of the command-line options on the standard output
      and exit.
 
-`--target-help'
+'--target-help'
      Print a summary of all target specific options on the standard
      output and exit.
 
-`-Map=MAPFILE'
+'-Map=MAPFILE'
      Print a link map to the file MAPFILE.  See the description of the
-     `-M' option, above.
+     '-M' option, above.
 
-`--no-keep-memory'
-     `ld' normally optimizes for speed over memory usage by caching the
-     symbol tables of input files in memory.  This option tells `ld' to
+'--no-keep-memory'
+     'ld' normally optimizes for speed over memory usage by caching the
+     symbol tables of input files in memory.  This option tells 'ld' to
      instead optimize for memory usage, by rereading the symbol tables
-     as necessary.  This may be required if `ld' runs out of memory
+     as necessary.  This may be required if 'ld' runs out of memory
      space while linking a large executable.
 
-`--no-undefined'
-`-z defs'
+'--no-undefined'
+'-z defs'
      Report unresolved symbol references from regular object files.
      This is done even if the linker is creating a non-symbolic shared
-     library.  The switch `--[no-]allow-shlib-undefined' controls the
+     library.  The switch '--[no-]allow-shlib-undefined' controls the
      behaviour for reporting unresolved references found in shared
      libraries being linked in.
 
-`--allow-multiple-definition'
-`-z muldefs'
+'--allow-multiple-definition'
+'-z muldefs'
      Normally when a symbol is defined multiple times, the linker will
-     report a fatal error. These options allow multiple definitions and
+     report a fatal error.  These options allow multiple definitions and
      the first definition will be used.
 
-`--allow-shlib-undefined'
-`--no-allow-shlib-undefined'
+'--allow-shlib-undefined'
+'--no-allow-shlib-undefined'
      Allows or disallows undefined symbols in shared libraries.  This
-     switch is similar to `--no-undefined' except that it determines
-     the behaviour when the undefined symbols are in a shared library
-     rather than a regular object file.  It does not affect how
-     undefined symbols in regular object files are handled.
+     switch is similar to '--no-undefined' except that it determines the
+     behaviour when the undefined symbols are in a shared library rather
+     than a regular object file.  It does not affect how undefined
+     symbols in regular object files are handled.
 
      The default behaviour is to report errors for any undefined symbols
      referenced in shared libraries if the linker is being used to
-     create an executable, but to allow them if the linker is being
-     used to create a shared library.
+     create an executable, but to allow them if the linker is being used
+     to create a shared library.
 
      The reasons for allowing undefined symbol references in shared
      libraries specified at link time are that:
 
-        * A shared library specified at link time may not be the same
-          as the one that is available at load time, so the symbol
-          might actually be resolvable at load time.
-
+        * A shared library specified at link time may not be the same as
+          the one that is available at load time, so the symbol might
+          actually be resolvable at load time.
         * There are some operating systems, eg BeOS and HPPA, where
           undefined symbols in shared libraries are normal.
 
@@ -1275,72 +1260,71 @@ GNU linker:
           current architecture.  This is used, for example, to
           dynamically select an appropriate memset function.
 
-`--no-undefined-version'
+'--no-undefined-version'
      Normally when a symbol has an undefined version, the linker will
-     ignore it. This option disallows symbols with undefined version
+     ignore it.  This option disallows symbols with undefined version
      and a fatal error will be issued instead.
 
-`--default-symver'
+'--default-symver'
      Create and use a default symbol version (the soname) for
      unversioned exported symbols.
 
-`--default-imported-symver'
+'--default-imported-symver'
      Create and use a default symbol version (the soname) for
      unversioned imported symbols.
 
-`--no-warn-mismatch'
-     Normally `ld' will give an error if you try to link together input
+'--no-warn-mismatch'
+     Normally 'ld' will give an error if you try to link together input
      files that are mismatched for some reason, perhaps because they
      have been compiled for different processors or for different
-     endiannesses.  This option tells `ld' that it should silently
+     endiannesses.  This option tells 'ld' that it should silently
      permit such possible errors.  This option should only be used with
-     care, in cases when you have taken some special action that
-     ensures that the linker errors are inappropriate.
+     care, in cases when you have taken some special action that ensures
+     that the linker errors are inappropriate.
 
-`--no-warn-search-mismatch'
-     Normally `ld' will give a warning if it finds an incompatible
+'--no-warn-search-mismatch'
+     Normally 'ld' will give a warning if it finds an incompatible
      library during a library search.  This option silences the warning.
 
-`--no-whole-archive'
-     Turn off the effect of the `--whole-archive' option for subsequent
+'--no-whole-archive'
+     Turn off the effect of the '--whole-archive' option for subsequent
      archive files.
 
-`--noinhibit-exec'
+'--noinhibit-exec'
      Retain the executable output file whenever it is still usable.
      Normally, the linker will not produce an output file if it
-     encounters errors during the link process; it exits without
-     writing an output file when it issues any error whatsoever.
-
-`-nostdlib'
-     Only search library directories explicitly specified on the
-     command line.  Library directories specified in linker scripts
-     (including linker scripts specified on the command line) are
-     ignored.
-
-`--oformat=OUTPUT-FORMAT'
-     `ld' may be configured to support more than one kind of object
-     file.  If your `ld' is configured this way, you can use the
-     `--oformat' option to specify the binary format for the output
-     object file.  Even when `ld' is configured to support alternative
-     object formats, you don't usually need to specify this, as `ld'
+     encounters errors during the link process; it exits without writing
+     an output file when it issues any error whatsoever.
+
+'-nostdlib'
+     Only search library directories explicitly specified on the command
+     line.  Library directories specified in linker scripts (including
+     linker scripts specified on the command line) are ignored.
+
+'--oformat=OUTPUT-FORMAT'
+     'ld' may be configured to support more than one kind of object
+     file.  If your 'ld' is configured this way, you can use the
+     '--oformat' option to specify the binary format for the output
+     object file.  Even when 'ld' is configured to support alternative
+     object formats, you don't usually need to specify this, as 'ld'
      should be configured to produce as a default output format the most
      usual format on each machine.  OUTPUT-FORMAT is a text string, the
      name of a particular format supported by the BFD libraries.  (You
-     can list the available binary formats with `objdump -i'.)  The
-     script command `OUTPUT_FORMAT' can also specify the output format,
+     can list the available binary formats with 'objdump -i'.)  The
+     script command 'OUTPUT_FORMAT' can also specify the output format,
      but this option overrides it.  *Note BFD::.
 
-`--out-implib FILE'
+'--out-implib FILE'
      Create an import library in FILE corresponding to the executable
-     the linker is generating (eg. a DLL or ELF program).  This import
-     library (which should be called `*.dll.a' or `*.a' for DLLs) may
-     be used to link clients against the generated executable; this
+     the linker is generating (eg.  a DLL or ELF program).  This import
+     library (which should be called '*.dll.a' or '*.a' for DLLs) may be
+     used to link clients against the generated executable; this
      behaviour makes it possible to skip a separate import library
-     creation step (eg. `dlltool' for DLLs).  This option is only
+     creation step (eg.  'dlltool' for DLLs).  This option is only
      available for the i386 PE and ELF targetted ports of the linker.
 
-`-pie'
-`--pic-executable'
+'-pie'
+'--pic-executable'
      Create a position independent executable.  This is currently only
      supported on ELF platforms.  Position independent executables are
      similar to shared libraries in that they are relocated by the
@@ -1349,175 +1333,168 @@ GNU linker:
      linked executables they can be executed and symbols defined in the
      executable cannot be overridden by shared libraries.
 
-`-qmagic'
+'-qmagic'
      This option is ignored for Linux compatibility.
 
-`-Qy'
+'-Qy'
      This option is ignored for SVR4 compatibility.
 
-`--relax'
-`--no-relax'
+'--relax'
+'--no-relax'
      An option with machine dependent effects.  This option is only
-     supported on a few targets.  *Note `ld' and the H8/300: H8/300.
-     *Note `ld' and the Intel 960 family: i960.  *Note `ld' and Xtensa
-     Processors: Xtensa.  *Note `ld' and the 68HC11 and 68HC12:
-     M68HC11/68HC12.  *Note `ld' and the Altera Nios II: Nios II.
-     *Note `ld' and PowerPC 32-bit ELF Support: PowerPC ELF32.
+     supported on a few targets.  *Note 'ld' and the H8/300: H8/300.
+     *Note 'ld' and the Intel 960 family: i960.  *Note 'ld' and Xtensa
+     Processors: Xtensa.  *Note 'ld' and the 68HC11 and 68HC12:
+     M68HC11/68HC12.  *Note 'ld' and the Altera Nios II: Nios II. *Note
+     'ld' and PowerPC 32-bit ELF Support: PowerPC ELF32.
 
-     On some platforms the `--relax' option performs target specific,
+     On some platforms the '--relax' option performs target specific,
      global optimizations that become possible when the linker resolves
      addressing in the program, such as relaxing address modes,
      synthesizing new instructions, selecting shorter version of current
      instructions, and combining constant values.
 
      On some platforms these link time global optimizations may make
-     symbolic debugging of the resulting executable impossible.  This
-     is known to be the case for the Matsushita MN10200 and MN10300
-     family of processors.
+     symbolic debugging of the resulting executable impossible.  This is
+     known to be the case for the Matsushita MN10200 and MN10300 family
+     of processors.
 
-     On platforms where this is not supported, `--relax' is accepted,
+     On platforms where this is not supported, '--relax' is accepted,
      but ignored.
 
-     On platforms where `--relax' is accepted the option `--no-relax'
+     On platforms where '--relax' is accepted the option '--no-relax'
      can be used to disable the feature.
 
-`--retain-symbols-file=FILENAME'
+'--retain-symbols-file=FILENAME'
      Retain _only_ the symbols listed in the file FILENAME, discarding
      all others.  FILENAME is simply a flat file, with one symbol name
      per line.  This option is especially useful in environments (such
      as VxWorks) where a large global symbol table is accumulated
      gradually, to conserve run-time memory.
 
-     `--retain-symbols-file' does _not_ discard undefined symbols, or
+     '--retain-symbols-file' does _not_ discard undefined symbols, or
      symbols needed for relocations.
 
-     You may only specify `--retain-symbols-file' once in the command
-     line.  It overrides `-s' and `-S'.
+     You may only specify '--retain-symbols-file' once in the command
+     line.  It overrides '-s' and '-S'.
 
-`-rpath=DIR'
+'-rpath=DIR'
      Add a directory to the runtime library search path.  This is used
-     when linking an ELF executable with shared objects.  All `-rpath'
+     when linking an ELF executable with shared objects.  All '-rpath'
      arguments are concatenated and passed to the runtime linker, which
-     uses them to locate shared objects at runtime.  The `-rpath'
-     option is also used when locating shared objects which are needed
-     by shared objects explicitly included in the link; see the
-     description of the `-rpath-link' option.  If `-rpath' is not used
-     when linking an ELF executable, the contents of the environment
-     variable `LD_RUN_PATH' will be used if it is defined.
-
-     The `-rpath' option may also be used on SunOS.  By default, on
+     uses them to locate shared objects at runtime.  The '-rpath' option
+     is also used when locating shared objects which are needed by
+     shared objects explicitly included in the link; see the description
+     of the '-rpath-link' option.  If '-rpath' is not used when linking
+     an ELF executable, the contents of the environment variable
+     'LD_RUN_PATH' will be used if it is defined.
+
+     The '-rpath' option may also be used on SunOS. By default, on
      SunOS, the linker will form a runtime search path out of all the
-     `-L' options it is given.  If a `-rpath' option is used, the
-     runtime search path will be formed exclusively using the `-rpath'
-     options, ignoring the `-L' options.  This can be useful when using
-     gcc, which adds many `-L' options which may be on NFS mounted file
+     '-L' options it is given.  If a '-rpath' option is used, the
+     runtime search path will be formed exclusively using the '-rpath'
+     options, ignoring the '-L' options.  This can be useful when using
+     gcc, which adds many '-L' options which may be on NFS mounted file
      systems.
 
-     For compatibility with other ELF linkers, if the `-R' option is
+     For compatibility with other ELF linkers, if the '-R' option is
      followed by a directory name, rather than a file name, it is
-     treated as the `-rpath' option.
+     treated as the '-rpath' option.
 
-`-rpath-link=DIR'
+'-rpath-link=DIR'
      When using ELF or SunOS, one shared library may require another.
-     This happens when an `ld -shared' link includes a shared library
-     as one of the input files.
+     This happens when an 'ld -shared' link includes a shared library as
+     one of the input files.
 
      When the linker encounters such a dependency when doing a
      non-shared, non-relocatable link, it will automatically try to
      locate the required shared library and include it in the link, if
-     it is not included explicitly.  In such a case, the `-rpath-link'
+     it is not included explicitly.  In such a case, the '-rpath-link'
      option specifies the first set of directories to search.  The
-     `-rpath-link' option may specify a sequence of directory names
+     '-rpath-link' option may specify a sequence of directory names
      either by specifying a list of names separated by colons, or by
      appearing multiple times.
 
-     The tokens $ORIGIN and $LIB can appear in these search
-     directories.  They will be replaced by the full path to the
-     directory containing the program or shared object in the case of
-     $ORIGIN and either `lib' - for 32-bit binaries - or `lib64' - for
-     64-bit binaries - in the case of $LIB.
+     The tokens $ORIGIN and $LIB can appear in these search directories.
+     They will be replaced by the full path to the directory containing
+     the program or shared object in the case of $ORIGIN and either
+     'lib' - for 32-bit binaries - or 'lib64' - for 64-bit binaries - in
+     the case of $LIB.
 
      The alternative form of these tokens - ${ORIGIN} and ${LIB} can
      also be used.  The token $PLATFORM is not supported.
 
      This option should be used with caution as it overrides the search
-     path that may have been hard compiled into a shared library. In
+     path that may have been hard compiled into a shared library.  In
      such a case it is possible to use unintentionally a different
      search path than the runtime linker would do.
 
      The linker uses the following search paths to locate required
      shared libraries:
-       1. Any directories specified by `-rpath-link' options.
-
-       2. Any directories specified by `-rpath' options.  The difference
-          between `-rpath' and `-rpath-link' is that directories
-          specified by `-rpath' options are included in the executable
-          and used at runtime, whereas the `-rpath-link' option is only
-          effective at link time. Searching `-rpath' in this way is
+       1. Any directories specified by '-rpath-link' options.
+       2. Any directories specified by '-rpath' options.  The difference
+          between '-rpath' and '-rpath-link' is that directories
+          specified by '-rpath' options are included in the executable
+          and used at runtime, whereas the '-rpath-link' option is only
+          effective at link time.  Searching '-rpath' in this way is
           only supported by native linkers and cross linkers which have
-          been configured with the `--with-sysroot' option.
-
-       3. On an ELF system, for native linkers, if the `-rpath' and
-          `-rpath-link' options were not used, search the contents of
-          the environment variable `LD_RUN_PATH'.
-
-       4. On SunOS, if the `-rpath' option was not used, search any
-          directories specified using `-L' options.
-
+          been configured with the '--with-sysroot' option.
+       3. On an ELF system, for native linkers, if the '-rpath' and
+          '-rpath-link' options were not used, search the contents of
+          the environment variable 'LD_RUN_PATH'.
+       4. On SunOS, if the '-rpath' option was not used, search any
+          directories specified using '-L' options.
        5. For a native linker, search the contents of the environment
-          variable `LD_LIBRARY_PATH'.
-
-       6. For a native ELF linker, the directories in `DT_RUNPATH' or
-          `DT_RPATH' of a shared library are searched for shared
-          libraries needed by it. The `DT_RPATH' entries are ignored if
-          `DT_RUNPATH' entries exist.
-
-       7. The default directories, normally `/lib' and `/usr/lib'.
-
+          variable 'LD_LIBRARY_PATH'.
+       6. For a native ELF linker, the directories in 'DT_RUNPATH' or
+          'DT_RPATH' of a shared library are searched for shared
+          libraries needed by it.  The 'DT_RPATH' entries are ignored if
+          'DT_RUNPATH' entries exist.
+       7. The default directories, normally '/lib' and '/usr/lib'.
        8. For a native linker on an ELF system, if the file
-          `/etc/ld.so.conf' exists, the list of directories found in
+          '/etc/ld.so.conf' exists, the list of directories found in
           that file.
 
      If the required shared library is not found, the linker will issue
      a warning and continue with the link.
 
-`-shared'
-`-Bshareable'
+'-shared'
+'-Bshareable'
      Create a shared library.  This is currently only supported on ELF,
-     XCOFF and SunOS platforms.  On SunOS, the linker will
-     automatically create a shared library if the `-e' option is not
-     used and there are undefined symbols in the link.
-
-`--sort-common'
-`--sort-common=ascending'
-`--sort-common=descending'
-     This option tells `ld' to sort the common symbols by alignment in
+     XCOFF and SunOS platforms.  On SunOS, the linker will automatically
+     create a shared library if the '-e' option is not used and there
+     are undefined symbols in the link.
+
+'--sort-common'
+'--sort-common=ascending'
+'--sort-common=descending'
+     This option tells 'ld' to sort the common symbols by alignment in
      ascending or descending order when it places them in the
      appropriate output sections.  The symbol alignments considered are
      sixteen-byte or larger, eight-byte, four-byte, two-byte, and
-     one-byte. This is to prevent gaps between symbols due to alignment
+     one-byte.  This is to prevent gaps between symbols due to alignment
      constraints.  If no sorting order is specified, then descending
      order is assumed.
 
-`--sort-section=name'
-     This option will apply `SORT_BY_NAME' to all wildcard section
+'--sort-section=name'
+     This option will apply 'SORT_BY_NAME' to all wildcard section
      patterns in the linker script.
 
-`--sort-section=alignment'
-     This option will apply `SORT_BY_ALIGNMENT' to all wildcard section
+'--sort-section=alignment'
+     This option will apply 'SORT_BY_ALIGNMENT' to all wildcard section
      patterns in the linker script.
 
-`--split-by-file[=SIZE]'
-     Similar to `--split-by-reloc' but creates a new output section for
-     each input file when SIZE is reached.  SIZE defaults to a size of
-     1 if not given.
+'--split-by-file[=SIZE]'
+     Similar to '--split-by-reloc' but creates a new output section for
+     each input file when SIZE is reached.  SIZE defaults to a size of 1
+     if not given.
 
-`--split-by-reloc[=COUNT]'
+'--split-by-reloc[=COUNT]'
      Tries to creates extra sections in the output file so that no
      single output section in the file contains more than COUNT
-     relocations.  This is useful when generating huge relocatable
-     files for downloading into certain real time kernels with the COFF
-     object file format; since COFF cannot represent more than 65535
+     relocations.  This is useful when generating huge relocatable files
+     for downloading into certain real time kernels with the COFF object
+     file format; since COFF cannot represent more than 65535
      relocations in a single section.  Note that this will fail to work
      with object file formats which do not support arbitrary sections.
      The linker will not split up individual input sections for
@@ -1525,136 +1502,135 @@ GNU linker:
      COUNT relocations one output section will contain that many
      relocations.  COUNT defaults to a value of 32768.
 
-`--stats'
+'--stats'
      Compute and display statistics about the operation of the linker,
      such as execution time and memory usage.
 
-`--sysroot=DIRECTORY'
+'--sysroot=DIRECTORY'
      Use DIRECTORY as the location of the sysroot, overriding the
      configure-time default.  This option is only supported by linkers
-     that were configured using `--with-sysroot'.
+     that were configured using '--with-sysroot'.
 
-`--traditional-format'
-     For some targets, the output of `ld' is different in some ways from
-     the output of some existing linker.  This switch requests `ld' to
+'--traditional-format'
+     For some targets, the output of 'ld' is different in some ways from
+     the output of some existing linker.  This switch requests 'ld' to
      use the traditional format instead.
 
-     For example, on SunOS, `ld' combines duplicate entries in the
+     For example, on SunOS, 'ld' combines duplicate entries in the
      symbol string table.  This can reduce the size of an output file
-     with full debugging information by over 30 percent.
-     Unfortunately, the SunOS `dbx' program can not read the resulting
-     program (`gdb' has no trouble).  The `--traditional-format' switch
-     tells `ld' to not combine duplicate entries.
+     with full debugging information by over 30 percent.  Unfortunately,
+     the SunOS 'dbx' program can not read the resulting program ('gdb'
+     has no trouble).  The '--traditional-format' switch tells 'ld' to
+     not combine duplicate entries.
 
-`--section-start=SECTIONNAME=ORG'
+'--section-start=SECTIONNAME=ORG'
      Locate a section in the output file at the absolute address given
      by ORG.  You may use this option as many times as necessary to
-     locate multiple sections in the command line.  ORG must be a
-     single hexadecimal integer; for compatibility with other linkers,
-     you may omit the leading `0x' usually associated with hexadecimal
-     values.  _Note:_ there should be no white space between
-     SECTIONNAME, the equals sign ("<=>"), and ORG.
-
-`-Tbss=ORG'
-`-Tdata=ORG'
-`-Ttext=ORG'
-     Same as `--section-start', with `.bss', `.data' or `.text' as the
+     locate multiple sections in the command line.  ORG must be a single
+     hexadecimal integer; for compatibility with other linkers, you may
+     omit the leading '0x' usually associated with hexadecimal values.
+     _Note:_ there should be no white space between SECTIONNAME, the
+     equals sign ("<=>"), and ORG.
+
+'-Tbss=ORG'
+'-Tdata=ORG'
+'-Ttext=ORG'
+     Same as '--section-start', with '.bss', '.data' or '.text' as the
      SECTIONNAME.
 
-`-Ttext-segment=ORG'
+'-Ttext-segment=ORG'
      When creating an ELF executable, it will set the address of the
      first byte of the text segment.
 
-`-Trodata-segment=ORG'
+'-Trodata-segment=ORG'
      When creating an ELF executable or shared object for a target where
      the read-only data is in its own segment separate from the
      executable text, it will set the address of the first byte of the
      read-only data segment.
 
-`-Tldata-segment=ORG'
+'-Tldata-segment=ORG'
      When creating an ELF executable or shared object for x86-64 medium
      memory model, it will set the address of the first byte of the
      ldata segment.
 
-`--unresolved-symbols=METHOD'
+'--unresolved-symbols=METHOD'
      Determine how to handle unresolved symbols.  There are four
-     possible values for `method':
+     possible values for 'method':
 
-    `ignore-all'
+     'ignore-all'
           Do not report any unresolved symbols.
 
-    `report-all'
+     'report-all'
           Report all unresolved symbols.  This is the default.
 
-    `ignore-in-object-files'
+     'ignore-in-object-files'
           Report unresolved symbols that are contained in shared
           libraries, but ignore them if they come from regular object
           files.
 
-    `ignore-in-shared-libs'
-          Report unresolved symbols that come from regular object
-          files, but ignore them if they come from shared libraries.
-          This can be useful when creating a dynamic binary and it is
-          known that all the shared libraries that it should be
-          referencing are included on the linker's command line.
+     'ignore-in-shared-libs'
+          Report unresolved symbols that come from regular object files,
+          but ignore them if they come from shared libraries.  This can
+          be useful when creating a dynamic binary and it is known that
+          all the shared libraries that it should be referencing are
+          included on the linker's command line.
 
      The behaviour for shared libraries on their own can also be
-     controlled by the `--[no-]allow-shlib-undefined' option.
+     controlled by the '--[no-]allow-shlib-undefined' option.
 
      Normally the linker will generate an error message for each
      reported unresolved symbol but the option
-     `--warn-unresolved-symbols' can change this to a warning.
+     '--warn-unresolved-symbols' can change this to a warning.
 
-`--dll-verbose'
-`--verbose[=NUMBER]'
-     Display the version number for `ld' and list the linker emulations
+'--dll-verbose'
+'--verbose[=NUMBER]'
+     Display the version number for 'ld' and list the linker emulations
      supported.  Display which input files can and cannot be opened.
-     Display the linker script being used by the linker. If the
+     Display the linker script being used by the linker.  If the
      optional NUMBER argument > 1, plugin symbol status will also be
      displayed.
 
-`--version-script=VERSION-SCRIPTFILE'
+'--version-script=VERSION-SCRIPTFILE'
      Specify the name of a version script to the linker.  This is
-     typically used when creating shared libraries to specify
-     additional information about the version hierarchy for the library
-     being created.  This option is only fully supported on ELF
-     platforms which support shared libraries; see *Note VERSION::.  It
-     is partially supported on PE platforms, which can use version
-     scripts to filter symbol visibility in auto-export mode: any
-     symbols marked `local' in the version script will not be exported.
-     *Note WIN32::.
-
-`--warn-common'
-     Warn when a common symbol is combined with another common symbol
-     or with a symbol definition.  Unix linkers allow this somewhat
-     sloppy practice, but linkers on some other operating systems do
-     not.  This option allows you to find potential problems from
-     combining global symbols.  Unfortunately, some C libraries use
-     this practice, so you may get some warnings about symbols in the
-     libraries as well as in your programs.
+     typically used when creating shared libraries to specify additional
+     information about the version hierarchy for the library being
+     created.  This option is only fully supported on ELF platforms
+     which support shared libraries; see *note VERSION::.  It is
+     partially supported on PE platforms, which can use version scripts
+     to filter symbol visibility in auto-export mode: any symbols marked
+     'local' in the version script will not be exported.  *Note WIN32::.
+
+'--warn-common'
+     Warn when a common symbol is combined with another common symbol or
+     with a symbol definition.  Unix linkers allow this somewhat sloppy
+     practice, but linkers on some other operating systems do not.  This
+     option allows you to find potential problems from combining global
+     symbols.  Unfortunately, some C libraries use this practice, so you
+     may get some warnings about symbols in the libraries as well as in
+     your programs.
 
      There are three kinds of global symbols, illustrated here by C
      examples:
 
-    `int i = 1;'
+     'int i = 1;'
           A definition, which goes in the initialized data section of
           the output file.
 
-    `extern int i;'
+     'extern int i;'
           An undefined reference, which does not allocate space.  There
           must be either a definition or a common symbol for the
           variable somewhere.
 
-    `int i;'
+     'int i;'
           A common symbol.  If there are only (one or more) common
-          symbols for a variable, it goes in the uninitialized data
-          area of the output file.  The linker merges multiple common
-          symbols for the same variable into a single symbol.  If they
-          are of different sizes, it picks the largest size.  The
-          linker turns a common symbol into a declaration, if there is
-          a definition of the same variable.
-
-     The `--warn-common' option can produce five kinds of warnings.
+          symbols for a variable, it goes in the uninitialized data area
+          of the output file.  The linker merges multiple common symbols
+          for the same variable into a single symbol.  If they are of
+          different sizes, it picks the largest size.  The linker turns
+          a common symbol into a declaration, if there is a definition
+          of the same variable.
+
+     The '--warn-common' option can produce five kinds of warnings.
      Each warning consists of a pair of lines: the first describes the
      symbol just encountered, and the second describes the previous
      symbol encountered with the same name.  One or both of the two
@@ -1667,9 +1643,9 @@ GNU linker:
                FILE(SECTION): warning: defined here
 
        2. Turning a common symbol into a reference, because a later
-          definition for the symbol is encountered.  This is the same
-          as the previous case, except that the symbols are encountered
-          in a different order.
+          definition for the symbol is encountered.  This is the same as
+          the previous case, except that the symbols are encountered in
+          a different order.
                FILE(SECTION): warning: definition of `SYMBOL'
                   overriding common
                FILE(SECTION): warning: common is here
@@ -1685,80 +1661,80 @@ GNU linker:
                   overridden by larger common
                FILE(SECTION): warning: larger common is here
 
-       5. Merging a common symbol with a previous smaller common
-          symbol.  This is the same as the previous case, except that
-          the symbols are encountered in a different order.
+       5. Merging a common symbol with a previous smaller common symbol.
+          This is the same as the previous case, except that the symbols
+          are encountered in a different order.
                FILE(SECTION): warning: common of `SYMBOL'
                   overriding smaller common
                FILE(SECTION): warning: smaller common is here
 
-`--warn-constructors'
+'--warn-constructors'
      Warn if any global constructors are used.  This is only useful for
      a few object file formats.  For formats like COFF or ELF, the
      linker can not detect the use of global constructors.
 
-`--warn-multiple-gp'
+'--warn-multiple-gp'
      Warn if multiple global pointer values are required in the output
      file.  This is only meaningful for certain processors, such as the
-     Alpha.  Specifically, some processors put large-valued constants
-     in a special section.  A special register (the global pointer)
-     points into the middle of this section, so that constants can be
-     loaded efficiently via a base-register relative addressing mode.
-     Since the offset in base-register relative mode is fixed and
-     relatively small (e.g., 16 bits), this limits the maximum size of
-     the constant pool.  Thus, in large programs, it is often necessary
-     to use multiple global pointer values in order to be able to
-     address all possible constants.  This option causes a warning to
-     be issued whenever this case occurs.
-
-`--warn-once'
+     Alpha.  Specifically, some processors put large-valued constants in
+     a special section.  A special register (the global pointer) points
+     into the middle of this section, so that constants can be loaded
+     efficiently via a base-register relative addressing mode.  Since
+     the offset in base-register relative mode is fixed and relatively
+     small (e.g., 16 bits), this limits the maximum size of the constant
+     pool.  Thus, in large programs, it is often necessary to use
+     multiple global pointer values in order to be able to address all
+     possible constants.  This option causes a warning to be issued
+     whenever this case occurs.
+
+'--warn-once'
      Only warn once for each undefined symbol, rather than once per
      module which refers to it.
 
-`--warn-section-align'
+'--warn-section-align'
      Warn if the address of an output section is changed because of
      alignment.  Typically, the alignment will be set by an input
      section.  The address will only be changed if it not explicitly
-     specified; that is, if the `SECTIONS' command does not specify a
+     specified; that is, if the 'SECTIONS' command does not specify a
      start address for the section (*note SECTIONS::).
 
-`--warn-shared-textrel'
+'--warn-shared-textrel'
      Warn if the linker adds a DT_TEXTREL to a shared object.
 
-`--warn-alternate-em'
+'--warn-alternate-em'
      Warn if an object has alternate ELF machine code.
 
-`--warn-unresolved-symbols'
+'--warn-unresolved-symbols'
      If the linker is going to report an unresolved symbol (see the
-     option `--unresolved-symbols') it will normally generate an error.
+     option '--unresolved-symbols') it will normally generate an error.
      This option makes it generate a warning instead.
 
-`--error-unresolved-symbols'
+'--error-unresolved-symbols'
      This restores the linker's default behaviour of generating errors
      when it is reporting unresolved symbols.
 
-`--whole-archive'
+'--whole-archive'
      For each archive mentioned on the command line after the
-     `--whole-archive' option, include every object file in the archive
+     '--whole-archive' option, include every object file in the archive
      in the link, rather than searching the archive for the required
-     object files.  This is normally used to turn an archive file into
-     a shared library, forcing every object to be included in the
+     object files.  This is normally used to turn an archive file into a
+     shared library, forcing every object to be included in the
      resulting shared library.  This option may be used more than once.
 
      Two notes when using this option from gcc: First, gcc doesn't know
-     about this option, so you have to use `-Wl,-whole-archive'.
-     Second, don't forget to use `-Wl,-no-whole-archive' after your
-     list of archives, because gcc will add its own list of archives to
-     your link and you may not want this flag to affect those as well.
+     about this option, so you have to use '-Wl,-whole-archive'.
+     Second, don't forget to use '-Wl,-no-whole-archive' after your list
+     of archives, because gcc will add its own list of archives to your
+     link and you may not want this flag to affect those as well.
 
-`--wrap=SYMBOL'
+'--wrap=SYMBOL'
      Use a wrapper function for SYMBOL.  Any undefined reference to
-     SYMBOL will be resolved to `__wrap_SYMBOL'.  Any undefined
-     reference to `__real_SYMBOL' will be resolved to SYMBOL.
+     SYMBOL will be resolved to '__wrap_SYMBOL'.  Any undefined
+     reference to '__real_SYMBOL' will be resolved to SYMBOL.
 
      This can be used to provide a wrapper for a system function.  The
-     wrapper function should be called `__wrap_SYMBOL'.  If it wishes
-     to call the system function, it should call `__real_SYMBOL'.
+     wrapper function should be called '__wrap_SYMBOL'.  If it wishes to
+     call the system function, it should call '__real_SYMBOL'.
 
      Here is a trivial example:
 
@@ -1769,39 +1745,39 @@ GNU linker:
             return __real_malloc (c);
           }
 
-     If you link other code with this file using `--wrap malloc', then
-     all calls to `malloc' will call the function `__wrap_malloc'
-     instead.  The call to `__real_malloc' in `__wrap_malloc' will call
-     the real `malloc' function.
-
-     You may wish to provide a `__real_malloc' function as well, so that
-     links without the `--wrap' option will succeed.  If you do this,
-     you should not put the definition of `__real_malloc' in the same
-     file as `__wrap_malloc'; if you do, the assembler may resolve the
-     call before the linker has a chance to wrap it to `malloc'.
-
-`--eh-frame-hdr'
-`--no-eh-frame-hdr'
-     Request (`--eh-frame-hdr') or suppress (`--no-eh-frame-hdr') the
-     creation of `.eh_frame_hdr' section and ELF `PT_GNU_EH_FRAME'
+     If you link other code with this file using '--wrap malloc', then
+     all calls to 'malloc' will call the function '__wrap_malloc'
+     instead.  The call to '__real_malloc' in '__wrap_malloc' will call
+     the real 'malloc' function.
+
+     You may wish to provide a '__real_malloc' function as well, so that
+     links without the '--wrap' option will succeed.  If you do this,
+     you should not put the definition of '__real_malloc' in the same
+     file as '__wrap_malloc'; if you do, the assembler may resolve the
+     call before the linker has a chance to wrap it to 'malloc'.
+
+'--eh-frame-hdr'
+'--no-eh-frame-hdr'
+     Request ('--eh-frame-hdr') or suppress ('--no-eh-frame-hdr') the
+     creation of '.eh_frame_hdr' section and ELF 'PT_GNU_EH_FRAME'
      segment header.
 
-`--no-ld-generated-unwind-info'
-     Request creation of `.eh_frame' unwind info for linker generated
-     code sections like PLT.  This option is on by default if linker
+'--no-ld-generated-unwind-info'
+     Request creation of '.eh_frame' unwind info for linker generated
+     code sections like PLT. This option is on by default if linker
      generated unwind info is supported.
 
-`--enable-new-dtags'
-`--disable-new-dtags'
+'--enable-new-dtags'
+'--disable-new-dtags'
      This linker can create the new dynamic tags in ELF. But the older
-     ELF systems may not understand them. If you specify
-     `--enable-new-dtags', the new dynamic tags will be created as
+     ELF systems may not understand them.  If you specify
+     '--enable-new-dtags', the new dynamic tags will be created as
      needed and older dynamic tags will be omitted.  If you specify
-     `--disable-new-dtags', no new dynamic tags will be created. By
-     default, the new dynamic tags are not created. Note that those
+     '--disable-new-dtags', no new dynamic tags will be created.  By
+     default, the new dynamic tags are not created.  Note that those
      options are only available for ELF systems.
 
-`--hash-size=NUMBER'
+'--hash-size=NUMBER'
      Set the default size of the linker's hash tables to a prime number
      close to NUMBER.  Increasing this value can reduce the length of
      time it takes the linker to perform its tasks, at the expense of
@@ -1809,41 +1785,41 @@ GNU linker:
      this value can reduce the memory requirements at the expense of
      speed.
 
-`--hash-style=STYLE'
-     Set the type of linker's hash table(s).  STYLE can be either
-     `sysv' for classic ELF `.hash' section, `gnu' for new style GNU
-     `.gnu.hash' section or `both' for both the classic ELF `.hash' and
-     new style GNU `.gnu.hash' hash tables.  The default is `sysv'.
+'--hash-style=STYLE'
+     Set the type of linker's hash table(s).  STYLE can be either 'sysv'
+     for classic ELF '.hash' section, 'gnu' for new style GNU
+     '.gnu.hash' section or 'both' for both the classic ELF '.hash' and
+     new style GNU '.gnu.hash' hash tables.  The default is 'sysv'.
 
-`--compress-debug-sections=none'
-`--compress-debug-sections=zlib'
-`--compress-debug-sections=zlib-gnu'
-`--compress-debug-sections=zlib-gabi'
+'--compress-debug-sections=none'
+'--compress-debug-sections=zlib'
+'--compress-debug-sections=zlib-gnu'
+'--compress-debug-sections=zlib-gabi'
      On ELF platforms, these options control how DWARF debug sections
      are compressed using zlib.
 
-     `--compress-debug-sections=none' doesn't compress DWARF debug
-     sections.  `--compress-debug-sections=zlib-gnu' compresses DWARF
-     debug sections and renames them to begin with `.zdebug' instead of
-     `.debug'.  `--compress-debug-sections=zlib-gabi' also compresses
+     '--compress-debug-sections=none' doesn't compress DWARF debug
+     sections.  '--compress-debug-sections=zlib-gnu' compresses DWARF
+     debug sections and renames them to begin with '.zdebug' instead of
+     '.debug'.  '--compress-debug-sections=zlib-gabi' also compresses
      DWARF debug sections, but rather than renaming them it sets the
      SHF_COMPRESSED flag in the sections' headers.
 
-     The `--compress-debug-sections=zlib' option is an alias for
-     `--compress-debug-sections=zlib-gabi'.
+     The '--compress-debug-sections=zlib' option is an alias for
+     '--compress-debug-sections=zlib-gabi'.
 
      Note that this option overrides any compression in input debug
      sections, so if a binary is linked with
-     `--compress-debug-sections=none' for example, then any compressed
+     '--compress-debug-sections=none' for example, then any compressed
      debug sections in input files will be uncompressed before they are
      copied into the output binary.
 
      The default compression behaviour varies depending upon the target
      involved and the configure options used to build the toolchain.
      The default can be determined by examining the output from the
-     linker's `--help' option.
+     linker's '--help' option.
 
-`--reduce-memory-overheads'
+'--reduce-memory-overheads'
      This option reduces memory requirements at ld runtime, at the
      expense of linking speed.  This was introduced to select the old
      O(n^2) algorithm for link map file generation, rather than the new
@@ -1851,159 +1827,158 @@ GNU linker:
 
      Another effect of the switch is to set the default hash table size
      to 1021, which again saves memory at the cost of lengthening the
-     linker's run time.  This is not done however if the `--hash-size'
+     linker's run time.  This is not done however if the '--hash-size'
      switch has been used.
 
-     The `--reduce-memory-overheads' switch may be also be used to
+     The '--reduce-memory-overheads' switch may be also be used to
      enable other tradeoffs in future versions of the linker.
 
-`--build-id'
-`--build-id=STYLE'
-     Request the creation of a `.note.gnu.build-id' ELF note section or
-     a `.buildid' COFF section.  The contents of the note are unique
-     bits identifying this linked file.  STYLE can be `uuid' to use 128
-     random bits, `sha1' to use a 160-bit SHA1 hash on the normative
-     parts of the output contents, `md5' to use a 128-bit MD5 hash on
-     the normative parts of the output contents, or `0xHEXSTRING' to
-     use a chosen bit string specified as an even number of hexadecimal
-     digits (`-' and `:' characters between digit pairs are ignored).
-     If STYLE is omitted, `sha1' is used.
-
-     The `md5' and `sha1' styles produces an identifier that is always
+'--build-id'
+'--build-id=STYLE'
+     Request the creation of a '.note.gnu.build-id' ELF note section or
+     a '.buildid' COFF section.  The contents of the note are unique
+     bits identifying this linked file.  STYLE can be 'uuid' to use 128
+     random bits, 'sha1' to use a 160-bit SHA1 hash on the normative
+     parts of the output contents, 'md5' to use a 128-bit MD5 hash on
+     the normative parts of the output contents, or '0xHEXSTRING' to use
+     a chosen bit string specified as an even number of hexadecimal
+     digits ('-' and ':' characters between digit pairs are ignored).
+     If STYLE is omitted, 'sha1' is used.
+
+     The 'md5' and 'sha1' styles produces an identifier that is always
      the same in an identical output file, but will be unique among all
      nonidentical output files.  It is not intended to be compared as a
      checksum for the file's contents.  A linked file may be changed
      later by other tools, but the build ID bit string identifying the
      original linked file does not change.
 
-     Passing `none' for STYLE disables the setting from any
-     `--build-id' options earlier on the command line.
+     Passing 'none' for STYLE disables the setting from any '--build-id'
+     options earlier on the command line.
 
 2.1.1 Options Specific to i386 PE Targets
 -----------------------------------------
 
-The i386 PE linker supports the `-shared' option, which causes the
+The i386 PE linker supports the '-shared' option, which causes the
 output to be a dynamically linked library (DLL) instead of a normal
-executable.  You should name the output `*.dll' when you use this
-option.  In addition, the linker fully supports the standard `*.def'
+executable.  You should name the output '*.dll' when you use this
+option.  In addition, the linker fully supports the standard '*.def'
 files, which may be specified on the linker command line like an object
 file (in fact, it should precede archives it exports symbols from, to
 ensure that they get linked in, just like a normal object file).
 
    In addition to the options common to all targets, the i386 PE linker
-support additional command line options that are specific to the i386
-PE target.  Options that take values may be separated from their values
-by either a space or an equals sign.
+support additional command line options that are specific to the i386 PE
+target.  Options that take values may be separated from their values by
+either a space or an equals sign.
 
-`--add-stdcall-alias'
+'--add-stdcall-alias'
      If given, symbols with a stdcall suffix (@NN) will be exported
      as-is and also with the suffix stripped.  [This option is specific
      to the i386 PE targeted port of the linker]
 
-`--base-file FILE'
+'--base-file FILE'
      Use FILE as the name of a file in which to save the base addresses
-     of all the relocations needed for generating DLLs with `dlltool'.
+     of all the relocations needed for generating DLLs with 'dlltool'.
      [This is an i386 PE specific option]
 
-`--dll'
+'--dll'
      Create a DLL instead of a regular executable.  You may also use
-     `-shared' or specify a `LIBRARY' in a given `.def' file.  [This
+     '-shared' or specify a 'LIBRARY' in a given '.def' file.  [This
      option is specific to the i386 PE targeted port of the linker]
 
-`--enable-long-section-names'
-`--disable-long-section-names'
+'--enable-long-section-names'
+'--disable-long-section-names'
      The PE variants of the COFF object format add an extension that
      permits the use of section names longer than eight characters, the
-     normal limit for COFF.  By default, these names are only allowed
-     in object files, as fully-linked executable images do not carry
-     the COFF string table required to support the longer names.  As a
-     GNU extension, it is possible to allow their use in executable
-     images as well, or to (probably pointlessly!)  disallow it in
-     object files, by using these two options.  Executable images
-     generated with these long section names are slightly non-standard,
-     carrying as they do a string table, and may generate confusing
-     output when examined with non-GNU PE-aware tools, such as file
-     viewers and dumpers.  However, GDB relies on the use of PE long
-     section names to find Dwarf-2 debug information sections in an
-     executable image at runtime, and so if neither option is specified
-     on the command-line, `ld' will enable long section names,
-     overriding the default and technically correct behaviour, when it
-     finds the presence of debug information while linking an executable
-     image and not stripping symbols.  [This option is valid for all PE
-     targeted ports of the linker]
-
-`--enable-stdcall-fixup'
-`--disable-stdcall-fixup'
+     normal limit for COFF. By default, these names are only allowed in
+     object files, as fully-linked executable images do not carry the
+     COFF string table required to support the longer names.  As a GNU
+     extension, it is possible to allow their use in executable images
+     as well, or to (probably pointlessly!)  disallow it in object
+     files, by using these two options.  Executable images generated
+     with these long section names are slightly non-standard, carrying
+     as they do a string table, and may generate confusing output when
+     examined with non-GNU PE-aware tools, such as file viewers and
+     dumpers.  However, GDB relies on the use of PE long section names
+     to find Dwarf-2 debug information sections in an executable image
+     at runtime, and so if neither option is specified on the
+     command-line, 'ld' will enable long section names, overriding the
+     default and technically correct behaviour, when it finds the
+     presence of debug information while linking an executable image and
+     not stripping symbols.  [This option is valid for all PE targeted
+     ports of the linker]
+
+'--enable-stdcall-fixup'
+'--disable-stdcall-fixup'
      If the link finds a symbol that it cannot resolve, it will attempt
      to do "fuzzy linking" by looking for another defined symbol that
      differs only in the format of the symbol name (cdecl vs stdcall)
-     and will resolve that symbol by linking to the match.  For
-     example, the undefined symbol `_foo' might be linked to the
-     function `_foo@12', or the undefined symbol `_bar@16' might be
-     linked to the function `_bar'.  When the linker does this, it
-     prints a warning, since it normally should have failed to link,
-     but sometimes import libraries generated from third-party dlls may
-     need this feature to be usable.  If you specify
-     `--enable-stdcall-fixup', this feature is fully enabled and
-     warnings are not printed.  If you specify
-     `--disable-stdcall-fixup', this feature is disabled and such
+     and will resolve that symbol by linking to the match.  For example,
+     the undefined symbol '_foo' might be linked to the function
+     '_foo@12', or the undefined symbol '_bar@16' might be linked to the
+     function '_bar'.  When the linker does this, it prints a warning,
+     since it normally should have failed to link, but sometimes import
+     libraries generated from third-party dlls may need this feature to
+     be usable.  If you specify '--enable-stdcall-fixup', this feature
+     is fully enabled and warnings are not printed.  If you specify
+     '--disable-stdcall-fixup', this feature is disabled and such
      mismatches are considered to be errors.  [This option is specific
      to the i386 PE targeted port of the linker]
 
-`--leading-underscore'
-`--no-leading-underscore'
+'--leading-underscore'
+'--no-leading-underscore'
      For most targets default symbol-prefix is an underscore and is
-     defined in target's description. By this option it is possible to
+     defined in target's description.  By this option it is possible to
      disable/enable the default underscore symbol-prefix.
 
-`--export-all-symbols'
+'--export-all-symbols'
      If given, all global symbols in the objects used to build a DLL
-     will be exported by the DLL.  Note that this is the default if
-     there otherwise wouldn't be any exported symbols.  When symbols are
+     will be exported by the DLL. Note that this is the default if there
+     otherwise wouldn't be any exported symbols.  When symbols are
      explicitly exported via DEF files or implicitly exported via
      function attributes, the default is to not export anything else
-     unless this option is given.  Note that the symbols `DllMain@12',
-     `DllEntryPoint@0', `DllMainCRTStartup@12', and `impure_ptr' will
+     unless this option is given.  Note that the symbols 'DllMain@12',
+     'DllEntryPoint@0', 'DllMainCRTStartup@12', and 'impure_ptr' will
      not be automatically exported.  Also, symbols imported from other
-     DLLs will not be re-exported, nor will symbols specifying the
-     DLL's internal layout such as those beginning with `_head_' or
-     ending with `_iname'.  In addition, no symbols from `libgcc',
-     `libstd++', `libmingw32', or `crtX.o' will be exported.  Symbols
-     whose names begin with `__rtti_' or `__builtin_' will not be
-     exported, to help with C++ DLLs.  Finally, there is an extensive
-     list of cygwin-private symbols that are not exported (obviously,
-     this applies on when building DLLs for cygwin targets).  These
-     cygwin-excludes are: `_cygwin_dll_entry@12',
-     `_cygwin_crt0_common@8', `_cygwin_noncygwin_dll_entry@12',
-     `_fmode', `_impure_ptr', `cygwin_attach_dll', `cygwin_premain0',
-     `cygwin_premain1', `cygwin_premain2', `cygwin_premain3', and
-     `environ'.  [This option is specific to the i386 PE targeted port
+     DLLs will not be re-exported, nor will symbols specifying the DLL's
+     internal layout such as those beginning with '_head_' or ending
+     with '_iname'.  In addition, no symbols from 'libgcc', 'libstd++',
+     'libmingw32', or 'crtX.o' will be exported.  Symbols whose names
+     begin with '__rtti_' or '__builtin_' will not be exported, to help
+     with C++ DLLs.  Finally, there is an extensive list of
+     cygwin-private symbols that are not exported (obviously, this
+     applies on when building DLLs for cygwin targets).  These
+     cygwin-excludes are: '_cygwin_dll_entry@12',
+     '_cygwin_crt0_common@8', '_cygwin_noncygwin_dll_entry@12',
+     '_fmode', '_impure_ptr', 'cygwin_attach_dll', 'cygwin_premain0',
+     'cygwin_premain1', 'cygwin_premain2', 'cygwin_premain3', and
+     'environ'.  [This option is specific to the i386 PE targeted port
      of the linker]
 
-`--exclude-symbols SYMBOL,SYMBOL,...'
+'--exclude-symbols SYMBOL,SYMBOL,...'
      Specifies a list of symbols which should not be automatically
      exported.  The symbol names may be delimited by commas or colons.
      [This option is specific to the i386 PE targeted port of the
      linker]
 
-`--exclude-all-symbols'
+'--exclude-all-symbols'
      Specifies no symbols should be automatically exported.  [This
      option is specific to the i386 PE targeted port of the linker]
 
-`--file-alignment'
-     Specify the file alignment.  Sections in the file will always
-     begin at file offsets which are multiples of this number.  This
-     defaults to 512.  [This option is specific to the i386 PE targeted
-     port of the linker]
+'--file-alignment'
+     Specify the file alignment.  Sections in the file will always begin
+     at file offsets which are multiples of this number.  This defaults
+     to 512.  [This option is specific to the i386 PE targeted port of
+     the linker]
 
-`--heap RESERVE'
-`--heap RESERVE,COMMIT'
+'--heap RESERVE'
+'--heap RESERVE,COMMIT'
      Specify the number of bytes of memory to reserve (and optionally
      commit) to be used as heap for this program.  The default is 1MB
      reserved, 4K committed.  [This option is specific to the i386 PE
      targeted port of the linker]
 
-`--image-base VALUE'
+'--image-base VALUE'
      Use VALUE as the base address of your program or dll.  This is the
      lowest memory location that will be used when your program or dll
      is loaded.  To reduce the need to relocate and improve performance
@@ -2012,93 +1987,93 @@ by either a space or an equals sign.
      and 0x10000000 for dlls.  [This option is specific to the i386 PE
      targeted port of the linker]
 
-`--kill-at'
+'--kill-at'
      If given, the stdcall suffixes (@NN) will be stripped from symbols
      before they are exported.  [This option is specific to the i386 PE
      targeted port of the linker]
 
-`--large-address-aware'
-     If given, the appropriate bit in the "Characteristics" field of
-     the COFF header is set to indicate that this executable supports
-     virtual addresses greater than 2 gigabytes.  This should be used
-     in conjunction with the /3GB or /USERVA=VALUE megabytes switch in
-     the "[operating systems]" section of the BOOT.INI.  Otherwise,
-     this bit has no effect.  [This option is specific to PE targeted
-     ports of the linker]
+'--large-address-aware'
+     If given, the appropriate bit in the "Characteristics" field of the
+     COFF header is set to indicate that this executable supports
+     virtual addresses greater than 2 gigabytes.  This should be used in
+     conjunction with the /3GB or /USERVA=VALUE megabytes switch in the
+     "[operating systems]" section of the BOOT.INI. Otherwise, this bit
+     has no effect.  [This option is specific to PE targeted ports of
+     the linker]
 
-`--disable-large-address-aware'
-     Reverts the effect of a previous `--large-address-aware' option.
-     This is useful if `--large-address-aware' is always set by the
-     compiler driver (e.g. Cygwin gcc) and the executable does not
+'--disable-large-address-aware'
+     Reverts the effect of a previous '--large-address-aware' option.
+     This is useful if '--large-address-aware' is always set by the
+     compiler driver (e.g.  Cygwin gcc) and the executable does not
      support virtual addresses greater than 2 gigabytes.  [This option
      is specific to PE targeted ports of the linker]
 
-`--major-image-version VALUE'
+'--major-image-version VALUE'
      Sets the major number of the "image version".  Defaults to 1.
      [This option is specific to the i386 PE targeted port of the
      linker]
 
-`--major-os-version VALUE'
+'--major-os-version VALUE'
      Sets the major number of the "os version".  Defaults to 4.  [This
      option is specific to the i386 PE targeted port of the linker]
 
-`--major-subsystem-version VALUE'
+'--major-subsystem-version VALUE'
      Sets the major number of the "subsystem version".  Defaults to 4.
      [This option is specific to the i386 PE targeted port of the
      linker]
 
-`--minor-image-version VALUE'
+'--minor-image-version VALUE'
      Sets the minor number of the "image version".  Defaults to 0.
      [This option is specific to the i386 PE targeted port of the
      linker]
 
-`--minor-os-version VALUE'
+'--minor-os-version VALUE'
      Sets the minor number of the "os version".  Defaults to 0.  [This
      option is specific to the i386 PE targeted port of the linker]
 
-`--minor-subsystem-version VALUE'
+'--minor-subsystem-version VALUE'
      Sets the minor number of the "subsystem version".  Defaults to 0.
      [This option is specific to the i386 PE targeted port of the
      linker]
 
-`--output-def FILE'
+'--output-def FILE'
      The linker will create the file FILE which will contain a DEF file
      corresponding to the DLL the linker is generating.  This DEF file
-     (which should be called `*.def') may be used to create an import
-     library with `dlltool' or may be used as a reference to
+     (which should be called '*.def') may be used to create an import
+     library with 'dlltool' or may be used as a reference to
      automatically or implicitly exported symbols.  [This option is
      specific to the i386 PE targeted port of the linker]
 
-`--enable-auto-image-base'
-`--enable-auto-image-base=VALUE'
+'--enable-auto-image-base'
+'--enable-auto-image-base=VALUE'
      Automatically choose the image base for DLLs, optionally starting
-     with base VALUE, unless one is specified using the `--image-base'
+     with base VALUE, unless one is specified using the '--image-base'
      argument.  By using a hash generated from the dllname to create
      unique image bases for each DLL, in-memory collisions and
      relocations which can delay program execution are avoided.  [This
      option is specific to the i386 PE targeted port of the linker]
 
-`--disable-auto-image-base'
+'--disable-auto-image-base'
      Do not automatically generate a unique image base.  If there is no
-     user-specified image base (`--image-base') then use the platform
+     user-specified image base ('--image-base') then use the platform
      default.  [This option is specific to the i386 PE targeted port of
      the linker]
 
-`--dll-search-prefix STRING'
-     When linking dynamically to a dll without an import library,
-     search for `<string><basename>.dll' in preference to
-     `lib<basename>.dll'. This behaviour allows easy distinction
-     between DLLs built for the various "subplatforms": native, cygwin,
-     uwin, pw, etc.  For instance, cygwin DLLs typically use
-     `--dll-search-prefix=cyg'.  [This option is specific to the i386
-     PE targeted port of the linker]
-
-`--enable-auto-import'
-     Do sophisticated linking of `_symbol' to `__imp__symbol' for DATA
+'--dll-search-prefix STRING'
+     When linking dynamically to a dll without an import library, search
+     for '<string><basename>.dll' in preference to 'lib<basename>.dll'.
+     This behaviour allows easy distinction between DLLs built for the
+     various "subplatforms": native, cygwin, uwin, pw, etc.  For
+     instance, cygwin DLLs typically use '--dll-search-prefix=cyg'.
+     [This option is specific to the i386 PE targeted port of the
+     linker]
+
+'--enable-auto-import'
+     Do sophisticated linking of '_symbol' to '__imp__symbol' for DATA
      imports from DLLs, and create the necessary thunking symbols when
-     building the import libraries with those DATA exports. Note: Use
+     building the import libraries with those DATA exports.  Note: Use
      of the 'auto-import' extension will cause the text section of the
-     image file to be made writable. This does not conform to the
+     image file to be made writable.  This does not conform to the
      PE-COFF format specification published by Microsoft.
 
      Note - use of the 'auto-import' extension will also cause read only
@@ -2110,23 +2085,23 @@ by either a space or an equals sign.
      Using 'auto-import' generally will 'just work' - but sometimes you
      may see this message:
 
-     "variable '<var>' can't be auto-imported. Please read the
-     documentation for ld's `--enable-auto-import' for details."
+     "variable '<var>' can't be auto-imported.  Please read the
+     documentation for ld's '--enable-auto-import' for details."
 
      This message occurs when some (sub)expression accesses an address
      ultimately given by the sum of two constants (Win32 import tables
      only allow one).  Instances where this may occur include accesses
      to member fields of struct variables imported from a DLL, as well
      as using a constant index into an array variable imported from a
-     DLL.  Any multiword variable (arrays, structs, long long, etc) may
+     DLL. Any multiword variable (arrays, structs, long long, etc) may
      trigger this error condition.  However, regardless of the exact
-     data type of the offending exported variable, ld will always
-     detect it, issue the warning, and exit.
+     data type of the offending exported variable, ld will always detect
+     it, issue the warning, and exit.
 
      There are several ways to address this difficulty, regardless of
      the data type of the exported variable:
 
-     One way is to use -enable-runtime-pseudo-reloc switch. This leaves
+     One way is to use -enable-runtime-pseudo-reloc switch.  This leaves
      the task of adjusting references in your client code for runtime
      environment, so this method works only when runtime environment
      supports this feature.
@@ -2163,13 +2138,12 @@ by either a space or an equals sign.
 
      A third method of dealing with this difficulty is to abandon
      'auto-import' for the offending symbol and mark it with
-     `__declspec(dllimport)'.  However, in practice that requires using
+     '__declspec(dllimport)'.  However, in practice that requires using
      compile-time #defines to indicate whether you are building a DLL,
      building client code that will link to the DLL, or merely
-     building/linking to a static library.   In making the choice
-     between the various methods of resolving the 'direct address with
-     constant offset' problem, you should consider typical real-world
-     usage:
+     building/linking to a static library.  In making the choice between
+     the various methods of resolving the 'direct address with constant
+     offset' problem, you should consider typical real-world usage:
 
      Original:
           --foo.h
@@ -2209,16 +2183,16 @@ by either a space or an equals sign.
 
      A fourth way to avoid this problem is to re-code your library to
      use a functional interface rather than a data interface for the
-     offending variables (e.g. set_foo() and get_foo() accessor
+     offending variables (e.g.  set_foo() and get_foo() accessor
      functions).  [This option is specific to the i386 PE targeted port
      of the linker]
 
-`--disable-auto-import'
-     Do not attempt to do sophisticated linking of `_symbol' to
-     `__imp__symbol' for DATA imports from DLLs.  [This option is
+'--disable-auto-import'
+     Do not attempt to do sophisticated linking of '_symbol' to
+     '__imp__symbol' for DATA imports from DLLs.  [This option is
      specific to the i386 PE targeted port of the linker]
 
-`--enable-runtime-pseudo-reloc'
+'--enable-runtime-pseudo-reloc'
      If your code contains expressions described in -enable-auto-import
      section, that is, DATA imports from DLL with non-zero offset, this
      switch will create a vector of 'runtime pseudo relocations' which
@@ -2226,82 +2200,82 @@ by either a space or an equals sign.
      data in your client code.  [This option is specific to the i386 PE
      targeted port of the linker]
 
-`--disable-runtime-pseudo-reloc'
+'--disable-runtime-pseudo-reloc'
      Do not create pseudo relocations for non-zero offset DATA imports
      from DLLs.  [This option is specific to the i386 PE targeted port
      of the linker]
 
-`--enable-extra-pe-debug'
+'--enable-extra-pe-debug'
      Show additional debug info related to auto-import symbol thunking.
      [This option is specific to the i386 PE targeted port of the
      linker]
 
-`--section-alignment'
+'--section-alignment'
      Sets the section alignment.  Sections in memory will always begin
      at addresses which are a multiple of this number.  Defaults to
      0x1000.  [This option is specific to the i386 PE targeted port of
      the linker]
 
-`--stack RESERVE'
-`--stack RESERVE,COMMIT'
+'--stack RESERVE'
+'--stack RESERVE,COMMIT'
      Specify the number of bytes of memory to reserve (and optionally
      commit) to be used as stack for this program.  The default is 2MB
      reserved, 4K committed.  [This option is specific to the i386 PE
      targeted port of the linker]
 
-`--subsystem WHICH'
-`--subsystem WHICH:MAJOR'
-`--subsystem WHICH:MAJOR.MINOR'
+'--subsystem WHICH'
+'--subsystem WHICH:MAJOR'
+'--subsystem WHICH:MAJOR.MINOR'
      Specifies the subsystem under which your program will execute.  The
-     legal values for WHICH are `native', `windows', `console',
-     `posix', and `xbox'.  You may optionally set the subsystem version
-     also.  Numeric values are also accepted for WHICH.  [This option
-     is specific to the i386 PE targeted port of the linker]
+     legal values for WHICH are 'native', 'windows', 'console', 'posix',
+     and 'xbox'.  You may optionally set the subsystem version also.
+     Numeric values are also accepted for WHICH.  [This option is
+     specific to the i386 PE targeted port of the linker]
 
-     The following options set flags in the `DllCharacteristics' field
+     The following options set flags in the 'DllCharacteristics' field
      of the PE file header: [These options are specific to PE targeted
      ports of the linker]
 
-`--high-entropy-va'
+'--high-entropy-va'
      Image is compatible with 64-bit address space layout randomization
      (ASLR).
 
-`--dynamicbase'
+'--dynamicbase'
      The image base address may be relocated using address space layout
-     randomization (ASLR).  This feature was introduced with MS Windows
+     randomization (ASLR). This feature was introduced with MS Windows
      Vista for i386 PE targets.
 
-`--forceinteg'
+'--forceinteg'
      Code integrity checks are enforced.
 
-`--nxcompat'
+'--nxcompat'
      The image is compatible with the Data Execution Prevention.  This
      feature was introduced with MS Windows XP SP2 for i386 PE targets.
 
-`--no-isolation'
+'--no-isolation'
      Although the image understands isolation, do not isolate the image.
 
-`--no-seh'
+'--no-seh'
      The image does not use SEH. No SE handler may be called from this
      image.
 
-`--no-bind'
+'--no-bind'
      Do not bind this image.
 
-`--wdmdriver'
+'--wdmdriver'
      The driver uses the MS Windows Driver Model.
 
-`--tsaware'
+'--tsaware'
      The image is Terminal Server aware.
 
-`--insert-timestamp'
-`--no-insert-timestamp'
+'--insert-timestamp'
+'--no-insert-timestamp'
      Insert a real timestamp into the image.  This is the default
      behaviour as it matches legacy code and it means that the image
      will work with other, proprietary tools.  The problem with this
      default is that it will result in slightly different images being
      produced each time the same sources are linked.  The option
-     `--no-insert-timestamp' can be used to insert a zero value for the
+     '--no-insert-timestamp' can be used to insert a zero value for the
      timestamp, this ensuring that binaries produced from identical
      sources will compare identically.
 
@@ -2312,52 +2286,49 @@ The C6X uClinux target uses a binary format called DSBT to support
 shared libraries.  Each shared library in the system needs to have a
 unique index; all executables use an index of 0.
 
-`--dsbt-size SIZE'
+'--dsbt-size SIZE'
      This option sets the number of entries in the DSBT of the current
      executable or shared library to SIZE.  The default is to create a
      table with 64 entries.
 
-`--dsbt-index INDEX'
-     This option sets the DSBT index of the current executable or
-     shared library to INDEX.  The default is 0, which is appropriate
-     for generating executables.  If a shared library is generated with
-     a DSBT index of 0, the `R_C6000_DSBT_INDEX' relocs are copied into
+'--dsbt-index INDEX'
+     This option sets the DSBT index of the current executable or shared
+     library to INDEX.  The default is 0, which is appropriate for
+     generating executables.  If a shared library is generated with a
+     DSBT index of 0, the 'R_C6000_DSBT_INDEX' relocs are copied into
      the output file.
 
-     The `--no-merge-exidx-entries' switch disables the merging of
+     The '--no-merge-exidx-entries' switch disables the merging of
      adjacent exidx entries in frame unwind info.
 
-
 2.1.3 Options specific to Motorola 68HC11 and 68HC12 targets
 ------------------------------------------------------------
 
 The 68HC11 and 68HC12 linkers support specific options to control the
 memory bank switching mapping and trampoline code generation.
 
-`--no-trampoline'
-     This option disables the generation of trampoline. By default a
-     trampoline is generated for each far function which is called
-     using a `jsr' instruction (this happens when a pointer to a far
-     function is taken).
+'--no-trampoline'
+     This option disables the generation of trampoline.  By default a
+     trampoline is generated for each far function which is called using
+     a 'jsr' instruction (this happens when a pointer to a far function
+     is taken).
 
-`--bank-window NAME'
+'--bank-window NAME'
      This option indicates to the linker the name of the memory region
-     in the `MEMORY' specification that describes the memory bank
+     in the 'MEMORY' specification that describes the memory bank
      window.  The definition of such region is then used by the linker
      to compute paging and addresses within the memory window.
 
-
 2.1.4 Options specific to Motorola 68K target
 ---------------------------------------------
 
 The following options are supported to control handling of GOT
 generation when linking for 68K targets.
 
-`--got=TYPE'
+'--got=TYPE'
      This option tells the linker which GOT generation scheme to use.
-     TYPE should be one of `single', `negative', `multigot' or
-     `target'.  For more information refer to the Info entry for `ld'.
-
+     TYPE should be one of 'single', 'negative', 'multigot' or 'target'.
+     For more information refer to the Info entry for 'ld'.
 
 2.1.5 Options specific to MIPS targets
 --------------------------------------
@@ -2366,42 +2337,41 @@ The following options are supported to control microMIPS instruction
 generation and branch relocation checks for ISA mode transitions when
 linking for MIPS targets.
 
-`--insn32'
-`--no-insn32'
+'--insn32'
+'--no-insn32'
      These options control the choice of microMIPS instructions used in
      code generated by the linker, such as that in the PLT or lazy
-     binding stubs, or in relaxation.  If `--insn32' is used, then the
+     binding stubs, or in relaxation.  If '--insn32' is used, then the
      linker only uses 32-bit instruction encodings.  By default or if
-     `--no-insn32' is used, all instruction encodings are used,
+     '--no-insn32' is used, all instruction encodings are used,
      including 16-bit ones where possible.
 
-`--ignore-branch-isa'
-`--no-ignore-branch-isa'
+'--ignore-branch-isa'
+'--no-ignore-branch-isa'
      These options control branch relocation checks for invalid ISA mode
-     transitions.  If `--ignore-branch-isa' is used, then the linker
+     transitions.  If '--ignore-branch-isa' is used, then the linker
      accepts any branch relocations and any ISA mode transition required
-     is lost in relocation calculation, except for some cases of `BAL'
+     is lost in relocation calculation, except for some cases of 'BAL'
      instructions which meet relaxation conditions and are converted to
-     equivalent `JALX' instructions as the associated relocation is
-     calculated.  By default or if `--no-ignore-branch-isa' is used a
+     equivalent 'JALX' instructions as the associated relocation is
+     calculated.  By default or if '--no-ignore-branch-isa' is used a
      check is made causing the loss of an ISA mode transition to produce
      an error.
 
-
 
 File: ld.info,  Node: Environment,  Prev: Options,  Up: Invocation
 
 2.2 Environment Variables
 =========================
 
-You can change the behaviour of `ld' with the environment variables
-`GNUTARGET', `LDEMULATION' and `COLLECT_NO_DEMANGLE'.
+You can change the behaviour of 'ld' with the environment variables
+'GNUTARGET', 'LDEMULATION' and 'COLLECT_NO_DEMANGLE'.
 
-   `GNUTARGET' determines the input-file object format if you don't use
-`-b' (or its synonym `--format').  Its value should be one of the BFD
-names for an input format (*note BFD::).  If there is no `GNUTARGET' in
-the environment, `ld' uses the natural format of the target. If
-`GNUTARGET' is set to `default' then BFD attempts to discover the input
+   'GNUTARGET' determines the input-file object format if you don't use
+'-b' (or its synonym '--format').  Its value should be one of the BFD
+names for an input format (*note BFD::).  If there is no 'GNUTARGET' in
+the environment, 'ld' uses the natural format of the target.  If
+'GNUTARGET' is set to 'default' then BFD attempts to discover the input
 format by examining binary input files; this method often succeeds, but
 there are potential ambiguities, since there is no method of ensuring
 that the magic number used to specify object-file formats is unique.
@@ -2409,19 +2379,19 @@ However, the configuration procedure for BFD on each system places the
 conventional format for that system first in the search-list, so
 ambiguities are resolved in favor of convention.
 
-   `LDEMULATION' determines the default emulation if you don't use the
-`-m' option.  The emulation can affect various aspects of linker
+   'LDEMULATION' determines the default emulation if you don't use the
+'-m' option.  The emulation can affect various aspects of linker
 behaviour, particularly the default linker script.  You can list the
-available emulations with the `--verbose' or `-V' options.  If the `-m'
-option is not used, and the `LDEMULATION' environment variable is not
+available emulations with the '--verbose' or '-V' options.  If the '-m'
+option is not used, and the 'LDEMULATION' environment variable is not
 defined, the default emulation depends upon how the linker was
 configured.
 
    Normally, the linker will default to demangling symbols.  However, if
-`COLLECT_NO_DEMANGLE' is set in the environment, then it will default
-to not demangling symbols.  This environment variable is used in a
-similar fashion by the `gcc' linker wrapper program.  The default may
-be overridden by the `--demangle' and `--no-demangle' options.
+'COLLECT_NO_DEMANGLE' is set in the environment, then it will default to
+not demangling symbols.  This environment variable is used in a similar
+fashion by the 'gcc' linker wrapper program.  The default may be
+overridden by the '--demangle' and '--no-demangle' options.
 
 
 File: ld.info,  Node: Scripts,  Next: Machine Dependent,  Prev: Invocation,  Up: Top
@@ -2432,20 +2402,20 @@ File: ld.info,  Node: Scripts,  Next: Machine Dependent,  Prev: Invocation,  Up:
 Every link is controlled by a "linker script".  This script is written
 in the linker command language.
 
-   The main purpose of the linker script is to describe how the
-sections in the input files should be mapped into the output file, and
-to control the memory layout of the output file.  Most linker scripts
-do nothing more than this.  However, when necessary, the linker script
-can also direct the linker to perform many other operations, using the
-commands described below.
+   The main purpose of the linker script is to describe how the sections
+in the input files should be mapped into the output file, and to control
+the memory layout of the output file.  Most linker scripts do nothing
+more than this.  However, when necessary, the linker script can also
+direct the linker to perform many other operations, using the commands
+described below.
 
    The linker always uses a linker script.  If you do not supply one
 yourself, the linker will use a default script that is compiled into the
-linker executable.  You can use the `--verbose' command line option to
+linker executable.  You can use the '--verbose' command line option to
 display the default linker script.  Certain command line options, such
-as `-r' or `-N', will affect the default linker script.
+as '-r' or '-N', will affect the default linker script.
 
-   You may supply your own linker script by using the `-T' command line
+   You may supply your own linker script by using the '-T' command line
 option.  When you do this, your linker script will replace the default
 linker script.
 
@@ -2478,12 +2448,12 @@ describe the linker script language.
 
    The linker combines input files into a single output file.  The
 output file and each input file are in a special data format known as an
-"object file format".  Each file is called an "object file".  The
-output file is often called an "executable", but for our purposes we
-will also call it an object file.  Each object file has, among other
-things, a list of "sections".  We sometimes refer to a section in an
-input file as an "input section"; similarly, a section in the output
-file is an "output section".
+"object file format".  Each file is called an "object file".  The output
+file is often called an "executable", but for our purposes we will also
+call it an object file.  Each object file has, among other things, a
+list of "sections".  We sometimes refer to a section in an input file as
+an "input section"; similarly, a section in the output file is an
+"output section".
 
    Each section in an object file has a name and a size.  Most sections
 also have an associated block of data, known as the "section contents".
@@ -2497,28 +2467,28 @@ debugging information.
 
    Every loadable or allocatable output section has two addresses.  The
 first is the "VMA", or virtual memory address.  This is the address the
-section will have when the output file is run.  The second is the
-"LMA", or load memory address.  This is the address at which the
-section will be loaded.  In most cases the two addresses will be the
-same.  An example of when they might be different is when a data section
-is loaded into ROM, and then copied into RAM when the program starts up
-(this technique is often used to initialize global variables in a ROM
-based system).  In this case the ROM address would be the LMA, and the
-RAM address would be the VMA.
-
-   You can see the sections in an object file by using the `objdump'
-program with the `-h' option.
+section will have when the output file is run.  The second is the "LMA",
+or load memory address.  This is the address at which the section will
+be loaded.  In most cases the two addresses will be the same.  An
+example of when they might be different is when a data section is loaded
+into ROM, and then copied into RAM when the program starts up (this
+technique is often used to initialize global variables in a ROM based
+system).  In this case the ROM address would be the LMA, and the RAM
+address would be the VMA.
+
+   You can see the sections in an object file by using the 'objdump'
+program with the '-h' option.
 
    Every object file also has a list of "symbols", known as the "symbol
 table".  A symbol may be defined or undefined.  Each symbol has a name,
-and each defined symbol has an address, among other information.  If
-you compile a C or C++ program into an object file, you will get a
-defined symbol for every defined function and global or static
-variable.  Every undefined function or global variable which is
-referenced in the input file will become an undefined symbol.
+and each defined symbol has an address, among other information.  If you
+compile a C or C++ program into an object file, you will get a defined
+symbol for every defined function and global or static variable.  Every
+undefined function or global variable which is referenced in the input
+file will become an undefined symbol.
 
-   You can see the symbols in an object file by using the `nm' program,
-or by using the `objdump' program with the `-t' option.
+   You can see the symbols in an object file by using the 'nm' program,
+or by using the 'objdump' program with the '-t' option.
 
 
 File: ld.info,  Node: Script Format,  Next: Simple Example,  Prev: Basic Script Concepts,  Up: Scripts
@@ -2540,7 +2510,7 @@ in double quotes.  There is no way to use a double quote character in a
 file name.
 
    You may include comments in linker scripts just as in C, delimited by
-`/*' and `*/'.  As in C, comments are syntactically equivalent to
+'/*' and '*/'.  As in C, comments are syntactically equivalent to
 whitespace.
 
 
@@ -2551,16 +2521,15 @@ File: ld.info,  Node: Simple Example,  Next: Simple Commands,  Prev: Script Form
 
 Many linker scripts are fairly simple.
 
-   The simplest possible linker script has just one command:
-`SECTIONS'.  You use the `SECTIONS' command to describe the memory
-layout of the output file.
+   The simplest possible linker script has just one command: 'SECTIONS'.
+You use the 'SECTIONS' command to describe the memory layout of the
+output file.
 
-   The `SECTIONS' command is a powerful command.  Here we will describe
+   The 'SECTIONS' command is a powerful command.  Here we will describe
 a simple use of it.  Let's assume your program consists only of code,
-initialized data, and uninitialized data.  These will be in the
-`.text', `.data', and `.bss' sections, respectively.  Let's assume
-further that these are the only sections which appear in your input
-files.
+initialized data, and uninitialized data.  These will be in the '.text',
+'.data', and '.bss' sections, respectively.  Let's assume further that
+these are the only sections which appear in your input files.
 
    For this example, let's say that the code should be loaded at address
 0x10000, and that the data should start at address 0x8000000.  Here is a
@@ -2574,42 +2543,42 @@ linker script which will do that:
        .bss : { *(.bss) }
      }
 
-   You write the `SECTIONS' command as the keyword `SECTIONS', followed
+   You write the 'SECTIONS' command as the keyword 'SECTIONS', followed
 by a series of symbol assignments and output section descriptions
 enclosed in curly braces.
 
-   The first line inside the `SECTIONS' command of the above example
-sets the value of the special symbol `.', which is the location
-counter.  If you do not specify the address of an output section in some
-other way (other ways are described later), the address is set from the
-current value of the location counter.  The location counter is then
-incremented by the size of the output section.  At the start of the
-`SECTIONS' command, the location counter has the value `0'.
+   The first line inside the 'SECTIONS' command of the above example
+sets the value of the special symbol '.', which is the location counter.
+If you do not specify the address of an output section in some other way
+(other ways are described later), the address is set from the current
+value of the location counter.  The location counter is then incremented
+by the size of the output section.  At the start of the 'SECTIONS'
+command, the location counter has the value '0'.
 
-   The second line defines an output section, `.text'.  The colon is
+   The second line defines an output section, '.text'.  The colon is
 required syntax which may be ignored for now.  Within the curly braces
 after the output section name, you list the names of the input sections
-which should be placed into this output section.  The `*' is a wildcard
-which matches any file name.  The expression `*(.text)' means all
-`.text' input sections in all input files.
-
-   Since the location counter is `0x10000' when the output section
-`.text' is defined, the linker will set the address of the `.text'
-section in the output file to be `0x10000'.
-
-   The remaining lines define the `.data' and `.bss' sections in the
-output file.  The linker will place the `.data' output section at
-address `0x8000000'.  After the linker places the `.data' output
-section, the value of the location counter will be `0x8000000' plus the
-size of the `.data' output section.  The effect is that the linker will
-place the `.bss' output section immediately after the `.data' output
+which should be placed into this output section.  The '*' is a wildcard
+which matches any file name.  The expression '*(.text)' means all
+'.text' input sections in all input files.
+
+   Since the location counter is '0x10000' when the output section
+'.text' is defined, the linker will set the address of the '.text'
+section in the output file to be '0x10000'.
+
+   The remaining lines define the '.data' and '.bss' sections in the
+output file.  The linker will place the '.data' output section at
+address '0x8000000'.  After the linker places the '.data' output
+section, the value of the location counter will be '0x8000000' plus the
+size of the '.data' output section.  The effect is that the linker will
+place the '.bss' output section immediately after the '.data' output
 section in memory.
 
    The linker will ensure that each output section has the required
 alignment, by increasing the location counter if necessary.  In this
-example, the specified addresses for the `.text' and `.data' sections
-will probably satisfy any alignment constraints, but the linker may
-have to create a small gap between the `.data' and `.bss' sections.
+example, the specified addresses for the '.text' and '.data' sections
+will probably satisfy any alignment constraints, but the linker may have
+to create a small gap between the '.data' and '.bss' sections.
 
    That's it!  That's a simple and complete linker script.
 
@@ -2625,7 +2594,6 @@ In this section we describe the simple linker script commands.
 
 * Entry Point::			Setting the entry point
 * File Commands::		Commands dealing with files
-
 * Format Commands::		Commands dealing with object file formats
 
 * REGION_ALIAS::		Assign alias names to memory regions
@@ -2638,25 +2606,21 @@ File: ld.info,  Node: Entry Point,  Next: File Commands,  Up: Simple Commands
 -----------------------------
 
 The first instruction to execute in a program is called the "entry
-point".  You can use the `ENTRY' linker script command to set the entry
+point".  You can use the 'ENTRY' linker script command to set the entry
 point.  The argument is a symbol name:
      ENTRY(SYMBOL)
 
    There are several ways to set the entry point.  The linker will set
 the entry point by trying each of the following methods in order, and
 stopping when one of them succeeds:
-   * the `-e' ENTRY command-line option;
-
-   * the `ENTRY(SYMBOL)' command in a linker script;
-
-   * the value of a target specific symbol, if it is defined;  For many
-     targets this is `start', but PE and BeOS based systems for example
+   * the '-e' ENTRY command-line option;
+   * the 'ENTRY(SYMBOL)' command in a linker script;
+   * the value of a target specific symbol, if it is defined; For many
+     targets this is 'start', but PE and BeOS based systems for example
      check a list of possible entry symbols, matching the first one
      found.
-
-   * the address of the first byte of the `.text' section, if present;
-
-   * The address `0'.
+   * the address of the first byte of the '.text' section, if present;
+   * The address '0'.
 
 
 File: ld.info,  Node: File Commands,  Next: Format Commands,  Prev: Entry Point,  Up: Simple Commands
@@ -2666,87 +2630,87 @@ File: ld.info,  Node: File Commands,  Next: Format Commands,  Prev: Entry Point,
 
 Several linker script commands deal with files.
 
-`INCLUDE FILENAME'
-     Include the linker script FILENAME at this point.  The file will
-     be searched for in the current directory, and in any directory
-     specified with the `-L' option.  You can nest calls to `INCLUDE'
-     up to 10 levels deep.
+'INCLUDE FILENAME'
+     Include the linker script FILENAME at this point.  The file will be
+     searched for in the current directory, and in any directory
+     specified with the '-L' option.  You can nest calls to 'INCLUDE' up
+     to 10 levels deep.
 
-     You can place `INCLUDE' directives at the top level, in `MEMORY' or
-     `SECTIONS' commands, or in output section descriptions.
+     You can place 'INCLUDE' directives at the top level, in 'MEMORY' or
+     'SECTIONS' commands, or in output section descriptions.
 
-`INPUT(FILE, FILE, ...)'
-`INPUT(FILE FILE ...)'
-     The `INPUT' command directs the linker to include the named files
+'INPUT(FILE, FILE, ...)'
+'INPUT(FILE FILE ...)'
+     The 'INPUT' command directs the linker to include the named files
      in the link, as though they were named on the command line.
 
-     For example, if you always want to include `subr.o' any time you do
+     For example, if you always want to include 'subr.o' any time you do
      a link, but you can't be bothered to put it on every link command
-     line, then you can put `INPUT (subr.o)' in your linker script.
+     line, then you can put 'INPUT (subr.o)' in your linker script.
 
      In fact, if you like, you can list all of your input files in the
-     linker script, and then invoke the linker with nothing but a `-T'
+     linker script, and then invoke the linker with nothing but a '-T'
      option.
 
      In case a "sysroot prefix" is configured, and the filename starts
-     with the `/' character, and the script being processed was located
-     inside the "sysroot prefix", the filename will be looked for in
-     the "sysroot prefix".  Otherwise, the linker will try to open the
-     file in the current directory.  If it is not found, the linker
-     will search through the archive library search path.  The "sysroot
-     prefix" can also be forced by specifying `=' as the first
-     character in the filename path.  See also the description of `-L'
-     in *Note Command Line Options: Options.
-
-     If you use `INPUT (-lFILE)', `ld' will transform the name to
-     `libFILE.a', as with the command line argument `-l'.
-
-     When you use the `INPUT' command in an implicit linker script, the
+     with the '/' character, and the script being processed was located
+     inside the "sysroot prefix", the filename will be looked for in the
+     "sysroot prefix".  Otherwise, the linker will try to open the file
+     in the current directory.  If it is not found, the linker will
+     search through the archive library search path.  The "sysroot
+     prefix" can also be forced by specifying '=' as the first character
+     in the filename path.  See also the description of '-L' in *note
+     Command Line Options: Options.
+
+     If you use 'INPUT (-lFILE)', 'ld' will transform the name to
+     'libFILE.a', as with the command line argument '-l'.
+
+     When you use the 'INPUT' command in an implicit linker script, the
      files will be included in the link at the point at which the linker
      script file is included.  This can affect archive searching.
 
-`GROUP(FILE, FILE, ...)'
-`GROUP(FILE FILE ...)'
-     The `GROUP' command is like `INPUT', except that the named files
+'GROUP(FILE, FILE, ...)'
+'GROUP(FILE FILE ...)'
+     The 'GROUP' command is like 'INPUT', except that the named files
      should all be archives, and they are searched repeatedly until no
-     new undefined references are created.  See the description of `-('
-     in *Note Command Line Options: Options.
+     new undefined references are created.  See the description of '-('
+     in *note Command Line Options: Options.
 
-`AS_NEEDED(FILE, FILE, ...)'
-`AS_NEEDED(FILE FILE ...)'
-     This construct can appear only inside of the `INPUT' or `GROUP'
+'AS_NEEDED(FILE, FILE, ...)'
+'AS_NEEDED(FILE FILE ...)'
+     This construct can appear only inside of the 'INPUT' or 'GROUP'
      commands, among other filenames.  The files listed will be handled
-     as if they appear directly in the `INPUT' or `GROUP' commands,
-     with the exception of ELF shared libraries, that will be added only
-     when they are actually needed.  This construct essentially enables
-     `--as-needed' option for all the files listed inside of it and
-     restores previous `--as-needed' resp. `--no-as-needed' setting
+     as if they appear directly in the 'INPUT' or 'GROUP' commands, with
+     the exception of ELF shared libraries, that will be added only when
+     they are actually needed.  This construct essentially enables
+     '--as-needed' option for all the files listed inside of it and
+     restores previous '--as-needed' resp.  '--no-as-needed' setting
      afterwards.
 
-`OUTPUT(FILENAME)'
-     The `OUTPUT' command names the output file.  Using
-     `OUTPUT(FILENAME)' in the linker script is exactly like using `-o
+'OUTPUT(FILENAME)'
+     The 'OUTPUT' command names the output file.  Using
+     'OUTPUT(FILENAME)' in the linker script is exactly like using '-o
      FILENAME' on the command line (*note Command Line Options:
      Options.).  If both are used, the command line option takes
      precedence.
 
-     You can use the `OUTPUT' command to define a default name for the
-     output file other than the usual default of `a.out'.
+     You can use the 'OUTPUT' command to define a default name for the
+     output file other than the usual default of 'a.out'.
 
-`SEARCH_DIR(PATH)'
-     The `SEARCH_DIR' command adds PATH to the list of paths where `ld'
-     looks for archive libraries.  Using `SEARCH_DIR(PATH)' is exactly
-     like using `-L PATH' on the command line (*note Command Line
+'SEARCH_DIR(PATH)'
+     The 'SEARCH_DIR' command adds PATH to the list of paths where 'ld'
+     looks for archive libraries.  Using 'SEARCH_DIR(PATH)' is exactly
+     like using '-L PATH' on the command line (*note Command Line
      Options: Options.).  If both are used, then the linker will search
      both paths.  Paths specified using the command line option are
      searched first.
 
-`STARTUP(FILENAME)'
-     The `STARTUP' command is just like the `INPUT' command, except
-     that FILENAME will become the first input file to be linked, as
-     though it were specified first on the command line.  This may be
-     useful when using a system in which the entry point is always the
-     start of the first file.
+'STARTUP(FILENAME)'
+     The 'STARTUP' command is just like the 'INPUT' command, except that
+     FILENAME will become the first input file to be linked, as though
+     it were specified first on the command line.  This may be useful
+     when using a system in which the entry point is always the start of
+     the first file.
 
 
 File: ld.info,  Node: Format Commands,  Next: REGION_ALIAS,  Prev: File Commands,  Up: Simple Commands
@@ -2756,38 +2720,38 @@ File: ld.info,  Node: Format Commands,  Next: REGION_ALIAS,  Prev: File Commands
 
 A couple of linker script commands deal with object file formats.
 
-`OUTPUT_FORMAT(BFDNAME)'
-`OUTPUT_FORMAT(DEFAULT, BIG, LITTLE)'
-     The `OUTPUT_FORMAT' command names the BFD format to use for the
-     output file (*note BFD::).  Using `OUTPUT_FORMAT(BFDNAME)' is
-     exactly like using `--oformat BFDNAME' on the command line (*note
+'OUTPUT_FORMAT(BFDNAME)'
+'OUTPUT_FORMAT(DEFAULT, BIG, LITTLE)'
+     The 'OUTPUT_FORMAT' command names the BFD format to use for the
+     output file (*note BFD::).  Using 'OUTPUT_FORMAT(BFDNAME)' is
+     exactly like using '--oformat BFDNAME' on the command line (*note
      Command Line Options: Options.).  If both are used, the command
      line option takes precedence.
 
-     You can use `OUTPUT_FORMAT' with three arguments to use different
-     formats based on the `-EB' and `-EL' command line options.  This
+     You can use 'OUTPUT_FORMAT' with three arguments to use different
+     formats based on the '-EB' and '-EL' command line options.  This
      permits the linker script to set the output format based on the
      desired endianness.
 
-     If neither `-EB' nor `-EL' are used, then the output format will
-     be the first argument, DEFAULT.  If `-EB' is used, the output
-     format will be the second argument, BIG.  If `-EL' is used, the
-     output format will be the third argument, LITTLE.
+     If neither '-EB' nor '-EL' are used, then the output format will be
+     the first argument, DEFAULT.  If '-EB' is used, the output format
+     will be the second argument, BIG.  If '-EL' is used, the output
+     format will be the third argument, LITTLE.
 
-     For example, the default linker script for the MIPS ELF target
-     uses this command:
+     For example, the default linker script for the MIPS ELF target uses
+     this command:
           OUTPUT_FORMAT(elf32-bigmips, elf32-bigmips, elf32-littlemips)
      This says that the default format for the output file is
-     `elf32-bigmips', but if the user uses the `-EL' command line
-     option, the output file will be created in the `elf32-littlemips'
+     'elf32-bigmips', but if the user uses the '-EL' command line
+     option, the output file will be created in the 'elf32-littlemips'
      format.
 
-`TARGET(BFDNAME)'
-     The `TARGET' command names the BFD format to use when reading input
-     files.  It affects subsequent `INPUT' and `GROUP' commands.  This
-     command is like using `-b BFDNAME' on the command line (*note
-     Command Line Options: Options.).  If the `TARGET' command is used
-     but `OUTPUT_FORMAT' is not, then the last `TARGET' command is also
+'TARGET(BFDNAME)'
+     The 'TARGET' command names the BFD format to use when reading input
+     files.  It affects subsequent 'INPUT' and 'GROUP' commands.  This
+     command is like using '-b BFDNAME' on the command line (*note
+     Command Line Options: Options.).  If the 'TARGET' command is used
+     but 'OUTPUT_FORMAT' is not, then the last 'TARGET' command is also
      used to set the format for the output file.  *Note BFD::.
 
 
@@ -2797,48 +2761,45 @@ File: ld.info,  Node: REGION_ALIAS,  Next: Miscellaneous Commands,  Prev: Format
 ------------------------------------------
 
 Alias names can be added to existing memory regions created with the
-*Note MEMORY:: command.  Each name corresponds to at most one memory
+*note MEMORY:: command.  Each name corresponds to at most one memory
 region.
 
      REGION_ALIAS(ALIAS, REGION)
 
-   The `REGION_ALIAS' function creates an alias name ALIAS for the
+   The 'REGION_ALIAS' function creates an alias name ALIAS for the
 memory region REGION.  This allows a flexible mapping of output sections
 to memory regions.  An example follows.
 
    Suppose we have an application for embedded systems which come with
 various memory storage devices.  All have a general purpose, volatile
-memory `RAM' that allows code execution or data storage.  Some may have
-a read-only, non-volatile memory `ROM' that allows code execution and
+memory 'RAM' that allows code execution or data storage.  Some may have
+a read-only, non-volatile memory 'ROM' that allows code execution and
 read-only data access.  The last variant is a read-only, non-volatile
-memory `ROM2' with read-only data access and no code execution
+memory 'ROM2' with read-only data access and no code execution
 capability.  We have four output sections:
 
-   * `.text' program code;
-
-   * `.rodata' read-only data;
-
-   * `.data' read-write initialized data;
-
-   * `.bss' read-write zero initialized data.
+   * '.text' program code;
+   * '.rodata' read-only data;
+   * '.data' read-write initialized data;
+   * '.bss' read-write zero initialized data.
 
    The goal is to provide a linker command file that contains a system
 independent part defining the output sections and a system dependent
 part mapping the output sections to the memory regions available on the
 system.  Our embedded systems come with three different memory setups
-`A', `B' and `C':
+'A', 'B' and 'C':
 Section            Variant A          Variant B          Variant C
 .text              RAM                ROM                ROM
 .rodata            RAM                ROM                ROM2
 .data              RAM                RAM/ROM            RAM/ROM2
 .bss               RAM                RAM                RAM
-   The notation `RAM/ROM' or `RAM/ROM2' means that this section is
-loaded into region `ROM' or `ROM2' respectively.  Please note that the
-load address of the `.data' section starts in all three variants at the
-end of the `.rodata' section.
+   The notation 'RAM/ROM' or 'RAM/ROM2' means that this section is
+loaded into region 'ROM' or 'ROM2' respectively.  Please note that the
+load address of the '.data' section starts in all three variants at the
+end of the '.rodata' section.
 
    The base linker script that deals with the output sections follows.
-It includes the system dependent `linkcmds.memory' file that describes
+It includes the system dependent 'linkcmds.memory' file that describes
 the memory layout:
      INCLUDE linkcmds.memory
 
@@ -2866,11 +2827,11 @@ the memory layout:
            } > REGION_BSS
        }
 
-   Now we need three different `linkcmds.memory' files to define memory
-regions and alias names.  The content of `linkcmds.memory' for the three
-variants `A', `B' and `C':
-`A'
-     Here everything goes into the `RAM'.
+   Now we need three different 'linkcmds.memory' files to define memory
+regions and alias names.  The content of 'linkcmds.memory' for the three
+variants 'A', 'B' and 'C':
+'A'
+     Here everything goes into the 'RAM'.
           MEMORY
             {
               RAM : ORIGIN = 0, LENGTH = 4M
@@ -2880,12 +2841,11 @@ variants `A', `B' and `C':
           REGION_ALIAS("REGION_RODATA", RAM);
           REGION_ALIAS("REGION_DATA", RAM);
           REGION_ALIAS("REGION_BSS", RAM);
-
-`B'
-     Program code and read-only data go into the `ROM'.  Read-write
-     data goes into the `RAM'.  An image of the initialized data is
-     loaded into the `ROM' and will be copied during system start into
-     the `RAM'.
+'B'
+     Program code and read-only data go into the 'ROM'.  Read-write data
+     goes into the 'RAM'.  An image of the initialized data is loaded
+     into the 'ROM' and will be copied during system start into the
+     'RAM'.
           MEMORY
             {
               ROM : ORIGIN = 0, LENGTH = 3M
@@ -2896,12 +2856,11 @@ variants `A', `B' and `C':
           REGION_ALIAS("REGION_RODATA", ROM);
           REGION_ALIAS("REGION_DATA", RAM);
           REGION_ALIAS("REGION_BSS", RAM);
-
-`C'
-     Program code goes into the `ROM'.  Read-only data goes into the
-     `ROM2'.  Read-write data goes into the `RAM'.  An image of the
-     initialized data is loaded into the `ROM2' and will be copied
-     during system start into the `RAM'.
+'C'
+     Program code goes into the 'ROM'.  Read-only data goes into the
+     'ROM2'.  Read-write data goes into the 'RAM'.  An image of the
+     initialized data is loaded into the 'ROM2' and will be copied
+     during system start into the 'RAM'.
           MEMORY
             {
               ROM : ORIGIN = 0, LENGTH = 2M
@@ -2915,7 +2874,7 @@ variants `A', `B' and `C':
           REGION_ALIAS("REGION_BSS", RAM);
 
    It is possible to write a common system initialization routine to
-copy the `.data' section from `ROM' or `ROM2' into the `RAM' if
+copy the '.data' section from 'ROM' or 'ROM2' into the 'RAM' if
 necessary:
      #include <string.h>
 
@@ -2939,7 +2898,7 @@ File: ld.info,  Node: Miscellaneous Commands,  Prev: REGION_ALIAS,  Up: Simple C
 
 There are a few other linker scripts commands.
 
-`ASSERT(EXP, MESSAGE)'
+'ASSERT(EXP, MESSAGE)'
      Ensure that EXP is non-zero.  If it is zero, then exit the linker
      with an error code, and print MESSAGE.
 
@@ -2956,7 +2915,7 @@ There are a few other linker scripts commands.
               ASSERT ((__stack > (_end + __stack_size)), "Error: No room left for the stack");
             }
 
-     will fail if `__stack_size' is not defined elsewhere.  Symbols
+     will fail if '__stack_size' is not defined elsewhere.  Symbols
      PROVIDEd outside of section definitions are evaluated earlier, so
      they can be used inside ASSERTions.  Thus:
 
@@ -2969,38 +2928,38 @@ There are a few other linker scripts commands.
 
      will work.
 
-`EXTERN(SYMBOL SYMBOL ...)'
+'EXTERN(SYMBOL SYMBOL ...)'
      Force SYMBOL to be entered in the output file as an undefined
      symbol.  Doing this may, for example, trigger linking of additional
      modules from standard libraries.  You may list several SYMBOLs for
-     each `EXTERN', and you may use `EXTERN' multiple times.  This
-     command has the same effect as the `-u' command-line option.
+     each 'EXTERN', and you may use 'EXTERN' multiple times.  This
+     command has the same effect as the '-u' command-line option.
 
-`FORCE_COMMON_ALLOCATION'
-     This command has the same effect as the `-d' command-line option:
-     to make `ld' assign space to common symbols even if a relocatable
-     output file is specified (`-r').
+'FORCE_COMMON_ALLOCATION'
+     This command has the same effect as the '-d' command-line option:
+     to make 'ld' assign space to common symbols even if a relocatable
+     output file is specified ('-r').
 
-`INHIBIT_COMMON_ALLOCATION'
-     This command has the same effect as the `--no-define-common'
-     command-line option: to make `ld' omit the assignment of addresses
+'INHIBIT_COMMON_ALLOCATION'
+     This command has the same effect as the '--no-define-common'
+     command-line option: to make 'ld' omit the assignment of addresses
      to common symbols even for a non-relocatable output file.
 
-`INSERT [ AFTER | BEFORE ] OUTPUT_SECTION'
-     This command is typically used in a script specified by `-T' to
-     augment the default `SECTIONS' with, for example, overlays.  It
+'INSERT [ AFTER | BEFORE ] OUTPUT_SECTION'
+     This command is typically used in a script specified by '-T' to
+     augment the default 'SECTIONS' with, for example, overlays.  It
      inserts all prior linker script statements after (or before)
-     OUTPUT_SECTION, and also causes `-T' to not override the default
+     OUTPUT_SECTION, and also causes '-T' to not override the default
      linker script.  The exact insertion point is as for orphan
      sections.  *Note Location Counter::.  The insertion happens after
      the linker has mapped input sections to output sections.  Prior to
-     the insertion, since `-T' scripts are parsed before the default
-     linker script, statements in the `-T' script occur before the
+     the insertion, since '-T' scripts are parsed before the default
+     linker script, statements in the '-T' script occur before the
      default linker script statements in the internal linker
      representation of the script.  In particular, input section
-     assignments will be made to `-T' output sections before those in
-     the default script.  Here is an example of how a `-T' script using
-     `INSERT' might look:
+     assignments will be made to '-T' output sections before those in
+     the default script.  Here is an example of how a '-T' script using
+     'INSERT' might look:
 
           SECTIONS
           {
@@ -3012,8 +2971,8 @@ There are a few other linker scripts commands.
           }
           INSERT AFTER .text;
 
-`NOCROSSREFS(SECTION SECTION ...)'
-     This command may be used to tell `ld' to issue an error about any
+'NOCROSSREFS(SECTION SECTION ...)'
+     This command may be used to tell 'ld' to issue an error about any
      references among certain output sections.
 
      In certain types of programs, particularly on embedded systems when
@@ -3022,38 +2981,38 @@ There are a few other linker scripts commands.
      sections would be errors.  For example, it would be an error if
      code in one section called a function defined in the other section.
 
-     The `NOCROSSREFS' command takes a list of output section names.  If
-     `ld' detects any cross references between the sections, it reports
+     The 'NOCROSSREFS' command takes a list of output section names.  If
+     'ld' detects any cross references between the sections, it reports
      an error and returns a non-zero exit status.  Note that the
-     `NOCROSSREFS' command uses output section names, not input section
+     'NOCROSSREFS' command uses output section names, not input section
      names.
 
-`NOCROSSREFS_TO(TOSECTION FROMSECTION ...)'
-     This command may be used to tell `ld' to issue an error about any
+'NOCROSSREFS_TO(TOSECTION FROMSECTION ...)'
+     This command may be used to tell 'ld' to issue an error about any
      references to one section from a list of other sections.
 
-     The `NOCROSSREFS' command is useful when ensuring that two or more
+     The 'NOCROSSREFS' command is useful when ensuring that two or more
      output sections are entirely independent but there are situations
-     where a one-way dependency is needed. For example, in a multi-core
+     where a one-way dependency is needed.  For example, in a multi-core
      application there may be shared code that can be called from each
      core but for safety must never call back.
 
-     The `NOCROSSREFS_TO' command takes a list of output section names.
+     The 'NOCROSSREFS_TO' command takes a list of output section names.
      The first section can not be referenced from any of the other
-     sections.  If `ld' detects any references to the first section
-     from any of the other sections, it reports an error and returns a
-     non-zero exit status.  Note that the `NOCROSSREFS_TO' command uses
+     sections.  If 'ld' detects any references to the first section from
+     any of the other sections, it reports an error and returns a
+     non-zero exit status.  Note that the 'NOCROSSREFS_TO' command uses
      output section names, not input section names.
 
-`OUTPUT_ARCH(BFDARCH)'
+'OUTPUT_ARCH(BFDARCH)'
      Specify a particular output machine architecture.  The argument is
      one of the names used by the BFD library (*note BFD::).  You can
-     see the architecture of an object file by using the `objdump'
-     program with the `-f' option.
+     see the architecture of an object file by using the 'objdump'
+     program with the '-f' option.
 
-`LD_FEATURE(STRING)'
-     This command may be used to modify `ld' behavior.  If STRING is
-     `"SANE_EXPR"' then absolute symbols and numbers in a script are
+'LD_FEATURE(STRING)'
+     This command may be used to modify 'ld' behavior.  If STRING is
+     '"SANE_EXPR"' then absolute symbols and numbers in a script are
      simply treated as numbers everywhere.  *Note Expression Section::.
 
 
@@ -3081,33 +3040,33 @@ File: ld.info,  Node: Simple Assignments,  Next: HIDDEN,  Up: Assignments
 
 You may assign to a symbol using any of the C assignment operators:
 
-`SYMBOL = EXPRESSION ;'
-`SYMBOL += EXPRESSION ;'
-`SYMBOL -= EXPRESSION ;'
-`SYMBOL *= EXPRESSION ;'
-`SYMBOL /= EXPRESSION ;'
-`SYMBOL <<= EXPRESSION ;'
-`SYMBOL >>= EXPRESSION ;'
-`SYMBOL &= EXPRESSION ;'
-`SYMBOL |= EXPRESSION ;'
-
-   The first case will define SYMBOL to the value of EXPRESSION.  In
-the other cases, SYMBOL must already be defined, and the value will be
+'SYMBOL = EXPRESSION ;'
+'SYMBOL += EXPRESSION ;'
+'SYMBOL -= EXPRESSION ;'
+'SYMBOL *= EXPRESSION ;'
+'SYMBOL /= EXPRESSION ;'
+'SYMBOL <<= EXPRESSION ;'
+'SYMBOL >>= EXPRESSION ;'
+'SYMBOL &= EXPRESSION ;'
+'SYMBOL |= EXPRESSION ;'
+
+   The first case will define SYMBOL to the value of EXPRESSION.  In the
+other cases, SYMBOL must already be defined, and the value will be
 adjusted accordingly.
 
-   The special symbol name `.' indicates the location counter.  You may
-only use this within a `SECTIONS' command.  *Note Location Counter::.
+   The special symbol name '.' indicates the location counter.  You may
+only use this within a 'SECTIONS' command.  *Note Location Counter::.
 
    The semicolon after EXPRESSION is required.
 
-   Expressions are defined below; see *Note Expressions::.
+   Expressions are defined below; see *note Expressions::.
 
    You may write symbol assignments as commands in their own right, or
-as statements within a `SECTIONS' command, or as part of an output
-section description in a `SECTIONS' command.
+as statements within a 'SECTIONS' command, or as part of an output
+section description in a 'SECTIONS' command.
 
    The section of the symbol will be set from the section of the
-expression; for more information, see *Note Expression Section::.
+expression; for more information, see *note Expression Section::.
 
    Here is an example showing the three different places that symbol
 assignments may be used:
@@ -3123,10 +3082,10 @@ assignments may be used:
        _bdata = (. + 3) & ~ 3;
        .data : { *(.data) }
      }
-   In this example, the symbol `floating_point' will be defined as
-zero.  The symbol `_etext' will be defined as the address following the
-last `.text' input section.  The symbol `_bdata' will be defined as the
-address following the `.text' output section aligned upward to a 4 byte
+In this example, the symbol 'floating_point' will be defined as zero.
+The symbol '_etext' will be defined as the address following the last
+'.text' input section.  The symbol '_bdata' will be defined as the
+address following the '.text' output section aligned upward to a 4 byte
 boundary.
 
 
@@ -3136,10 +3095,10 @@ File: ld.info,  Node: HIDDEN,  Next: PROVIDE,  Prev: Simple Assignments,  Up: As
 ------------
 
 For ELF targeted ports, define a symbol that will be hidden and won't be
-exported.  The syntax is `HIDDEN(SYMBOL = EXPRESSION)'.
+exported.  The syntax is 'HIDDEN(SYMBOL = EXPRESSION)'.
 
-   Here is the example from *Note Simple Assignments::, rewritten to use
-`HIDDEN':
+   Here is the example from *note Simple Assignments::, rewritten to use
+'HIDDEN':
 
      HIDDEN(floating_point = 0);
      SECTIONS
@@ -3152,7 +3111,7 @@ exported.  The syntax is `HIDDEN(SYMBOL = EXPRESSION)'.
        HIDDEN(_bdata = (. + 3) & ~ 3);
        .data : { *(.data) }
      }
-   In this case none of the three symbols will be visible outside this
+In this case none of the three symbols will be visible outside this
 module.
 
 
@@ -3163,13 +3122,13 @@ File: ld.info,  Node: PROVIDE,  Next: PROVIDE_HIDDEN,  Prev: HIDDEN,  Up: Assign
 
 In some cases, it is desirable for a linker script to define a symbol
 only if it is referenced and is not defined by any object included in
-the link.  For example, traditional linkers defined the symbol `etext'.
-However, ANSI C requires that the user be able to use `etext' as a
-function name without encountering an error.  The `PROVIDE' keyword may
-be used to define a symbol, such as `etext', only if it is referenced
-but not defined.  The syntax is `PROVIDE(SYMBOL = EXPRESSION)'.
+the link.  For example, traditional linkers defined the symbol 'etext'.
+However, ANSI C requires that the user be able to use 'etext' as a
+function name without encountering an error.  The 'PROVIDE' keyword may
+be used to define a symbol, such as 'etext', only if it is referenced
+but not defined.  The syntax is 'PROVIDE(SYMBOL = EXPRESSION)'.
 
-   Here is an example of using `PROVIDE' to define `etext':
+   Here is an example of using 'PROVIDE' to define 'etext':
      SECTIONS
      {
        .text :
@@ -3180,11 +3139,11 @@ but not defined.  The syntax is `PROVIDE(SYMBOL = EXPRESSION)'.
          }
      }
 
-   In this example, if the program defines `_etext' (with a leading
+   In this example, if the program defines '_etext' (with a leading
 underscore), the linker will give a multiple definition error.  If, on
-the other hand, the program defines `etext' (with no leading
+the other hand, the program defines 'etext' (with no leading
 underscore), the linker will silently use the definition in the program.
-If the program references `etext' but does not define it, the linker
+If the program references 'etext' but does not define it, the linker
 will use the definition in the linker script.
 
 
@@ -3193,8 +3152,8 @@ File: ld.info,  Node: PROVIDE_HIDDEN,  Next: Source Code Reference,  Prev: PROVI
 3.5.4 PROVIDE_HIDDEN
 --------------------
 
-Similar to `PROVIDE'.  For ELF targeted ports, the symbol will be
-hidden and won't be exported.
+Similar to 'PROVIDE'.  For ELF targeted ports, the symbol will be hidden
+and won't be exported.
 
 
 File: ld.info,  Node: Source Code Reference,  Prev: PROVIDE_HIDDEN,  Up: Assignments
@@ -3210,11 +3169,11 @@ that does not have a value.
    Before going further, it is important to note that compilers often
 transform names in the source code into different names when they are
 stored in the symbol table.  For example, Fortran compilers commonly
-prepend or append an underscore, and C++ performs extensive `name
-mangling'.  Therefore there might be a discrepancy between the name of
-a variable as it is used in source code and the name of the same
-variable as it is defined in a linker script.  For example in C a
-linker script variable might be referred to as:
+prepend or append an underscore, and C++ performs extensive 'name
+mangling'.  Therefore there might be a discrepancy between the name of a
+variable as it is used in source code and the name of the same variable
+as it is defined in a linker script.  For example in C a linker script
+variable might be referred to as:
 
        extern int foo;
 
@@ -3235,8 +3194,8 @@ following C declaration, at file scope:
 
        int foo = 1000;
 
-   creates an entry called `foo' in the symbol table.  This entry holds
-the address of an `int' sized block of memory where the number 1000 is
+   creates an entry called 'foo' in the symbol table.  This entry holds
+the address of an 'int' sized block of memory where the number 1000 is
 initially stored.
 
    When a program references a symbol the compiler generates code that
@@ -3246,34 +3205,33 @@ So:
 
        foo = 1;
 
-   looks up the symbol `foo' in the symbol table, gets the address
+   looks up the symbol 'foo' in the symbol table, gets the address
 associated with this symbol and then writes the value 1 into that
 address.  Whereas:
 
        int * a = & foo;
 
-   looks up the symbol `foo' in the symbol table, gets its address and
+   looks up the symbol 'foo' in the symbol table, gets its address and
 then copies this address into the block of memory associated with the
-variable `a'.
+variable 'a'.
 
    Linker scripts symbol declarations, by contrast, create an entry in
-the symbol table but do not assign any memory to them.  Thus they are
-an address without a value.  So for example the linker script
-definition:
+the symbol table but do not assign any memory to them.  Thus they are an
+address without a value.  So for example the linker script definition:
 
        foo = 1000;
 
-   creates an entry in the symbol table called `foo' which holds the
+   creates an entry in the symbol table called 'foo' which holds the
 address of memory location 1000, but nothing special is stored at
-address 1000.  This means that you cannot access the _value_ of a
-linker script defined symbol - it has no value - all you can do is
-access the _address_ of a linker script defined symbol.
+address 1000.  This means that you cannot access the _value_ of a linker
+script defined symbol - it has no value - all you can do is access the
+_address_ of a linker script defined symbol.
 
    Hence when you are using a linker script defined symbol in source
-code you should always take the address of the symbol, and never
-attempt to use its value.  For example suppose you want to copy the
-contents of a section of memory called .ROM into a section called
-.FLASH and the linker script contains these declarations:
+code you should always take the address of the symbol, and never attempt
+to use its value.  For example suppose you want to copy the contents of
+a section of memory called .ROM into a section called .FLASH and the
+linker script contains these declarations:
 
        start_of_ROM   = .ROM;
        end_of_ROM     = .ROM + sizeof (.ROM);
@@ -3285,15 +3243,15 @@ contents of a section of memory called .ROM into a section called
 
        memcpy (& start_of_FLASH, & start_of_ROM, & end_of_ROM - & start_of_ROM);
 
-   Note the use of the `&' operators.  These are correct.
-Alternatively the symbols can be treated as the names of vectors or
-arrays and then the code will again work as expected:
+   Note the use of the '&' operators.  These are correct.  Alternatively
+the symbols can be treated as the names of vectors or arrays and then
+the code will again work as expected:
 
        extern char start_of_ROM[], end_of_ROM[], start_of_FLASH[];
 
        memcpy (start_of_FLASH, start_of_ROM, end_of_ROM - start_of_ROM);
 
-   Note how using this method does not require the use of `&' operators.
+   Note how using this method does not require the use of '&' operators.
 
 
 File: ld.info,  Node: SECTIONS,  Next: MEMORY,  Prev: Assignments,  Up: Scripts
@@ -3301,10 +3259,10 @@ File: ld.info,  Node: SECTIONS,  Next: MEMORY,  Prev: Assignments,  Up: Scripts
 3.6 SECTIONS Command
 ====================
 
-The `SECTIONS' command tells the linker how to map input sections into
+The 'SECTIONS' command tells the linker how to map input sections into
 output sections, and how to place the output sections in memory.
 
-   The format of the `SECTIONS' command is:
+   The format of the 'SECTIONS' command is:
      SECTIONS
      {
        SECTIONS-COMMAND
@@ -3314,16 +3272,13 @@ output sections, and how to place the output sections in memory.
 
    Each SECTIONS-COMMAND may of be one of the following:
 
-   * an `ENTRY' command (*note Entry command: Entry Point.)
-
+   * an 'ENTRY' command (*note Entry command: Entry Point.)
    * a symbol assignment (*note Assignments::)
-
    * an output section description
-
    * an overlay description
 
-   The `ENTRY' command and symbol assignments are permitted inside the
-`SECTIONS' command for convenience in using the location counter in
+   The 'ENTRY' command and symbol assignments are permitted inside the
+'SECTIONS' command for convenience in using the location counter in
 those commands.  This can also make the linker script easier to
 understand because you can use those commands at meaningful points in
 the layout of the output file.
@@ -3331,7 +3286,7 @@ the layout of the output file.
    Output section descriptions and overlay descriptions are described
 below.
 
-   If you do not use a `SECTIONS' command in your linker script, the
+   If you do not use a 'SECTIONS' command in your linker script, the
 linker will place each input section into an identically named output
 section in the order that the sections are first encountered in the
 input files.  If all input sections are present in the first file, for
@@ -3380,11 +3335,8 @@ breaks and other white space are optional.
    Each OUTPUT-SECTION-COMMAND may be one of the following:
 
    * a symbol assignment (*note Assignments::)
-
    * an input section description (*note Input Section::)
-
    * data values to include directly (*note Output Section Data::)
-
    * a special output section keyword (*note Output Section Keywords::)
 
 
@@ -3395,15 +3347,15 @@ File: ld.info,  Node: Output Section Name,  Next: Output Section Address,  Prev:
 
 The name of the output section is SECTION.  SECTION must meet the
 constraints of your output format.  In formats which only support a
-limited number of sections, such as `a.out', the name must be one of
-the names supported by the format (`a.out', for example, allows only
-`.text', `.data' or `.bss'). If the output format supports any number
+limited number of sections, such as 'a.out', the name must be one of the
+names supported by the format ('a.out', for example, allows only
+'.text', '.data' or '.bss').  If the output format supports any number
 of sections, but with numbers and not names (as is the case for Oasys),
 the name should be supplied as a quoted numeric string.  A section name
-may consist of any sequence of characters, but a name which contains
-any unusual characters such as commas must be quoted.
+may consist of any sequence of characters, but a name which contains any
+unusual characters such as commas must be quoted.
 
-   The output section name `/DISCARD/' is special; *Note Output Section
+   The output section name '/DISCARD/' is special; *note Output Section
 Discarding::.
 
 
@@ -3412,8 +3364,8 @@ File: ld.info,  Node: Output Section Address,  Next: Input Section,  Prev: Outpu
 3.6.3 Output Section Address
 ----------------------------
 
-The ADDRESS is an expression for the VMA (the virtual memory address)
-of the output section.  This address is optional, but if it is provided
+The ADDRESS is an expression for the VMA (the virtual memory address) of
+the output section.  This address is optional, but if it is provided
 then the output address will be set exactly as specified.
 
    If the output address is not specified then one will be chosen for
@@ -3431,7 +3383,7 @@ contained within the output section.
    * If the MEMORY command has been used to create a list of memory
      regions then the first region which has attributes compatible with
      the section is selected to contain it.  The section's output
-     address will be the next free address in that region; *Note
+     address will be the next free address in that region; *note
      MEMORY::.
 
    * If no memory regions were specified, or none match the section then
@@ -3446,18 +3398,18 @@ and
 
      .text : { *(.text) }
 
-are subtly different.  The first will set the address of the `.text'
-output section to the current value of the location counter.  The
-second will set it to the current value of the location counter aligned
-to the strictest alignment of any of the `.text' input sections.
+are subtly different.  The first will set the address of the '.text'
+output section to the current value of the location counter.  The second
+will set it to the current value of the location counter aligned to the
+strictest alignment of any of the '.text' input sections.
 
-   The ADDRESS may be an arbitrary expression; *Note Expressions::.
-For example, if you want to align the section on a 0x10 byte boundary,
-so that the lowest four bits of the section address are zero, you could
-do something like this:
+   The ADDRESS may be an arbitrary expression; *note Expressions::.  For
+example, if you want to align the section on a 0x10 byte boundary, so
+that the lowest four bits of the section address are zero, you could do
+something like this:
      .text ALIGN(0x10) : { *(.text) }
-   This works because `ALIGN' returns the current location counter
-aligned upward to the specified value.
+This works because 'ALIGN' returns the current location counter aligned
+upward to the specified value.
 
    Specifying ADDRESS for a section will change the value of the
 location counter, provided that the section is non-empty.  (Empty
@@ -3498,41 +3450,40 @@ describe further below (*note Input Section Wildcards::).
 
    The most common input section description is to include all input
 sections with a particular name in the output section.  For example, to
-include all input `.text' sections, you would write:
+include all input '.text' sections, you would write:
      *(.text)
-   Here the `*' is a wildcard which matches any file name.  To exclude
-a list of files from matching the file name wildcard, EXCLUDE_FILE may
-be used to match all files except the ones specified in the
-EXCLUDE_FILE list.  For example:
+Here the '*' is a wildcard which matches any file name.  To exclude a
+list of files from matching the file name wildcard, EXCLUDE_FILE may be
+used to match all files except the ones specified in the EXCLUDE_FILE
+list.  For example:
      EXCLUDE_FILE (*crtend.o *otherfile.o) *(.ctors)
-   will cause all .ctors sections from all files except `crtend.o' and
-`otherfile.o' to be included.  The EXCLUDE_FILE can also be placed
+will cause all .ctors sections from all files except 'crtend.o' and
+'otherfile.o' to be included.  The EXCLUDE_FILE can also be placed
 inside the section list, for example:
      *(EXCLUDE_FILE (*crtend.o *otherfile.o) .ctors)
-   The result of this is identically to the previous example.
-Supporting two syntaxes for EXCLUDE_FILE is useful if the section list
-contains more than one section, as described below.
+The result of this is identically to the previous example.  Supporting
+two syntaxes for EXCLUDE_FILE is useful if the section list contains
+more than one section, as described below.
 
    There are two ways to include more than one section:
      *(.text .rdata)
      *(.text) *(.rdata)
-   The difference between these is the order in which the `.text' and
-`.rdata' input sections will appear in the output section.  In the
-first example, they will be intermingled, appearing in the same order as
-they are found in the linker input.  In the second example, all `.text'
-input sections will appear first, followed by all `.rdata' input
-sections.
+The difference between these is the order in which the '.text' and
+'.rdata' input sections will appear in the output section.  In the first
+example, they will be intermingled, appearing in the same order as they
+are found in the linker input.  In the second example, all '.text' input
+sections will appear first, followed by all '.rdata' input sections.
 
    When using EXCLUDE_FILE with more than one section, if the exclusion
 is within the section list then the exclusion only applies to the
 immediately following section, for example:
      *(EXCLUDE_FILE (*somefile.o) .text .rdata)
-   will cause all `.text' sections from all files except `somefile.o'
-to be included, while all `.rdata' sections from all files, including
-`somefile.o', will be included.  To exclude the `.rdata' sections from
-`somefile.o' the example could be modified to:
+will cause all '.text' sections from all files except 'somefile.o' to be
+included, while all '.rdata' sections from all files, including
+'somefile.o', will be included.  To exclude the '.rdata' sections from
+'somefile.o' the example could be modified to:
      *(EXCLUDE_FILE (*somefile.o) .text EXCLUDE_FILE (*somefile.o) .rdata)
-   Alternatively, placing the EXCLUDE_FILE outside of the section list,
+Alternatively, placing the EXCLUDE_FILE outside of the section list,
 before the input file selection, will cause the exclusion to apply for
 all sections.  Thus the previous example can be rewritten as:
      EXCLUDE_FILE (*somefile.o) *(.text .rdata)
@@ -3553,46 +3504,44 @@ sections:
        .text2 :  { INPUT_SECTION_FLAGS (!SHF_WRITE) *(.text) }
      }
 
-   In this example, the output section `.text' will be comprised of any
+   In this example, the output section '.text' will be comprised of any
 input section matching the name *(.text) whose section header flags
-`SHF_MERGE' and `SHF_STRINGS' are set.  The output section `.text2'
-will be comprised of any input section matching the name *(.text) whose
-section header flag `SHF_WRITE' is clear.
+'SHF_MERGE' and 'SHF_STRINGS' are set.  The output section '.text2' will
+be comprised of any input section matching the name *(.text) whose
+section header flag 'SHF_WRITE' is clear.
 
    You can also specify files within archives by writing a pattern
 matching the archive, a colon, then the pattern matching the file, with
 no whitespace around the colon.
 
-`archive:file'
+'archive:file'
      matches file within archive
-
-`archive:'
+'archive:'
      matches the whole archive
-
-`:file'
+':file'
      matches file but not one in an archive
 
-   Either one or both of `archive' and `file' can contain shell
+   Either one or both of 'archive' and 'file' can contain shell
 wildcards.  On DOS based file systems, the linker will assume that a
-single letter followed by a colon is a drive specifier, so `c:myfile.o'
-is a simple file specification, not `myfile.o' within an archive called
-`c'.  `archive:file' filespecs may also be used within an
-`EXCLUDE_FILE' list, but may not appear in other linker script
-contexts.  For instance, you cannot extract a file from an archive by
-using `archive:file' in an `INPUT' command.
+single letter followed by a colon is a drive specifier, so 'c:myfile.o'
+is a simple file specification, not 'myfile.o' within an archive called
+'c'.  'archive:file' filespecs may also be used within an 'EXCLUDE_FILE'
+list, but may not appear in other linker script contexts.  For instance,
+you cannot extract a file from an archive by using 'archive:file' in an
+'INPUT' command.
 
    If you use a file name without a list of sections, then all sections
 in the input file will be included in the output section.  This is not
 commonly done, but it may by useful on occasion.  For example:
      data.o
 
-   When you use a file name which is not an `archive:file' specifier
-and does not contain any wild card characters, the linker will first
-see if you also specified the file name on the linker command line or
-in an `INPUT' command.  If you did not, the linker will attempt to open
-the file as an input file, as though it appeared on the command line.
-Note that this differs from an `INPUT' command, because the linker will
-not search for the file in the archive search path.
+   When you use a file name which is not an 'archive:file' specifier and
+does not contain any wild card characters, the linker will first see if
+you also specified the file name on the linker command line or in an
+'INPUT' command.  If you did not, the linker will attempt to open the
+file as an input file, as though it appeared on the command line.  Note
+that this differs from an 'INPUT' command, because the linker will not
+search for the file in the archive search path.
 
 
 File: ld.info,  Node: Input Section Wildcards,  Next: Input Section Common,  Prev: Input Section Basics,  Up: Input Section
@@ -3603,82 +3552,75 @@ File: ld.info,  Node: Input Section Wildcards,  Next: Input Section Common,  Pre
 In an input section description, either the file name or the section
 name or both may be wildcard patterns.
 
-   The file name of `*' seen in many examples is a simple wildcard
+   The file name of '*' seen in many examples is a simple wildcard
 pattern for the file name.
 
    The wildcard patterns are like those used by the Unix shell.
 
-`*'
+'*'
      matches any number of characters
-
-`?'
+'?'
      matches any single character
-
-`[CHARS]'
-     matches a single instance of any of the CHARS; the `-' character
-     may be used to specify a range of characters, as in `[a-z]' to
+'[CHARS]'
+     matches a single instance of any of the CHARS; the '-' character
+     may be used to specify a range of characters, as in '[a-z]' to
      match any lower case letter
-
-`\'
+'\'
      quotes the following character
 
    When a file name is matched with a wildcard, the wildcard characters
-will not match a `/' character (used to separate directory names on
-Unix).  A pattern consisting of a single `*' character is an exception;
-it will always match any file name, whether it contains a `/' or not.
-In a section name, the wildcard characters will match a `/' character.
+will not match a '/' character (used to separate directory names on
+Unix).  A pattern consisting of a single '*' character is an exception;
+it will always match any file name, whether it contains a '/' or not.
+In a section name, the wildcard characters will match a '/' character.
 
    File name wildcard patterns only match files which are explicitly
-specified on the command line or in an `INPUT' command.  The linker
-does not search directories to expand wildcards.
+specified on the command line or in an 'INPUT' command.  The linker does
+not search directories to expand wildcards.
 
    If a file name matches more than one wildcard pattern, or if a file
 name appears explicitly and is also matched by a wildcard pattern, the
 linker will use the first match in the linker script.  For example, this
 sequence of input section descriptions is probably in error, because the
-`data.o' rule will not be used:
+'data.o' rule will not be used:
      .data : { *(.data) }
      .data1 : { data.o(.data) }
 
    Normally, the linker will place files and sections matched by
 wildcards in the order in which they are seen during the link.  You can
-change this by using the `SORT_BY_NAME' keyword, which appears before a
-wildcard pattern in parentheses (e.g., `SORT_BY_NAME(.text*)').  When
-the `SORT_BY_NAME' keyword is used, the linker will sort the files or
+change this by using the 'SORT_BY_NAME' keyword, which appears before a
+wildcard pattern in parentheses (e.g., 'SORT_BY_NAME(.text*)').  When
+the 'SORT_BY_NAME' keyword is used, the linker will sort the files or
 sections into ascending order by name before placing them in the output
 file.
 
-   `SORT_BY_ALIGNMENT' is very similar to `SORT_BY_NAME'. The
-difference is `SORT_BY_ALIGNMENT' will sort sections into descending
+   'SORT_BY_ALIGNMENT' is very similar to 'SORT_BY_NAME'.  The
+difference is 'SORT_BY_ALIGNMENT' will sort sections into descending
 order by alignment before placing them in the output file.  Larger
 alignments are placed before smaller alignments in order to reduce the
 amount of padding necessary.
 
-   `SORT_BY_INIT_PRIORITY' is very similar to `SORT_BY_NAME'. The
-difference is `SORT_BY_INIT_PRIORITY' will sort sections into ascending
+   'SORT_BY_INIT_PRIORITY' is very similar to 'SORT_BY_NAME'.  The
+difference is 'SORT_BY_INIT_PRIORITY' will sort sections into ascending
 order by numerical value of the GCC init_priority attribute encoded in
 the section name before placing them in the output file.
 
-   `SORT' is an alias for `SORT_BY_NAME'.
+   'SORT' is an alias for 'SORT_BY_NAME'.
 
    When there are nested section sorting commands in linker script,
 there can be at most 1 level of nesting for section sorting commands.
 
-  1. `SORT_BY_NAME' (`SORT_BY_ALIGNMENT' (wildcard section pattern)).
-     It will sort the input sections by name first, then by alignment
-     if two sections have the same name.
-
-  2. `SORT_BY_ALIGNMENT' (`SORT_BY_NAME' (wildcard section pattern)).
-     It will sort the input sections by alignment first, then by name
-     if two sections have the same alignment.
-
-  3. `SORT_BY_NAME' (`SORT_BY_NAME' (wildcard section pattern)) is
-     treated the same as `SORT_BY_NAME' (wildcard section pattern).
-
-  4. `SORT_BY_ALIGNMENT' (`SORT_BY_ALIGNMENT' (wildcard section
-     pattern)) is treated the same as `SORT_BY_ALIGNMENT' (wildcard
+  1. 'SORT_BY_NAME' ('SORT_BY_ALIGNMENT' (wildcard section pattern)).
+     It will sort the input sections by name first, then by alignment if
+     two sections have the same name.
+  2. 'SORT_BY_ALIGNMENT' ('SORT_BY_NAME' (wildcard section pattern)).
+     It will sort the input sections by alignment first, then by name if
+     two sections have the same alignment.
+  3. 'SORT_BY_NAME' ('SORT_BY_NAME' (wildcard section pattern)) is
+     treated the same as 'SORT_BY_NAME' (wildcard section pattern).
+  4. 'SORT_BY_ALIGNMENT' ('SORT_BY_ALIGNMENT' (wildcard section
+     pattern)) is treated the same as 'SORT_BY_ALIGNMENT' (wildcard
      section pattern).
-
   5. All other nested section sorting commands are invalid.
 
    When both command line section sorting option and linker script
@@ -3689,30 +3631,29 @@ precedence over the command line option.
 command line option will make the section sorting command to be treated
 as nested sorting command.
 
-  1. `SORT_BY_NAME' (wildcard section pattern ) with `--sort-sections
-     alignment' is equivalent to `SORT_BY_NAME' (`SORT_BY_ALIGNMENT'
+  1. 'SORT_BY_NAME' (wildcard section pattern ) with '--sort-sections
+     alignment' is equivalent to 'SORT_BY_NAME' ('SORT_BY_ALIGNMENT'
+     (wildcard section pattern)).
+  2. 'SORT_BY_ALIGNMENT' (wildcard section pattern) with '--sort-section
+     name' is equivalent to 'SORT_BY_ALIGNMENT' ('SORT_BY_NAME'
      (wildcard section pattern)).
-
-  2. `SORT_BY_ALIGNMENT' (wildcard section pattern) with
-     `--sort-section name' is equivalent to `SORT_BY_ALIGNMENT'
-     (`SORT_BY_NAME' (wildcard section pattern)).
 
    If the section sorting command in linker script is nested, the
 command line option will be ignored.
 
-   `SORT_NONE' disables section sorting by ignoring the command line
+   'SORT_NONE' disables section sorting by ignoring the command line
 section sorting option.
 
    If you ever get confused about where input sections are going, use
-the `-M' linker option to generate a map file.  The map file shows
+the '-M' linker option to generate a map file.  The map file shows
 precisely how input sections are mapped to output sections.
 
    This example shows how wildcard patterns might be used to partition
-files.  This linker script directs the linker to place all `.text'
-sections in `.text' and all `.bss' sections in `.bss'.  The linker will
-place the `.data' section from all files beginning with an upper case
-character in `.DATA'; for all other files, the linker will place the
-`.data' section in `.data'.
+files.  This linker script directs the linker to place all '.text'
+sections in '.text' and all '.bss' sections in '.bss'.  The linker will
+place the '.data' section from all files beginning with an upper case
+character in '.DATA'; for all other files, the linker will place the
+'.data' section in '.data'.
      SECTIONS {
        .text : { *(.text) }
        .DATA : { [A-Z]*(.data) }
@@ -3729,28 +3670,28 @@ File: ld.info,  Node: Input Section Common,  Next: Input Section Keep,  Prev: In
 A special notation is needed for common symbols, because in many object
 file formats common symbols do not have a particular input section.  The
 linker treats common symbols as though they are in an input section
-named `COMMON'.
+named 'COMMON'.
 
-   You may use file names with the `COMMON' section just as with any
+   You may use file names with the 'COMMON' section just as with any
 other input sections.  You can use this to place common symbols from a
 particular input file in one section while common symbols from other
 input files are placed in another section.
 
    In most cases, common symbols in input files will be placed in the
-`.bss' section in the output file.  For example:
+'.bss' section in the output file.  For example:
      .bss { *(.bss) *(COMMON) }
 
    Some object file formats have more than one type of common symbol.
 For example, the MIPS ELF object file format distinguishes standard
 common symbols and small common symbols.  In this case, the linker will
 use a different special section name for other types of common symbols.
-In the case of MIPS ELF, the linker uses `COMMON' for standard common
-symbols and `.scommon' for small common symbols.  This permits you to
+In the case of MIPS ELF, the linker uses 'COMMON' for standard common
+symbols and '.scommon' for small common symbols.  This permits you to
 map the different types of common symbols into memory at different
 locations.
 
-   You will sometimes see `[COMMON]' in old linker scripts.  This
-notation is now considered obsolete.  It is equivalent to `*(COMMON)'.
+   You will sometimes see '[COMMON]' in old linker scripts.  This
+notation is now considered obsolete.  It is equivalent to '*(COMMON)'.
 
 
 File: ld.info,  Node: Input Section Keep,  Next: Input Section Example,  Prev: Input Section Common,  Up: Input Section
@@ -3758,10 +3699,10 @@ File: ld.info,  Node: Input Section Keep,  Next: Input Section Example,  Prev: I
 3.6.4.4 Input Section and Garbage Collection
 ............................................
 
-When link-time garbage collection is in use (`--gc-sections'), it is
+When link-time garbage collection is in use ('--gc-sections'), it is
 often useful to mark sections that should not be eliminated.  This is
 accomplished by surrounding an input section's wildcard entry with
-`KEEP()', as in `KEEP(*(.init))' or `KEEP(SORT_BY_NAME(*)(.ctors))'.
+'KEEP()', as in 'KEEP(*(.init))' or 'KEEP(SORT_BY_NAME(*)(.ctors))'.
 
 
 File: ld.info,  Node: Input Section Example,  Prev: Input Section Keep,  Up: Input Section
@@ -3770,13 +3711,13 @@ File: ld.info,  Node: Input Section Example,  Prev: Input Section Keep,  Up: Inp
 .............................
 
 The following example is a complete linker script.  It tells the linker
-to read all of the sections from file `all.o' and place them at the
-start of output section `outputa' which starts at location `0x10000'.
-All of section `.input1' from file `foo.o' follows immediately, in the
-same output section.  All of section `.input2' from `foo.o' goes into
-output section `outputb', followed by section `.input1' from `foo1.o'.
-All of the remaining `.input1' and `.input2' sections from any files
-are written to output section `outputc'.
+to read all of the sections from file 'all.o' and place them at the
+start of output section 'outputa' which starts at location '0x10000'.
+All of section '.input1' from file 'foo.o' follows immediately, in the
+same output section.  All of section '.input2' from 'foo.o' goes into
+output section 'outputb', followed by section '.input1' from 'foo1.o'.
+All of the remaining '.input1' and '.input2' sections from any files are
+written to output section 'outputc'.
 
      SECTIONS {
        outputa 0x10000 :
@@ -3803,24 +3744,24 @@ File: ld.info,  Node: Output Section Data,  Next: Output Section Keywords,  Prev
 -------------------------
 
 You can include explicit bytes of data in an output section by using
-`BYTE', `SHORT', `LONG', `QUAD', or `SQUAD' as an output section
+'BYTE', 'SHORT', 'LONG', 'QUAD', or 'SQUAD' as an output section
 command.  Each keyword is followed by an expression in parentheses
 providing the value to store (*note Expressions::).  The value of the
 expression is stored at the current value of the location counter.
 
-   The `BYTE', `SHORT', `LONG', and `QUAD' commands store one, two,
+   The 'BYTE', 'SHORT', 'LONG', and 'QUAD' commands store one, two,
 four, and eight bytes (respectively).  After storing the bytes, the
 location counter is incremented by the number of bytes stored.
 
    For example, this will store the byte 1 followed by the four byte
-value of the symbol `addr':
+value of the symbol 'addr':
      BYTE(1)
      LONG(addr)
 
-   When using a 64 bit host or target, `QUAD' and `SQUAD' are the same;
+   When using a 64 bit host or target, 'QUAD' and 'SQUAD' are the same;
 they both store an 8 byte, or 64 bit, value.  When both host and target
-are 32 bits, an expression is computed as 32 bits.  In this case `QUAD'
-stores a 32 bit value zero extended to 64 bits, and `SQUAD' stores a 32
+are 32 bits, an expression is computed as 32 bits.  In this case 'QUAD'
+stores a 32 bit value zero extended to 64 bits, and 'SQUAD' stores a 32
 bit value sign extended to 64 bits.
 
    If the object file format of the output file has an explicit
@@ -3831,28 +3772,28 @@ stored in the endianness of the first input object file.
 
    Note--these commands only work inside a section description and not
 between them, so the following will produce an error from the linker:
-     SECTIONS { .text : { *(.text) } LONG(1) .data : { *(.data) } }
+     SECTIONS { .text : { *(.text) } LONG(1) .data : { *(.data) } } 
    whereas this will work:
-     SECTIONS { .text : { *(.text) ; LONG(1) } .data : { *(.data) } }
+     SECTIONS { .text : { *(.text) ; LONG(1) } .data : { *(.data) } } 
 
-   You may use the `FILL' command to set the fill pattern for the
+   You may use the 'FILL' command to set the fill pattern for the
 current section.  It is followed by an expression in parentheses.  Any
 otherwise unspecified regions of memory within the section (for example,
 gaps left due to the required alignment of input sections) are filled
-with the value of the expression, repeated as necessary.  A `FILL'
+with the value of the expression, repeated as necessary.  A 'FILL'
 statement covers memory locations after the point at which it occurs in
-the section definition; by including more than one `FILL' statement,
-you can have different fill patterns in different parts of an output
+the section definition; by including more than one 'FILL' statement, you
+can have different fill patterns in different parts of an output
 section.
 
    This example shows how to fill unspecified regions of memory with the
-value `0x90':
+value '0x90':
      FILL(0x90909090)
 
-   The `FILL' command is similar to the `=FILLEXP' output section
+   The 'FILL' command is similar to the '=FILLEXP' output section
 attribute, but it only affects the part of the section following the
-`FILL' command, rather than the entire section.  If both are used, the
-`FILL' command takes precedence.  *Note Output Section Fill::, for
+'FILL' command, rather than the entire section.  If both are used, the
+'FILL' command takes precedence.  *Note Output Section Fill::, for
 details on the fill expression.
 
 
@@ -3864,43 +3805,43 @@ File: ld.info,  Node: Output Section Keywords,  Next: Output Section Discarding,
 There are a couple of keywords which can appear as output section
 commands.
 
-`CREATE_OBJECT_SYMBOLS'
+'CREATE_OBJECT_SYMBOLS'
      The command tells the linker to create a symbol for each input
      file.  The name of each symbol will be the name of the
      corresponding input file.  The section of each symbol will be the
-     output section in which the `CREATE_OBJECT_SYMBOLS' command
+     output section in which the 'CREATE_OBJECT_SYMBOLS' command
      appears.
 
      This is conventional for the a.out object file format.  It is not
      normally used for any other object file format.
 
-`CONSTRUCTORS'
+'CONSTRUCTORS'
      When linking using the a.out object file format, the linker uses an
      unusual set construct to support C++ global constructors and
      destructors.  When linking object file formats which do not support
      arbitrary sections, such as ECOFF and XCOFF, the linker will
      automatically recognize C++ global constructors and destructors by
-     name.  For these object file formats, the `CONSTRUCTORS' command
+     name.  For these object file formats, the 'CONSTRUCTORS' command
      tells the linker to place constructor information in the output
-     section where the `CONSTRUCTORS' command appears.  The
-     `CONSTRUCTORS' command is ignored for other object file formats.
+     section where the 'CONSTRUCTORS' command appears.  The
+     'CONSTRUCTORS' command is ignored for other object file formats.
 
-     The symbol `__CTOR_LIST__' marks the start of the global
-     constructors, and the symbol `__CTOR_END__' marks the end.
-     Similarly, `__DTOR_LIST__' and `__DTOR_END__' mark the start and
+     The symbol '__CTOR_LIST__' marks the start of the global
+     constructors, and the symbol '__CTOR_END__' marks the end.
+     Similarly, '__DTOR_LIST__' and '__DTOR_END__' mark the start and
      end of the global destructors.  The first word in the list is the
      number of entries, followed by the address of each constructor or
      destructor, followed by a zero word.  The compiler must arrange to
      actually run the code.  For these object file formats GNU C++
-     normally calls constructors from a subroutine `__main'; a call to
-     `__main' is automatically inserted into the startup code for
-     `main'.  GNU C++ normally runs destructors either by using
-     `atexit', or directly from the function `exit'.
+     normally calls constructors from a subroutine '__main'; a call to
+     '__main' is automatically inserted into the startup code for
+     'main'.  GNU C++ normally runs destructors either by using
+     'atexit', or directly from the function 'exit'.
 
-     For object file formats such as `COFF' or `ELF' which support
+     For object file formats such as 'COFF' or 'ELF' which support
      arbitrary section names, GNU C++ will normally arrange to put the
-     addresses of global constructors and destructors into the `.ctors'
-     and `.dtors' sections.  Placing the following sequence into your
+     addresses of global constructors and destructors into the '.ctors'
+     and '.dtors' sections.  Placing the following sequence into your
      linker script will build the sort of table which the GNU C++
      runtime code expects to see.
 
@@ -3919,16 +3860,15 @@ commands.
      which provides some control over the order in which global
      constructors are run, you must sort the constructors at link time
      to ensure that they are executed in the correct order.  When using
-     the `CONSTRUCTORS' command, use `SORT_BY_NAME(CONSTRUCTORS)'
-     instead.  When using the `.ctors' and `.dtors' sections, use
-     `*(SORT_BY_NAME(.ctors))' and `*(SORT_BY_NAME(.dtors))' instead of
-     just `*(.ctors)' and `*(.dtors)'.
+     the 'CONSTRUCTORS' command, use 'SORT_BY_NAME(CONSTRUCTORS)'
+     instead.  When using the '.ctors' and '.dtors' sections, use
+     '*(SORT_BY_NAME(.ctors))' and '*(SORT_BY_NAME(.dtors))' instead of
+     just '*(.ctors)' and '*(.dtors)'.
 
      Normally the compiler and linker will handle these issues
-     automatically, and you will not need to concern yourself with
-     them.  However, you may need to consider this if you are using C++
-     and writing your own linker scripts.
-
+     automatically, and you will not need to concern yourself with them.
+     However, you may need to consider this if you are using C++ and
+     writing your own linker scripts.
 
 
 File: ld.info,  Node: Output Section Discarding,  Next: Output Section Attributes,  Prev: Output Section Keywords,  Up: SECTIONS
@@ -3937,17 +3877,17 @@ File: ld.info,  Node: Output Section Discarding,  Next: Output Section Attribute
 -------------------------------
 
 The linker will not normally create output sections with no contents.
-This is for convenience when referring to input sections that may or
-may not be present in any of the input files.  For example:
+This is for convenience when referring to input sections that may or may
+not be present in any of the input files.  For example:
      .foo : { *(.foo) }
-   will only create a `.foo' section in the output file if there is a
-`.foo' section in at least one input file, and if the input sections
-are not all empty.  Other link script directives that allocate space in
-an output section will also create the output section.  So too will
+will only create a '.foo' section in the output file if there is a
+'.foo' section in at least one input file, and if the input sections are
+not all empty.  Other link script directives that allocate space in an
+output section will also create the output section.  So too will
 assignments to dot even if the assignment does not create space, except
-for `. = 0', `. = . + 0', `. = sym', `. = . + sym' and `. = ALIGN (. !=
-0, expr, 1)' when `sym' is an absolute symbol of value 0 defined in the
-script.  This allows you to force output of an empty section with `. =
+for '. = 0', '. = . + 0', '. = sym', '. = . + sym' and '. = ALIGN (. !=
+0, expr, 1)' when 'sym' is an absolute symbol of value 0 defined in the
+script.  This allows you to force output of an empty section with '. =
 .'.
 
    The linker will ignore address assignments (*note Output Section
@@ -3956,9 +3896,9 @@ defines symbols in the output section.  In that case the linker will
 obey the address assignments, possibly advancing dot even though the
 section is discarded.
 
-   The special output section name `/DISCARD/' may be used to discard
+   The special output section name '/DISCARD/' may be used to discard
 input sections.  Any input sections which are assigned to an output
-section named `/DISCARD/' are not included in the output file.
+section named '/DISCARD/' are not included in the output file.
 
 
 File: ld.info,  Node: Output Section Attributes,  Next: Overlay Description,  Prev: Output Section Discarding,  Up: SECTIONS
@@ -3980,9 +3920,8 @@ like this:
          ...
        } [>REGION] [AT>LMA_REGION] [:PHDR :PHDR ...] [=FILLEXP]
 
-   We've already described SECTION, ADDRESS, and
-OUTPUT-SECTION-COMMAND.  In this section we will describe the remaining
-section attributes.
+   We've already described SECTION, ADDRESS, and OUTPUT-SECTION-COMMAND.
+In this section we will describe the remaining section attributes.
 
 * Menu:
 
@@ -4004,14 +3943,13 @@ File: ld.info,  Node: Output Section Type,  Next: Output Section LMA,  Up: Outpu
 Each output section may have a type.  The type is a keyword in
 parentheses.  The following types are defined:
 
-`NOLOAD'
+'NOLOAD'
      The section should be marked as not loadable, so that it will not
      be loaded into memory when the program is run.
-
-`DSECT'
-`COPY'
-`INFO'
-`OVERLAY'
+'DSECT'
+'COPY'
+'INFO'
+'OVERLAY'
      These type names are supported for backward compatibility, and are
      rarely used.  They all have the same effect: the section should be
      marked as not allocatable, so that no memory is allocated for the
@@ -4019,8 +3957,8 @@ parentheses.  The following types are defined:
 
    The linker normally sets the attributes of an output section based on
 the input sections which map into it.  You can override this by using
-the section type.  For example, in the script sample below, the `ROM'
-section is addressed at memory location `0' and does not need to be
+the section type.  For example, in the script sample below, the 'ROM'
+section is addressed at memory location '0' and does not need to be
 loaded when the program is run.
      SECTIONS {
        ROM 0 (NOLOAD) : { ... }
@@ -4034,31 +3972,31 @@ File: ld.info,  Node: Output Section LMA,  Next: Forced Output Alignment,  Prev:
 ..........................
 
 Every section has a virtual address (VMA) and a load address (LMA); see
-*Note Basic Script Concepts::.  The virtual address is specified by the
+*note Basic Script Concepts::.  The virtual address is specified by the
 *note Output Section Address:: described earlier.  The load address is
-specified by the `AT' or `AT>' keywords.  Specifying a load address is
+specified by the 'AT' or 'AT>' keywords.  Specifying a load address is
 optional.
 
-   The `AT' keyword takes an expression as an argument.  This specifies
-the exact load address of the section.  The `AT>' keyword takes the
-name of a memory region as an argument.  *Note MEMORY::.  The load
-address of the section is set to the next free address in the region,
-aligned to the section's alignment requirements.
+   The 'AT' keyword takes an expression as an argument.  This specifies
+the exact load address of the section.  The 'AT>' keyword takes the name
+of a memory region as an argument.  *Note MEMORY::.  The load address of
+the section is set to the next free address in the region, aligned to
+the section's alignment requirements.
 
-   If neither `AT' nor `AT>' is specified for an allocatable section,
+   If neither 'AT' nor 'AT>' is specified for an allocatable section,
 the linker will use the following heuristic to determine the load
 address:
 
-   * If the section has a specific VMA address, then this is used as
-     the LMA address as well.
+   * If the section has a specific VMA address, then this is used as the
+     LMA address as well.
 
    * If the section is not allocatable then its LMA is set to its VMA.
 
    * Otherwise if a memory region can be found that is compatible with
-     the current section, and this region contains at least one
-     section, then the LMA is set so the difference between the VMA and
-     LMA is the same as the difference between the VMA and LMA of the
-     last section in the located region.
+     the current section, and this region contains at least one section,
+     then the LMA is set so the difference between the VMA and LMA is
+     the same as the difference between the VMA and LMA of the last
+     section in the located region.
 
    * If no memory regions have been declared then a default region that
      covers the entire address space is used in the previous step.
@@ -4068,10 +4006,10 @@ address:
 
    This feature is designed to make it easy to build a ROM image.  For
 example, the following linker script creates three output sections: one
-called `.text', which starts at `0x1000', one called `.mdata', which is
-loaded at the end of the `.text' section even though its VMA is
-`0x2000', and one called `.bss' to hold uninitialized data at address
-`0x3000'.  The symbol `_data' is defined with the value `0x2000', which
+called '.text', which starts at '0x1000', one called '.mdata', which is
+loaded at the end of the '.text' section even though its VMA is
+'0x2000', and one called '.bss' to hold uninitialized data at address
+'0x3000'.  The symbol '_data' is defined with the value '0x2000', which
 shows that the location counter holds the VMA value, not the LMA value.
 
      SECTIONS
@@ -4108,7 +4046,7 @@ File: ld.info,  Node: Forced Output Alignment,  Next: Forced Input Alignment,  P
 3.6.8.3 Forced Output Alignment
 ...............................
 
-You can increase an output section's alignment by using ALIGN.  As an
+You can increase an output section's alignment by using ALIGN. As an
 alternative you can enforce that the difference between the VMA and LMA
 remains intact throughout this output section with the ALIGN_WITH_INPUT
 attribute.
@@ -4120,7 +4058,7 @@ File: ld.info,  Node: Forced Input Alignment,  Next: Output Section Constraint,
 ..............................
 
 You can force input section alignment within an output section by using
-SUBALIGN.  The value specified overrides any alignment given by input
+SUBALIGN. The value specified overrides any alignment given by input
 sections, whether larger or smaller.
 
 
@@ -4131,7 +4069,7 @@ File: ld.info,  Node: Output Section Constraint,  Next: Output Section Region,
 
 You can specify that an output section should only be created if all of
 its input sections are read-only or all of its input sections are
-read-write by using the keyword `ONLY_IF_RO' and `ONLY_IF_RW'
+read-write by using the keyword 'ONLY_IF_RO' and 'ONLY_IF_RW'
 respectively.
 
 
@@ -4141,7 +4079,7 @@ File: ld.info,  Node: Output Section Region,  Next: Output Section Phdr,  Prev:
 .............................
 
 You can assign a section to a previously defined region of memory by
-using `>REGION'.  *Note MEMORY::.
+using '>REGION'.  *Note MEMORY::.
 
    Here is a simple example:
      MEMORY { rom : ORIGIN = 0x1000, LENGTH = 0x1000 }
@@ -4154,10 +4092,10 @@ File: ld.info,  Node: Output Section Phdr,  Next: Output Section Fill,  Prev: Ou
 ...........................
 
 You can assign a section to a previously defined program segment by
-using `:PHDR'.  *Note PHDRS::.  If a section is assigned to one or more
+using ':PHDR'.  *Note PHDRS::.  If a section is assigned to one or more
 segments, then all subsequent allocated sections will be assigned to
-those segments as well, unless they use an explicitly `:PHDR' modifier.
-You can use `:NONE' to tell the linker to not put the section in any
+those segments as well, unless they use an explicitly ':PHDR' modifier.
+You can use ':NONE' to tell the linker to not put the section in any
 segment at all.
 
    Here is a simple example:
@@ -4170,20 +4108,20 @@ File: ld.info,  Node: Output Section Fill,  Prev: Output Section Phdr,  Up: Outp
 3.6.8.8 Output Section Fill
 ...........................
 
-You can set the fill pattern for an entire section by using `=FILLEXP'.
+You can set the fill pattern for an entire section by using '=FILLEXP'.
 FILLEXP is an expression (*note Expressions::).  Any otherwise
 unspecified regions of memory within the output section (for example,
 gaps left due to the required alignment of input sections) will be
-filled with the value, repeated as necessary.  If the fill expression
-is a simple hex number, ie. a string of hex digit starting with `0x'
-and without a trailing `k' or `M', then an arbitrarily long sequence of
-hex digits can be used to specify the fill pattern;  Leading zeros
-become part of the pattern too.  For all other cases, including extra
-parentheses or a unary `+', the fill pattern is the four least
+filled with the value, repeated as necessary.  If the fill expression is
+a simple hex number, ie.  a string of hex digit starting with '0x' and
+without a trailing 'k' or 'M', then an arbitrarily long sequence of hex
+digits can be used to specify the fill pattern; Leading zeros become
+part of the pattern too.  For all other cases, including extra
+parentheses or a unary '+', the fill pattern is the four least
 significant bytes of the value of the expression.  In all cases, the
 number is big-endian.
 
-   You can also change the fill value with a `FILL' command in the
+   You can also change the fill value with a 'FILL' command in the
 output section commands; (*note Output Section Data::).
 
    Here is a simple example:
@@ -4203,9 +4141,9 @@ required, perhaps by simply manipulating addressing bits.  This approach
 can be useful, for example, when a certain region of memory is faster
 than another.
 
-   Overlays are described using the `OVERLAY' command.  The `OVERLAY'
-command is used within a `SECTIONS' command, like an output section
-description.  The full syntax of the `OVERLAY' command is as follows:
+   Overlays are described using the 'OVERLAY' command.  The 'OVERLAY'
+command is used within a 'SECTIONS' command, like an output section
+description.  The full syntax of the 'OVERLAY' command is as follows:
      OVERLAY [START] : [NOCROSSREFS] [AT ( LDADDR )]
        {
          SECNAME1
@@ -4223,12 +4161,11 @@ description.  The full syntax of the `OVERLAY' command is as follows:
          ...
        } [>REGION] [:PHDR...] [=FILL] [,]
 
-   Everything is optional except `OVERLAY' (a keyword), and each
-section must have a name (SECNAME1 and SECNAME2 above).  The section
-definitions within the `OVERLAY' construct are identical to those
-within the general `SECTIONS' construct (*note SECTIONS::), except that
-no addresses and no memory regions may be defined for sections within
-an `OVERLAY'.
+   Everything is optional except 'OVERLAY' (a keyword), and each section
+must have a name (SECNAME1 and SECNAME2 above).  The section definitions
+within the 'OVERLAY' construct are identical to those within the general
+'SECTIONS' construct (*note SECTIONS::), except that no addresses and no
+memory regions may be defined for sections within an 'OVERLAY'.
 
    The comma at the end may be required if a FILL is used and the next
 SECTIONS-COMMAND looks like a continuation of the expression.
@@ -4236,50 +4173,50 @@ SECTIONS-COMMAND looks like a continuation of the expression.
    The sections are all defined with the same starting address.  The
 load addresses of the sections are arranged such that they are
 consecutive in memory starting at the load address used for the
-`OVERLAY' as a whole (as with normal section definitions, the load
+'OVERLAY' as a whole (as with normal section definitions, the load
 address is optional, and defaults to the start address; the start
 address is also optional, and defaults to the current value of the
 location counter).
 
-   If the `NOCROSSREFS' keyword is used, and there are any references
-among the sections, the linker will report an error.  Since the
-sections all run at the same address, it normally does not make sense
-for one section to refer directly to another.  *Note NOCROSSREFS:
-Miscellaneous Commands.
+   If the 'NOCROSSREFS' keyword is used, and there are any references
+among the sections, the linker will report an error.  Since the sections
+all run at the same address, it normally does not make sense for one
+section to refer directly to another.  *Note NOCROSSREFS: Miscellaneous
+Commands.
 
-   For each section within the `OVERLAY', the linker automatically
-provides two symbols.  The symbol `__load_start_SECNAME' is defined as
+   For each section within the 'OVERLAY', the linker automatically
+provides two symbols.  The symbol '__load_start_SECNAME' is defined as
 the starting load address of the section.  The symbol
-`__load_stop_SECNAME' is defined as the final load address of the
+'__load_stop_SECNAME' is defined as the final load address of the
 section.  Any characters within SECNAME which are not legal within C
-identifiers are removed.  C (or assembler) code may use these symbols
-to move the overlaid sections around as necessary.
+identifiers are removed.  C (or assembler) code may use these symbols to
+move the overlaid sections around as necessary.
 
    At the end of the overlay, the value of the location counter is set
 to the start address of the overlay plus the size of the largest
 section.
 
    Here is an example.  Remember that this would appear inside a
-`SECTIONS' construct.
+'SECTIONS' construct.
        OVERLAY 0x1000 : AT (0x4000)
         {
           .text0 { o1/*.o(.text) }
           .text1 { o2/*.o(.text) }
         }
-This will define both `.text0' and `.text1' to start at address
-0x1000.  `.text0' will be loaded at address 0x4000, and `.text1' will
-be loaded immediately after `.text0'.  The following symbols will be
-defined if referenced: `__load_start_text0', `__load_stop_text0',
-`__load_start_text1', `__load_stop_text1'.
+This will define both '.text0' and '.text1' to start at address 0x1000.
+'.text0' will be loaded at address 0x4000, and '.text1' will be loaded
+immediately after '.text0'.  The following symbols will be defined if
+referenced: '__load_start_text0', '__load_stop_text0',
+'__load_start_text1', '__load_stop_text1'.
 
-   C code to copy overlay `.text1' into the overlay area might look
-like the following.
+   C code to copy overlay '.text1' into the overlay area might look like
+the following.
 
        extern char __load_start_text1, __load_stop_text1;
        memcpy ((char *) 0x1000, &__load_start_text1,
                &__load_stop_text1 - &__load_start_text1);
 
-   Note that the `OVERLAY' command is just syntactic sugar, since
+   Note that the 'OVERLAY' command is just syntactic sugar, since
 everything it does can be done using the more basic commands.  The above
 example could have been written identically as follows.
 
@@ -4298,9 +4235,9 @@ File: ld.info,  Node: MEMORY,  Next: PHDRS,  Prev: SECTIONS,  Up: Scripts
 ==================
 
 The linker's default configuration permits allocation of all available
-memory.  You can override this by using the `MEMORY' command.
+memory.  You can override this by using the 'MEMORY' command.
 
-   The `MEMORY' command describes the location and size of blocks of
+   The 'MEMORY' command describes the location and size of blocks of
 memory in the target.  You can use it to describe which memory regions
 may be used by the linker, and which memory regions it must avoid.  You
 can then assign sections to particular memory regions.  The linker will
@@ -4308,9 +4245,9 @@ set section addresses based on the memory regions, and will warn about
 regions that become too full.  The linker will not shuffle sections
 around to fit into the available regions.
 
-   A linker script may contain many uses of the `MEMORY' command,
-however, all memory blocks defined are treated as if they were
-specified inside a single `MEMORY' command.  The syntax for `MEMORY' is:
+   A linker script may contain many uses of the 'MEMORY' command,
+however, all memory blocks defined are treated as if they were specified
+inside a single 'MEMORY' command.  The syntax for 'MEMORY' is:
      MEMORY
        {
          NAME [(ATTR)] : ORIGIN = ORIGIN, LENGTH = LEN
@@ -4321,62 +4258,56 @@ specified inside a single `MEMORY' command.  The syntax for `MEMORY' is:
 The region name has no meaning outside of the linker script.  Region
 names are stored in a separate name space, and will not conflict with
 symbol names, file names, or section names.  Each memory region must
-have a distinct name within the `MEMORY' command.  However you can add
-later alias names to existing memory regions with the *Note
+have a distinct name within the 'MEMORY' command.  However you can add
+later alias names to existing memory regions with the *note
 REGION_ALIAS:: command.
 
    The ATTR string is an optional list of attributes that specify
 whether to use a particular memory region for an input section which is
-not explicitly mapped in the linker script.  As described in *Note
+not explicitly mapped in the linker script.  As described in *note
 SECTIONS::, if you do not specify an output section for some input
 section, the linker will create an output section with the same name as
 the input section.  If you define region attributes, the linker will use
 them to select the memory region for the output section that it creates.
 
    The ATTR string must consist only of the following characters:
-`R'
+'R'
      Read-only section
-
-`W'
+'W'
      Read/write section
-
-`X'
+'X'
      Executable section
-
-`A'
+'A'
      Allocatable section
-
-`I'
+'I'
      Initialized section
-
-`L'
-     Same as `I'
-
-`!'
+'L'
+     Same as 'I'
+'!'
      Invert the sense of any of the attributes that follow
 
    If a unmapped section matches any of the listed attributes other than
-`!', it will be placed in the memory region.  The `!' attribute
-reverses this test, so that an unmapped section will be placed in the
-memory region only if it does not match any of the listed attributes.
+'!', it will be placed in the memory region.  The '!' attribute reverses
+this test, so that an unmapped section will be placed in the memory
+region only if it does not match any of the listed attributes.
 
    The ORIGIN is an numerical expression for the start address of the
-memory region.  The expression must evaluate to a constant and it
-cannot involve any symbols.  The keyword `ORIGIN' may be abbreviated to
-`org' or `o' (but not, for example, `ORG').
+memory region.  The expression must evaluate to a constant and it cannot
+involve any symbols.  The keyword 'ORIGIN' may be abbreviated to 'org'
+or 'o' (but not, for example, 'ORG').
 
    The LEN is an expression for the size in bytes of the memory region.
-As with the ORIGIN expression, the expression must be numerical only
-and must evaluate to a constant.  The keyword `LENGTH' may be
-abbreviated to `len' or `l'.
+As with the ORIGIN expression, the expression must be numerical only and
+must evaluate to a constant.  The keyword 'LENGTH' may be abbreviated to
+'len' or 'l'.
 
    In the following example, we specify that there are two memory
-regions available for allocation: one starting at `0' for 256 kilobytes,
-and the other starting at `0x40000000' for four megabytes.  The linker
-will place into the `rom' memory region every section which is not
+regions available for allocation: one starting at '0' for 256 kilobytes,
+and the other starting at '0x40000000' for four megabytes.  The linker
+will place into the 'rom' memory region every section which is not
 explicitly mapped into a memory region, and is either read-only or
 executable.  The linker will place other sections which are not
-explicitly mapped into a memory region into the `ram' memory region.
+explicitly mapped into a memory region into the 'ram' memory region.
 
      MEMORY
        {
@@ -4385,9 +4316,9 @@ explicitly mapped into a memory region into the `ram' memory region.
        }
 
    Once you define a memory region, you can direct the linker to place
-specific output sections into that memory region by using the `>REGION'
+specific output sections into that memory region by using the '>REGION'
 output section attribute.  For example, if you have a memory region
-named `mem', you would use `>mem' in the output section definition.
+named 'mem', you would use '>mem' in the output section definition.
 *Note Output Section Region::.  If no address was specified for the
 output section, the linker will set the address to the next available
 address within the memory region.  If the combined output sections
@@ -4395,7 +4326,7 @@ directed to a memory region are too large for the region, the linker
 will issue an error message.
 
    It is possible to access the origin and length of a memory in an
-expression via the `ORIGIN(MEMORY)' and `LENGTH(MEMORY)' functions:
+expression via the 'ORIGIN(MEMORY)' and 'LENGTH(MEMORY)' functions:
 
        _fstack = ORIGIN(ram) + LENGTH(ram) - 4;
 
@@ -4407,8 +4338,8 @@ File: ld.info,  Node: PHDRS,  Next: VERSION,  Prev: MEMORY,  Up: Scripts
 
 The ELF object file format uses "program headers", also knows as
 "segments".  The program headers describe how the program should be
-loaded into memory.  You can print them out by using the `objdump'
-program with the `-p' option.
+loaded into memory.  You can print them out by using the 'objdump'
+program with the '-p' option.
 
    When you run an ELF program on a native ELF system, the system loader
 reads the program headers in order to figure out how to load the
@@ -4418,16 +4349,16 @@ interprets program headers; for more information, see the ELF ABI.
 
    The linker will create reasonable program headers by default.
 However, in some cases, you may need to specify the program headers more
-precisely.  You may use the `PHDRS' command for this purpose.  When the
-linker sees the `PHDRS' command in the linker script, it will not
-create any program headers other than the ones specified.
+precisely.  You may use the 'PHDRS' command for this purpose.  When the
+linker sees the 'PHDRS' command in the linker script, it will not create
+any program headers other than the ones specified.
 
-   The linker only pays attention to the `PHDRS' command when
-generating an ELF output file.  In other cases, the linker will simply
-ignore `PHDRS'.
+   The linker only pays attention to the 'PHDRS' command when generating
+an ELF output file.  In other cases, the linker will simply ignore
+'PHDRS'.
 
-   This is the syntax of the `PHDRS' command.  The words `PHDRS',
-`FILEHDR', `AT', and `FLAGS' are keywords.
+   This is the syntax of the 'PHDRS' command.  The words 'PHDRS',
+'FILEHDR', 'AT', and 'FLAGS' are keywords.
 
      PHDRS
      {
@@ -4435,7 +4366,7 @@ ignore `PHDRS'.
              [ FLAGS ( FLAGS ) ] ;
      }
 
-   The NAME is used only for reference in the `SECTIONS' command of the
+   The NAME is used only for reference in the 'SECTIONS' command of the
 linker script.  It is not put into the output file.  Program header
 names are stored in a separate name space, and will not conflict with
 symbol names, file names, or section names.  Each program header must
@@ -4445,58 +4376,58 @@ usual for them to map to sections in ascending load address order.
    Certain program header types describe segments of memory which the
 system loader will load from the file.  In the linker script, you
 specify the contents of these segments by placing allocatable output
-sections in the segments.  You use the `:PHDR' output section attribute
+sections in the segments.  You use the ':PHDR' output section attribute
 to place a section in a particular segment.  *Note Output Section
 Phdr::.
 
    It is normal to put certain sections in more than one segment.  This
 merely implies that one segment of memory contains another.  You may
-repeat `:PHDR', using it once for each segment which should contain the
+repeat ':PHDR', using it once for each segment which should contain the
 section.
 
-   If you place a section in one or more segments using `:PHDR', then
+   If you place a section in one or more segments using ':PHDR', then
 the linker will place all subsequent allocatable sections which do not
-specify `:PHDR' in the same segments.  This is for convenience, since
+specify ':PHDR' in the same segments.  This is for convenience, since
 generally a whole set of contiguous sections will be placed in a single
-segment.  You can use `:NONE' to override the default segment and tell
+segment.  You can use ':NONE' to override the default segment and tell
 the linker to not put the section in any segment at all.
 
-   You may use the `FILEHDR' and `PHDRS' keywords after the program
+   You may use the 'FILEHDR' and 'PHDRS' keywords after the program
 header type to further describe the contents of the segment.  The
-`FILEHDR' keyword means that the segment should include the ELF file
-header.  The `PHDRS' keyword means that the segment should include the
+'FILEHDR' keyword means that the segment should include the ELF file
+header.  The 'PHDRS' keyword means that the segment should include the
 ELF program headers themselves.  If applied to a loadable segment
-(`PT_LOAD'), all prior loadable segments must have one of these
+('PT_LOAD'), all prior loadable segments must have one of these
 keywords.
 
-   The TYPE may be one of the following.  The numbers indicate the
-value of the keyword.
+   The TYPE may be one of the following.  The numbers indicate the value
+of the keyword.
 
-`PT_NULL' (0)
+'PT_NULL' (0)
      Indicates an unused program header.
 
-`PT_LOAD' (1)
-     Indicates that this program header describes a segment to be
-     loaded from the file.
+'PT_LOAD' (1)
+     Indicates that this program header describes a segment to be loaded
+     from the file.
 
-`PT_DYNAMIC' (2)
+'PT_DYNAMIC' (2)
      Indicates a segment where dynamic linking information can be found.
 
-`PT_INTERP' (3)
+'PT_INTERP' (3)
      Indicates a segment where the name of the program interpreter may
      be found.
 
-`PT_NOTE' (4)
+'PT_NOTE' (4)
      Indicates a segment holding note information.
 
-`PT_SHLIB' (5)
+'PT_SHLIB' (5)
      A reserved program header type, defined but not specified by the
      ELF ABI.
 
-`PT_PHDR' (6)
+'PT_PHDR' (6)
      Indicates a segment where the program headers may be found.
 
-`PT_TLS' (7)
+'PT_TLS' (7)
      Indicates a segment containing thread local storage.
 
 EXPRESSION
@@ -4504,17 +4435,17 @@ EXPRESSION
      may be used for types not defined above.
 
    You can specify that a segment should be loaded at a particular
-address in memory by using an `AT' expression.  This is identical to the
-`AT' command used as an output section attribute (*note Output Section
-LMA::).  The `AT' command for a program header overrides the output
+address in memory by using an 'AT' expression.  This is identical to the
+'AT' command used as an output section attribute (*note Output Section
+LMA::).  The 'AT' command for a program header overrides the output
 section attribute.
 
    The linker will normally set the segment flags based on the sections
-which comprise the segment.  You may use the `FLAGS' keyword to
+which comprise the segment.  You may use the 'FLAGS' keyword to
 explicitly specify the segment flags.  The value of FLAGS must be an
-integer.  It is used to set the `p_flags' field of the program header.
+integer.  It is used to set the 'p_flags' field of the program header.
 
-   Here is an example of `PHDRS'.  This shows a typical set of program
+   Here is an example of 'PHDRS'.  This shows a typical set of program
 headers used on a native ELF system.
 
      PHDRS
@@ -4545,7 +4476,7 @@ File: ld.info,  Node: VERSION,  Next: Expressions,  Prev: PHDRS,  Up: Scripts
 3.9 VERSION Command
 ===================
 
-The linker supports symbol versions when using ELF.  Symbol versions are
+The linker supports symbol versions when using ELF. Symbol versions are
 only useful when using shared libraries.  The dynamic linker can use
 symbol versions to select a specific version of a function when it runs
 a program that may have been linked against an earlier version of the
@@ -4553,9 +4484,9 @@ shared library.
 
    You can include a version script directly in the main linker script,
 or you can supply the version script as an implicit linker script.  You
-can also use the `--version-script' linker option.
+can also use the '--version-script' linker option.
 
-   The syntax of the `VERSION' command is simply
+   The syntax of the 'VERSION' command is simply
      VERSION { version-script-commands }
 
    The format of the version script commands is identical to that used
@@ -4587,32 +4518,32 @@ few examples.
      	 extern "C++" {
      		 ns::*;
      		 "f(int, double)";
-     	 };
+	      };
      } VERS_1.2;
 
    This example version script defines three version nodes.  The first
-version node defined is `VERS_1.1'; it has no other dependencies.  The
-script binds the symbol `foo1' to `VERS_1.1'.  It reduces a number of
+version node defined is 'VERS_1.1'; it has no other dependencies.  The
+script binds the symbol 'foo1' to 'VERS_1.1'.  It reduces a number of
 symbols to local scope so that they are not visible outside of the
-shared library; this is done using wildcard patterns, so that any
-symbol whose name begins with `old', `original', or `new' is matched.
-The wildcard patterns available are the same as those used in the shell
-when matching filenames (also known as "globbing").  However, if you
-specify the symbol name inside double quotes, then the name is treated
-as literal, rather than as a glob pattern.
+shared library; this is done using wildcard patterns, so that any symbol
+whose name begins with 'old', 'original', or 'new' is matched.  The
+wildcard patterns available are the same as those used in the shell when
+matching filenames (also known as "globbing").  However, if you specify
+the symbol name inside double quotes, then the name is treated as
+literal, rather than as a glob pattern.
 
-   Next, the version script defines node `VERS_1.2'.  This node depends
-upon `VERS_1.1'.  The script binds the symbol `foo2' to the version
-node `VERS_1.2'.
+   Next, the version script defines node 'VERS_1.2'.  This node depends
+upon 'VERS_1.1'.  The script binds the symbol 'foo2' to the version node
+'VERS_1.2'.
 
-   Finally, the version script defines node `VERS_2.0'.  This node
-depends upon `VERS_1.2'.  The scripts binds the symbols `bar1' and
-`bar2' are bound to the version node `VERS_2.0'.
+   Finally, the version script defines node 'VERS_2.0'.  This node
+depends upon 'VERS_1.2'.  The scripts binds the symbols 'bar1' and
+'bar2' are bound to the version node 'VERS_2.0'.
 
    When the linker finds a symbol defined in a library which is not
 specifically bound to a version node, it will effectively bind it to an
 unspecified base version of the library.  You can bind all otherwise
-unspecified symbols to a given version node by using `global: *;'
+unspecified symbols to a given version node by using 'global: *;'
 somewhere in the version script.  Note that it's slightly crazy to use
 wildcards in a global spec except on the last version node.  Global
 wildcards elsewhere run the risk of accidentally adding symbols to the
@@ -4620,12 +4551,12 @@ set exported for an old version.  That's wrong since older versions
 ought to have a fixed set of symbols.
 
    The names of the version nodes have no specific meaning other than
-what they might suggest to the person reading them.  The `2.0' version
-could just as well have appeared in between `1.1' and `1.2'.  However,
+what they might suggest to the person reading them.  The '2.0' version
+could just as well have appeared in between '1.1' and '1.2'.  However,
 this would be a confusing way to write a version script.
 
-   Node name can be omitted, provided it is the only version node in
-the version script.  Such version script doesn't assign any versions to
+   Node name can be omitted, provided it is the only version node in the
+version script.  Such version script doesn't assign any versions to
 symbols, only selects which symbols will be globally visible out and
 which won't.
 
@@ -4658,11 +4589,10 @@ source file where the symbol is defined instead of in the versioning
 script.  This was done mainly to reduce the burden on the library
 maintainer.  You can do this by putting something like:
      __asm__(".symver original_foo,foo@VERS_1.1");
-   in the C source file.  This renames the function `original_foo' to
-be an alias for `foo' bound to the version node `VERS_1.1'.  The
-`local:' directive can be used to prevent the symbol `original_foo'
-from being exported. A `.symver' directive takes precedence over a
-version script.
+in the C source file.  This renames the function 'original_foo' to be an
+alias for 'foo' bound to the version node 'VERS_1.1'.  The 'local:'
+directive can be used to prevent the symbol 'original_foo' from being
+exported.  A '.symver' directive takes precedence over a version script.
 
    The second GNU extension is to allow multiple versions of the same
 function to appear in a given shared library.  In this way you can make
@@ -4670,7 +4600,7 @@ an incompatible change to an interface without increasing the major
 version number of the shared library, while still allowing applications
 linked against the old interface to continue to function.
 
-   To do this, you must use multiple `.symver' directives in the source
+   To do this, you must use multiple '.symver' directives in the source
 file.  Here is an example:
 
      __asm__(".symver original_foo,foo@");
@@ -4678,36 +4608,36 @@ file.  Here is an example:
      __asm__(".symver old_foo1,foo@VERS_1.2");
      __asm__(".symver new_foo,foo@@VERS_2.0");
 
-   In this example, `foo@' represents the symbol `foo' bound to the
+   In this example, 'foo@' represents the symbol 'foo' bound to the
 unspecified base version of the symbol.  The source file that contains
-this example would define 4 C functions: `original_foo', `old_foo',
-`old_foo1', and `new_foo'.
+this example would define 4 C functions: 'original_foo', 'old_foo',
+'old_foo1', and 'new_foo'.
 
    When you have multiple definitions of a given symbol, there needs to
 be some way to specify a default version to which external references to
-this symbol will be bound.  You can do this with the `foo@@VERS_2.0'
-type of `.symver' directive.  You can only declare one version of a
+this symbol will be bound.  You can do this with the 'foo@@VERS_2.0'
+type of '.symver' directive.  You can only declare one version of a
 symbol as the default in this manner; otherwise you would effectively
 have multiple definitions of the same symbol.
 
    If you wish to bind a reference to a specific version of the symbol
-within the shared library, you can use the aliases of convenience
-(i.e., `old_foo'), or you can use the `.symver' directive to
-specifically bind to an external version of the function in question.
+within the shared library, you can use the aliases of convenience (i.e.,
+'old_foo'), or you can use the '.symver' directive to specifically bind
+to an external version of the function in question.
 
    You can also specify the language in the version script:
 
      VERSION extern "lang" { version-script-commands }
 
-   The supported `lang's are `C', `C++', and `Java'.  The linker will
+   The supported 'lang's are 'C', 'C++', and 'Java'.  The linker will
 iterate over the list of symbols at the link time and demangle them
-according to `lang' before matching them to the patterns specified in
-`version-script-commands'.  The default `lang' is `C'.
+according to 'lang' before matching them to the patterns specified in
+'version-script-commands'.  The default 'lang' is 'C'.
 
    Demangled names may contains spaces and other special characters.  As
-described above, you can use a glob pattern to match demangled names,
-or you can use a double-quoted string to match the string exactly.  In
-the latter case, be aware that minor differences (such as differing
+described above, you can use a glob pattern to match demangled names, or
+you can use a double-quoted string to match the string exactly.  In the
+latter case, be aware that minor differences (such as differing
 whitespace) between the version script and the demangler output will
 cause a mismatch.  As the exact string generated by the demangler might
 change in the future, even if the mangled name does not, you should
@@ -4750,23 +4680,23 @@ File: ld.info,  Node: Constants,  Next: Symbolic Constants,  Up: Expressions
 
 All constants are integers.
 
-   As in C, the linker considers an integer beginning with `0' to be
-octal, and an integer beginning with `0x' or `0X' to be hexadecimal.
-Alternatively the linker accepts suffixes of `h' or `H' for
-hexadecimal, `o' or `O' for octal, `b' or `B' for binary and `d' or `D'
-for decimal.  Any integer value without a prefix or a suffix is
-considered to be decimal.
+   As in C, the linker considers an integer beginning with '0' to be
+octal, and an integer beginning with '0x' or '0X' to be hexadecimal.
+Alternatively the linker accepts suffixes of 'h' or 'H' for hexadecimal,
+'o' or 'O' for octal, 'b' or 'B' for binary and 'd' or 'D' for decimal.
+Any integer value without a prefix or a suffix is considered to be
+decimal.
 
-   In addition, you can use the suffixes `K' and `M' to scale a
-constant by `1024' or `1024*1024' respectively.  For example, the
-following all refer to the same quantity:
+   In addition, you can use the suffixes 'K' and 'M' to scale a constant
+by '1024' or '1024*1024' respectively.  For example, the following all
+refer to the same quantity:
 
      _fourk_1 = 4K;
      _fourk_2 = 4096;
      _fourk_3 = 0x1000;
      _fourk_4 = 10000o;
 
-   Note - the `K' and `M' suffixes cannot be used in conjunction with
+   Note - the 'K' and 'M' suffixes cannot be used in conjunction with
 the base suffixes mentioned above.
 
 
@@ -4776,12 +4706,12 @@ File: ld.info,  Node: Symbolic Constants,  Next: Symbols,  Prev: Constants,  Up:
 -------------------------
 
 It is possible to refer to target specific constants via the use of the
-`CONSTANT(NAME)' operator, where NAME is one of:
+'CONSTANT(NAME)' operator, where NAME is one of:
 
-`MAXPAGESIZE'
+'MAXPAGESIZE'
      The target's maximum page size.
 
-`COMMONPAGESIZE'
+'COMMONPAGESIZE'
      The target's default page size.
 
    So for example:
@@ -4806,8 +4736,8 @@ keyword by surrounding the symbol name in double quotes:
      "with a space" = "also with a space" + 10;
 
    Since symbols can contain many non-alphabetic characters, it is
-safest to delimit symbols with spaces.  For example, `A-B' is one
-symbol, whereas `A - B' is an expression involving subtraction.
+safest to delimit symbols with spaces.  For example, 'A-B' is one
+symbol, whereas 'A - B' is an expression involving subtraction.
 
 
 File: ld.info,  Node: Orphan Sections,  Next: Location Counter,  Prev: Symbols,  Up: Expressions
@@ -4816,18 +4746,18 @@ File: ld.info,  Node: Orphan Sections,  Next: Location Counter,  Prev: Symbols,
 ----------------------
 
 Orphan sections are sections present in the input files which are not
-explicitly placed into the output file by the linker script.  The
-linker will still copy these sections into the output file, but it has
-to guess as to where they should be placed.  The linker uses a simple
-heuristic to do this.  It attempts to place orphan sections after
-non-orphan sections of the same attribute, such as code vs data,
-loadable vs non-loadable, etc.  If there is not enough room to do this
-then it places at the end of the file.
+explicitly placed into the output file by the linker script.  The linker
+will still copy these sections into the output file, but it has to guess
+as to where they should be placed.  The linker uses a simple heuristic
+to do this.  It attempts to place orphan sections after non-orphan
+sections of the same attribute, such as code vs data, loadable vs
+non-loadable, etc.  If there is not enough room to do this then it
+places at the end of the file.
 
    For ELF targets, the attribute of the section includes section type
 as well as section flag.
 
-   The command line options `--orphan-handling' and `--unique' (*note
+   The command line options '--orphan-handling' and '--unique' (*note
 Command Line Options: Options.) can be used to control which output
 sections an orphan is placed in.
 
@@ -4836,7 +4766,7 @@ the linker will automatically *note PROVIDE:: two symbols:
 __start_SECNAME and __stop_SECNAME, where SECNAME is the name of the
 section.  These indicate the start address and end address of the
 orphaned section respectively.  Note: most section names are not
-representable as C identifiers because they contain a `.' character.
+representable as C identifiers because they contain a '.' character.
 
 
 File: ld.info,  Node: Location Counter,  Next: Operators,  Prev: Orphan Sections,  Up: Expressions
@@ -4844,17 +4774,17 @@ File: ld.info,  Node: Location Counter,  Next: Operators,  Prev: Orphan Sections
 3.10.5 The Location Counter
 ---------------------------
 
-The special linker variable "dot" `.' always contains the current
-output location counter.  Since the `.' always refers to a location in
-an output section, it may only appear in an expression within a
-`SECTIONS' command.  The `.' symbol may appear anywhere that an
-ordinary symbol is allowed in an expression.
+The special linker variable "dot" '.' always contains the current output
+location counter.  Since the '.' always refers to a location in an
+output section, it may only appear in an expression within a 'SECTIONS'
+command.  The '.' symbol may appear anywhere that an ordinary symbol is
+allowed in an expression.
 
-   Assigning a value to `.' will cause the location counter to be
-moved.  This may be used to create holes in the output section.  The
-location counter may not be moved backwards inside an output section,
-and may not be moved backwards outside of an output section if so doing
-creates areas with overlapping LMAs.
+   Assigning a value to '.' will cause the location counter to be moved.
+This may be used to create holes in the output section.  The location
+counter may not be moved backwards inside an output section, and may not
+be moved backwards outside of an output section if so doing creates
+areas with overlapping LMAs.
 
      SECTIONS
      {
@@ -4867,17 +4797,17 @@ creates areas with overlapping LMAs.
            file3(.text)
          } = 0x12345678;
      }
-   In the previous example, the `.text' section from `file1' is located
-at the beginning of the output section `output'.  It is followed by a
-1000 byte gap.  Then the `.text' section from `file2' appears, also
-with a 1000 byte gap following before the `.text' section from `file3'.
-The notation `= 0x12345678' specifies what data to write in the gaps
-(*note Output Section Fill::).
-
-   Note: `.' actually refers to the byte offset from the start of the
-current containing object.  Normally this is the `SECTIONS' statement,
-whose start address is 0, hence `.' can be used as an absolute address.
-If `.' is used inside a section description however, it refers to the
+In the previous example, the '.text' section from 'file1' is located at
+the beginning of the output section 'output'.  It is followed by a 1000
+byte gap.  Then the '.text' section from 'file2' appears, also with a
+1000 byte gap following before the '.text' section from 'file3'.  The
+notation '= 0x12345678' specifies what data to write in the gaps (*note
+Output Section Fill::).
+
+   Note: '.' actually refers to the byte offset from the start of the
+current containing object.  Normally this is the 'SECTIONS' statement,
+whose start address is 0, hence '.' can be used as an absolute address.
+If '.' is used inside a section description however, it refers to the
 byte offset from the start of that section, not an absolute address.
 Thus in a script like this:
 
@@ -4895,14 +4825,14 @@ Thus in a script like this:
          }
      }
 
-   The `.text' section will be assigned a starting address of 0x100 and
+   The '.text' section will be assigned a starting address of 0x100 and
 a size of exactly 0x200 bytes, even if there is not enough data in the
-`.text' input sections to fill this area.  (If there is too much data,
-an error will be produced because this would be an attempt to move `.'
-backwards).  The `.data' section will start at 0x500 and it will have
-an extra 0x600 bytes worth of space after the end of the values from
-the `.data' input sections and before the end of the `.data' output
-section itself.
+'.text' input sections to fill this area.  (If there is too much data,
+an error will be produced because this would be an attempt to move '.'
+backwards).  The '.data' section will start at 0x500 and it will have an
+extra 0x600 bytes worth of space after the end of the values from the
+'.data' input sections and before the end of the '.data' output section
+itself.
 
    Setting symbols to the value of the location counter outside of an
 output section statement can result in unexpected values if the linker
@@ -4919,15 +4849,15 @@ needs to place orphan sections.  For example, given the following:
          end_of_data = . ;
      }
 
-   If the linker needs to place some input section, e.g. `.rodata', not
+   If the linker needs to place some input section, e.g.  '.rodata', not
 mentioned in the script, it might choose to place that section between
-`.text' and `.data'.  You might think the linker should place `.rodata'
+'.text' and '.data'.  You might think the linker should place '.rodata'
 on the blank line in the above script, but blank lines are of no
 particular significance to the linker.  As well, the linker doesn't
 associate the above symbol names with their sections.  Instead, it
 assumes that all assignments or other statements belong to the previous
-output section, except for the special case of an assignment to `.'.
-I.e., the linker will place the orphan `.rodata' section as if the
+output section, except for the special case of an assignment to '.'.
+I.e., the linker will place the orphan '.rodata' section as if the
 script was written as follows:
 
      SECTIONS
@@ -4943,9 +4873,9 @@ script was written as follows:
      }
 
    This may or may not be the script author's intention for the value of
-`start_of_data'.  One way to influence the orphan section placement is
+'start_of_data'.  One way to influence the orphan section placement is
 to assign the location counter to itself, as the linker assumes that an
-assignment to `.' is setting the start address of a following output
+assignment to '.' is setting the start address of a following output
 section and thus should be grouped with that section.  So you could
 write:
 
@@ -4961,8 +4891,8 @@ write:
          end_of_data = . ;
      }
 
-   Now, the orphan `.rodata' section will be placed between
-`end_of_text' and `start_of_data'.
+   Now, the orphan '.rodata' section will be placed between
+'end_of_text' and 'start_of_data'.
 
 
 File: ld.info,  Node: Operators,  Next: Evaluation,  Prev: Location Counter,  Up: Expressions
@@ -5012,7 +4942,7 @@ assignments dependent upon these are not performed until after
 allocation.
 
    Some expressions, such as those depending upon the location counter
-`.', must be evaluated during section allocation.
+'.', must be evaluated during section allocation.
 
    If the result of an expression is required, but the value is not
 available, then an error results.  For example, a script like the
@@ -5022,7 +4952,7 @@ following
          .text 9+this_isnt_constant :
            { *(.text) }
        }
-will cause the error message `non constant expression for initial
+will cause the error message 'non constant expression for initial
 address'.
 
 
@@ -5032,22 +4962,22 @@ File: ld.info,  Node: Expression Section,  Next: Builtin Functions,  Prev: Evalu
 -----------------------------------
 
 Addresses and symbols may be section relative, or absolute.  A section
-relative symbol is relocatable.  If you request relocatable output
-using the `-r' option, a further link operation may change the value of
-a section relative symbol.  On the other hand, an absolute symbol will
+relative symbol is relocatable.  If you request relocatable output using
+the '-r' option, a further link operation may change the value of a
+section relative symbol.  On the other hand, an absolute symbol will
 retain the same value throughout any further link operations.
 
    Some terms in linker expressions are addresses.  This is true of
 section relative symbols and for builtin functions that return an
-address, such as `ADDR', `LOADADDR', `ORIGIN' and `SEGMENT_START'.
+address, such as 'ADDR', 'LOADADDR', 'ORIGIN' and 'SEGMENT_START'.
 Other terms are simply numbers, or are builtin functions that return a
-non-address value, such as `LENGTH'.  One complication is that unless
-you set `LD_FEATURE ("SANE_EXPR")' (*note Miscellaneous Commands::),
+non-address value, such as 'LENGTH'.  One complication is that unless
+you set 'LD_FEATURE ("SANE_EXPR")' (*note Miscellaneous Commands::),
 numbers and absolute symbols are treated differently depending on their
-location, for compatibility with older versions of `ld'.  Expressions
+location, for compatibility with older versions of 'ld'.  Expressions
 appearing outside an output section definition treat all numbers as
 absolute addresses.  Expressions appearing inside an output section
-definition treat absolute symbols as numbers.  If `LD_FEATURE
+definition treat absolute symbols as numbers.  If 'LD_FEATURE
 ("SANE_EXPR")' is given, then absolute symbols and numbers are simply
 treated as numbers everywhere.
 
@@ -5066,9 +4996,9 @@ treated as numbers everywhere.
          ...
        }
 
-   both `.' and `__executable_start' are set to the absolute address
-0x100 in the first two assignments, then both `.' and `__data_start'
-are set to 0x10 relative to the `.data' section in the second two
+   both '.' and '__executable_start' are set to the absolute address
+0x100 in the first two assignments, then both '.' and '__data_start' are
+set to 0x10 relative to the '.data' section in the second two
 assignments.
 
    For expressions involving numbers, relative addresses and absolute
@@ -5077,12 +5007,10 @@ addresses, ld follows these rules to evaluate terms:
    * Unary operations on an absolute address or number, and binary
      operations on two absolute addresses or two numbers, or between one
      absolute address and a number, apply the operator to the value(s).
-
    * Unary operations on a relative address, and binary operations on
      two relative addresses in the same section or between one relative
      address and a number, apply the operator to the offset part of the
      address(es).
-
    * Other binary operations, that is, between two relative addresses
      not in the same section, or between a relative address and an
      absolute address, first convert any non-absolute term to an
@@ -5091,34 +5019,30 @@ addresses, ld follows these rules to evaluate terms:
    The result section of each sub-expression is as follows:
 
    * An operation involving only numbers results in a number.
-
-   * The result of comparisons, `&&' and `||' is also a number.
-
+   * The result of comparisons, '&&' and '||' is also a number.
    * The result of other binary arithmetic and logical operations on two
      relative addresses in the same section or two absolute addresses
-     (after above conversions) is also a number when `LD_FEATURE
+     (after above conversions) is also a number when 'LD_FEATURE
      ("SANE_EXPR")' or inside an output section definition but an
      absolute address otherwise.
-
    * The result of other operations on relative addresses or one
      relative address and a number, is a relative address in the same
      section as the relative operand(s).
-
    * The result of other operations on absolute addresses (after above
      conversions) is an absolute address.
 
-   You can use the builtin function `ABSOLUTE' to force an expression
-to be absolute when it would otherwise be relative.  For example, to
-create an absolute symbol set to the address of the end of the output
-section `.data':
+   You can use the builtin function 'ABSOLUTE' to force an expression to
+be absolute when it would otherwise be relative.  For example, to create
+an absolute symbol set to the address of the end of the output section
+'.data':
      SECTIONS
        {
          .data : { *(.data) _edata = ABSOLUTE(.); }
        }
-   If `ABSOLUTE' were not used, `_edata' would be relative to the
-`.data' section.
+If 'ABSOLUTE' were not used, '_edata' would be relative to the '.data'
+section.
 
-   Using `LOADADDR' also forces an expression absolute, since this
+   Using 'LOADADDR' also forces an expression absolute, since this
 particular builtin function returns an absolute address.
 
 
@@ -5130,19 +5054,19 @@ File: ld.info,  Node: Builtin Functions,  Prev: Expression Section,  Up: Express
 The linker script language includes a number of builtin functions for
 use in linker script expressions.
 
-`ABSOLUTE(EXP)'
+'ABSOLUTE(EXP)'
      Return the absolute (non-relocatable, as opposed to non-negative)
      value of the expression EXP.  Primarily useful to assign an
      absolute value to a symbol within a section definition, where
      symbol values are normally section relative.  *Note Expression
      Section::.
 
-`ADDR(SECTION)'
+'ADDR(SECTION)'
      Return the address (VMA) of the named SECTION.  Your script must
      previously have defined the location of that section.  In the
-     following example, `start_of_output_1', `symbol_1' and `symbol_2'
-     are assigned equivalent values, except that `symbol_1' will be
-     relative to the `.output1' section while the other two will be
+     following example, 'start_of_output_1', 'symbol_1' and 'symbol_2'
+     are assigned equivalent values, except that 'symbol_1' will be
+     relative to the '.output1' section while the other two will be
      absolute:
           SECTIONS { ...
             .output1 :
@@ -5157,18 +5081,18 @@ use in linker script expressions.
               }
           ... }
 
-`ALIGN(ALIGN)'
-`ALIGN(EXP,ALIGN)'
-     Return the location counter (`.') or arbitrary expression aligned
-     to the next ALIGN boundary.  The single operand `ALIGN' doesn't
+'ALIGN(ALIGN)'
+'ALIGN(EXP,ALIGN)'
+     Return the location counter ('.') or arbitrary expression aligned
+     to the next ALIGN boundary.  The single operand 'ALIGN' doesn't
      change the value of the location counter--it just does arithmetic
-     on it.  The two operand `ALIGN' allows an arbitrary expression to
-     be aligned upwards (`ALIGN(ALIGN)' is equivalent to
-     `ALIGN(ABSOLUTE(.), ALIGN)').
+     on it.  The two operand 'ALIGN' allows an arbitrary expression to
+     be aligned upwards ('ALIGN(ALIGN)' is equivalent to
+     'ALIGN(ABSOLUTE(.), ALIGN)').
 
-     Here is an example which aligns the output `.data' section to the
-     next `0x2000' byte boundary after the preceding section and sets a
-     variable within the section to the next `0x8000' boundary after the
+     Here is an example which aligns the output '.data' section to the
+     next '0x2000' byte boundary after the preceding section and sets a
+     variable within the section to the next '0x8000' boundary after the
      input sections:
           SECTIONS { ...
             .data ALIGN(0x2000): {
@@ -5176,20 +5100,19 @@ use in linker script expressions.
               variable = ALIGN(0x8000);
             }
           ... }
-     The first use of `ALIGN' in this example specifies the
-     location of a section because it is used as the optional ADDRESS
-     attribute of a section definition (*note Output Section
-     Address::).  The second use of `ALIGN' is used to defines the
-     value of a symbol.
-
-     The builtin function `NEXT' is closely related to `ALIGN'.
-
-`ALIGNOF(SECTION)'
-     Return the alignment in bytes of the named SECTION, if that
-     section has been allocated.  If the section has not been allocated
-     when this is evaluated, the linker will report an error. In the
-     following example, the alignment of the `.output' section is
-     stored as the first value in that section.
+     The first use of 'ALIGN' in this example specifies the location of
+     a section because it is used as the optional ADDRESS attribute of a
+     section definition (*note Output Section Address::).  The second
+     use of 'ALIGN' is used to defines the value of a symbol.
+
+     The builtin function 'NEXT' is closely related to 'ALIGN'.
+
+'ALIGNOF(SECTION)'
+     Return the alignment in bytes of the named SECTION, if that section
+     has been allocated.  If the section has not been allocated when
+     this is evaluated, the linker will report an error.  In the
+     following example, the alignment of the '.output' section is stored
+     as the first value in that section.
           SECTIONS{ ...
             .output {
               LONG (ALIGNOF (.output))
@@ -5197,12 +5120,12 @@ use in linker script expressions.
               }
           ... }
 
-`BLOCK(EXP)'
-     This is a synonym for `ALIGN', for compatibility with older linker
+'BLOCK(EXP)'
+     This is a synonym for 'ALIGN', for compatibility with older linker
      scripts.  It is most often seen when setting the address of an
      output section.
 
-`DATA_SEGMENT_ALIGN(MAXPAGESIZE, COMMONPAGESIZE)'
+'DATA_SEGMENT_ALIGN(MAXPAGESIZE, COMMONPAGESIZE)'
      This is equivalent to either
           (ALIGN(MAXPAGESIZE) + (. & (MAXPAGESIZE - 1)))
      or
@@ -5210,46 +5133,46 @@ use in linker script expressions.
            + ((. + COMMONPAGESIZE - 1) & (MAXPAGESIZE - COMMONPAGESIZE)))
      depending on whether the latter uses fewer COMMONPAGESIZE sized
      pages for the data segment (area between the result of this
-     expression and `DATA_SEGMENT_END') than the former or not.  If the
+     expression and 'DATA_SEGMENT_END') than the former or not.  If the
      latter form is used, it means COMMONPAGESIZE bytes of runtime
      memory will be saved at the expense of up to COMMONPAGESIZE wasted
      bytes in the on-disk file.
 
-     This expression can only be used directly in `SECTIONS' commands,
+     This expression can only be used directly in 'SECTIONS' commands,
      not in any output section descriptions and only once in the linker
      script.  COMMONPAGESIZE should be less or equal to MAXPAGESIZE and
-     should be the system page size the object wants to be optimized
-     for (while still working on system page sizes up to MAXPAGESIZE).
+     should be the system page size the object wants to be optimized for
+     (while still working on system page sizes up to MAXPAGESIZE).
 
      Example:
             . = DATA_SEGMENT_ALIGN(0x10000, 0x2000);
 
-`DATA_SEGMENT_END(EXP)'
-     This defines the end of data segment for `DATA_SEGMENT_ALIGN'
+'DATA_SEGMENT_END(EXP)'
+     This defines the end of data segment for 'DATA_SEGMENT_ALIGN'
      evaluation purposes.
 
             . = DATA_SEGMENT_END(.);
 
-`DATA_SEGMENT_RELRO_END(OFFSET, EXP)'
-     This defines the end of the `PT_GNU_RELRO' segment when `-z relro'
-     option is used.  When `-z relro' option is not present,
-     `DATA_SEGMENT_RELRO_END' does nothing, otherwise
-     `DATA_SEGMENT_ALIGN' is padded so that EXP + OFFSET is aligned to
+'DATA_SEGMENT_RELRO_END(OFFSET, EXP)'
+     This defines the end of the 'PT_GNU_RELRO' segment when '-z relro'
+     option is used.  When '-z relro' option is not present,
+     'DATA_SEGMENT_RELRO_END' does nothing, otherwise
+     'DATA_SEGMENT_ALIGN' is padded so that EXP + OFFSET is aligned to
      the most commonly used page boundary for particular target.  If
      present in the linker script, it must always come in between
-     `DATA_SEGMENT_ALIGN' and `DATA_SEGMENT_END'.  Evaluates to the
+     'DATA_SEGMENT_ALIGN' and 'DATA_SEGMENT_END'.  Evaluates to the
      second argument plus any padding needed at the end of the
-     `PT_GNU_RELRO' segment due to section alignment.
+     'PT_GNU_RELRO' segment due to section alignment.
 
             . = DATA_SEGMENT_RELRO_END(24, .);
 
-`DEFINED(SYMBOL)'
+'DEFINED(SYMBOL)'
      Return 1 if SYMBOL is in the linker global symbol table and is
      defined before the statement using DEFINED in the script, otherwise
      return 0.  You can use this function to provide default values for
      symbols.  For example, the following script fragment shows how to
-     set a global symbol `begin' to the first location in the `.text'
-     section--but if a symbol called `begin' already existed, its value
+     set a global symbol 'begin' to the first location in the '.text'
+     section--but if a symbol called 'begin' already existed, its value
      is preserved:
 
           SECTIONS { ...
@@ -5260,46 +5183,45 @@ use in linker script expressions.
             ...
           }
 
-`LENGTH(MEMORY)'
+'LENGTH(MEMORY)'
      Return the length of the memory region named MEMORY.
 
-`LOADADDR(SECTION)'
+'LOADADDR(SECTION)'
      Return the absolute LMA of the named SECTION.  (*note Output
      Section LMA::).
 
-`LOG2CEIL(EXP)'
+'LOG2CEIL(EXP)'
      Return the binary logarithm of EXP rounded towards infinity.
-     `LOG2CEIL(0)' returns 0.
+     'LOG2CEIL(0)' returns 0.
 
-`MAX(EXP1, EXP2)'
+'MAX(EXP1, EXP2)'
      Returns the maximum of EXP1 and EXP2.
 
-`MIN(EXP1, EXP2)'
+'MIN(EXP1, EXP2)'
      Returns the minimum of EXP1 and EXP2.
 
-`NEXT(EXP)'
+'NEXT(EXP)'
      Return the next unallocated address that is a multiple of EXP.
-     This function is closely related to `ALIGN(EXP)'; unless you use
-     the `MEMORY' command to define discontinuous memory for the output
+     This function is closely related to 'ALIGN(EXP)'; unless you use
+     the 'MEMORY' command to define discontinuous memory for the output
      file, the two functions are equivalent.
 
-`ORIGIN(MEMORY)'
+'ORIGIN(MEMORY)'
      Return the origin of the memory region named MEMORY.
 
-`SEGMENT_START(SEGMENT, DEFAULT)'
-     Return the base address of the named SEGMENT.  If an explicit
-     value has already been given for this segment (with a command-line
-     `-T' option) then that value will be returned otherwise the value
-     will be DEFAULT.  At present, the `-T' command-line option can
-     only be used to set the base address for the "text", "data", and
-     "bss" sections, but you can use `SEGMENT_START' with any segment
-     name.
+'SEGMENT_START(SEGMENT, DEFAULT)'
+     Return the base address of the named SEGMENT.  If an explicit value
+     has already been given for this segment (with a command-line '-T'
+     option) then that value will be returned otherwise the value will
+     be DEFAULT.  At present, the '-T' command-line option can only be
+     used to set the base address for the "text", "data", and "bss"
+     sections, but you can use 'SEGMENT_START' with any segment name.
 
-`SIZEOF(SECTION)'
+'SIZEOF(SECTION)'
      Return the size in bytes of the named SECTION, if that section has
      been allocated.  If the section has not been allocated when this is
      evaluated, the linker will report an error.  In the following
-     example, `symbol_1' and `symbol_2' are assigned identical values:
+     example, 'symbol_1' and 'symbol_2' are assigned identical values:
           SECTIONS{ ...
             .output {
               .start = . ;
@@ -5310,23 +5232,23 @@ use in linker script expressions.
             symbol_2 = SIZEOF(.output);
           ... }
 
-`SIZEOF_HEADERS'
-`sizeof_headers'
+'SIZEOF_HEADERS'
+'sizeof_headers'
      Return the size in bytes of the output file's headers.  This is
-     information which appears at the start of the output file.  You
-     can use this number when setting the start address of the first
+     information which appears at the start of the output file.  You can
+     use this number when setting the start address of the first
      section, if you choose, to facilitate paging.
 
      When producing an ELF output file, if the linker script uses the
-     `SIZEOF_HEADERS' builtin function, the linker must compute the
+     'SIZEOF_HEADERS' builtin function, the linker must compute the
      number of program headers before it has determined all the section
      addresses and sizes.  If the linker later discovers that it needs
-     additional program headers, it will report an error `not enough
+     additional program headers, it will report an error 'not enough
      room for program headers'.  To avoid this error, you must avoid
-     using the `SIZEOF_HEADERS' function, or you must rework your linker
+     using the 'SIZEOF_HEADERS' function, or you must rework your linker
      script to avoid forcing the linker to use additional program
      headers, or you must define the program headers yourself using the
-     `PHDRS' command (*note PHDRS::).
+     'PHDRS' command (*note PHDRS::).
 
 
 File: ld.info,  Node: Implicit Linker Scripts,  Prev: Expressions,  Up: Scripts
@@ -5342,7 +5264,7 @@ linker will report an error.
    An implicit linker script will not replace the default linker script.
 
    Typically an implicit linker script would contain only symbol
-assignments, or the `INPUT', `GROUP', or `VERSION' commands.
+assignments, or the 'INPUT', 'GROUP', or 'VERSION' commands.
 
    Any input files read because of an implicit linker script will be
 read at the position in the command line where the implicit linker
@@ -5354,109 +5276,92 @@ File: ld.info,  Node: Machine Dependent,  Next: BFD,  Prev: Scripts,  Up: Top
 4 Machine Dependent Features
 ****************************
 
-`ld' has additional features on some platforms; the following sections
-describe them.  Machines where `ld' has no additional functionality are
+'ld' has additional features on some platforms; the following sections
+describe them.  Machines where 'ld' has no additional functionality are
 not listed.
 
 * Menu:
 
-
-* H8/300::                      `ld' and the H8/300
-
-* i960::                        `ld' and the Intel 960 family
-
-* M68HC11/68HC12::		`ld' and the Motorola 68HC11 and 68HC12 families
-
-* ARM::				`ld' and the ARM family
-
-* HPPA ELF32::                  `ld' and HPPA 32-bit ELF
-
-* M68K::			`ld' and the Motorola 68K family
-
-* MIPS::			`ld' and the MIPS family
-
-* MMIX::			`ld' and MMIX
-
-* MSP430::			`ld' and MSP430
-
-* NDS32::			`ld' and NDS32
-
-* Nios II::			`ld' and the Altera Nios II
-
-* PowerPC ELF32::		`ld' and PowerPC 32-bit ELF Support
-
-* PowerPC64 ELF64::		`ld' and PowerPC64 64-bit ELF Support
-
-* SPU ELF::			`ld' and SPU ELF Support
-
-* TI COFF::                     `ld' and TI COFF
-
-* WIN32::                       `ld' and WIN32 (cygwin/mingw)
-
-* Xtensa::                      `ld' and Xtensa Processors
+* H8/300::                      'ld' and the H8/300
+* i960::                        'ld' and the Intel 960 family
+* M68HC11/68HC12::		'ld' and the Motorola 68HC11 and 68HC12 families
+* ARM::				'ld' and the ARM family
+* HPPA ELF32::                  'ld' and HPPA 32-bit ELF
+* M68K::			'ld' and the Motorola 68K family
+* MIPS::			'ld' and the MIPS family
+* MMIX::			'ld' and MMIX
+* MSP430::			'ld' and MSP430
+* NDS32::			'ld' and NDS32
+* Nios II::			'ld' and the Altera Nios II
+* PowerPC ELF32::		'ld' and PowerPC 32-bit ELF Support
+* PowerPC64 ELF64::		'ld' and PowerPC64 64-bit ELF Support
+* SPU ELF::			'ld' and SPU ELF Support
+* TI COFF::                     'ld' and TI COFF
+* WIN32::                       'ld' and WIN32 (cygwin/mingw)
+* Xtensa::                      'ld' and Xtensa Processors
 
 
 File: ld.info,  Node: H8/300,  Next: i960,  Up: Machine Dependent
 
-4.1 `ld' and the H8/300
+4.1 'ld' and the H8/300
 =======================
 
-For the H8/300, `ld' can perform these global optimizations when you
-specify the `--relax' command-line option.
+For the H8/300, 'ld' can perform these global optimizations when you
+specify the '--relax' command-line option.
 
 _relaxing address modes_
-     `ld' finds all `jsr' and `jmp' instructions whose targets are
+     'ld' finds all 'jsr' and 'jmp' instructions whose targets are
      within eight bits, and turns them into eight-bit program-counter
-     relative `bsr' and `bra' instructions, respectively.
+     relative 'bsr' and 'bra' instructions, respectively.
 
 _synthesizing instructions_
-     `ld' finds all `mov.b' instructions which use the sixteen-bit
+     'ld' finds all 'mov.b' instructions which use the sixteen-bit
      absolute address form, but refer to the top page of memory, and
      changes them to use the eight-bit address form.  (That is: the
-     linker turns `mov.b `@'AA:16' into `mov.b `@'AA:8' whenever the
+     linker turns 'mov.b '@'AA:16' into 'mov.b '@'AA:8' whenever the
      address AA is in the top page of memory).
 
-     `ld' finds all `mov' instructions which use the register indirect
+     'ld' finds all 'mov' instructions which use the register indirect
      with 32-bit displacement addressing mode, but use a small
      displacement inside 16-bit displacement range, and changes them to
      use the 16-bit displacement form.  (That is: the linker turns
-     `mov.b `@'D:32,ERx' into `mov.b `@'D:16,ERx' whenever the
-     displacement D is in the 16 bit signed integer range. Only
+     'mov.b '@'D:32,ERx' into 'mov.b '@'D:16,ERx' whenever the
+     displacement D is in the 16 bit signed integer range.  Only
      implemented in ELF-format ld).
 
 _bit manipulation instructions_
-     `ld' finds all bit manipulation instructions like `band, bclr,
+     'ld' finds all bit manipulation instructions like 'band, bclr,
      biand, bild, bior, bist, bixor, bld, bnot, bor, bset, bst, btst,
      bxor' which use 32 bit and 16 bit absolute address form, but refer
      to the top page of memory, and changes them to use the 8 bit
-     address form.  (That is: the linker turns `bset #xx:3,`@'AA:32'
-     into `bset #xx:3,`@'AA:8' whenever the address AA is in the top
+     address form.  (That is: the linker turns 'bset #xx:3,'@'AA:32'
+     into 'bset #xx:3,'@'AA:8' whenever the address AA is in the top
      page of memory).
 
 _system control instructions_
-     `ld' finds all `ldc.w, stc.w' instructions which use the 32 bit
+     'ld' finds all 'ldc.w, stc.w' instructions which use the 32 bit
      absolute address form, but refer to the top page of memory, and
      changes them to use 16 bit address form.  (That is: the linker
-     turns `ldc.w `@'AA:32,ccr' into `ldc.w `@'AA:16,ccr' whenever the
+     turns 'ldc.w '@'AA:32,ccr' into 'ldc.w '@'AA:16,ccr' whenever the
      address AA is in the top page of memory).
 
 
 File: ld.info,  Node: i960,  Next: M68HC11/68HC12,  Prev: H8/300,  Up: Machine Dependent
 
-4.2 `ld' and the Intel 960 Family
+4.2 'ld' and the Intel 960 Family
 =================================
 
-You can use the `-AARCHITECTURE' command line option to specify one of
+You can use the '-AARCHITECTURE' command line option to specify one of
 the two-letter names identifying members of the 960 family; the option
 specifies the desired output target, and warns of any incompatible
 instructions in the input files.  It also modifies the linker's search
-strategy for archive libraries, to support the use of libraries
-specific to each particular architecture, by including in the search
-loop names suffixed with the string identifying the architecture.
+strategy for archive libraries, to support the use of libraries specific
+to each particular architecture, by including in the search loop names
+suffixed with the string identifying the architecture.
 
-   For example, if your `ld' command line included `-ACA' as well as
-`-ltry', the linker would look (in its built-in search paths, and in
-any paths you specify with `-L') for a library with the names
+   For example, if your 'ld' command line included '-ACA' as well as
+'-ltry', the linker would look (in its built-in search paths, and in any
+paths you specify with '-L') for a library with the names
 
      try
      libtry.a
@@ -5464,123 +5369,120 @@ any paths you specify with `-L') for a library with the names
      libtryca.a
 
 The first two possibilities would be considered in any event; the last
-two are due to the use of `-ACA'.
+two are due to the use of '-ACA'.
 
-   You can meaningfully use `-A' more than once on a command line, since
+   You can meaningfully use '-A' more than once on a command line, since
 the 960 architecture family allows combination of target architectures;
-each use will add another pair of name variants to search for when `-l'
+each use will add another pair of name variants to search for when '-l'
 specifies a library.
 
-   `ld' supports the `--relax' option for the i960 family.  If you
-specify `--relax', `ld' finds all `balx' and `calx' instructions whose
+   'ld' supports the '--relax' option for the i960 family.  If you
+specify '--relax', 'ld' finds all 'balx' and 'calx' instructions whose
 targets are within 24 bits, and turns them into 24-bit program-counter
-relative `bal' and `cal' instructions, respectively.  `ld' also turns
-`cal' instructions into `bal' instructions when it determines that the
+relative 'bal' and 'cal' instructions, respectively.  'ld' also turns
+'cal' instructions into 'bal' instructions when it determines that the
 target subroutine is a leaf routine (that is, the target subroutine does
 not itself call any subroutines).
 
 
 File: ld.info,  Node: M68HC11/68HC12,  Next: ARM,  Prev: i960,  Up: Machine Dependent
 
-4.3 `ld' and the Motorola 68HC11 and 68HC12 families
+4.3 'ld' and the Motorola 68HC11 and 68HC12 families
 ====================================================
 
 4.3.1 Linker Relaxation
 -----------------------
 
-For the Motorola 68HC11, `ld' can perform these global optimizations
-when you specify the `--relax' command-line option.
+For the Motorola 68HC11, 'ld' can perform these global optimizations
+when you specify the '--relax' command-line option.
 
 _relaxing address modes_
-     `ld' finds all `jsr' and `jmp' instructions whose targets are
+     'ld' finds all 'jsr' and 'jmp' instructions whose targets are
      within eight bits, and turns them into eight-bit program-counter
-     relative `bsr' and `bra' instructions, respectively.
+     relative 'bsr' and 'bra' instructions, respectively.
 
-     `ld' also looks at all 16-bit extended addressing modes and
+     'ld' also looks at all 16-bit extended addressing modes and
      transforms them in a direct addressing mode when the address is in
      page 0 (between 0 and 0x0ff).
 
 _relaxing gcc instruction group_
-     When `gcc' is called with `-mrelax', it can emit group of
+     When 'gcc' is called with '-mrelax', it can emit group of
      instructions that the linker can optimize to use a 68HC11 direct
-     addressing mode. These instructions consists of `bclr' or `bset'
+     addressing mode.  These instructions consists of 'bclr' or 'bset'
      instructions.
 
-
 4.3.2 Trampoline Generation
 ---------------------------
 
-For 68HC11 and 68HC12, `ld' can generate trampoline code to call a far
-function using a normal `jsr' instruction. The linker will also change
+For 68HC11 and 68HC12, 'ld' can generate trampoline code to call a far
+function using a normal 'jsr' instruction.  The linker will also change
 the relocation to some far function to use the trampoline address
-instead of the function address. This is typically the case when a
-pointer to a function is taken. The pointer will in fact point to the
+instead of the function address.  This is typically the case when a
+pointer to a function is taken.  The pointer will in fact point to the
 function trampoline.
 
 
 File: ld.info,  Node: ARM,  Next: HPPA ELF32,  Prev: M68HC11/68HC12,  Up: Machine Dependent
 
-4.4 `ld' and the ARM family
+4.4 'ld' and the ARM family
 ===========================
 
-For the ARM, `ld' will generate code stubs to allow functions calls
+For the ARM, 'ld' will generate code stubs to allow functions calls
 between ARM and Thumb code.  These stubs only work with code that has
-been compiled and assembled with the `-mthumb-interwork' command line
+been compiled and assembled with the '-mthumb-interwork' command line
 option.  If it is necessary to link with old ARM object files or
 libraries, which have not been compiled with the -mthumb-interwork
-option then the `--support-old-code' command line switch should be
-given to the linker.  This will make it generate larger stub functions
-which will work with non-interworking aware ARM code.  Note, however,
-the linker does not support generating stubs for function calls to
+option then the '--support-old-code' command line switch should be given
+to the linker.  This will make it generate larger stub functions which
+will work with non-interworking aware ARM code.  Note, however, the
+linker does not support generating stubs for function calls to
 non-interworking aware Thumb code.
 
-   The `--thumb-entry' switch is a duplicate of the generic `--entry'
+   The '--thumb-entry' switch is a duplicate of the generic '--entry'
 switch, in that it sets the program's starting address.  But it also
 sets the bottom bit of the address, so that it can be branched to using
 a BX instruction, and the program will start executing in Thumb mode
 straight away.
 
-   The `--use-nul-prefixed-import-tables' switch is specifying, that
-the import tables idata4 and idata5 have to be generated with a zero
-element prefix for import libraries. This is the old style to generate
-import tables. By default this option is turned off.
+   The '--use-nul-prefixed-import-tables' switch is specifying, that the
+import tables idata4 and idata5 have to be generated with a zero element
+prefix for import libraries.  This is the old style to generate import
+tables.  By default this option is turned off.
 
-   The `--be8' switch instructs `ld' to generate BE8 format
-executables.  This option is only valid when linking big-endian objects
-- ie ones which have been assembled with the `-EB' option.  The
-resulting image will contain big-endian data and little-endian code.
+   The '--be8' switch instructs 'ld' to generate BE8 format executables.
+This option is only valid when linking big-endian objects - ie ones
+which have been assembled with the '-EB' option.  The resulting image
+will contain big-endian data and little-endian code.
 
-   The `R_ARM_TARGET1' relocation is typically used for entries in the
-`.init_array' section.  It is interpreted as either `R_ARM_REL32' or
-`R_ARM_ABS32', depending on the target.  The `--target1-rel' and
-`--target1-abs' switches override the default.
+   The 'R_ARM_TARGET1' relocation is typically used for entries in the
+'.init_array' section.  It is interpreted as either 'R_ARM_REL32' or
+'R_ARM_ABS32', depending on the target.  The '--target1-rel' and
+'--target1-abs' switches override the default.
 
-   The `--target2=type' switch overrides the default definition of the
-`R_ARM_TARGET2' relocation.  Valid values for `type', their meanings,
+   The '--target2=type' switch overrides the default definition of the
+'R_ARM_TARGET2' relocation.  Valid values for 'type', their meanings,
 and target defaults are as follows:
-`rel'
-     `R_ARM_REL32' (arm*-*-elf, arm*-*-eabi)
-
-`abs'
-     `R_ARM_ABS32' (arm*-*-symbianelf)
-
-`got-rel'
-     `R_ARM_GOT_PREL' (arm*-*-linux, arm*-*-*bsd)
-
-   The `R_ARM_V4BX' relocation (defined by the ARM AAELF specification)
+'rel'
+     'R_ARM_REL32' (arm*-*-elf, arm*-*-eabi)
+'abs'
+     'R_ARM_ABS32' (arm*-*-symbianelf)
+'got-rel'
+     'R_ARM_GOT_PREL' (arm*-*-linux, arm*-*-*bsd)
+
+   The 'R_ARM_V4BX' relocation (defined by the ARM AAELF specification)
 enables objects compiled for the ARMv4 architecture to be
 interworking-safe when linked with other objects compiled for ARMv4t,
 but also allows pure ARMv4 binaries to be built from the same ARMv4
 objects.
 
-   In the latter case, the switch `--fix-v4bx' must be passed to the
-linker, which causes v4t `BX rM' instructions to be rewritten as `MOV
-PC,rM', since v4 processors do not have a `BX' instruction.
+   In the latter case, the switch '--fix-v4bx' must be passed to the
+linker, which causes v4t 'BX rM' instructions to be rewritten as 'MOV
+PC,rM', since v4 processors do not have a 'BX' instruction.
 
-   In the former case, the switch should not be used, and `R_ARM_V4BX'
+   In the former case, the switch should not be used, and 'R_ARM_V4BX'
 relocations are ignored.
 
-   Replace `BX rM' instructions identified by `R_ARM_V4BX' relocations
+   Replace 'BX rM' instructions identified by 'R_ARM_V4BX' relocations
 with a branch to the following veneer:
 
      TST rM, #1
@@ -5589,19 +5491,19 @@ with a branch to the following veneer:
 
    This allows generation of libraries/applications that work on ARMv4
 cores and are still interworking safe.  Note that the above veneer
-clobbers the condition flags, so may cause incorrect program behavior
-in rare cases.
+clobbers the condition flags, so may cause incorrect program behavior in
+rare cases.
 
-   The `--use-blx' switch enables the linker to use ARM/Thumb BLX
+   The '--use-blx' switch enables the linker to use ARM/Thumb BLX
 instructions (available on ARMv5t and above) in various situations.
 Currently it is used to perform calls via the PLT from Thumb code using
 BLX rather than using BX and a mode-switching stub before each PLT
-entry. This should lead to such calls executing slightly faster.
+entry.  This should lead to such calls executing slightly faster.
 
    This option is enabled implicitly for SymbianOS, so there is no need
 to specify it if you are using that target.
 
-   The `--vfp11-denorm-fix' switch enables a link-time workaround for a
+   The '--vfp11-denorm-fix' switch enables a link-time workaround for a
 bug in certain VFP11 coprocessor hardware, which sometimes allows
 instructions with denorm operands (which must be handled by support
 code) to have those operands overwritten by subsequent instructions
@@ -5610,55 +5512,56 @@ before the support code can read the intended values.
    The bug may be avoided in scalar mode if you allow at least one
 intervening instruction between a VFP11 instruction which uses a
 register and another instruction which writes to the same register, or
-at least two intervening instructions if vector mode is in use. The bug
+at least two intervening instructions if vector mode is in use.  The bug
 only affects full-compliance floating-point mode: you do not need this
-workaround if you are using "runfast" mode. Please contact ARM for
+workaround if you are using "runfast" mode.  Please contact ARM for
 further details.
 
    If you know you are using buggy VFP11 hardware, you can enable this
-workaround by specifying the linker option `--vfp-denorm-fix=scalar' if
-you are using the VFP11 scalar mode only, or `--vfp-denorm-fix=vector'
+workaround by specifying the linker option '--vfp-denorm-fix=scalar' if
+you are using the VFP11 scalar mode only, or '--vfp-denorm-fix=vector'
 if you are using vector mode (the latter also works for scalar code).
-The default is `--vfp-denorm-fix=none'.
+The default is '--vfp-denorm-fix=none'.
 
    If the workaround is enabled, instructions are scanned for
-potentially-troublesome sequences, and a veneer is created for each
-such sequence which may trigger the erratum. The veneer consists of the
+potentially-troublesome sequences, and a veneer is created for each such
+sequence which may trigger the erratum.  The veneer consists of the
 first instruction of the sequence and a branch back to the subsequent
-instruction. The original instruction is then replaced with a branch to
-the veneer. The extra cycles required to call and return from the veneer
-are sufficient to avoid the erratum in both the scalar and vector cases.
+instruction.  The original instruction is then replaced with a branch to
+the veneer.  The extra cycles required to call and return from the
+veneer are sufficient to avoid the erratum in both the scalar and vector
+cases.
 
-   The `--fix-arm1176' switch enables a link-time workaround for an
+   The '--fix-arm1176' switch enables a link-time workaround for an
 erratum in certain ARM1176 processors.  The workaround is enabled by
-default if you are targeting ARM v6 (excluding ARM v6T2) or earlier.
-It can be disabled unconditionally by specifying `--no-fix-arm1176'.
+default if you are targeting ARM v6 (excluding ARM v6T2) or earlier.  It
+can be disabled unconditionally by specifying '--no-fix-arm1176'.
 
    Further information is available in the "ARM1176JZ-S and ARM1176JZF-S
 Programmer Advice Notice" available on the ARM documentation website at:
 http://infocenter.arm.com/.
 
-   The `--fix-stm32l4xx-629360' switch enables a link-time workaround
+   The '--fix-stm32l4xx-629360' switch enables a link-time workaround
 for a bug in the bus matrix / memory controller for some of the STM32
 Cortex-M4 based products (STM32L4xx).  When accessing off-chip memory
 via the affected bus for bus reads of 9 words or more, the bus can
 generate corrupt data and/or abort.  These are only core-initiated
 accesses (not DMA), and might affect any access: integer loads such as
-LDM, POP and floating-point loads such as VLDM, VPOP.  Stores are not
+LDM, POP and floating-point loads such as VLDM, VPOP. Stores are not
 affected.
 
    The bug can be avoided by splitting memory accesses into the
 necessary chunks to keep bus reads below 8 words.
 
    The workaround is not enabled by default, this is equivalent to use
-`--fix-stm32l4xx-629360=none'.  If you know you are using buggy
+'--fix-stm32l4xx-629360=none'.  If you know you are using buggy
 STM32L4xx hardware, you can enable the workaround by specifying the
-linker option `--fix-stm32l4xx-629360', or the equivalent
-`--fix-stm32l4xx-629360=default'.
+linker option '--fix-stm32l4xx-629360', or the equivalent
+'--fix-stm32l4xx-629360=default'.
 
    If the workaround is enabled, instructions are scanned for
-potentially-troublesome sequences, and a veneer is created for each
-such sequence which may trigger the erratum.  The veneer consists in a
+potentially-troublesome sequences, and a veneer is created for each such
+sequence which may trigger the erratum.  The veneer consists in a
 replacement sequence emulating the behaviour of the original one and a
 branch back to the subsequent instruction.  The original instruction is
 then replaced with a branch to the veneer.
@@ -5672,129 +5575,128 @@ there.  In that case, the linker reports a warning and no replacement
 occurs.
 
    The workaround is not able to replace problematic instructions with a
-PC-relative branch instruction if the `.text' section is too large.  In
+PC-relative branch instruction if the '.text' section is too large.  In
 that case, when the branch that replaces the original code cannot be
 encoded, the linker reports a warning and no replacement occurs.
 
-   The `--no-enum-size-warning' switch prevents the linker from warning
+   The '--no-enum-size-warning' switch prevents the linker from warning
 when linking object files that specify incompatible EABI enumeration
 size attributes.  For example, with this switch enabled, linking of an
 object file using 32-bit enumeration values with another using
 enumeration values fitted into the smallest possible space will not be
 diagnosed.
 
-   The `--no-wchar-size-warning' switch prevents the linker from
-warning when linking object files that specify incompatible EABI
-`wchar_t' size attributes.  For example, with this switch enabled,
-linking of an object file using 32-bit `wchar_t' values with another
-using 16-bit `wchar_t' values will not be diagnosed.
+   The '--no-wchar-size-warning' switch prevents the linker from warning
+when linking object files that specify incompatible EABI 'wchar_t' size
+attributes.  For example, with this switch enabled, linking of an object
+file using 32-bit 'wchar_t' values with another using 16-bit 'wchar_t'
+values will not be diagnosed.
 
-   The `--pic-veneer' switch makes the linker use PIC sequences for
+   The '--pic-veneer' switch makes the linker use PIC sequences for
 ARM/Thumb interworking veneers, even if the rest of the binary is not
-PIC.  This avoids problems on uClinux targets where `--emit-relocs' is
+PIC. This avoids problems on uClinux targets where '--emit-relocs' is
 used to generate relocatable binaries.
 
    The linker will automatically generate and insert small sequences of
 code into a linked ARM ELF executable whenever an attempt is made to
-perform a function call to a symbol that is too far away.  The
-placement of these sequences of instructions - called stubs - is
-controlled by the command line option `--stub-group-size=N'.  The
-placement is important because a poor choice can create a need for
-duplicate stubs, increasing the code size.  The linker will try to
-group stubs together in order to reduce interruptions to the flow of
-code, but it needs guidance as to how big these groups should be and
-where they should be placed.
-
-   The value of `N', the parameter to the `--stub-group-size=' option
+perform a function call to a symbol that is too far away.  The placement
+of these sequences of instructions - called stubs - is controlled by the
+command line option '--stub-group-size=N'.  The placement is important
+because a poor choice can create a need for duplicate stubs, increasing
+the code size.  The linker will try to group stubs together in order to
+reduce interruptions to the flow of code, but it needs guidance as to
+how big these groups should be and where they should be placed.
+
+   The value of 'N', the parameter to the '--stub-group-size=' option
 controls where the stub groups are placed.  If it is negative then all
 stubs are placed after the first branch that needs them.  If it is
 positive then the stubs can be placed either before or after the
-branches that need them.  If the value of `N' is 1 (either +1 or -1)
+branches that need them.  If the value of 'N' is 1 (either +1 or -1)
 then the linker will choose exactly where to place groups of stubs,
-using its built in heuristics.  A value of `N' greater than 1 (or
+using its built in heuristics.  A value of 'N' greater than 1 (or
 smaller than -1) tells the linker that a single group of stubs can
-service at most `N' bytes from the input sections.
+service at most 'N' bytes from the input sections.
 
-   The default, if `--stub-group-size=' is not specified, is `N = +1'.
+   The default, if '--stub-group-size=' is not specified, is 'N = +1'.
 
    Farcalls stubs insertion is fully supported for the ARM-EABI target
 only, because it relies on object files properties not present
 otherwise.
 
-   The `--fix-cortex-a8' switch enables a link-time workaround for an
+   The '--fix-cortex-a8' switch enables a link-time workaround for an
 erratum in certain Cortex-A8 processors.  The workaround is enabled by
 default if you are targeting the ARM v7-A architecture profile.  It can
-be enabled otherwise by specifying `--fix-cortex-a8', or disabled
-unconditionally by specifying `--no-fix-cortex-a8'.
+be enabled otherwise by specifying '--fix-cortex-a8', or disabled
+unconditionally by specifying '--no-fix-cortex-a8'.
 
    The erratum only affects Thumb-2 code.  Please contact ARM for
 further details.
 
-   The `--fix-cortex-a53-835769' switch enables a link-time workaround
+   The '--fix-cortex-a53-835769' switch enables a link-time workaround
 for erratum 835769 present on certain early revisions of Cortex-A53
 processors.  The workaround is disabled by default.  It can be enabled
-by specifying `--fix-cortex-a53-835769', or disabled unconditionally by
-specifying `--no-fix-cortex-a53-835769'.
+by specifying '--fix-cortex-a53-835769', or disabled unconditionally by
+specifying '--no-fix-cortex-a53-835769'.
 
    Please contact ARM for further details.
 
-   The `--no-merge-exidx-entries' switch disables the merging of
+   The '--no-merge-exidx-entries' switch disables the merging of
 adjacent exidx entries in debuginfo.
 
-   The `--long-plt' option enables the use of 16 byte PLT entries which
+   The '--long-plt' option enables the use of 16 byte PLT entries which
 support up to 4Gb of code.  The default is to use 12 byte PLT entries
 which only support 512Mb of code.
 
-   The `--no-apply-dynamic-relocs' option makes AArch64 linker do not
+   The '--no-apply-dynamic-relocs' option makes AArch64 linker do not
 apply link-time values for dynamic relocations.
 
    All SG veneers are placed in the special output section
-`.gnu.sgstubs'.  Its start address must be set, either with the command
-line option `--section-start' or in a linker script, to indicate where
+'.gnu.sgstubs'.  Its start address must be set, either with the command
+line option '--section-start' or in a linker script, to indicate where
 to place these veneers in memory.
 
-   The `--cmse-implib' option requests that the import libraries
-specified by the `--out-implib' and `--in-implib' options are secure
+   The '--cmse-implib' option requests that the import libraries
+specified by the '--out-implib' and '--in-implib' options are secure
 gateway import libraries, suitable for linking a non-secure executable
 against secure code as per ARMv8-M Security Extensions.
 
-   The `--in-implib=file' specifies an input import library whose
+   The '--in-implib=file' specifies an input import library whose
 symbols must keep the same address in the executable being produced.  A
-warning is given if no `--out-implib' is given but new symbols have
-been introduced in the executable that should be listed in its import
-library.  Otherwise, if `--out-implib' is specified, the symbols are
+warning is given if no '--out-implib' is given but new symbols have been
+introduced in the executable that should be listed in its import
+library.  Otherwise, if '--out-implib' is specified, the symbols are
 added to the output import library.  A warning is also given if some
 symbols present in the input import library have disappeared from the
 executable.  This option is only effective for Secure Gateway import
-libraries, ie. when `--cmse-implib' is specified.
+libraries, ie.  when '--cmse-implib' is specified.
 
 
 File: ld.info,  Node: HPPA ELF32,  Next: M68K,  Prev: ARM,  Up: Machine Dependent
 
-4.5 `ld' and HPPA 32-bit ELF Support
+4.5 'ld' and HPPA 32-bit ELF Support
 ====================================
 
-When generating a shared library, `ld' will by default generate import
+When generating a shared library, 'ld' will by default generate import
 stubs suitable for use with a single sub-space application.  The
-`--multi-subspace' switch causes `ld' to generate export stubs, and
+'--multi-subspace' switch causes 'ld' to generate export stubs, and
 different (larger) import stubs suitable for use with multiple
 sub-spaces.
 
-   Long branch stubs and import/export stubs are placed by `ld' in stub
-sections located between groups of input sections.  `--stub-group-size'
+   Long branch stubs and import/export stubs are placed by 'ld' in stub
+sections located between groups of input sections.  '--stub-group-size'
 specifies the maximum size of a group of input sections handled by one
-stub section.  Since branch offsets are signed, a stub section may
-serve two groups of input sections, one group before the stub section,
-and one group after it.  However, when using conditional branches that
-require stubs, it may be better (for branch prediction) that stub
-sections only serve one group of input sections.  A negative value for
-`N' chooses this scheme, ensuring that branches to stubs always use a
-negative offset.  Two special values of `N' are recognized, `1' and
-`-1'.  These both instruct `ld' to automatically size input section
-groups for the branch types detected, with the same behaviour regarding
-stub placement as other positive or negative values of `N' respectively.
-
-   Note that `--stub-group-size' does not split input sections.  A
+stub section.  Since branch offsets are signed, a stub section may serve
+two groups of input sections, one group before the stub section, and one
+group after it.  However, when using conditional branches that require
+stubs, it may be better (for branch prediction) that stub sections only
+serve one group of input sections.  A negative value for 'N' chooses
+this scheme, ensuring that branches to stubs always use a negative
+offset.  Two special values of 'N' are recognized, '1' and '-1'.  These
+both instruct 'ld' to automatically size input section groups for the
+branch types detected, with the same behaviour regarding stub placement
+as other positive or negative values of 'N' respectively.
+
+   Note that '--stub-group-size' does not split input sections.  A
 single input section larger than the group size specified will of course
 create a larger group (of one section).  If input sections are too
 large, it may not be possible for a branch to reach its stub.
@@ -5802,17 +5704,17 @@ large, it may not be possible for a branch to reach its stub.
 
 File: ld.info,  Node: M68K,  Next: MIPS,  Prev: HPPA ELF32,  Up: Machine Dependent
 
-4.6 `ld' and the Motorola 68K family
+4.6 'ld' and the Motorola 68K family
 ====================================
 
-The `--got=TYPE' option lets you choose the GOT generation scheme.  The
-choices are `single', `negative', `multigot' and `target'.  When
-`target' is selected the linker chooses the default GOT generation
-scheme for the current target.  `single' tells the linker to generate a
-single GOT with entries only at non-negative offsets.  `negative'
+The '--got=TYPE' option lets you choose the GOT generation scheme.  The
+choices are 'single', 'negative', 'multigot' and 'target'.  When
+'target' is selected the linker chooses the default GOT generation
+scheme for the current target.  'single' tells the linker to generate a
+single GOT with entries only at non-negative offsets.  'negative'
 instructs the linker to generate a single GOT with entries at both
 negative and positive offsets.  Not all environments support such GOTs.
-`multigot' allows the linker to generate several GOTs in the output
+'multigot' allows the linker to generate several GOTs in the output
 file.  All GOT references from a single input object file access the
 same GOT, but references from different input object files might access
 different GOTs.  Not all environments support such GOTs.
@@ -5820,48 +5722,48 @@ different GOTs.  Not all environments support such GOTs.
 
 File: ld.info,  Node: MIPS,  Next: MMIX,  Prev: M68K,  Up: Machine Dependent
 
-4.7 `ld' and the MIPS family
+4.7 'ld' and the MIPS family
 ============================
 
-The `--insn32' and `--no-insn32' options control the choice of
-microMIPS instructions used in code generated by the linker, such as
-that in the PLT or lazy binding stubs, or in relaxation.  If `--insn32'
-is used, then the linker only uses 32-bit instruction encodings.  By
-default or if `--no-insn32' is used, all instruction encodings are used,
-including 16-bit ones where possible.
+The '--insn32' and '--no-insn32' options control the choice of microMIPS
+instructions used in code generated by the linker, such as that in the
+PLT or lazy binding stubs, or in relaxation.  If '--insn32' is used,
+then the linker only uses 32-bit instruction encodings.  By default or
+if '--no-insn32' is used, all instruction encodings are used, including
+16-bit ones where possible.
 
-   The `--ignore-branch-isa' and `--no-ignore-branch-isa' options
+   The '--ignore-branch-isa' and '--no-ignore-branch-isa' options
 control branch relocation checks for invalid ISA mode transitions.  If
-`--ignore-branch-isa' is used, then the linker accepts any branch
+'--ignore-branch-isa' is used, then the linker accepts any branch
 relocations and any ISA mode transition required is lost in relocation
-calculation, except for some cases of `BAL' instructions which meet
-relaxation conditions and are converted to equivalent `JALX'
+calculation, except for some cases of 'BAL' instructions which meet
+relaxation conditions and are converted to equivalent 'JALX'
 instructions as the associated relocation is calculated.  By default or
-if `--no-ignore-branch-isa' is used a check is made causing the loss of
+if '--no-ignore-branch-isa' is used a check is made causing the loss of
 an ISA mode transition to produce an error.
 
 
 File: ld.info,  Node: MMIX,  Next: MSP430,  Prev: MIPS,  Up: Machine Dependent
 
-4.8 `ld' and MMIX
+4.8 'ld' and MMIX
 =================
 
-For MMIX, there is a choice of generating `ELF' object files or `mmo'
-object files when linking.  The simulator `mmix' understands the `mmo'
-format.  The binutils `objcopy' utility can translate between the two
+For MMIX, there is a choice of generating 'ELF' object files or 'mmo'
+object files when linking.  The simulator 'mmix' understands the 'mmo'
+format.  The binutils 'objcopy' utility can translate between the two
 formats.
 
-   There is one special section, the `.MMIX.reg_contents' section.
+   There is one special section, the '.MMIX.reg_contents' section.
 Contents in this section is assumed to correspond to that of global
 registers, and symbols referring to it are translated to special
 symbols, equal to registers.  In a final link, the start address of the
-`.MMIX.reg_contents' section corresponds to the first allocated global
-register multiplied by 8.  Register `$255' is not included in this
+'.MMIX.reg_contents' section corresponds to the first allocated global
+register multiplied by 8.  Register '$255' is not included in this
 section; it is always set to the program entry, which is at the symbol
-`Main' for `mmo' files.
+'Main' for 'mmo' files.
 
-   Global symbols with the prefix `__.MMIX.start.', for example
-`__.MMIX.start..text' and `__.MMIX.start..data' are special.  The
+   Global symbols with the prefix '__.MMIX.start.', for example
+'__.MMIX.start..text' and '__.MMIX.start..data' are special.  The
 default linker script uses these to set the default start address of a
 section.
 
@@ -5871,245 +5773,244 @@ section, are left out from an mmo file.
 
 File: ld.info,  Node: MSP430,  Next: NDS32,  Prev: MMIX,  Up: Machine Dependent
 
-4.9 `ld' and MSP430
+4.9 'ld' and MSP430
 ===================
 
 For the MSP430 it is possible to select the MPU architecture.  The flag
-`-m [mpu type]' will select an appropriate linker script for selected
-MPU type.  (To get a list of known MPUs just pass `-m help' option to
+'-m [mpu type]' will select an appropriate linker script for selected
+MPU type.  (To get a list of known MPUs just pass '-m help' option to
 the linker).
 
    The linker will recognize some extra sections which are MSP430
 specific:
 
-``.vectors''
+''.vectors''
      Defines a portion of ROM where interrupt vectors located.
 
-``.bootloader''
+''.bootloader''
      Defines the bootloader portion of the ROM (if applicable).  Any
      code in this section will be uploaded to the MPU.
 
-``.infomem''
+''.infomem''
      Defines an information memory section (if applicable).  Any code in
      this section will be uploaded to the MPU.
 
-``.infomemnobits''
-     This is the same as the `.infomem' section except that any code in
+''.infomemnobits''
+     This is the same as the '.infomem' section except that any code in
      this section will not be uploaded to the MPU.
 
-``.noinit''
-     Denotes a portion of RAM located above `.bss' section.
+''.noinit''
+     Denotes a portion of RAM located above '.bss' section.
 
      The last two sections are used by gcc.
 
 
 File: ld.info,  Node: NDS32,  Next: Nios II,  Prev: MSP430,  Up: Machine Dependent
 
-4.10 `ld' and NDS32
+4.10 'ld' and NDS32
 ===================
 
 For NDS32, there are some options to select relaxation behavior.  The
 linker relaxes objects according to these options.
 
-``--m[no-]fp-as-gp''
+''--m[no-]fp-as-gp''
      Disable/enable fp-as-gp relaxation.
 
-``--mexport-symbols=FILE''
+''--mexport-symbols=FILE''
      Exporting symbols and their address into FILE as linker script.
 
-``--m[no-]ex9''
+''--m[no-]ex9''
      Disable/enable link-time EX9 relaxation.
 
-``--mexport-ex9=FILE''
+''--mexport-ex9=FILE''
      Export the EX9 table after linking.
 
-``--mimport-ex9=FILE''
+''--mimport-ex9=FILE''
      Import the Ex9 table for EX9 relaxation.
 
-``--mupdate-ex9''
+''--mupdate-ex9''
      Update the existing EX9 table.
 
-``--mex9-limit=NUM''
+''--mex9-limit=NUM''
      Maximum number of entries in the ex9 table.
 
-``--mex9-loop-aware''
+''--mex9-loop-aware''
      Avoid generating the EX9 instruction inside the loop.
 
-``--m[no-]ifc''
+''--m[no-]ifc''
      Disable/enable the link-time IFC optimization.
 
-``--mifc-loop-aware''
+''--mifc-loop-aware''
      Avoid generating the IFC instruction inside the loop.
 
 
 File: ld.info,  Node: Nios II,  Next: PowerPC ELF32,  Prev: NDS32,  Up: Machine Dependent
 
-4.11 `ld' and the Altera Nios II
+4.11 'ld' and the Altera Nios II
 ================================
 
 Call and immediate jump instructions on Nios II processors are limited
 to transferring control to addresses in the same 256MB memory segment,
-which may result in `ld' giving `relocation truncated to fit' errors
-with very large programs.  The command-line option `--relax' enables
-the generation of trampolines that can access the entire 32-bit address
-space for calls outside the normal `call' and `jmpi' address range.
+which may result in 'ld' giving 'relocation truncated to fit' errors
+with very large programs.  The command-line option '--relax' enables the
+generation of trampolines that can access the entire 32-bit address
+space for calls outside the normal 'call' and 'jmpi' address range.
 These trampolines are inserted at section boundaries, so may not
 themselves be reachable if an input section and its associated call
 trampolines are larger than 256MB.
 
-   The `--relax' option is enabled by default unless `-r' is also
+   The '--relax' option is enabled by default unless '-r' is also
 specified.  You can disable trampoline generation by using the
-`--no-relax' linker option.  You can also disable this optimization
-locally by using the `set .noat' directive in assembly-language source
-files, as the linker-inserted trampolines use the `at' register as a
+'--no-relax' linker option.  You can also disable this optimization
+locally by using the 'set .noat' directive in assembly-language source
+files, as the linker-inserted trampolines use the 'at' register as a
 temporary.
 
-   Note that the linker `--relax' option is independent of assembler
-relaxation options, and that using the GNU assembler's `-relax-all'
+   Note that the linker '--relax' option is independent of assembler
+relaxation options, and that using the GNU assembler's '-relax-all'
 option interferes with the linker's more selective call instruction
 relaxation.
 
 
 File: ld.info,  Node: PowerPC ELF32,  Next: PowerPC64 ELF64,  Prev: Nios II,  Up: Machine Dependent
 
-4.12 `ld' and PowerPC 32-bit ELF Support
+4.12 'ld' and PowerPC 32-bit ELF Support
 ========================================
 
 Branches on PowerPC processors are limited to a signed 26-bit
-displacement, which may result in `ld' giving `relocation truncated to
-fit' errors with very large programs.  `--relax' enables the generation
+displacement, which may result in 'ld' giving 'relocation truncated to
+fit' errors with very large programs.  '--relax' enables the generation
 of trampolines that can access the entire 32-bit address space.  These
-trampolines are inserted at section boundaries, so may not themselves
-be reachable if an input section exceeds 33M in size.  You may combine
-`-r' and `--relax' to add trampolines in a partial link.  In that case
-both branches to undefined symbols and inter-section branches are also
+trampolines are inserted at section boundaries, so may not themselves be
+reachable if an input section exceeds 33M in size.  You may combine '-r'
+and '--relax' to add trampolines in a partial link.  In that case both
+branches to undefined symbols and inter-section branches are also
 considered potentially out of range, and trampolines inserted.
 
-`--bss-plt'
-     Current PowerPC GCC accepts a `-msecure-plt' option that generates
+'--bss-plt'
+     Current PowerPC GCC accepts a '-msecure-plt' option that generates
      code capable of using a newer PLT and GOT layout that has the
      security advantage of no executable section ever needing to be
      writable and no writable section ever being executable.  PowerPC
-     `ld' will generate this layout, including stubs to access the PLT,
+     'ld' will generate this layout, including stubs to access the PLT,
      if all input files (including startup and static libraries) were
-     compiled with `-msecure-plt'.  `--bss-plt' forces the old BSS PLT
+     compiled with '-msecure-plt'.  '--bss-plt' forces the old BSS PLT
      (and GOT layout) which can give slightly better performance.
 
-`--secure-plt'
-     `ld' will use the new PLT and GOT layout if it is linking new
-     `-fpic' or `-fPIC' code, but does not do so automatically when
+'--secure-plt'
+     'ld' will use the new PLT and GOT layout if it is linking new
+     '-fpic' or '-fPIC' code, but does not do so automatically when
      linking non-PIC code.  This option requests the new PLT and GOT
      layout.  A warning will be given if some object file requires the
      old style BSS PLT.
 
-`--sdata-got'
+'--sdata-got'
      The new secure PLT and GOT are placed differently relative to other
-     sections compared to older BSS PLT and GOT placement.  The
-     location of `.plt' must change because the new secure PLT is an
-     initialized section while the old PLT is uninitialized.  The
-     reason for the `.got' change is more subtle:  The new placement
-     allows `.got' to be read-only in applications linked with `-z
-     relro -z now'.  However, this placement means that `.sdata' cannot
-     always be used in shared libraries, because the PowerPC ABI
-     accesses `.sdata' in shared libraries from the GOT pointer.
-     `--sdata-got' forces the old GOT placement.  PowerPC GCC doesn't
-     use `.sdata' in shared libraries, so this option is really only
-     useful for other compilers that may do so.
-
-`--emit-stub-syms'
-     This option causes `ld' to label linker stubs with a local symbol
+     sections compared to older BSS PLT and GOT placement.  The location
+     of '.plt' must change because the new secure PLT is an initialized
+     section while the old PLT is uninitialized.  The reason for the
+     '.got' change is more subtle: The new placement allows '.got' to be
+     read-only in applications linked with '-z relro -z now'.  However,
+     this placement means that '.sdata' cannot always be used in shared
+     libraries, because the PowerPC ABI accesses '.sdata' in shared
+     libraries from the GOT pointer.  '--sdata-got' forces the old GOT
+     placement.  PowerPC GCC doesn't use '.sdata' in shared libraries,
+     so this option is really only useful for other compilers that may
+     do so.
+
+'--emit-stub-syms'
+     This option causes 'ld' to label linker stubs with a local symbol
      that encodes the stub type and destination.
 
-`--no-tls-optimize'
-     PowerPC `ld' normally performs some optimization of code sequences
+'--no-tls-optimize'
+     PowerPC 'ld' normally performs some optimization of code sequences
      used to access Thread-Local Storage.  Use this option to disable
      the optimization.
 
 
 File: ld.info,  Node: PowerPC64 ELF64,  Next: SPU ELF,  Prev: PowerPC ELF32,  Up: Machine Dependent
 
-4.13 `ld' and PowerPC64 64-bit ELF Support
+4.13 'ld' and PowerPC64 64-bit ELF Support
 ==========================================
 
-`--stub-group-size'
-     Long branch stubs, PLT call stubs  and TOC adjusting stubs are
-     placed by `ld' in stub sections located between groups of input
-     sections.  `--stub-group-size' specifies the maximum size of a
+'--stub-group-size'
+     Long branch stubs, PLT call stubs and TOC adjusting stubs are
+     placed by 'ld' in stub sections located between groups of input
+     sections.  '--stub-group-size' specifies the maximum size of a
      group of input sections handled by one stub section.  Since branch
      offsets are signed, a stub section may serve two groups of input
      sections, one group before the stub section, and one group after
      it.  However, when using conditional branches that require stubs,
      it may be better (for branch prediction) that stub sections only
-     serve one group of input sections.  A negative value for `N'
+     serve one group of input sections.  A negative value for 'N'
      chooses this scheme, ensuring that branches to stubs always use a
-     negative offset.  Two special values of `N' are recognized, `1'
-     and `-1'.  These both instruct `ld' to automatically size input
-     section groups for the branch types detected, with the same
-     behaviour regarding stub placement as other positive or negative
-     values of `N' respectively.
+     negative offset.  Two special values of 'N' are recognized, '1' and
+     '-1'.  These both instruct 'ld' to automatically size input section
+     groups for the branch types detected, with the same behaviour
+     regarding stub placement as other positive or negative values of
+     'N' respectively.
 
-     Note that `--stub-group-size' does not split input sections.  A
+     Note that '--stub-group-size' does not split input sections.  A
      single input section larger than the group size specified will of
      course create a larger group (of one section).  If input sections
      are too large, it may not be possible for a branch to reach its
      stub.
 
-`--emit-stub-syms'
-     This option causes `ld' to label linker stubs with a local symbol
+'--emit-stub-syms'
+     This option causes 'ld' to label linker stubs with a local symbol
      that encodes the stub type and destination.
 
-`--dotsyms'
-`--no-dotsyms'
-     These two options control how `ld' interprets version patterns in
-     a version script.  Older PowerPC64 compilers emitted both a
-     function descriptor symbol with the same name as the function, and
-     a code entry symbol with the name prefixed by a dot (`.').  To
-     properly version a function `foo', the version script thus needs
-     to control both `foo' and `.foo'.  The option `--dotsyms', on by
-     default, automatically adds the required dot-prefixed patterns.
-     Use `--no-dotsyms' to disable this feature.
-
-`--save-restore-funcs'
-`--no-save-restore-funcs'
-     These two options control whether PowerPC64 `ld' automatically
+'--dotsyms'
+'--no-dotsyms'
+     These two options control how 'ld' interprets version patterns in a
+     version script.  Older PowerPC64 compilers emitted both a function
+     descriptor symbol with the same name as the function, and a code
+     entry symbol with the name prefixed by a dot ('.').  To properly
+     version a function 'foo', the version script thus needs to control
+     both 'foo' and '.foo'.  The option '--dotsyms', on by default,
+     automatically adds the required dot-prefixed patterns.  Use
+     '--no-dotsyms' to disable this feature.
+
+'--save-restore-funcs'
+'--no-save-restore-funcs'
+     These two options control whether PowerPC64 'ld' automatically
      provides out-of-line register save and restore functions used by
-     `-Os' code.  The default is to provide any such referenced
-     function for a normal final link, and to not do so for a
-     relocatable link.
+     '-Os' code.  The default is to provide any such referenced function
+     for a normal final link, and to not do so for a relocatable link.
 
-`--no-tls-optimize'
-     PowerPC64 `ld' normally performs some optimization of code
+'--no-tls-optimize'
+     PowerPC64 'ld' normally performs some optimization of code
      sequences used to access Thread-Local Storage.  Use this option to
      disable the optimization.
 
-`--tls-get-addr-optimize'
-`--no-tls-get-addr-optimize'
-     These options control whether PowerPC64 `ld' uses a special stub
-     to call __tls_get_addr.  PowerPC64 glibc 2.22 and later support an
+'--tls-get-addr-optimize'
+'--no-tls-get-addr-optimize'
+     These options control whether PowerPC64 'ld' uses a special stub to
+     call __tls_get_addr.  PowerPC64 glibc 2.22 and later support an
      optimization that allows the second and subsequent calls to
-     `__tls_get_addr' for a given symbol to be resolved by the special
+     '__tls_get_addr' for a given symbol to be resolved by the special
      stub without calling in to glibc.  By default the linker enables
      this option when glibc advertises the availability of
      __tls_get_addr_opt.  Forcing this option on when using an older
-     glibc won't do much besides slow down your applications, but may
-     be useful if linking an application against an older glibc with
-     the expectation that it will normally be used on systems having a
-     newer glibc.
+     glibc won't do much besides slow down your applications, but may be
+     useful if linking an application against an older glibc with the
+     expectation that it will normally be used on systems having a newer
+     glibc.
 
-`--no-opd-optimize'
-     PowerPC64 `ld' normally removes `.opd' section entries
+'--no-opd-optimize'
+     PowerPC64 'ld' normally removes '.opd' section entries
      corresponding to deleted link-once functions, or functions removed
-     by the action of `--gc-sections' or linker script `/DISCARD/'.
-     Use this option to disable `.opd' optimization.
+     by the action of '--gc-sections' or linker script '/DISCARD/'.  Use
+     this option to disable '.opd' optimization.
 
-`--non-overlapping-opd'
+'--non-overlapping-opd'
      Some PowerPC64 compilers have an option to generate compressed
-     `.opd' entries spaced 16 bytes apart, overlapping the third word,
+     '.opd' entries spaced 16 bytes apart, overlapping the third word,
      the static chain pointer (unused in C) with the first word of the
      next entry.  This option expands such entries to the full 24 bytes.
 
-`--no-toc-optimize'
-     PowerPC64 `ld' normally removes unused `.toc' section entries.
+'--no-toc-optimize'
+     PowerPC64 'ld' normally removes unused '.toc' section entries.
      Such entries are detected by examining relocations that reference
      the TOC in code sections.  A reloc in a deleted code section marks
      a TOC word as unneeded, while a reloc in a kept code section marks
@@ -6122,193 +6023,188 @@ File: ld.info,  Node: PowerPC64 ELF64,  Next: SPU ELF,  Prev: PowerPC ELF32,  Up
      assembly code is used to insert TOC entries.  Use this option to
      disable the optimization.
 
-`--no-multi-toc'
-     If given any toc option besides `-mcmodel=medium' or
-     `-mcmodel=large', PowerPC64 GCC generates code for a TOC model
+'--no-multi-toc'
+     If given any toc option besides '-mcmodel=medium' or
+     '-mcmodel=large', PowerPC64 GCC generates code for a TOC model
      where TOC entries are accessed with a 16-bit offset from r2.  This
-     limits the total TOC size to 64K.  PowerPC64 `ld' extends this
-     limit by grouping code sections such that each group uses less
-     than 64K for its TOC entries, then inserts r2 adjusting stubs
-     between inter-group calls.  `ld' does not split apart input
-     sections, so cannot help if a single input file has a `.toc'
-     section that exceeds 64K, most likely from linking multiple files
-     with `ld -r'.  Use this option to turn off this feature.
-
-`--no-toc-sort'
-     By default, `ld' sorts TOC sections so that those whose file
-     happens to have a section called `.init' or `.fini' are placed
+     limits the total TOC size to 64K. PowerPC64 'ld' extends this limit
+     by grouping code sections such that each group uses less than 64K
+     for its TOC entries, then inserts r2 adjusting stubs between
+     inter-group calls.  'ld' does not split apart input sections, so
+     cannot help if a single input file has a '.toc' section that
+     exceeds 64K, most likely from linking multiple files with 'ld -r'.
+     Use this option to turn off this feature.
+
+'--no-toc-sort'
+     By default, 'ld' sorts TOC sections so that those whose file
+     happens to have a section called '.init' or '.fini' are placed
      first, followed by TOC sections referenced by code generated with
-     PowerPC64 gcc's `-mcmodel=small', and lastly TOC sections
+     PowerPC64 gcc's '-mcmodel=small', and lastly TOC sections
      referenced only by code generated with PowerPC64 gcc's
-     `-mcmodel=medium' or `-mcmodel=large' options.  Doing this results
-     in better TOC grouping for multi-TOC.  Use this option to turn off
+     '-mcmodel=medium' or '-mcmodel=large' options.  Doing this results
+     in better TOC grouping for multi-TOC. Use this option to turn off
      this feature.
 
-`--plt-align'
-`--no-plt-align'
+'--plt-align'
+'--no-plt-align'
      Use these options to control whether individual PLT call stubs are
      padded so that they don't cross a 32-byte boundary, or to the
-     specified power of two boundary when using `--plt-align='.  Note
+     specified power of two boundary when using '--plt-align='.  Note
      that this isn't alignment in the usual sense.  By default PLT call
      stubs are packed tightly.
 
-`--plt-static-chain'
-`--no-plt-static-chain'
+'--plt-static-chain'
+'--no-plt-static-chain'
      Use these options to control whether PLT call stubs load the static
-     chain pointer (r11).  `ld' defaults to not loading the static
-     chain since there is never any need to do so on a PLT call.
+     chain pointer (r11).  'ld' defaults to not loading the static chain
+     since there is never any need to do so on a PLT call.
 
-`--plt-thread-safe'
-`--no-thread-safe'
+'--plt-thread-safe'
+'--no-thread-safe'
      With power7's weakly ordered memory model, it is possible when
      using lazy binding for ld.so to update a plt entry in one thread
      and have another thread see the individual plt entry words update
      in the wrong order, despite ld.so carefully writing in the correct
      order and using memory write barriers.  To avoid this we need some
      sort of read barrier in the call stub, or use LD_BIND_NOW=1.  By
-     default, `ld' looks for calls to commonly used functions that
+     default, 'ld' looks for calls to commonly used functions that
      create threads, and if seen, adds the necessary barriers.  Use
      these options to change the default behaviour.
 
 
 File: ld.info,  Node: SPU ELF,  Next: TI COFF,  Prev: PowerPC64 ELF64,  Up: Machine Dependent
 
-4.14 `ld' and SPU ELF Support
+4.14 'ld' and SPU ELF Support
 =============================
 
-`--plugin'
+'--plugin'
      This option marks an executable as a PIC plugin module.
 
-`--no-overlays'
-     Normally, `ld' recognizes calls to functions within overlay
+'--no-overlays'
+     Normally, 'ld' recognizes calls to functions within overlay
      regions, and redirects such calls to an overlay manager via a stub.
-     `ld' also provides a built-in overlay manager.  This option turns
+     'ld' also provides a built-in overlay manager.  This option turns
      off all this special overlay handling.
 
-`--emit-stub-syms'
-     This option causes `ld' to label overlay stubs with a local symbol
+'--emit-stub-syms'
+     This option causes 'ld' to label overlay stubs with a local symbol
      that encodes the stub type and destination.
 
-`--extra-overlay-stubs'
-     This option causes `ld' to add overlay call stubs on all function
+'--extra-overlay-stubs'
+     This option causes 'ld' to add overlay call stubs on all function
      calls out of overlay regions.  Normally stubs are not added on
      calls to non-overlay regions.
 
-`--local-store=lo:hi'
-     `ld' usually checks that a final executable for SPU fits in the
+'--local-store=lo:hi'
+     'ld' usually checks that a final executable for SPU fits in the
      address range 0 to 256k.  This option may be used to change the
-     range.  Disable the check entirely with `--local-store=0:0'.
+     range.  Disable the check entirely with '--local-store=0:0'.
 
-`--stack-analysis'
+'--stack-analysis'
      SPU local store space is limited.  Over-allocation of stack space
      unnecessarily limits space available for code and data, while
      under-allocation results in runtime failures.  If given this
-     option, `ld' will provide an estimate of maximum stack usage.
-     `ld' does this by examining symbols in code sections to determine
-     the extents of functions, and looking at function prologues for
-     stack adjusting instructions.  A call-graph is created by looking
-     for relocations on branch instructions.  The graph is then searched
-     for the maximum stack usage path.  Note that this analysis does not
+     option, 'ld' will provide an estimate of maximum stack usage.  'ld'
+     does this by examining symbols in code sections to determine the
+     extents of functions, and looking at function prologues for stack
+     adjusting instructions.  A call-graph is created by looking for
+     relocations on branch instructions.  The graph is then searched for
+     the maximum stack usage path.  Note that this analysis does not
      find calls made via function pointers, and does not handle
      recursion and other cycles in the call graph.  Stack usage may be
      under-estimated if your code makes such calls.  Also, stack usage
-     for dynamic allocation, e.g. alloca, will not be detected.  If a
+     for dynamic allocation, e.g.  alloca, will not be detected.  If a
      link map is requested, detailed information about each function's
      stack usage and calls will be given.
 
-`--emit-stack-syms'
-     This option, if given along with `--stack-analysis' will result in
-     `ld' emitting stack sizing symbols for each function.  These take
-     the form `__stack_<function_name>' for global functions, and
-     `__stack_<number>_<function_name>' for static functions.
-     `<number>' is the section id in hex.  The value of such symbols is
+'--emit-stack-syms'
+     This option, if given along with '--stack-analysis' will result in
+     'ld' emitting stack sizing symbols for each function.  These take
+     the form '__stack_<function_name>' for global functions, and
+     '__stack_<number>_<function_name>' for static functions.
+     '<number>' is the section id in hex.  The value of such symbols is
      the stack requirement for the corresponding function.  The symbol
-     size will be zero, type `STT_NOTYPE', binding `STB_LOCAL', and
-     section `SHN_ABS'.
+     size will be zero, type 'STT_NOTYPE', binding 'STB_LOCAL', and
+     section 'SHN_ABS'.
 
 
 File: ld.info,  Node: TI COFF,  Next: WIN32,  Prev: SPU ELF,  Up: Machine Dependent
 
-4.15 `ld''s Support for Various TI COFF Versions
+4.15 'ld''s Support for Various TI COFF Versions
 ================================================
 
-The `--format' switch allows selection of one of the various TI COFF
+The '--format' switch allows selection of one of the various TI COFF
 versions.  The latest of this writing is 2; versions 0 and 1 are also
 supported.  The TI COFF versions also vary in header byte-order format;
-`ld' will read any version or byte order, but the output header format
+'ld' will read any version or byte order, but the output header format
 depends on the default specified by the specific target.
 
 
 File: ld.info,  Node: WIN32,  Next: Xtensa,  Prev: TI COFF,  Up: Machine Dependent
 
-4.16 `ld' and WIN32 (cygwin/mingw)
+4.16 'ld' and WIN32 (cygwin/mingw)
 ==================================
 
-This section describes some of the win32 specific `ld' issues.  See
-*Note Command Line Options: Options. for detailed description of the
+This section describes some of the win32 specific 'ld' issues.  See
+*note Command Line Options: Options. for detailed description of the
 command line options mentioned here.
 
 _import libraries_
      The standard Windows linker creates and uses so-called import
      libraries, which contains information for linking to dll's.  They
      are regular static archives and are handled as any other static
-     archive.  The cygwin and mingw ports of `ld' have specific support
-     for creating such libraries provided with the `--out-implib'
+     archive.  The cygwin and mingw ports of 'ld' have specific support
+     for creating such libraries provided with the '--out-implib'
      command line option.
 
 _exporting DLL symbols_
-     The cygwin/mingw `ld' has several ways to export symbols for dll's.
+     The cygwin/mingw 'ld' has several ways to export symbols for dll's.
 
-    _using auto-export functionality_
-          By default `ld' exports symbols with the auto-export
+     _using auto-export functionality_
+          By default 'ld' exports symbols with the auto-export
           functionality, which is controlled by the following command
           line options:
 
-             * -export-all-symbols   [This is the default]
-
+             * -export-all-symbols [This is the default]
              * -exclude-symbols
-
              * -exclude-libs
-
              * -exclude-modules-for-implib
-
              * -version-script
 
-          When auto-export is in operation, `ld' will export all the
+          When auto-export is in operation, 'ld' will export all the
           non-local (global and common) symbols it finds in a DLL, with
-          the exception of a few symbols known to belong to the
-          system's runtime and libraries.  As it will often not be
-          desirable to export all of a DLL's symbols, which may include
-          private functions that are not part of any public interface,
-          the command-line options listed above may be used to filter
-          symbols out from the list for exporting.  The `--output-def'
+          the exception of a few symbols known to belong to the system's
+          runtime and libraries.  As it will often not be desirable to
+          export all of a DLL's symbols, which may include private
+          functions that are not part of any public interface, the
+          command-line options listed above may be used to filter
+          symbols out from the list for exporting.  The '--output-def'
           option can be used in order to see the final list of exported
           symbols with all exclusions taken into effect.
 
-          If `--export-all-symbols' is not given explicitly on the
+          If '--export-all-symbols' is not given explicitly on the
           command line, then the default auto-export behavior will be
           _disabled_ if either of the following are true:
 
              * A DEF file is used.
-
              * Any symbol in any object file was marked with the
                __declspec(dllexport) attribute.
 
-    _using a DEF file_
+     _using a DEF file_
           Another way of exporting symbols is using a DEF file.  A DEF
           file is an ASCII file containing definitions of symbols which
-          should be exported when a dll is created.  Usually it is
-          named `<dll name>.def' and is added as any other object file
-          to the linker's command line.  The file's name must end in
-          `.def' or `.DEF'.
+          should be exported when a dll is created.  Usually it is named
+          '<dll name>.def' and is added as any other object file to the
+          linker's command line.  The file's name must end in '.def' or
+          '.DEF'.
 
                gcc -o <output> <objectfiles> <dll name>.def
 
           Using a DEF file turns off the normal auto-export behavior,
-          unless the `--export-all-symbols' option is also used.
+          unless the '--export-all-symbols' option is also used.
 
           Here is an example of a DEF file for a shared library called
-          `xyz.dll':
+          'xyz.dll':
 
                LIBRARY "xyz.dll" BASE=0x20000000
 
@@ -6321,33 +6217,33 @@ _exporting DLL symbols_
                doo = foo == foo2
                eoo DATA == var1
 
-          This example defines a DLL with a non-default base address
-          and seven symbols in the export table. The third exported
-          symbol `_bar' is an alias for the second. The fourth symbol,
-          `another_foo' is resolved by "forwarding" to another module
-          and treating it as an alias for `afoo' exported from the DLL
-          `abc.dll'. The final symbol `var1' is declared to be a data
-          object. The `doo' symbol in export library is an alias of
-          `foo', which gets the string name in export table `foo2'. The
-          `eoo' symbol is an data export symbol, which gets in export
-          table the name `var1'.
-
-          The optional `LIBRARY <name>' command indicates the _internal_
-          name of the output DLL. If `<name>' does not include a suffix,
-          the default library suffix, `.DLL' is appended.
+          This example defines a DLL with a non-default base address and
+          seven symbols in the export table.  The third exported symbol
+          '_bar' is an alias for the second.  The fourth symbol,
+          'another_foo' is resolved by "forwarding" to another module
+          and treating it as an alias for 'afoo' exported from the DLL
+          'abc.dll'.  The final symbol 'var1' is declared to be a data
+          object.  The 'doo' symbol in export library is an alias of
+          'foo', which gets the string name in export table 'foo2'.  The
+          'eoo' symbol is an data export symbol, which gets in export
+          table the name 'var1'.
+
+          The optional 'LIBRARY <name>' command indicates the _internal_
+          name of the output DLL. If '<name>' does not include a suffix,
+          the default library suffix, '.DLL' is appended.
 
           When the .DEF file is used to build an application, rather
-          than a library, the `NAME <name>' command should be used
-          instead of `LIBRARY'. If `<name>' does not include a suffix,
-          the default executable suffix, `.EXE' is appended.
+          than a library, the 'NAME <name>' command should be used
+          instead of 'LIBRARY'.  If '<name>' does not include a suffix,
+          the default executable suffix, '.EXE' is appended.
 
-          With either `LIBRARY <name>' or `NAME <name>' the optional
-          specification `BASE = <number>' may be used to specify a
+          With either 'LIBRARY <name>' or 'NAME <name>' the optional
+          specification 'BASE = <number>' may be used to specify a
           non-default base address for the image.
 
-          If neither `LIBRARY <name>' nor  `NAME <name>' is specified,
-          or they specify an empty string, the internal name is the
-          same as the filename specified on the command line.
+          If neither 'LIBRARY <name>' nor 'NAME <name>' is specified, or
+          they specify an empty string, the internal name is the same as
+          the filename specified on the command line.
 
           The complete specification of an export symbol is:
 
@@ -6356,50 +6252,50 @@ _exporting DLL symbols_
                     | ( <name1> = <module-name> . <external-name>))
                  [ @ <integer> ] [NONAME] [DATA] [CONSTANT] [PRIVATE] [== <name3>] ) *
 
-          Declares `<name1>' as an exported symbol from the DLL, or
-          declares `<name1>' as an exported alias for `<name2>'; or
-          declares `<name1>' as a "forward" alias for the symbol
-          `<external-name>' in the DLL `<module-name>'.  Optionally,
-          the symbol may be exported by the specified ordinal
-          `<integer>' alias. The optional `<name3>' is the to be used
-          string in import/export table for the symbol.
+          Declares '<name1>' as an exported symbol from the DLL, or
+          declares '<name1>' as an exported alias for '<name2>'; or
+          declares '<name1>' as a "forward" alias for the symbol
+          '<external-name>' in the DLL '<module-name>'.  Optionally, the
+          symbol may be exported by the specified ordinal '<integer>'
+          alias.  The optional '<name3>' is the to be used string in
+          import/export table for the symbol.
 
           The optional keywords that follow the declaration indicate:
 
-          `NONAME': Do not put the symbol name in the DLL's export
-          table.  It will still be exported by its ordinal alias
-          (either the value specified by the .def specification or,
-          otherwise, the value assigned by the linker). The symbol
-          name, however, does remain visible in the import library (if
-          any), unless `PRIVATE' is also specified.
+          'NONAME': Do not put the symbol name in the DLL's export
+          table.  It will still be exported by its ordinal alias (either
+          the value specified by the .def specification or, otherwise,
+          the value assigned by the linker).  The symbol name, however,
+          does remain visible in the import library (if any), unless
+          'PRIVATE' is also specified.
 
-          `DATA': The symbol is a variable or object, rather than a
+          'DATA': The symbol is a variable or object, rather than a
           function.  The import lib will export only an indirect
-          reference to `foo' as the symbol `_imp__foo' (ie, `foo' must
-          be resolved as `*_imp__foo').
+          reference to 'foo' as the symbol '_imp__foo' (ie, 'foo' must
+          be resolved as '*_imp__foo').
 
-          `CONSTANT': Like `DATA', but put the undecorated `foo' as
-          well as `_imp__foo' into the import library. Both refer to the
+          'CONSTANT': Like 'DATA', but put the undecorated 'foo' as well
+          as '_imp__foo' into the import library.  Both refer to the
           read-only import address table's pointer to the variable, not
-          to the variable itself. This can be dangerous. If the user
-          code fails to add the `dllimport' attribute and also fails to
+          to the variable itself.  This can be dangerous.  If the user
+          code fails to add the 'dllimport' attribute and also fails to
           explicitly add the extra indirection that the use of the
           attribute enforces, the application will behave unexpectedly.
 
-          `PRIVATE': Put the symbol in the DLL's export table, but do
+          'PRIVATE': Put the symbol in the DLL's export table, but do
           not put it into the static import library used to resolve
-          imports at link time. The symbol can still be imported using
-          the `LoadLibrary/GetProcAddress' API at runtime or by by
-          using the GNU ld extension of linking directly to the DLL
-          without an import library.
+          imports at link time.  The symbol can still be imported using
+          the 'LoadLibrary/GetProcAddress' API at runtime or by by using
+          the GNU ld extension of linking directly to the DLL without an
+          import library.
 
           See ld/deffilep.y in the binutils sources for the full
           specification of other DEF file statements
 
-          While linking a shared dll, `ld' is able to create a DEF file
-          with the `--output-def <file>' command line option.
+          While linking a shared dll, 'ld' is able to create a DEF file
+          with the '--output-def <file>' command line option.
 
-    _Using decorations_
+     _Using decorations_
           Another way of marking symbols for export is to modify the
           source code itself, so that when building the DLL each symbol
           to be exported is declared as:
@@ -6407,11 +6303,10 @@ _exporting DLL symbols_
                __declspec(dllexport) int a_variable
                __declspec(dllexport) void a_function(int with_args)
 
-          All such symbols will be exported from the DLL.  If, however,
+          All such symbols will be exported from the DLL. If, however,
           any of the object files in the DLL contain symbols decorated
-          in this way, then the normal auto-export behavior is
-          disabled, unless the `--export-all-symbols' option is also
-          used.
+          in this way, then the normal auto-export behavior is disabled,
+          unless the '--export-all-symbols' option is also used.
 
           Note that object files that wish to access these symbols must
           _not_ decorate them with dllexport.  Instead, they should use
@@ -6426,31 +6321,31 @@ _exporting DLL symbols_
           included by client code the header must declare them as
           dllimport.  There are a number of idioms that are typically
           used to do this; often client code can omit the __declspec()
-          declaration completely.  See `--enable-auto-import' and
-          `automatic data imports' for more information.
+          declaration completely.  See '--enable-auto-import' and
+          'automatic data imports' for more information.
 
 _automatic data imports_
      The standard Windows dll format supports data imports from dlls
-     only by adding special decorations (dllimport/dllexport), which
-     let the compiler produce specific assembler instructions to deal
-     with this issue.  This increases the effort necessary to port
-     existing Un*x code to these platforms, especially for large c++
-     libraries and applications.  The auto-import feature, which was
-     initially provided by Paul Sokolovsky, allows one to omit the
-     decorations to achieve a behavior that conforms to that on
-     POSIX/Un*x platforms. This feature is enabled with the
-     `--enable-auto-import' command-line option, although it is enabled
-     by default on cygwin/mingw.  The `--enable-auto-import' option
-     itself now serves mainly to suppress any warnings that are
-     ordinarily emitted when linked objects trigger the feature's use.
+     only by adding special decorations (dllimport/dllexport), which let
+     the compiler produce specific assembler instructions to deal with
+     this issue.  This increases the effort necessary to port existing
+     Un*x code to these platforms, especially for large c++ libraries
+     and applications.  The auto-import feature, which was initially
+     provided by Paul Sokolovsky, allows one to omit the decorations to
+     achieve a behavior that conforms to that on POSIX/Un*x platforms.
+     This feature is enabled with the '--enable-auto-import'
+     command-line option, although it is enabled by default on
+     cygwin/mingw.  The '--enable-auto-import' option itself now serves
+     mainly to suppress any warnings that are ordinarily emitted when
+     linked objects trigger the feature's use.
 
      auto-import of variables does not always work flawlessly without
      additional assistance.  Sometimes, you will see this message
 
-     "variable '<var>' can't be auto-imported. Please read the
-     documentation for ld's `--enable-auto-import' for details."
+     "variable '<var>' can't be auto-imported.  Please read the
+     documentation for ld's '--enable-auto-import' for details."
 
-     The `--enable-auto-import' documentation explains why this error
+     The '--enable-auto-import' documentation explains why this error
      occurs, and several methods that can be used to overcome this
      difficulty.  One of these methods is the _runtime pseudo-relocs_
      feature, described below.
@@ -6465,38 +6360,38 @@ _automatic data imports_
      standard auto-import feature described above is unable to resolve
      these references.
 
-     The `--enable-runtime-pseudo-relocs' switch allows these
-     references to be resolved without error, while leaving the task of
-     adjusting the references themselves (with their non-zero addends)
-     to specialized code provided by the runtime environment.  Recent
-     versions of the cygwin and mingw environments and compilers
-     provide this runtime support; older versions do not.  However, the
-     support is only necessary on the developer's platform; the
-     compiled result will run without error on an older system.
+     The '--enable-runtime-pseudo-relocs' switch allows these references
+     to be resolved without error, while leaving the task of adjusting
+     the references themselves (with their non-zero addends) to
+     specialized code provided by the runtime environment.  Recent
+     versions of the cygwin and mingw environments and compilers provide
+     this runtime support; older versions do not.  However, the support
+     is only necessary on the developer's platform; the compiled result
+     will run without error on an older system.
 
-     `--enable-runtime-pseudo-relocs' is not the default; it must be
+     '--enable-runtime-pseudo-relocs' is not the default; it must be
      explicitly enabled as needed.
 
 _direct linking to a dll_
-     The cygwin/mingw ports of `ld' support the direct linking,
+     The cygwin/mingw ports of 'ld' support the direct linking,
      including data symbols, to a dll without the usage of any import
-     libraries.  This is much faster and uses much less memory than
-     does the traditional import library method, especially when
-     linking large libraries or applications.  When `ld' creates an
-     import lib, each function or variable exported from the dll is
-     stored in its own bfd, even though a single bfd could contain many
-     exports.  The overhead involved in storing, loading, and
-     processing so many bfd's is quite large, and explains the
-     tremendous time, memory, and storage needed to link against
-     particularly large or complex libraries when using import libs.
-
-     Linking directly to a dll uses no extra command-line switches
-     other than `-L' and `-l', because `ld' already searches for a
-     number of names to match each library.  All that is needed from
-     the developer's perspective is an understanding of this search, in
+     libraries.  This is much faster and uses much less memory than does
+     the traditional import library method, especially when linking
+     large libraries or applications.  When 'ld' creates an import lib,
+     each function or variable exported from the dll is stored in its
+     own bfd, even though a single bfd could contain many exports.  The
+     overhead involved in storing, loading, and processing so many bfd's
+     is quite large, and explains the tremendous time, memory, and
+     storage needed to link against particularly large or complex
+     libraries when using import libs.
+
+     Linking directly to a dll uses no extra command-line switches other
+     than '-L' and '-l', because 'ld' already searches for a number of
+     names to match each library.  All that is needed from the
+     developer's perspective is an understanding of this search, in
      order to force ld to select the dll instead of an import library.
 
-     For instance, when ld is called with the argument `-lxxx' it will
+     For instance, when ld is called with the argument '-lxxx' it will
      attempt to find, in the first directory of its search path,
 
           libxxx.dll.a
@@ -6509,21 +6404,21 @@ _direct linking to a dll_
 
      before moving on to the next directory in the search path.
 
-     (*) Actually, this is not `cygxxx.dll' but in fact is
-     `<prefix>xxx.dll', where `<prefix>' is set by the `ld' option
-     `--dll-search-prefix=<prefix>'. In the case of cygwin, the
-     standard gcc spec file includes `--dll-search-prefix=cyg', so in
-     effect we actually search for `cygxxx.dll'.
+     (*) Actually, this is not 'cygxxx.dll' but in fact is
+     '<prefix>xxx.dll', where '<prefix>' is set by the 'ld' option
+     '--dll-search-prefix=<prefix>'.  In the case of cygwin, the
+     standard gcc spec file includes '--dll-search-prefix=cyg', so in
+     effect we actually search for 'cygxxx.dll'.
 
-     Other win32-based unix environments, such as mingw or pw32, may
-     use other `<prefix>'es, although at present only cygwin makes use
-     of this feature.  It was originally intended to help avoid name
+     Other win32-based unix environments, such as mingw or pw32, may use
+     other '<prefix>'es, although at present only cygwin makes use of
+     this feature.  It was originally intended to help avoid name
      conflicts among dll's built for the various win32/un*x
      environments, so that (for example) two versions of a zlib dll
      could coexist on the same machine.
 
-     The generic cygwin/mingw path layout uses a `bin' directory for
-     applications and dll's and a `lib' directory for the import
+     The generic cygwin/mingw path layout uses a 'bin' directory for
+     applications and dll's and a 'lib' directory for the import
      libraries (using cygwin nomenclature):
 
           bin/
@@ -6535,15 +6430,15 @@ _direct linking to a dll_
      Linking directly to a dll without using the import library can be
      done two ways:
 
-     1. Use the dll directly by adding the `bin' path to the link line
+     1.  Use the dll directly by adding the 'bin' path to the link line
           gcc -Wl,-verbose  -o a.exe -L../bin/ -lxxx
 
      However, as the dll's often have version numbers appended to their
-     names (`cygncurses-5.dll') this will often fail, unless one
-     specifies `-L../bin -lncurses-5' to include the version.  Import
+     names ('cygncurses-5.dll') this will often fail, unless one
+     specifies '-L../bin -lncurses-5' to include the version.  Import
      libs are generally not versioned, and do not have this difficulty.
 
-     2. Create a symbolic link from the dll to a file in the `lib'
+     2.  Create a symbolic link from the dll to a file in the 'lib'
      directory according to the above mentioned search pattern.  This
      should be used to avoid unwanted changes in the tools needed for
      making the app/dll.
@@ -6554,8 +6449,8 @@ _direct linking to a dll_
 
           gcc -Wl,-verbose  -o a.exe -L../lib/ -lxxx
 
-     This technique also avoids the version number problems, because
-     the following is perfectly legal
+     This technique also avoids the version number problems, because the
+     following is perfectly legal
 
           bin/
           	cygxxx-5.dll
@@ -6564,22 +6459,22 @@ _direct linking to a dll_
 
      Linking directly to a dll without using an import lib will work
      even when auto-import features are exercised, and even when
-     `--enable-runtime-pseudo-relocs' is used.
+     '--enable-runtime-pseudo-relocs' is used.
 
      Given the improvements in speed and memory usage, one might
-     justifiably wonder why import libraries are used at all.  There
-     are three reasons:
+     justifiably wonder why import libraries are used at all.  There are
+     three reasons:
 
-     1. Until recently, the link-directly-to-dll functionality did _not_
-     work with auto-imported data.
+     1.  Until recently, the link-directly-to-dll functionality did
+     _not_ work with auto-imported data.
 
-     2. Sometimes it is necessary to include pure static objects within
+     2.  Sometimes it is necessary to include pure static objects within
      the import library (which otherwise contains only bfd's for
      indirection symbols that point to the exports of a dll).  Again,
-     the import lib for the cygwin kernel makes use of this ability,
-     and it is not possible to do this without an import lib.
+     the import lib for the cygwin kernel makes use of this ability, and
+     it is not possible to do this without an import lib.
 
-     3. Symbol aliases can only be resolved using an import lib.  This
+     3.  Symbol aliases can only be resolved using an import lib.  This
      is critical when linking against OS-supplied dll's (eg, the win32
      API) in which symbols are usually exported as undecorated aliases
      of their stdcall-decorated assembly names.
@@ -6587,17 +6482,16 @@ _direct linking to a dll_
      So, import libs are not going away.  But the ability to replace
      true import libs with a simple symbolic link to (or a copy of) a
      dll, in many cases, is a useful addition to the suite of tools
-     binutils makes available to the win32 developer.  Given the
-     massive improvements in memory requirements during linking, storage
+     binutils makes available to the win32 developer.  Given the massive
+     improvements in memory requirements during linking, storage
      requirements, and linking speed, we expect that many developers
      will soon begin to use this feature whenever possible.
 
 _symbol aliasing_
-
-    _adding additional names_
+     _adding additional names_
           Sometimes, it is useful to export symbols with additional
-          names.  A symbol `foo' will be exported as `foo', but it can
-          also be exported as `_foo' by using special directives in the
+          names.  A symbol 'foo' will be exported as 'foo', but it can
+          also be exported as '_foo' by using special directives in the
           DEF file when creating the dll.  This will affect also the
           optional created import library.  Consider the following DEF
           file:
@@ -6608,7 +6502,7 @@ _symbol aliasing_
                foo
                _foo = foo
 
-          The line `_foo = foo' maps the symbol `foo' to `_foo'.
+          The line '_foo = foo' maps the symbol 'foo' to '_foo'.
 
           Another method for creating a symbol alias is to create it in
           the source code using the "weak" attribute:
@@ -6619,11 +6513,11 @@ _symbol aliasing_
           See the gcc manual for more information about attributes and
           weak symbols.
 
-    _renaming symbols_
+     _renaming symbols_
           Sometimes it is useful to rename exports.  For instance, the
-          cygwin kernel does this regularly.  A symbol `_foo' can be
-          exported as `foo' but not as `_foo' by using special
-          directives in the DEF file. (This will also affect the import
+          cygwin kernel does this regularly.  A symbol '_foo' can be
+          exported as 'foo' but not as '_foo' by using special
+          directives in the DEF file.  (This will also affect the import
           library, if it is created).  In the following example:
 
                LIBRARY "xyz.dll" BASE=0x61000000
@@ -6631,57 +6525,54 @@ _symbol aliasing_
                EXPORTS
                _foo = foo
 
-          The line `_foo = foo' maps the exported symbol `foo' to
-          `_foo'.
+          The line '_foo = foo' maps the exported symbol 'foo' to
+          '_foo'.
 
      Note: using a DEF file disables the default auto-export behavior,
-     unless the `--export-all-symbols' command line option is used.
-     If, however, you are trying to rename symbols, then you should list
+     unless the '--export-all-symbols' command line option is used.  If,
+     however, you are trying to rename symbols, then you should list
      _all_ desired exports in the DEF file, including the symbols that
-     are not being renamed, and do _not_ use the `--export-all-symbols'
+     are not being renamed, and do _not_ use the '--export-all-symbols'
      option.  If you list only the renamed symbols in the DEF file, and
-     use `--export-all-symbols' to handle the other symbols, then the
-     both the new names _and_ the original names for the renamed
-     symbols will be exported.  In effect, you'd be aliasing those
-     symbols, not renaming them, which is probably not what you wanted.
+     use '--export-all-symbols' to handle the other symbols, then the
+     both the new names _and_ the original names for the renamed symbols
+     will be exported.  In effect, you'd be aliasing those symbols, not
+     renaming them, which is probably not what you wanted.
 
 _weak externals_
      The Windows object format, PE, specifies a form of weak symbols
-     called weak externals.  When a weak symbol is linked and the
-     symbol is not defined, the weak symbol becomes an alias for some
-     other symbol.  There are three variants of weak externals:
+     called weak externals.  When a weak symbol is linked and the symbol
+     is not defined, the weak symbol becomes an alias for some other
+     symbol.  There are three variants of weak externals:
         * Definition is searched for in objects and libraries,
           historically called lazy externals.
-
         * Definition is searched for only in other objects, not in
           libraries.  This form is not presently implemented.
-
         * No search; the symbol is an alias.  This form is not presently
           implemented.
      As a GNU extension, weak symbols that do not specify an alternate
-     symbol are supported.  If the symbol is undefined when linking,
-     the symbol uses a default value.
+     symbol are supported.  If the symbol is undefined when linking, the
+     symbol uses a default value.
 
 _aligned common symbols_
-     As a GNU extension to the PE file format, it is possible to
-     specify the desired alignment for a common symbol.  This
-     information is conveyed from the assembler or compiler to the
-     linker by means of GNU-specific commands carried in the object
-     file's `.drectve' section, which are recognized by `ld' and
-     respected when laying out the common symbols.  Native tools will
-     be able to process object files employing this GNU extension, but
-     will fail to respect the alignment instructions, and may issue
-     noisy warnings about unknown linker directives.
-
+     As a GNU extension to the PE file format, it is possible to specify
+     the desired alignment for a common symbol.  This information is
+     conveyed from the assembler or compiler to the linker by means of
+     GNU-specific commands carried in the object file's '.drectve'
+     section, which are recognized by 'ld' and respected when laying out
+     the common symbols.  Native tools will be able to process object
+     files employing this GNU extension, but will fail to respect the
+     alignment instructions, and may issue noisy warnings about unknown
+     linker directives.
 
 
 File: ld.info,  Node: Xtensa,  Prev: WIN32,  Up: Machine Dependent
 
-4.17 `ld' and Xtensa Processors
+4.17 'ld' and Xtensa Processors
 ===============================
 
-The default `ld' behavior for Xtensa processors is to interpret
-`SECTIONS' commands so that lists of explicitly named sections in a
+The default 'ld' behavior for Xtensa processors is to interpret
+'SECTIONS' commands so that lists of explicitly named sections in a
 specification with a wildcard file will be interleaved when necessary to
 keep literal pools within the range of PC-relative load offsets.  For
 example, with the command:
@@ -6693,44 +6584,43 @@ example, with the command:
        }
      }
 
-`ld' may interleave some of the `.literal' and `.text' sections from
+'ld' may interleave some of the '.literal' and '.text' sections from
 different object files to ensure that the literal pools are within the
-range of PC-relative load offsets.  A valid interleaving might place
-the `.literal' sections from an initial group of files followed by the
-`.text' sections of that group of files.  Then, the `.literal' sections
-from the rest of the files and the `.text' sections from the rest of
-the files would follow.
+range of PC-relative load offsets.  A valid interleaving might place the
+'.literal' sections from an initial group of files followed by the
+'.text' sections of that group of files.  Then, the '.literal' sections
+from the rest of the files and the '.text' sections from the rest of the
+files would follow.
 
-   Relaxation is enabled by default for the Xtensa version of `ld' and
+   Relaxation is enabled by default for the Xtensa version of 'ld' and
 provides two important link-time optimizations.  The first optimization
 is to combine identical literal values to reduce code size.  A redundant
-literal will be removed and all the `L32R' instructions that use it
-will be changed to reference an identical literal, as long as the
-location of the replacement literal is within the offset range of all
-the `L32R' instructions.  The second optimization is to remove
-unnecessary overhead from assembler-generated "longcall" sequences of
-`L32R'/`CALLXN' when the target functions are within range of direct
-`CALLN' instructions.
+literal will be removed and all the 'L32R' instructions that use it will
+be changed to reference an identical literal, as long as the location of
+the replacement literal is within the offset range of all the 'L32R'
+instructions.  The second optimization is to remove unnecessary overhead
+from assembler-generated "longcall" sequences of 'L32R'/'CALLXN' when
+the target functions are within range of direct 'CALLN' instructions.
 
    For each of these cases where an indirect call sequence can be
-optimized to a direct call, the linker will change the `CALLXN'
-instruction to a `CALLN' instruction, remove the `L32R' instruction,
-and remove the literal referenced by the `L32R' instruction if it is
-not used for anything else.  Removing the `L32R' instruction always
-reduces code size but can potentially hurt performance by changing the
-alignment of subsequent branch targets.  By default, the linker will
-always preserve alignments, either by switching some instructions
-between 24-bit encodings and the equivalent density instructions or by
-inserting a no-op in place of the `L32R' instruction that was removed.
-If code size is more important than performance, the `--size-opt'
-option can be used to prevent the linker from widening density
-instructions or inserting no-ops, except in a few cases where no-ops
-are required for correctness.
+optimized to a direct call, the linker will change the 'CALLXN'
+instruction to a 'CALLN' instruction, remove the 'L32R' instruction, and
+remove the literal referenced by the 'L32R' instruction if it is not
+used for anything else.  Removing the 'L32R' instruction always reduces
+code size but can potentially hurt performance by changing the alignment
+of subsequent branch targets.  By default, the linker will always
+preserve alignments, either by switching some instructions between
+24-bit encodings and the equivalent density instructions or by inserting
+a no-op in place of the 'L32R' instruction that was removed.  If code
+size is more important than performance, the '--size-opt' option can be
+used to prevent the linker from widening density instructions or
+inserting no-ops, except in a few cases where no-ops are required for
+correctness.
 
    The following Xtensa-specific command-line options can be used to
 control the linker:
 
-`--size-opt'
+'--size-opt'
      When optimizing indirect calls to direct calls, optimize for code
      size more than performance.  With this option, the linker will not
      insert no-ops or widen density instructions to preserve branch
@@ -6749,22 +6639,22 @@ object files whatever the object file format.  A different object file
 format can be supported simply by creating a new BFD back end and adding
 it to the library.  To conserve runtime memory, however, the linker and
 associated tools are usually configured to support only a subset of the
-object file formats available.  You can use `objdump -i' (*note
-objdump: (binutils.info)objdump.) to list all the formats available for
-your configuration.
+object file formats available.  You can use 'objdump -i' (*note objdump:
+(binutils.info)objdump.) to list all the formats available for your
+configuration.
 
    As with most implementations, BFD is a compromise between several
-conflicting requirements. The major factor influencing BFD design was
-efficiency: any time used converting between formats is time which
-would not have been spent had BFD not been involved. This is partly
-offset by abstraction payback; since BFD simplifies applications and
-back ends, more time and care may be spent optimizing algorithms for a
-greater speed.
+conflicting requirements.  The major factor influencing BFD design was
+efficiency: any time used converting between formats is time which would
+not have been spent had BFD not been involved.  This is partly offset by
+abstraction payback; since BFD simplifies applications and back ends,
+more time and care may be spent optimizing algorithms for a greater
+speed.
 
    One minor artifact of the BFD solution which you should bear in mind
 is the potential for information loss.  There are two places where
 useful information can be lost using the BFD mechanism: during
-conversion and during output. *Note BFD information loss::.
+conversion and during output.  *Note BFD information loss::.
 
 * Menu:
 
@@ -6781,18 +6671,18 @@ the format of the input object file.  They then build a descriptor in
 memory with pointers to routines that will be used to access elements of
 the object file's data structures.
 
-   As different information from the object files is required, BFD
-reads from different sections of the file and processes them.  For
-example, a very common operation for the linker is processing symbol
-tables.  Each BFD back end provides a routine for converting between
-the object file's representation of symbols and an internal canonical
-format. When the linker asks for the symbol table of an object file, it
-calls through a memory pointer to the routine from the relevant BFD
-back end which reads and converts the table into a canonical form.  The
-linker then operates upon the canonical form. When the link is finished
-and the linker writes the output file's symbol table, another BFD back
-end routine is called to take the newly created symbol table and
-convert it into the chosen output format.
+   As different information from the object files is required, BFD reads
+from different sections of the file and processes them.  For example, a
+very common operation for the linker is processing symbol tables.  Each
+BFD back end provides a routine for converting between the object file's
+representation of symbols and an internal canonical format.  When the
+linker asks for the symbol table of an object file, it calls through a
+memory pointer to the routine from the relevant BFD back end which reads
+and converts the table into a canonical form.  The linker then operates
+upon the canonical form.  When the link is finished and the linker
+writes the output file's symbol table, another BFD back end routine is
+called to take the newly created symbol table and convert it into the
+chosen output format.
 
 * Menu:
 
@@ -6805,25 +6695,25 @@ File: ld.info,  Node: BFD information loss,  Next: Canonical format,  Up: BFD ou
 5.1.1 Information Loss
 ----------------------
 
-_Information can be lost during output._ The output formats supported
-by BFD do not provide identical facilities, and information which can
-be described in one form has nowhere to go in another format. One
-example of this is alignment information in `b.out'. There is nowhere
-in an `a.out' format file to store alignment information on the
-contained data, so when a file is linked from `b.out' and an `a.out'
-image is produced, alignment information will not propagate to the
-output file. (The linker will still use the alignment information
-internally, so the link is performed correctly).
-
-   Another example is COFF section names. COFF files may contain an
-unlimited number of sections, each one with a textual section name. If
+_Information can be lost during output._  The output formats supported
+by BFD do not provide identical facilities, and information which can be
+described in one form has nowhere to go in another format.  One example
+of this is alignment information in 'b.out'.  There is nowhere in an
+'a.out' format file to store alignment information on the contained
+data, so when a file is linked from 'b.out' and an 'a.out' image is
+produced, alignment information will not propagate to the output file.
+(The linker will still use the alignment information internally, so the
+link is performed correctly).
+
+   Another example is COFF section names.  COFF files may contain an
+unlimited number of sections, each one with a textual section name.  If
 the target of the link is a format which does not have many sections
-(e.g., `a.out') or has sections without names (e.g., the Oasys format),
-the link cannot be done simply. You can circumvent this problem by
+(e.g., 'a.out') or has sections without names (e.g., the Oasys format),
+the link cannot be done simply.  You can circumvent this problem by
 describing the desired input-to-output section mapping with the linker
 command language.
 
-   _Information can be lost during canonicalization._ The BFD internal
+   _Information can be lost during canonicalization._  The BFD internal
 canonical form of the external formats is not exhaustive; there are
 structures in input formats for which there is no direct representation
 internally.  This means that the BFD back ends cannot maintain all
@@ -6834,16 +6724,16 @@ internal and back to external formats.
 format and writes another.  Each BFD back end is responsible for
 maintaining as much data as possible, and the internal BFD canonical
 form has structures which are opaque to the BFD core, and exported only
-to the back ends. When a file is read in one format, the canonical form
-is generated for BFD and the application. At the same time, the back
-end saves away any information which may otherwise be lost. If the data
+to the back ends.  When a file is read in one format, the canonical form
+is generated for BFD and the application.  At the same time, the back
+end saves away any information which may otherwise be lost.  If the data
 is then written back in the same format, the back end routine will be
 able to use the canonical form provided by the BFD core as well as the
 information it prepared earlier.  Since there is a great deal of
-commonality between back ends, there is no information lost when
-linking or copying big endian COFF to little endian COFF, or `a.out' to
-`b.out'.  When a mixture of formats is linked, the information is only
-lost from the files whose format differs from the destination.
+commonality between back ends, there is no information lost when linking
+or copying big endian COFF to little endian COFF, or 'a.out' to 'b.out'.
+When a mixture of formats is linked, the information is only lost from
+the files whose format differs from the destination.
 
 
 File: ld.info,  Node: Canonical format,  Prev: BFD information loss,  Up: BFD outline
@@ -6854,16 +6744,16 @@ File: ld.info,  Node: Canonical format,  Prev: BFD information loss,  Up: BFD ou
 The greatest potential for loss of information occurs when there is the
 least overlap between the information provided by the source format,
 that stored by the canonical format, and that needed by the destination
-format. A brief description of the canonical form may help you
+format.  A brief description of the canonical form may help you
 understand which kinds of data you can count on preserving across
-conversions.  
+conversions.
 
 _files_
      Information stored on a per-file basis includes target machine
      architecture, particular implementation format type, a demand
      pageable bit, and a write protected bit.  Information like Unix
      magic numbers is not stored here--only the magic numbers' meaning,
-     so a `ZMAGIC' file would have both the demand pageable bit and the
+     so a 'ZMAGIC' file would have both the demand pageable bit and the
      write protected text bit set.  The byte order of the target is
      stored on a per-file basis, so that big- and little-endian object
      files may be used with one another.
@@ -6882,14 +6772,14 @@ _symbols_
      section where they were defined.  Doing this ensures that each
      symbol points to its containing section.  Each symbol also has a
      varying amount of hidden private data for the BFD back end.  Since
-     the symbol points to the original file, the private data format
-     for that symbol is accessible.  `ld' can operate on a collection
-     of symbols of wildly different formats without problems.
-
-     Normal global and simple local symbols are maintained on output,
-     so an output file (no matter its format) will retain symbols
-     pointing to functions and to global, static, and common variables.
-     Some symbol information is not worth retaining; in `a.out', type
+     the symbol points to the original file, the private data format for
+     that symbol is accessible.  'ld' can operate on a collection of
+     symbols of wildly different formats without problems.
+
+     Normal global and simple local symbols are maintained on output, so
+     an output file (no matter its format) will retain symbols pointing
+     to functions and to global, static, and common variables.  Some
+     symbol information is not worth retaining; in 'a.out', type
      information is stored in the symbol table as long symbol names.
      This information would be useless to most COFF debuggers; the
      linker has command line switches to allow users to throw it away.
@@ -6897,17 +6787,17 @@ _symbols_
      There is one word of type information within the symbol, so if the
      format supports symbol type information within symbols (for
      example, COFF, IEEE, Oasys) and the type is simple enough to fit
-     within one word (nearly everything but aggregates), the
-     information will be preserved.
+     within one word (nearly everything but aggregates), the information
+     will be preserved.
 
 _relocation level_
      Each canonical BFD relocation record contains a pointer to the
      symbol to relocate to, the offset of the data to relocate, the
      section the data is in, and a pointer to a relocation type
-     descriptor. Relocation is performed by passing messages through
-     the relocation type descriptor and the symbol pointer. Therefore,
+     descriptor.  Relocation is performed by passing messages through
+     the relocation type descriptor and the symbol pointer.  Therefore,
      relocations can be performed on output data using a relocation
-     method that is only available in one of the input formats. For
+     method that is only available in one of the input formats.  For
      instance, Oasys provides a byte relocation format.  A relocation
      record requesting this relocation type would point indirectly to a
      routine to perform this, so the relocation may be performed on a
@@ -6919,13 +6809,13 @@ _line numbers_
      mapping between symbols, source line numbers, and addresses in the
      output file.  These addresses have to be relocated along with the
      symbol information.  Each symbol with an associated list of line
-     number records points to the first record of the list.  The head
-     of a line number list consists of a pointer to the symbol, which
-     allows finding out the address of the function whose line number
-     is being described. The rest of the list is made up of pairs:
-     offsets into the section and line numbers. Any format which can
-     simply derive this information can pass it successfully between
-     formats (COFF, IEEE and Oasys).
+     number records points to the first record of the list.  The head of
+     a line number list consists of a pointer to the symbol, which
+     allows finding out the address of the function whose line number is
+     being described.  The rest of the list is made up of pairs: offsets
+     into the section and line numbers.  Any format which can simply
+     derive this information can pass it successfully between formats
+     (COFF, IEEE and Oasys).
 
 
 File: ld.info,  Node: Reporting Bugs,  Next: MRI,  Prev: BFD,  Up: Top
@@ -6933,12 +6823,12 @@ File: ld.info,  Node: Reporting Bugs,  Next: MRI,  Prev: BFD,  Up: Top
 6 Reporting Bugs
 ****************
 
-Your bug reports play an essential role in making `ld' reliable.
+Your bug reports play an essential role in making 'ld' reliable.
 
    Reporting a bug may help you by bringing a solution to your problem,
 or it may not.  But in any case the principal function of a bug report
-is to help the entire community by making the next version of `ld' work
-better.  Bug reports are your contribution to the maintenance of `ld'.
+is to help the entire community by making the next version of 'ld' work
+better.  Bug reports are your contribution to the maintenance of 'ld'.
 
    In order for a bug report to serve its purpose, you must include the
 information that enables us to fix the bug.
@@ -6958,16 +6848,16 @@ If you are not sure whether you have found a bug, here are some
 guidelines:
 
    * If the linker gets a fatal signal, for any input whatever, that is
-     a `ld' bug.  Reliable linkers never crash.
+     a 'ld' bug.  Reliable linkers never crash.
 
-   * If `ld' produces an error message for valid input, that is a bug.
+   * If 'ld' produces an error message for valid input, that is a bug.
 
-   * If `ld' does not produce an error message for invalid input, that
+   * If 'ld' does not produce an error message for invalid input, that
      may be a bug.  In the general case, the linker can not verify that
      object files are correct.
 
    * If you are an experienced user of linkers, your suggestions for
-     improvement of `ld' are welcome in any case.
+     improvement of 'ld' are welcome in any case.
 
 
 File: ld.info,  Node: Bug Reporting,  Prev: Bug Criteria,  Up: Reporting Bugs
@@ -6976,33 +6866,32 @@ File: ld.info,  Node: Bug Reporting,  Prev: Bug Criteria,  Up: Reporting Bugs
 ======================
 
 A number of companies and individuals offer support for GNU products.
-If you obtained `ld' from a support organization, we recommend you
+If you obtained 'ld' from a support organization, we recommend you
 contact that organization first.
 
    You can find contact information for many support companies and
-individuals in the file `etc/SERVICE' in the GNU Emacs distribution.
+individuals in the file 'etc/SERVICE' in the GNU Emacs distribution.
 
-   Otherwise, send bug reports for `ld' to
-`http://www.sourceware.org/bugzilla/'.
+   Otherwise, send bug reports for 'ld' to
+<http://www.sourceware.org/bugzilla/>.
 
-   The fundamental principle of reporting bugs usefully is this:
-*report all the facts*.  If you are not sure whether to state a fact or
-leave it out, state it!
+   The fundamental principle of reporting bugs usefully is this: *report
+all the facts*.  If you are not sure whether to state a fact or leave it
+out, state it!
 
    Often people omit facts because they think they know what causes the
 problem and assume that some details do not matter.  Thus, you might
 assume that the name of a symbol you use in an example does not matter.
-Well, probably it does not, but one cannot be sure.  Perhaps the bug
-is a stray memory reference which happens to fetch from the location
-where that name is stored in memory; perhaps, if the name were
-different, the contents of that location would fool the linker into
-doing the right thing despite the bug.  Play it safe and give a
-specific, complete example.  That is the easiest thing for you to do,
-and the most helpful.
+Well, probably it does not, but one cannot be sure.  Perhaps the bug is
+a stray memory reference which happens to fetch from the location where
+that name is stored in memory; perhaps, if the name were different, the
+contents of that location would fool the linker into doing the right
+thing despite the bug.  Play it safe and give a specific, complete
+example.  That is the easiest thing for you to do, and the most helpful.
 
    Keep in mind that the purpose of a bug report is to enable us to fix
-the bug if it is new to us.  Therefore, always write your bug reports
-on the assumption that the bug has not been reported previously.
+the bug if it is new to us.  Therefore, always write your bug reports on
+the assumption that the bug has not been reported previously.
 
    Sometimes people give a few sketchy facts and ask, "Does this ring a
 bell?"  This cannot help us fix a bug, so it is basically useless.  We
@@ -7011,20 +6900,20 @@ might as well expedite matters by sending them to begin with.
 
    To enable us to fix the bug, you should include all these things:
 
-   * The version of `ld'.  `ld' announces it if you start it with the
-     `--version' argument.
+   * The version of 'ld'.  'ld' announces it if you start it with the
+     '--version' argument.
 
      Without this, we will not know whether there is any point in
-     looking for the bug in the current version of `ld'.
+     looking for the bug in the current version of 'ld'.
 
-   * Any patches you may have applied to the `ld' source, including any
-     patches made to the `BFD' library.
+   * Any patches you may have applied to the 'ld' source, including any
+     patches made to the 'BFD' library.
 
    * The type of machine you are using, and the operating system name
      and version number.
 
-   * What compiler (and its version) was used to compile `ld'--e.g.
-     "`gcc-2.7'".
+   * What compiler (and its version) was used to compile 'ld'--e.g.
+     "'gcc-2.7'".
 
    * The command arguments you gave the linker to link your example and
      observe the bug.  To guarantee you will not omit something
@@ -7037,29 +6926,29 @@ might as well expedite matters by sending them to begin with.
    * A complete input file, or set of input files, that will reproduce
      the bug.  It is generally most helpful to send the actual object
      files provided that they are reasonably small.  Say no more than
-     10K.  For bigger files you can either make them available by FTP
-     or HTTP or else state that you are willing to send the object
-     file(s) to whomever requests them.  (Note - your email will be
-     going to a mailing list, so we do not want to clog it up with
-     large attachments).  But small attachments are best.
-
-     If the source files were assembled using `gas' or compiled using
-     `gcc', then it may be OK to send the source files rather than the
+     10K. For bigger files you can either make them available by FTP or
+     HTTP or else state that you are willing to send the object file(s)
+     to whomever requests them.  (Note - your email will be going to a
+     mailing list, so we do not want to clog it up with large
+     attachments).  But small attachments are best.
+
+     If the source files were assembled using 'gas' or compiled using
+     'gcc', then it may be OK to send the source files rather than the
      object files.  In this case, be sure to say exactly what version of
-     `gas' or `gcc' was used to produce the object files.  Also say how
-     `gas' or `gcc' were configured.
+     'gas' or 'gcc' was used to produce the object files.  Also say how
+     'gas' or 'gcc' were configured.
 
    * A description of what behavior you observe that you believe is
      incorrect.  For example, "It gets a fatal signal."
 
-     Of course, if the bug is that `ld' gets a fatal signal, then we
+     Of course, if the bug is that 'ld' gets a fatal signal, then we
      will certainly notice it.  But if the bug is incorrect output, we
      might not notice unless it is glaringly wrong.  You might as well
      not give us a chance to make a mistake.
 
      Even if the problem you experience is a fatal signal, you should
      still say so explicitly.  Suppose something strange is going on,
-     such as, your copy of `ld' is out of sync, or you have encountered
+     such as, your copy of 'ld' is out of sync, or you have encountered
      a bug in the C library on your system.  (This has happened!)  Your
      copy might crash and ours would not.  If you told us to expect a
      crash, then when ours fails to crash, we would know that the bug
@@ -7067,15 +6956,15 @@ might as well expedite matters by sending them to begin with.
      crash, then we would not be able to draw any conclusion from our
      observations.
 
-   * If you wish to suggest changes to the `ld' source, send us context
-     diffs, as generated by `diff' with the `-u', `-c', or `-p' option.
+   * If you wish to suggest changes to the 'ld' source, send us context
+     diffs, as generated by 'diff' with the '-u', '-c', or '-p' option.
      Always send diffs from the old file to the new file.  If you even
-     discuss something in the `ld' source, refer to it by context, not
+     discuss something in the 'ld' source, refer to it by context, not
      by line number.
 
-     The line numbers in our development sources will not match those
-     in your sources.  Your line numbers would convey no useful
-     information to us.
+     The line numbers in our development sources will not match those in
+     your sources.  Your line numbers would convey no useful information
+     to us.
 
    Here are some things that are not necessary:
 
@@ -7090,8 +6979,8 @@ might as well expedite matters by sending them to begin with.
      debugger with breakpoints, not by pure deduction from a series of
      examples.  We recommend that you save your time for something else.
 
-     Of course, if you can find a simpler example to report _instead_
-     of the original one, that is a convenience for us.  Errors in the
+     Of course, if you can find a simpler example to report _instead_ of
+     the original one, that is a convenience for us.  Errors in the
      output will be easier to spot, running under the debugger will take
      less time, and so on.
 
@@ -7103,15 +6992,15 @@ might as well expedite matters by sending them to begin with.
 
      A patch for the bug does help us if it is a good one.  But do not
      omit the necessary information, such as the test case, on the
-     assumption that a patch is all we need.  We might see problems
-     with your patch and decide to fix the problem another way, or we
-     might not understand it at all.
+     assumption that a patch is all we need.  We might see problems with
+     your patch and decide to fix the problem another way, or we might
+     not understand it at all.
 
-     Sometimes with a program as complicated as `ld' it is very hard to
+     Sometimes with a program as complicated as 'ld' it is very hard to
      construct an example that will make the program follow a certain
      path through the code.  If you do not send us the example, we will
-     not be able to construct one, so we will not be able to verify
-     that the bug is fixed.
+     not be able to construct one, so we will not be able to verify that
+     the bug is fixed.
 
      And if we cannot understand what bug you are trying to fix, or why
      your patch should be an improvement, we will not install it.  A
@@ -7128,116 +7017,115 @@ File: ld.info,  Node: MRI,  Next: GNU Free Documentation License,  Prev: Reporti
 Appendix A MRI Compatible Script Files
 **************************************
 
-To aid users making the transition to GNU `ld' from the MRI linker,
-`ld' can use MRI compatible linker scripts as an alternative to the
-more general-purpose linker scripting language described in *Note
-Scripts::.  MRI compatible linker scripts have a much simpler command
-set than the scripting language otherwise used with `ld'.  GNU `ld'
-supports the most commonly used MRI linker commands; these commands are
-described here.
+To aid users making the transition to GNU 'ld' from the MRI linker, 'ld'
+can use MRI compatible linker scripts as an alternative to the more
+general-purpose linker scripting language described in *note Scripts::.
+MRI compatible linker scripts have a much simpler command set than the
+scripting language otherwise used with 'ld'.  GNU 'ld' supports the most
+commonly used MRI linker commands; these commands are described here.
 
-   In general, MRI scripts aren't of much use with the `a.out' object
+   In general, MRI scripts aren't of much use with the 'a.out' object
 file format, since it only has three sections and MRI scripts lack some
 features to make use of them.
 
    You can specify a file containing an MRI-compatible script using the
-`-c' command-line option.
+'-c' command-line option.
 
    Each command in an MRI-compatible script occupies its own line; each
 command line starts with the keyword that identifies the command (though
 blank lines are also allowed for punctuation).  If a line of an
-MRI-compatible script begins with an unrecognized keyword, `ld' issues
-a warning message, but continues processing the script.
+MRI-compatible script begins with an unrecognized keyword, 'ld' issues a
+warning message, but continues processing the script.
 
-   Lines beginning with `*' are comments.
+   Lines beginning with '*' are comments.
 
    You can write these commands using all upper-case letters, or all
-lower case; for example, `chip' is the same as `CHIP'.  The following
+lower case; for example, 'chip' is the same as 'CHIP'.  The following
 list shows only the upper-case form of each command.
 
-`ABSOLUTE SECNAME'
-`ABSOLUTE SECNAME, SECNAME, ... SECNAME'
-     Normally, `ld' includes in the output file all sections from all
-     the input files.  However, in an MRI-compatible script, you can
-     use the `ABSOLUTE' command to restrict the sections that will be
-     present in your output program.  If the `ABSOLUTE' command is used
+'ABSOLUTE SECNAME'
+'ABSOLUTE SECNAME, SECNAME, ... SECNAME'
+     Normally, 'ld' includes in the output file all sections from all
+     the input files.  However, in an MRI-compatible script, you can use
+     the 'ABSOLUTE' command to restrict the sections that will be
+     present in your output program.  If the 'ABSOLUTE' command is used
      at all in a script, then only the sections named explicitly in
-     `ABSOLUTE' commands will appear in the linker output.  You can
+     'ABSOLUTE' commands will appear in the linker output.  You can
      still use other input sections (whatever you select on the command
-     line, or using `LOAD') to resolve addresses in the output file.
+     line, or using 'LOAD') to resolve addresses in the output file.
 
-`ALIAS OUT-SECNAME, IN-SECNAME'
-     Use this command to place the data from input section IN-SECNAME
-     in a section called OUT-SECNAME in the linker output file.
+'ALIAS OUT-SECNAME, IN-SECNAME'
+     Use this command to place the data from input section IN-SECNAME in
+     a section called OUT-SECNAME in the linker output file.
 
      IN-SECNAME may be an integer.
 
-`ALIGN SECNAME = EXPRESSION'
+'ALIGN SECNAME = EXPRESSION'
      Align the section called SECNAME to EXPRESSION.  The EXPRESSION
      should be a power of two.
 
-`BASE EXPRESSION'
+'BASE EXPRESSION'
      Use the value of EXPRESSION as the lowest address (other than
      absolute addresses) in the output file.
 
-`CHIP EXPRESSION'
-`CHIP EXPRESSION, EXPRESSION'
+'CHIP EXPRESSION'
+'CHIP EXPRESSION, EXPRESSION'
      This command does nothing; it is accepted only for compatibility.
 
-`END'
+'END'
      This command does nothing whatever; it's only accepted for
      compatibility.
 
-`FORMAT OUTPUT-FORMAT'
-     Similar to the `OUTPUT_FORMAT' command in the more general linker
+'FORMAT OUTPUT-FORMAT'
+     Similar to the 'OUTPUT_FORMAT' command in the more general linker
      language, but restricted to one of these output formats:
 
-       1. S-records, if OUTPUT-FORMAT is `S'
+       1. S-records, if OUTPUT-FORMAT is 'S'
 
-       2. IEEE, if OUTPUT-FORMAT is `IEEE'
+       2. IEEE, if OUTPUT-FORMAT is 'IEEE'
 
-       3. COFF (the `coff-m68k' variant in BFD), if OUTPUT-FORMAT is
-          `COFF'
+       3. COFF (the 'coff-m68k' variant in BFD), if OUTPUT-FORMAT is
+          'COFF'
 
-`LIST ANYTHING...'
+'LIST ANYTHING...'
      Print (to the standard output file) a link map, as produced by the
-     `ld' command-line option `-M'.
+     'ld' command-line option '-M'.
 
-     The keyword `LIST' may be followed by anything on the same line,
+     The keyword 'LIST' may be followed by anything on the same line,
      with no change in its effect.
 
-`LOAD FILENAME'
-`LOAD FILENAME, FILENAME, ... FILENAME'
+'LOAD FILENAME'
+'LOAD FILENAME, FILENAME, ... FILENAME'
      Include one or more object file FILENAME in the link; this has the
-     same effect as specifying FILENAME directly on the `ld' command
+     same effect as specifying FILENAME directly on the 'ld' command
      line.
 
-`NAME OUTPUT-NAME'
-     OUTPUT-NAME is the name for the program produced by `ld'; the
-     MRI-compatible command `NAME' is equivalent to the command-line
-     option `-o' or the general script language command `OUTPUT'.
+'NAME OUTPUT-NAME'
+     OUTPUT-NAME is the name for the program produced by 'ld'; the
+     MRI-compatible command 'NAME' is equivalent to the command-line
+     option '-o' or the general script language command 'OUTPUT'.
 
-`ORDER SECNAME, SECNAME, ... SECNAME'
-`ORDER SECNAME SECNAME SECNAME'
-     Normally, `ld' orders the sections in its output file in the order
+'ORDER SECNAME, SECNAME, ... SECNAME'
+'ORDER SECNAME SECNAME SECNAME'
+     Normally, 'ld' orders the sections in its output file in the order
      in which they first appear in the input files.  In an
      MRI-compatible script, you can override this ordering with the
-     `ORDER' command.  The sections you list with `ORDER' will appear
+     'ORDER' command.  The sections you list with 'ORDER' will appear
      first in your output file, in the order specified.
 
-`PUBLIC NAME=EXPRESSION'
-`PUBLIC NAME,EXPRESSION'
-`PUBLIC NAME EXPRESSION'
+'PUBLIC NAME=EXPRESSION'
+'PUBLIC NAME,EXPRESSION'
+'PUBLIC NAME EXPRESSION'
      Supply a value (EXPRESSION) for external symbol NAME used in the
      linker input files.
 
-`SECT SECNAME, EXPRESSION'
-`SECT SECNAME=EXPRESSION'
-`SECT SECNAME EXPRESSION'
-     You can use any of these three forms of the `SECT' command to
-     specify the start address (EXPRESSION) for section SECNAME.  If
-     you have more than one `SECT' statement for the same SECNAME, only
-     the _first_ sets the start address.
+'SECT SECNAME, EXPRESSION'
+'SECT SECNAME=EXPRESSION'
+'SECT SECNAME EXPRESSION'
+     You can use any of these three forms of the 'SECT' command to
+     specify the start address (EXPRESSION) for section SECNAME.  If you
+     have more than one 'SECT' statement for the same SECNAME, only the
+     _first_ sets the start address.
 
 
 File: ld.info,  Node: GNU Free Documentation License,  Next: LD Index,  Prev: MRI,  Up: Top
@@ -7248,7 +7136,7 @@ Appendix B GNU Free Documentation License
                      Version 1.3, 3 November 2008
 
      Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
-     `http://fsf.org/'
+     <http://fsf.org/>
 
      Everyone is permitted to copy and distribute verbatim copies
      of this license document, but changing it is not allowed.
@@ -7273,21 +7161,21 @@ Appendix B GNU Free Documentation License
      free program should come with manuals providing the same freedoms
      that the software does.  But this License is not limited to
      software manuals; it can be used for any textual work, regardless
-     of subject matter or whether it is published as a printed book.
-     We recommend this License principally for works whose purpose is
+     of subject matter or whether it is published as a printed book.  We
+     recommend this License principally for works whose purpose is
      instruction or reference.
 
   1. APPLICABILITY AND DEFINITIONS
 
      This License applies to any manual or other work, in any medium,
-     that contains a notice placed by the copyright holder saying it
-     can be distributed under the terms of this License.  Such a notice
+     that contains a notice placed by the copyright holder saying it can
+     be distributed under the terms of this License.  Such a notice
      grants a world-wide, royalty-free license, unlimited in duration,
      to use that work under the conditions stated herein.  The
      "Document", below, refers to any such manual or work.  Any member
-     of the public is a licensee, and is addressed as "you".  You
-     accept the license if you copy, modify or distribute the work in a
-     way requiring permission under copyright law.
+     of the public is a licensee, and is addressed as "you".  You accept
+     the license if you copy, modify or distribute the work in a way
+     requiring permission under copyright law.
 
      A "Modified Version" of the Document means any work containing the
      Document or a portion of it, either copied verbatim, or with
@@ -7305,12 +7193,12 @@ Appendix B GNU Free Documentation License
      regarding them.
 
      The "Invariant Sections" are certain Secondary Sections whose
-     titles are designated, as being those of Invariant Sections, in
-     the notice that says that the Document is released under this
-     License.  If a section does not fit the above definition of
-     Secondary then it is not allowed to be designated as Invariant.
-     The Document may contain zero Invariant Sections.  If the Document
-     does not identify any Invariant Sections then there are none.
+     titles are designated, as being those of Invariant Sections, in the
+     notice that says that the Document is released under this License.
+     If a section does not fit the above definition of Secondary then it
+     is not allowed to be designated as Invariant.  The Document may
+     contain zero Invariant Sections.  If the Document does not identify
+     any Invariant Sections then there are none.
 
      The "Cover Texts" are certain short passages of text that are
      listed, as Front-Cover Texts or Back-Cover Texts, in the notice
@@ -7321,27 +7209,27 @@ Appendix B GNU Free Documentation License
      A "Transparent" copy of the Document means a machine-readable copy,
      represented in a format whose specification is available to the
      general public, that is suitable for revising the document
-     straightforwardly with generic text editors or (for images
-     composed of pixels) generic paint programs or (for drawings) some
-     widely available drawing editor, and that is suitable for input to
-     text formatters or for automatic translation to a variety of
-     formats suitable for input to text formatters.  A copy made in an
-     otherwise Transparent file format whose markup, or absence of
-     markup, has been arranged to thwart or discourage subsequent
-     modification by readers is not Transparent.  An image format is
-     not Transparent if used for any substantial amount of text.  A
-     copy that is not "Transparent" is called "Opaque".
+     straightforwardly with generic text editors or (for images composed
+     of pixels) generic paint programs or (for drawings) some widely
+     available drawing editor, and that is suitable for input to text
+     formatters or for automatic translation to a variety of formats
+     suitable for input to text formatters.  A copy made in an otherwise
+     Transparent file format whose markup, or absence of markup, has
+     been arranged to thwart or discourage subsequent modification by
+     readers is not Transparent.  An image format is not Transparent if
+     used for any substantial amount of text.  A copy that is not
+     "Transparent" is called "Opaque".
 
      Examples of suitable formats for Transparent copies include plain
      ASCII without markup, Texinfo input format, LaTeX input format,
-     SGML or XML using a publicly available DTD, and
-     standard-conforming simple HTML, PostScript or PDF designed for
-     human modification.  Examples of transparent image formats include
-     PNG, XCF and JPG.  Opaque formats include proprietary formats that
-     can be read and edited only by proprietary word processors, SGML or
-     XML for which the DTD and/or processing tools are not generally
-     available, and the machine-generated HTML, PostScript or PDF
-     produced by some word processors for output purposes only.
+     SGML or XML using a publicly available DTD, and standard-conforming
+     simple HTML, PostScript or PDF designed for human modification.
+     Examples of transparent image formats include PNG, XCF and JPG.
+     Opaque formats include proprietary formats that can be read and
+     edited only by proprietary word processors, SGML or XML for which
+     the DTD and/or processing tools are not generally available, and
+     the machine-generated HTML, PostScript or PDF produced by some word
+     processors for output purposes only.
 
      The "Title Page" means, for a printed book, the title page itself,
      plus such following pages as are needed to hold, legibly, the
@@ -7379,8 +7267,8 @@ Appendix B GNU Free Documentation License
      may not use technical measures to obstruct or control the reading
      or further copying of the copies you make or distribute.  However,
      you may accept compensation in exchange for copies.  If you
-     distribute a large enough number of copies you must also follow
-     the conditions in section 3.
+     distribute a large enough number of copies you must also follow the
+     conditions in section 3.
 
      You may also lend copies, under the same conditions stated above,
      and you may publicly display copies.
@@ -7394,12 +7282,11 @@ Appendix B GNU Free Documentation License
      these Cover Texts: Front-Cover Texts on the front cover, and
      Back-Cover Texts on the back cover.  Both covers must also clearly
      and legibly identify you as the publisher of these copies.  The
-     front cover must present the full title with all words of the
-     title equally prominent and visible.  You may add other material
-     on the covers in addition.  Copying with changes limited to the
-     covers, as long as they preserve the title of the Document and
-     satisfy these conditions, can be treated as verbatim copying in
-     other respects.
+     front cover must present the full title with all words of the title
+     equally prominent and visible.  You may add other material on the
+     covers in addition.  Copying with changes limited to the covers, as
+     long as they preserve the title of the Document and satisfy these
+     conditions, can be treated as verbatim copying in other respects.
 
      If the required texts for either cover are too voluminous to fit
      legibly, you should put the first ones listed (as many as fit
@@ -7407,40 +7294,39 @@ Appendix B GNU Free Documentation License
      adjacent pages.
 
      If you publish or distribute Opaque copies of the Document
-     numbering more than 100, you must either include a
-     machine-readable Transparent copy along with each Opaque copy, or
-     state in or with each Opaque copy a computer-network location from
-     which the general network-using public has access to download
-     using public-standard network protocols a complete Transparent
-     copy of the Document, free of added material.  If you use the
-     latter option, you must take reasonably prudent steps, when you
-     begin distribution of Opaque copies in quantity, to ensure that
-     this Transparent copy will remain thus accessible at the stated
-     location until at least one year after the last time you
-     distribute an Opaque copy (directly or through your agents or
-     retailers) of that edition to the public.
+     numbering more than 100, you must either include a machine-readable
+     Transparent copy along with each Opaque copy, or state in or with
+     each Opaque copy a computer-network location from which the general
+     network-using public has access to download using public-standard
+     network protocols a complete Transparent copy of the Document, free
+     of added material.  If you use the latter option, you must take
+     reasonably prudent steps, when you begin distribution of Opaque
+     copies in quantity, to ensure that this Transparent copy will
+     remain thus accessible at the stated location until at least one
+     year after the last time you distribute an Opaque copy (directly or
+     through your agents or retailers) of that edition to the public.
 
      It is requested, but not required, that you contact the authors of
-     the Document well before redistributing any large number of
-     copies, to give them a chance to provide you with an updated
-     version of the Document.
+     the Document well before redistributing any large number of copies,
+     to give them a chance to provide you with an updated version of the
+     Document.
 
   4. MODIFICATIONS
 
      You may copy and distribute a Modified Version of the Document
      under the conditions of sections 2 and 3 above, provided that you
-     release the Modified Version under precisely this License, with
-     the Modified Version filling the role of the Document, thus
-     licensing distribution and modification of the Modified Version to
-     whoever possesses a copy of it.  In addition, you must do these
-     things in the Modified Version:
+     release the Modified Version under precisely this License, with the
+     Modified Version filling the role of the Document, thus licensing
+     distribution and modification of the Modified Version to whoever
+     possesses a copy of it.  In addition, you must do these things in
+     the Modified Version:
 
        A. Use in the Title Page (and on the covers, if any) a title
-          distinct from that of the Document, and from those of
-          previous versions (which should, if there were any, be listed
-          in the History section of the Document).  You may use the
-          same title as a previous version if the original publisher of
-          that version gives permission.
+          distinct from that of the Document, and from those of previous
+          versions (which should, if there were any, be listed in the
+          History section of the Document).  You may use the same title
+          as a previous version if the original publisher of that
+          version gives permission.
 
        B. List on the Title Page, as authors, one or more persons or
           entities responsible for authorship of the modifications in
@@ -7470,31 +7356,30 @@ Appendix B GNU Free Documentation License
 
        I. Preserve the section Entitled "History", Preserve its Title,
           and add to it an item stating at least the title, year, new
-          authors, and publisher of the Modified Version as given on
-          the Title Page.  If there is no section Entitled "History" in
-          the Document, create one stating the title, year, authors,
-          and publisher of the Document as given on its Title Page,
-          then add an item describing the Modified Version as stated in
-          the previous sentence.
+          authors, and publisher of the Modified Version as given on the
+          Title Page.  If there is no section Entitled "History" in the
+          Document, create one stating the title, year, authors, and
+          publisher of the Document as given on its Title Page, then add
+          an item describing the Modified Version as stated in the
+          previous sentence.
 
        J. Preserve the network location, if any, given in the Document
           for public access to a Transparent copy of the Document, and
           likewise the network locations given in the Document for
-          previous versions it was based on.  These may be placed in
-          the "History" section.  You may omit a network location for a
-          work that was published at least four years before the
-          Document itself, or if the original publisher of the version
-          it refers to gives permission.
+          previous versions it was based on.  These may be placed in the
+          "History" section.  You may omit a network location for a work
+          that was published at least four years before the Document
+          itself, or if the original publisher of the version it refers
+          to gives permission.
 
        K. For any section Entitled "Acknowledgements" or "Dedications",
-          Preserve the Title of the section, and preserve in the
-          section all the substance and tone of each of the contributor
+          Preserve the Title of the section, and preserve in the section
+          all the substance and tone of each of the contributor
           acknowledgements and/or dedications given therein.
 
-       L. Preserve all the Invariant Sections of the Document,
-          unaltered in their text and in their titles.  Section numbers
-          or the equivalent are not considered part of the section
-          titles.
+       L. Preserve all the Invariant Sections of the Document, unaltered
+          in their text and in their titles.  Section numbers or the
+          equivalent are not considered part of the section titles.
 
        M. Delete any section Entitled "Endorsements".  Such a section
           may not be included in the Modified Version.
@@ -7507,11 +7392,11 @@ Appendix B GNU Free Documentation License
 
      If the Modified Version includes new front-matter sections or
      appendices that qualify as Secondary Sections and contain no
-     material copied from the Document, you may at your option
-     designate some or all of these sections as invariant.  To do this,
-     add their titles to the list of Invariant Sections in the Modified
-     Version's license notice.  These titles must be distinct from any
-     other section titles.
+     material copied from the Document, you may at your option designate
+     some or all of these sections as invariant.  To do this, add their
+     titles to the list of Invariant Sections in the Modified Version's
+     license notice.  These titles must be distinct from any other
+     section titles.
 
      You may add a section Entitled "Endorsements", provided it contains
      nothing but endorsements of your Modified Version by various
@@ -7520,15 +7405,15 @@ Appendix B GNU Free Documentation License
      definition of a standard.
 
      You may add a passage of up to five words as a Front-Cover Text,
-     and a passage of up to 25 words as a Back-Cover Text, to the end
-     of the list of Cover Texts in the Modified Version.  Only one
-     passage of Front-Cover Text and one of Back-Cover Text may be
-     added by (or through arrangements made by) any one entity.  If the
-     Document already includes a cover text for the same cover,
-     previously added by you or by arrangement made by the same entity
-     you are acting on behalf of, you may not add another; but you may
-     replace the old one, on explicit permission from the previous
-     publisher that added the old one.
+     and a passage of up to 25 words as a Back-Cover Text, to the end of
+     the list of Cover Texts in the Modified Version.  Only one passage
+     of Front-Cover Text and one of Back-Cover Text may be added by (or
+     through arrangements made by) any one entity.  If the Document
+     already includes a cover text for the same cover, previously added
+     by you or by arrangement made by the same entity you are acting on
+     behalf of, you may not add another; but you may replace the old
+     one, on explicit permission from the previous publisher that added
+     the old one.
 
      The author(s) and publisher(s) of the Document do not by this
      License give permission to use their names for publicity for or to
@@ -7538,8 +7423,8 @@ Appendix B GNU Free Documentation License
 
      You may combine the Document with other documents released under
      this License, under the terms defined in section 4 above for
-     modified versions, provided that you include in the combination
-     all of the Invariant Sections of all of the original documents,
+     modified versions, provided that you include in the combination all
+     of the Invariant Sections of all of the original documents,
      unmodified, and list them all as Invariant Sections of your
      combined work in its license notice, and that you preserve all
      their Warranty Disclaimers.
@@ -7566,20 +7451,20 @@ Appendix B GNU Free Documentation License
      documents released under this License, and replace the individual
      copies of this License in the various documents with a single copy
      that is included in the collection, provided that you follow the
-     rules of this License for verbatim copying of each of the
-     documents in all other respects.
+     rules of this License for verbatim copying of each of the documents
+     in all other respects.
 
      You may extract a single document from such a collection, and
      distribute it individually under this License, provided you insert
-     a copy of this License into the extracted document, and follow
-     this License in all other respects regarding verbatim copying of
-     that document.
+     a copy of this License into the extracted document, and follow this
+     License in all other respects regarding verbatim copying of that
+     document.
 
   7. AGGREGATION WITH INDEPENDENT WORKS
 
      A compilation of the Document or its derivatives with other
-     separate and independent documents or works, in or on a volume of
-     a storage or distribution medium, is called an "aggregate" if the
+     separate and independent documents or works, in or on a volume of a
+     storage or distribution medium, is called an "aggregate" if the
      copyright resulting from the compilation is not used to limit the
      legal rights of the compilation's users beyond what the individual
      works permit.  When the Document is included in an aggregate, this
@@ -7624,8 +7509,8 @@ Appendix B GNU Free Documentation License
 
      However, if you cease all violation of this License, then your
      license from a particular copyright holder is reinstated (a)
-     provisionally, unless and until the copyright holder explicitly
-     and finally terminates your license, and (b) permanently, if the
+     provisionally, unless and until the copyright holder explicitly and
+     finally terminates your license, and (b) permanently, if the
      copyright holder fails to notify you of the violation by some
      reasonable means prior to 60 days after the cessation.
 
@@ -7637,33 +7522,33 @@ Appendix B GNU Free Documentation License
      after your receipt of the notice.
 
      Termination of your rights under this section does not terminate
-     the licenses of parties who have received copies or rights from
-     you under this License.  If your rights have been terminated and
-     not permanently reinstated, receipt of a copy of some or all of
-     the same material does not give you any rights to use it.
+     the licenses of parties who have received copies or rights from you
+     under this License.  If your rights have been terminated and not
+     permanently reinstated, receipt of a copy of some or all of the
+     same material does not give you any rights to use it.
 
- 10. FUTURE REVISIONS OF THIS LICENSE
+  10. FUTURE REVISIONS OF THIS LICENSE
 
      The Free Software Foundation may publish new, revised versions of
      the GNU Free Documentation License from time to time.  Such new
      versions will be similar in spirit to the present version, but may
      differ in detail to address new problems or concerns.  See
-     `http://www.gnu.org/copyleft/'.
+     <http://www.gnu.org/copyleft/>.
 
      Each version of the License is given a distinguishing version
      number.  If the Document specifies that a particular numbered
      version of this License "or any later version" applies to it, you
      have the option of following the terms and conditions either of
      that specified version or of any later version that has been
-     published (not as a draft) by the Free Software Foundation.  If
-     the Document does not specify a version number of this License,
-     you may choose any version ever published (not as a draft) by the
-     Free Software Foundation.  If the Document specifies that a proxy
-     can decide which future versions of this License can be used, that
+     published (not as a draft) by the Free Software Foundation.  If the
+     Document does not specify a version number of this License, you may
+     choose any version ever published (not as a draft) by the Free
+     Software Foundation.  If the Document specifies that a proxy can
+     decide which future versions of this License can be used, that
      proxy's public statement of acceptance of a version permanently
      authorizes you to choose that version for the Document.
 
- 11. RELICENSING
+  11. RELICENSING
 
      "Massive Multiauthor Collaboration Site" (or "MMC Site") means any
      World Wide Web server that publishes copyrightable works and also
@@ -7693,7 +7578,6 @@ Appendix B GNU Free Documentation License
      site under CC-BY-SA on the same site at any time before August 1,
      2009, provided the MMC is eligible for relicensing.
 
-
 ADDENDUM: How to use this License for your documents
 ====================================================
 
@@ -7710,7 +7594,7 @@ notices just after the title page:
        Free Documentation License''.
 
    If you have Invariant Sections, Front-Cover Texts and Back-Cover
-Texts, replace the "with...Texts." line with this:
+Texts, replace the "with...Texts."  line with this:
 
          with the Invariant Sections being LIST THEIR TITLES, with
          the Front-Cover Texts being LIST, and with the Back-Cover Texts
@@ -7721,9 +7605,9 @@ combination of the three, merge those two alternatives to suit the
 situation.
 
    If your document contains nontrivial examples of program code, we
-recommend releasing these examples in parallel under your choice of
-free software license, such as the GNU General Public License, to
-permit their use in free software.
+recommend releasing these examples in parallel under your choice of free
+software license, such as the GNU General Public License, to permit
+their use in free software.
 
 
 File: ld.info,  Node: LD Index,  Prev: GNU Free Documentation License,  Up: Top
@@ -7735,341 +7619,341 @@ LD Index
 * Menu:
 
 * ":                                     Symbols.            (line    6)
-* -(:                                    Options.            (line  823)
-* --accept-unknown-input-arch:           Options.            (line  841)
-* --add-needed:                          Options.            (line  869)
-* --add-stdcall-alias:                   Options.            (line 1811)
-* --allow-multiple-definition:           Options.            (line 1157)
-* --allow-shlib-undefined:               Options.            (line 1163)
-* --architecture=ARCH:                   Options.            (line  123)
-* --as-needed:                           Options.            (line  851)
-* --audit AUDITLIB:                      Options.            (line  112)
-* --auxiliary=NAME:                      Options.            (line  255)
-* --bank-window:                         Options.            (line 2256)
-* --base-file:                           Options.            (line 1816)
+* -(:                                    Options.            (line  814)
+* --accept-unknown-input-arch:           Options.            (line  832)
+* --add-needed:                          Options.            (line  859)
+* --add-stdcall-alias:                   Options.            (line 1790)
+* --allow-multiple-definition:           Options.            (line 1146)
+* --allow-shlib-undefined:               Options.            (line 1152)
+* --architecture=ARCH:                   Options.            (line  122)
+* --as-needed:                           Options.            (line  842)
+* --audit AUDITLIB:                      Options.            (line  111)
+* --auxiliary=NAME:                      Options.            (line  254)
+* --bank-window:                         Options.            (line 2232)
+* --base-file:                           Options.            (line 1795)
 * --be8:                                 ARM.                (line   28)
 * --bss-plt:                             PowerPC ELF32.      (line   16)
-* --build-id:                            Options.            (line 1773)
-* --build-id=STYLE:                      Options.            (line 1773)
-* --check-sections:                      Options.            (line  955)
-* --cmse-implib:                         ARM.                (line  236)
-* --compress-debug-sections=none:        Options.            (line 1731)
-* --compress-debug-sections=zlib:        Options.            (line 1731)
-* --compress-debug-sections=zlib-gabi:   Options.            (line 1731)
-* --compress-debug-sections=zlib-gnu:    Options.            (line 1731)
-* --copy-dt-needed-entries:              Options.            (line  967)
-* --cref:                                Options.            (line  987)
-* --default-imported-symver:             Options.            (line 1200)
-* --default-script=SCRIPT:               Options.            (line  562)
-* --default-symver:                      Options.            (line 1196)
-* --defsym=SYMBOL=EXP:                   Options.            (line 1016)
-* --demangle[=STYLE]:                    Options.            (line 1028)
-* --depaudit AUDITLIB:                   Options.            (line  177)
-* --disable-auto-image-base:             Options.            (line 1994)
-* --disable-auto-import:                 Options.            (line 2129)
-* --disable-large-address-aware:         Options.            (line 1942)
-* --disable-long-section-names:          Options.            (line 1826)
-* --disable-new-dtags:                   Options.            (line 1707)
-* --disable-runtime-pseudo-reloc:        Options.            (line 2142)
-* --disable-stdcall-fixup:               Options.            (line 1848)
-* --discard-all:                         Options.            (line  647)
-* --discard-locals:                      Options.            (line  651)
-* --dll:                                 Options.            (line 1821)
-* --dll-search-prefix:                   Options.            (line 2000)
+* --build-id:                            Options.            (line 1752)
+* --build-id=STYLE:                      Options.            (line 1752)
+* --check-sections:                      Options.            (line  944)
+* --cmse-implib:                         ARM.                (line  234)
+* --compress-debug-sections=none:        Options.            (line 1710)
+* --compress-debug-sections=zlib:        Options.            (line 1710)
+* --compress-debug-sections=zlib-gabi:   Options.            (line 1710)
+* --compress-debug-sections=zlib-gnu:    Options.            (line 1710)
+* --copy-dt-needed-entries:              Options.            (line  956)
+* --cref:                                Options.            (line  976)
+* --default-imported-symver:             Options.            (line 1188)
+* --default-script=SCRIPT:               Options.            (line  556)
+* --default-symver:                      Options.            (line 1184)
+* --defsym=SYMBOL=EXP:                   Options.            (line 1005)
+* --demangle[=STYLE]:                    Options.            (line 1017)
+* --depaudit AUDITLIB:                   Options.            (line  176)
+* --disable-auto-image-base:             Options.            (line 1972)
+* --disable-auto-import:                 Options.            (line 2106)
+* --disable-large-address-aware:         Options.            (line 1920)
+* --disable-long-section-names:          Options.            (line 1805)
+* --disable-new-dtags:                   Options.            (line 1686)
+* --disable-runtime-pseudo-reloc:        Options.            (line 2119)
+* --disable-stdcall-fixup:               Options.            (line 1827)
+* --discard-all:                         Options.            (line  641)
+* --discard-locals:                      Options.            (line  645)
+* --dll:                                 Options.            (line 1800)
+* --dll-search-prefix:                   Options.            (line 1978)
 * --dotsyms:                             PowerPC64 ELF64.    (line   33)
-* --dsbt-index:                          Options.            (line 2233)
-* --dsbt-size:                           Options.            (line 2228)
-* --dynamic-linker=FILE:                 Options.            (line 1041)
-* --dynamic-list-cpp-new:                Options.            (line  947)
-* --dynamic-list-cpp-typeinfo:           Options.            (line  951)
-* --dynamic-list-data:                   Options.            (line  944)
-* --dynamic-list=DYNAMIC-LIST-FILE:      Options.            (line  931)
-* --dynamicbase:                         Options.            (line 2182)
-* --eh-frame-hdr:                        Options.            (line 1696)
-* --emit-relocs:                         Options.            (line  497)
+* --dsbt-index:                          Options.            (line 2210)
+* --dsbt-size:                           Options.            (line 2205)
+* --dynamic-linker=FILE:                 Options.            (line 1030)
+* --dynamic-list-cpp-new:                Options.            (line  936)
+* --dynamic-list-cpp-typeinfo:           Options.            (line  940)
+* --dynamic-list-data:                   Options.            (line  933)
+* --dynamic-list=DYNAMIC-LIST-FILE:      Options.            (line  920)
+* --dynamicbase:                         Options.            (line 2159)
+* --eh-frame-hdr:                        Options.            (line 1675)
+* --emit-relocs:                         Options.            (line  492)
 * --emit-stack-syms:                     SPU ELF.            (line   46)
-* --emit-stub-syms <1>:                  SPU ELF.            (line   15)
-* --emit-stub-syms <2>:                  PowerPC ELF32.      (line   47)
-* --emit-stub-syms:                      PowerPC64 ELF64.    (line   29)
-* --enable-auto-image-base:              Options.            (line 1985)
-* --enable-auto-import:                  Options.            (line 2009)
-* --enable-extra-pe-debug:               Options.            (line 2147)
-* --enable-long-section-names:           Options.            (line 1826)
-* --enable-new-dtags:                    Options.            (line 1707)
-* --enable-runtime-pseudo-reloc:         Options.            (line 2134)
-* --enable-stdcall-fixup:                Options.            (line 1848)
-* --entry=ENTRY:                         Options.            (line  187)
-* --error-unresolved-symbols:            Options.            (line 1649)
-* --exclude-all-symbols:                 Options.            (line 1902)
-* --exclude-libs:                        Options.            (line  197)
-* --exclude-modules-for-implib:          Options.            (line  208)
-* --exclude-symbols:                     Options.            (line 1896)
-* --export-all-symbols:                  Options.            (line 1872)
-* --export-dynamic:                      Options.            (line  221)
+* --emit-stub-syms:                      PowerPC ELF32.      (line   47)
+* --emit-stub-syms <1>:                  PowerPC64 ELF64.    (line   29)
+* --emit-stub-syms <2>:                  SPU ELF.            (line   15)
+* --enable-auto-image-base:              Options.            (line 1963)
+* --enable-auto-import:                  Options.            (line 1987)
+* --enable-extra-pe-debug:               Options.            (line 2124)
+* --enable-long-section-names:           Options.            (line 1805)
+* --enable-new-dtags:                    Options.            (line 1686)
+* --enable-runtime-pseudo-reloc:         Options.            (line 2111)
+* --enable-stdcall-fixup:                Options.            (line 1827)
+* --entry=ENTRY:                         Options.            (line  186)
+* --error-unresolved-symbols:            Options.            (line 1628)
+* --exclude-all-symbols:                 Options.            (line 1880)
+* --exclude-libs:                        Options.            (line  196)
+* --exclude-modules-for-implib:          Options.            (line  207)
+* --exclude-symbols:                     Options.            (line 1874)
+* --export-all-symbols:                  Options.            (line 1850)
+* --export-dynamic:                      Options.            (line  220)
 * --extra-overlay-stubs:                 SPU ELF.            (line   19)
-* --fatal-warnings:                      Options.            (line 1054)
-* --file-alignment:                      Options.            (line 1906)
-* --filter=NAME:                         Options.            (line  276)
-* --fix-arm1176:                         ARM.                (line  112)
-* --fix-cortex-a53-835769:               ARM.                (line  213)
-* --fix-cortex-a8:                       ARM.                (line  204)
-* --fix-stm32l4xx-629360:                ARM.                (line  121)
-* --fix-v4bx:                            ARM.                (line   50)
-* --fix-v4bx-interworking:               ARM.                (line   63)
-* --force-dynamic:                       Options.            (line  506)
-* --force-exe-suffix:                    Options.            (line 1059)
-* --forceinteg:                          Options.            (line 2187)
-* --format=FORMAT:                       Options.            (line  134)
+* --fatal-warnings:                      Options.            (line 1043)
+* --file-alignment:                      Options.            (line 1884)
+* --filter=NAME:                         Options.            (line  275)
+* --fix-arm1176:                         ARM.                (line  111)
+* --fix-cortex-a53-835769:               ARM.                (line  211)
+* --fix-cortex-a8:                       ARM.                (line  202)
+* --fix-stm32l4xx-629360:                ARM.                (line  120)
+* --fix-v4bx:                            ARM.                (line   48)
+* --fix-v4bx-interworking:               ARM.                (line   61)
+* --force-dynamic:                       Options.            (line  501)
+* --force-exe-suffix:                    Options.            (line 1048)
+* --forceinteg:                          Options.            (line 2164)
+* --format=FORMAT:                       Options.            (line  133)
 * --format=VERSION:                      TI COFF.            (line    6)
-* --gc-keep-exported:                    Options.            (line 1102)
-* --gc-sections:                         Options.            (line 1069)
-* --got:                                 Options.            (line 2269)
+* --gc-keep-exported:                    Options.            (line 1091)
+* --gc-sections:                         Options.            (line 1058)
+* --got:                                 Options.            (line 2244)
 * --got=TYPE:                            M68K.               (line    6)
-* --gpsize=VALUE:                        Options.            (line  309)
-* --hash-size=NUMBER:                    Options.            (line 1717)
-* --hash-style=STYLE:                    Options.            (line 1725)
-* --heap:                                Options.            (line 1912)
-* --help:                                Options.            (line 1130)
-* --high-entropy-va:                     Options.            (line 2178)
-* --ignore-branch-isa <1>:               Options.            (line 2291)
-* --ignore-branch-isa:                   MIPS.               (line   13)
-* --image-base:                          Options.            (line 1919)
-* --in-implib=FILE:                      ARM.                (line  241)
-* --insert-timestamp:                    Options.            (line 2210)
-* --insn32 <1>:                          Options.            (line 2282)
-* --insn32:                              MIPS.               (line    6)
-* --just-symbols=FILE:                   Options.            (line  529)
-* --kill-at:                             Options.            (line 1928)
-* --large-address-aware:                 Options.            (line 1933)
-* --ld-generated-unwind-info:            Options.            (line 1702)
-* --leading-underscore:                  Options.            (line 1866)
-* --library-path=DIR:                    Options.            (line  367)
-* --library=NAMESPEC:                    Options.            (line  334)
+* --gpsize=VALUE:                        Options.            (line  307)
+* --hash-size=NUMBER:                    Options.            (line 1696)
+* --hash-style=STYLE:                    Options.            (line 1704)
+* --heap:                                Options.            (line 1890)
+* --help:                                Options.            (line 1119)
+* --high-entropy-va:                     Options.            (line 2155)
+* --ignore-branch-isa:                   Options.            (line 2265)
+* --ignore-branch-isa <1>:               MIPS.               (line   13)
+* --image-base:                          Options.            (line 1897)
+* --in-implib=FILE:                      ARM.                (line  239)
+* --insert-timestamp:                    Options.            (line 2187)
+* --insn32:                              Options.            (line 2256)
+* --insn32 <1>:                          MIPS.               (line    6)
+* --just-symbols=FILE:                   Options.            (line  523)
+* --kill-at:                             Options.            (line 1906)
+* --large-address-aware:                 Options.            (line 1911)
+* --ld-generated-unwind-info:            Options.            (line 1681)
+* --leading-underscore:                  Options.            (line 1844)
+* --library-path=DIR:                    Options.            (line  365)
+* --library=NAMESPEC:                    Options.            (line  332)
 * --local-store=lo:hi:                   SPU ELF.            (line   24)
-* --long-plt:                            ARM.                (line  224)
-* --major-image-version:                 Options.            (line 1949)
-* --major-os-version:                    Options.            (line 1954)
-* --major-subsystem-version:             Options.            (line 1958)
-* --merge-exidx-entries:                 ARM.                (line  221)
-* --minor-image-version:                 Options.            (line 1963)
-* --minor-os-version:                    Options.            (line 1968)
-* --minor-subsystem-version:             Options.            (line 1972)
-* --mri-script=MRI-CMDFILE:              Options.            (line  158)
+* --long-plt:                            ARM.                (line  222)
+* --major-image-version:                 Options.            (line 1927)
+* --major-os-version:                    Options.            (line 1932)
+* --major-subsystem-version:             Options.            (line 1936)
+* --merge-exidx-entries:                 ARM.                (line  219)
+* --minor-image-version:                 Options.            (line 1941)
+* --minor-os-version:                    Options.            (line 1946)
+* --minor-subsystem-version:             Options.            (line 1950)
+* --mri-script=MRI-CMDFILE:              Options.            (line  157)
 * --multi-subspace:                      HPPA ELF32.         (line    6)
-* --nmagic:                              Options.            (line  439)
-* --no-accept-unknown-input-arch:        Options.            (line  841)
-* --no-add-needed:                       Options.            (line  869)
-* --no-allow-shlib-undefined:            Options.            (line 1163)
-* --no-apply-dynamic-relocs:             ARM.                (line  228)
-* --no-as-needed:                        Options.            (line  851)
-* --no-bind:                             Options.            (line 2201)
-* --no-check-sections:                   Options.            (line  955)
-* --no-copy-dt-needed-entries:           Options.            (line  967)
-* --no-define-common:                    Options.            (line 1000)
-* --no-demangle:                         Options.            (line 1028)
+* --nmagic:                              Options.            (line  434)
+* --no-accept-unknown-input-arch:        Options.            (line  832)
+* --no-add-needed:                       Options.            (line  859)
+* --no-allow-shlib-undefined:            Options.            (line 1152)
+* --no-apply-dynamic-relocs:             ARM.                (line  226)
+* --no-as-needed:                        Options.            (line  842)
+* --no-bind:                             Options.            (line 2178)
+* --no-check-sections:                   Options.            (line  944)
+* --no-copy-dt-needed-entries:           Options.            (line  956)
+* --no-define-common:                    Options.            (line  989)
+* --no-demangle:                         Options.            (line 1017)
 * --no-dotsyms:                          PowerPC64 ELF64.    (line   33)
-* --no-dynamic-linker:                   Options.            (line 1048)
-* --no-eh-frame-hdr:                     Options.            (line 1696)
-* --no-enum-size-warning:                ARM.                (line  159)
-* --no-export-dynamic:                   Options.            (line  221)
-* --no-fatal-warnings:                   Options.            (line 1054)
-* --no-fix-arm1176:                      ARM.                (line  112)
-* --no-fix-cortex-a53-835769:            ARM.                (line  213)
-* --no-fix-cortex-a8:                    ARM.                (line  204)
-* --no-gc-sections:                      Options.            (line 1069)
-* --no-ignore-branch-isa <1>:            Options.            (line 2292)
-* --no-ignore-branch-isa:                MIPS.               (line   13)
+* --no-dynamic-linker:                   Options.            (line 1037)
+* --no-eh-frame-hdr:                     Options.            (line 1675)
+* --no-enum-size-warning:                ARM.                (line  158)
+* --no-export-dynamic:                   Options.            (line  220)
+* --no-fatal-warnings:                   Options.            (line 1043)
+* --no-fix-arm1176:                      ARM.                (line  111)
+* --no-fix-cortex-a53-835769:            ARM.                (line  211)
+* --no-fix-cortex-a8:                    ARM.                (line  202)
+* --no-gc-sections:                      Options.            (line 1058)
+* --no-ignore-branch-isa:                Options.            (line 2266)
+* --no-ignore-branch-isa <1>:            MIPS.               (line   13)
+* --no-insn32:                           Options.            (line 2257)
 * --no-insn32 <1>:                       MIPS.               (line    6)
-* --no-insn32:                           Options.            (line 2283)
-* --no-isolation:                        Options.            (line 2194)
-* --no-keep-memory:                      Options.            (line 1142)
-* --no-leading-underscore:               Options.            (line 1866)
-* --no-merge-exidx-entries <1>:          Options.            (line 2240)
-* --no-merge-exidx-entries:              ARM.                (line  221)
-* --no-multi-toc:                        PowerPC64 ELF64.    (line   97)
-* --no-omagic:                           Options.            (line  454)
-* --no-opd-optimize:                     PowerPC64 ELF64.    (line   71)
+* --no-isolation:                        Options.            (line 2171)
+* --no-keep-memory:                      Options.            (line 1131)
+* --no-leading-underscore:               Options.            (line 1844)
+* --no-merge-exidx-entries:              Options.            (line 2217)
+* --no-merge-exidx-entries <1>:          ARM.                (line  219)
+* --no-multi-toc:                        PowerPC64 ELF64.    (line   96)
+* --no-omagic:                           Options.            (line  449)
+* --no-opd-optimize:                     PowerPC64 ELF64.    (line   70)
 * --no-overlays:                         SPU ELF.            (line    9)
-* --no-plt-align:                        PowerPC64 ELF64.    (line  119)
-* --no-plt-static-chain:                 PowerPC64 ELF64.    (line  127)
-* --no-plt-thread-safe:                  PowerPC64 ELF64.    (line  133)
-* --no-print-gc-sections:                Options.            (line 1093)
+* --no-plt-align:                        PowerPC64 ELF64.    (line  118)
+* --no-plt-static-chain:                 PowerPC64 ELF64.    (line  126)
+* --no-plt-thread-safe:                  PowerPC64 ELF64.    (line  132)
+* --no-print-gc-sections:                Options.            (line 1082)
 * --no-save-restore-funcs:               PowerPC64 ELF64.    (line   44)
-* --no-seh:                              Options.            (line 2197)
-* --no-tls-get-addr-optimize:            PowerPC64 ELF64.    (line   57)
-* --no-tls-optimize <1>:                 PowerPC64 ELF64.    (line   52)
+* --no-seh:                              Options.            (line 2174)
+* --no-tls-get-addr-optimize:            PowerPC64 ELF64.    (line   56)
 * --no-tls-optimize:                     PowerPC ELF32.      (line   51)
-* --no-toc-optimize:                     PowerPC64 ELF64.    (line   83)
-* --no-toc-sort:                         PowerPC64 ELF64.    (line  109)
-* --no-trampoline:                       Options.            (line 2250)
-* --no-undefined:                        Options.            (line 1149)
-* --no-undefined-version:                Options.            (line 1191)
-* --no-warn-mismatch:                    Options.            (line 1204)
-* --no-warn-search-mismatch:             Options.            (line 1213)
-* --no-wchar-size-warning:               ARM.                (line  166)
-* --no-whole-archive:                    Options.            (line 1217)
-* --noinhibit-exec:                      Options.            (line 1221)
-* --non-overlapping-opd:                 PowerPC64 ELF64.    (line   77)
-* --nxcompat:                            Options.            (line 2190)
-* --oformat=OUTPUT-FORMAT:               Options.            (line 1233)
-* --omagic:                              Options.            (line  445)
-* --orphan-handling=MODE:                Options.            (line  606)
-* --out-implib:                          Options.            (line 1246)
-* --output-def:                          Options.            (line 1977)
-* --output=OUTPUT:                       Options.            (line  460)
-* --pic-executable:                      Options.            (line 1255)
-* --pic-veneer:                          ARM.                (line  172)
-* --plt-align:                           PowerPC64 ELF64.    (line  119)
-* --plt-static-chain:                    PowerPC64 ELF64.    (line  127)
-* --plt-thread-safe:                     PowerPC64 ELF64.    (line  133)
+* --no-tls-optimize <1>:                 PowerPC64 ELF64.    (line   51)
+* --no-toc-optimize:                     PowerPC64 ELF64.    (line   82)
+* --no-toc-sort:                         PowerPC64 ELF64.    (line  108)
+* --no-trampoline:                       Options.            (line 2226)
+* --no-undefined:                        Options.            (line 1138)
+* --no-undefined-version:                Options.            (line 1179)
+* --no-warn-mismatch:                    Options.            (line 1192)
+* --no-warn-search-mismatch:             Options.            (line 1201)
+* --no-wchar-size-warning:               ARM.                (line  165)
+* --no-whole-archive:                    Options.            (line 1205)
+* --noinhibit-exec:                      Options.            (line 1209)
+* --non-overlapping-opd:                 PowerPC64 ELF64.    (line   76)
+* --nxcompat:                            Options.            (line 2167)
+* --oformat=OUTPUT-FORMAT:               Options.            (line 1220)
+* --omagic:                              Options.            (line  440)
+* --orphan-handling=MODE:                Options.            (line  600)
+* --out-implib:                          Options.            (line 1233)
+* --output-def:                          Options.            (line 1955)
+* --output=OUTPUT:                       Options.            (line  455)
+* --pic-executable:                      Options.            (line 1242)
+* --pic-veneer:                          ARM.                (line  171)
+* --plt-align:                           PowerPC64 ELF64.    (line  118)
+* --plt-static-chain:                    PowerPC64 ELF64.    (line  126)
+* --plt-thread-safe:                     PowerPC64 ELF64.    (line  132)
 * --plugin:                              SPU ELF.            (line    6)
-* --pop-state:                           Options.            (line  494)
-* --print-gc-sections:                   Options.            (line 1093)
-* --print-map:                           Options.            (line  402)
-* --print-memory-usage:                  Options.            (line 1118)
-* --print-output-format:                 Options.            (line 1112)
-* --push-state:                          Options.            (line  476)
-* --reduce-memory-overheads:             Options.            (line 1759)
-* --relax:                               Options.            (line 1271)
-* --relax on i960:                       i960.               (line   31)
+* --pop-state:                           Options.            (line  489)
+* --print-gc-sections:                   Options.            (line 1082)
+* --print-map:                           Options.            (line  400)
+* --print-memory-usage:                  Options.            (line 1107)
+* --print-output-format:                 Options.            (line 1101)
+* --push-state:                          Options.            (line  471)
+* --reduce-memory-overheads:             Options.            (line 1738)
+* --relax:                               Options.            (line 1258)
+* --relax on i960:                       i960.               (line   32)
 * --relax on Nios II:                    Nios II.            (line    6)
 * --relax on PowerPC:                    PowerPC ELF32.      (line    6)
 * --relax on Xtensa:                     Xtensa.             (line   27)
-* --relocatable:                         Options.            (line  510)
-* --require-defined=SYMBOL:              Options.            (line  588)
-* --retain-symbols-file=FILENAME:        Options.            (line 1297)
+* --relocatable:                         Options.            (line  505)
+* --require-defined=SYMBOL:              Options.            (line  582)
+* --retain-symbols-file=FILENAME:        Options.            (line 1284)
 * --save-restore-funcs:                  PowerPC64 ELF64.    (line   44)
-* --script=SCRIPT:                       Options.            (line  553)
+* --script=SCRIPT:                       Options.            (line  547)
 * --sdata-got:                           PowerPC ELF32.      (line   33)
-* --section-alignment:                   Options.            (line 2152)
-* --section-start=SECTIONNAME=ORG:       Options.            (line 1462)
+* --section-alignment:                   Options.            (line 2129)
+* --section-start=SECTIONNAME=ORG:       Options.            (line 1442)
 * --secure-plt:                          PowerPC ELF32.      (line   26)
-* --sort-common:                         Options.            (line 1404)
-* --sort-section=alignment:              Options.            (line 1419)
-* --sort-section=name:                   Options.            (line 1415)
-* --split-by-file:                       Options.            (line 1423)
-* --split-by-reloc:                      Options.            (line 1428)
-* --stack:                               Options.            (line 2158)
+* --sort-common:                         Options.            (line 1384)
+* --sort-section=alignment:              Options.            (line 1399)
+* --sort-section=name:                   Options.            (line 1395)
+* --split-by-file:                       Options.            (line 1403)
+* --split-by-reloc:                      Options.            (line 1408)
+* --stack:                               Options.            (line 2135)
 * --stack-analysis:                      SPU ELF.            (line   29)
-* --stats:                               Options.            (line 1441)
-* --strip-all:                           Options.            (line  540)
-* --strip-debug:                         Options.            (line  544)
+* --stats:                               Options.            (line 1421)
+* --strip-all:                           Options.            (line  534)
+* --strip-debug:                         Options.            (line  538)
 * --stub-group-size:                     PowerPC64 ELF64.    (line    6)
-* --stub-group-size=N <1>:               ARM.                (line  177)
-* --stub-group-size=N:                   HPPA ELF32.         (line   12)
-* --subsystem:                           Options.            (line 2165)
+* --stub-group-size=N:                   ARM.                (line  176)
+* --stub-group-size=N <1>:               HPPA ELF32.         (line   12)
+* --subsystem:                           Options.            (line 2142)
 * --support-old-code:                    ARM.                (line    6)
-* --sysroot=DIRECTORY:                   Options.            (line 1445)
-* --target-help:                         Options.            (line 1134)
+* --sysroot=DIRECTORY:                   Options.            (line 1425)
+* --target-help:                         Options.            (line 1123)
 * --target1-abs:                         ARM.                (line   33)
 * --target1-rel:                         ARM.                (line   33)
 * --target2=TYPE:                        ARM.                (line   38)
 * --thumb-entry=ENTRY:                   ARM.                (line   17)
-* --tls-get-addr-optimize:               PowerPC64 ELF64.    (line   57)
-* --trace:                               Options.            (line  549)
-* --trace-symbol=SYMBOL:                 Options.            (line  657)
-* --traditional-format:                  Options.            (line 1450)
-* --tsaware:                             Options.            (line 2207)
-* --undefined=SYMBOL:                    Options.            (line  575)
-* --unique[=SECTION]:                    Options.            (line  632)
-* --unresolved-symbols:                  Options.            (line 1492)
-* --use-blx:                             ARM.                (line   75)
+* --tls-get-addr-optimize:               PowerPC64 ELF64.    (line   56)
+* --trace:                               Options.            (line  543)
+* --trace-symbol=SYMBOL:                 Options.            (line  651)
+* --traditional-format:                  Options.            (line 1430)
+* --tsaware:                             Options.            (line 2184)
+* --undefined=SYMBOL:                    Options.            (line  569)
+* --unique[=SECTION]:                    Options.            (line  626)
+* --unresolved-symbols:                  Options.            (line 1472)
+* --use-blx:                             ARM.                (line   73)
 * --use-nul-prefixed-import-tables:      ARM.                (line   23)
-* --verbose[=NUMBER]:                    Options.            (line 1521)
-* --version:                             Options.            (line  641)
-* --version-script=VERSION-SCRIPTFILE:   Options.            (line 1529)
-* --vfp11-denorm-fix:                    ARM.                (line   84)
-* --warn-alternate-em:                   Options.            (line 1641)
-* --warn-common:                         Options.            (line 1540)
-* --warn-constructors:                   Options.            (line 1608)
-* --warn-multiple-gp:                    Options.            (line 1613)
-* --warn-once:                           Options.            (line 1627)
-* --warn-section-align:                  Options.            (line 1631)
-* --warn-shared-textrel:                 Options.            (line 1638)
-* --warn-unresolved-symbols:             Options.            (line 1644)
-* --wdmdriver:                           Options.            (line 2204)
-* --whole-archive:                       Options.            (line 1653)
-* --wrap=SYMBOL:                         Options.            (line 1667)
-* -A ARCH:                               Options.            (line  122)
-* -a KEYWORD:                            Options.            (line  105)
-* -assert KEYWORD:                       Options.            (line  876)
-* -b FORMAT:                             Options.            (line  134)
-* -Bdynamic:                             Options.            (line  879)
-* -Bgroup:                               Options.            (line  889)
-* -Bshareable:                           Options.            (line 1397)
-* -Bstatic:                              Options.            (line  896)
-* -Bsymbolic:                            Options.            (line  911)
-* -Bsymbolic-functions:                  Options.            (line  922)
-* -c MRI-CMDFILE:                        Options.            (line  158)
-* -call_shared:                          Options.            (line  879)
-* -d:                                    Options.            (line  168)
-* -dc:                                   Options.            (line  168)
-* -dn:                                   Options.            (line  896)
-* -dp:                                   Options.            (line  168)
-* -dT SCRIPT:                            Options.            (line  562)
-* -dy:                                   Options.            (line  879)
-* -E:                                    Options.            (line  221)
-* -e ENTRY:                              Options.            (line  187)
-* -EB:                                   Options.            (line  248)
-* -EL:                                   Options.            (line  251)
-* -F NAME:                               Options.            (line  276)
-* -f NAME:                               Options.            (line  255)
-* -fini=NAME:                            Options.            (line  300)
-* -g:                                    Options.            (line  306)
-* -G VALUE:                              Options.            (line  309)
-* -h NAME:                               Options.            (line  316)
-* -i:                                    Options.            (line  325)
-* -IFILE:                                Options.            (line 1041)
-* -init=NAME:                            Options.            (line  328)
-* -L DIR:                                Options.            (line  367)
-* -l NAMESPEC:                           Options.            (line  334)
-* -M:                                    Options.            (line  402)
-* -m EMULATION:                          Options.            (line  392)
-* -Map=MAPFILE:                          Options.            (line 1138)
-* -N:                                    Options.            (line  445)
-* -n:                                    Options.            (line  439)
-* -no-relax:                             Options.            (line 1271)
-* -non_shared:                           Options.            (line  896)
-* -nostdlib:                             Options.            (line 1227)
-* -O LEVEL:                              Options.            (line  466)
-* -o OUTPUT:                             Options.            (line  460)
-* -P AUDITLIB:                           Options.            (line  177)
-* -pie:                                  Options.            (line 1255)
-* -q:                                    Options.            (line  497)
-* -qmagic:                               Options.            (line 1265)
-* -Qy:                                   Options.            (line 1268)
-* -r:                                    Options.            (line  510)
-* -R FILE:                               Options.            (line  529)
-* -rpath-link=DIR:                       Options.            (line 1333)
-* -rpath=DIR:                            Options.            (line 1311)
-* -S:                                    Options.            (line  544)
-* -s:                                    Options.            (line  540)
-* -shared:                               Options.            (line 1397)
-* -soname=NAME:                          Options.            (line  316)
-* -static:                               Options.            (line  896)
-* -t:                                    Options.            (line  549)
-* -T SCRIPT:                             Options.            (line  553)
-* -Tbss=ORG:                             Options.            (line 1471)
-* -Tdata=ORG:                            Options.            (line 1471)
-* -Tldata-segment=ORG:                   Options.            (line 1487)
-* -Trodata-segment=ORG:                  Options.            (line 1481)
-* -Ttext-segment=ORG:                    Options.            (line 1477)
-* -Ttext=ORG:                            Options.            (line 1471)
-* -u SYMBOL:                             Options.            (line  575)
-* -Ur:                                   Options.            (line  596)
-* -V:                                    Options.            (line  641)
-* -v:                                    Options.            (line  641)
-* -X:                                    Options.            (line  651)
-* -x:                                    Options.            (line  647)
-* -Y PATH:                               Options.            (line  666)
-* -y SYMBOL:                             Options.            (line  657)
-* -z defs:                               Options.            (line 1149)
-* -z KEYWORD:                            Options.            (line  670)
-* -z muldefs:                            Options.            (line 1157)
+* --verbose[=NUMBER]:                    Options.            (line 1501)
+* --version:                             Options.            (line  635)
+* --version-script=VERSION-SCRIPTFILE:   Options.            (line 1509)
+* --vfp11-denorm-fix:                    ARM.                (line   82)
+* --warn-alternate-em:                   Options.            (line 1620)
+* --warn-common:                         Options.            (line 1519)
+* --warn-constructors:                   Options.            (line 1587)
+* --warn-multiple-gp:                    Options.            (line 1592)
+* --warn-once:                           Options.            (line 1606)
+* --warn-section-align:                  Options.            (line 1610)
+* --warn-shared-textrel:                 Options.            (line 1617)
+* --warn-unresolved-symbols:             Options.            (line 1623)
+* --wdmdriver:                           Options.            (line 2181)
+* --whole-archive:                       Options.            (line 1632)
+* --wrap=SYMBOL:                         Options.            (line 1646)
+* -A ARCH:                               Options.            (line  121)
+* -a KEYWORD:                            Options.            (line  104)
+* -assert KEYWORD:                       Options.            (line  866)
+* -b FORMAT:                             Options.            (line  133)
+* -Bdynamic:                             Options.            (line  869)
+* -Bgroup:                               Options.            (line  879)
+* -Bshareable:                           Options.            (line 1377)
+* -Bstatic:                              Options.            (line  886)
+* -Bsymbolic:                            Options.            (line  900)
+* -Bsymbolic-functions:                  Options.            (line  911)
+* -c MRI-CMDFILE:                        Options.            (line  157)
+* -call_shared:                          Options.            (line  869)
+* -d:                                    Options.            (line  167)
+* -dc:                                   Options.            (line  167)
+* -dn:                                   Options.            (line  886)
+* -dp:                                   Options.            (line  167)
+* -dT SCRIPT:                            Options.            (line  556)
+* -dy:                                   Options.            (line  869)
+* -E:                                    Options.            (line  220)
+* -e ENTRY:                              Options.            (line  186)
+* -EB:                                   Options.            (line  247)
+* -EL:                                   Options.            (line  250)
+* -f NAME:                               Options.            (line  254)
+* -F NAME:                               Options.            (line  275)
+* -fini=NAME:                            Options.            (line  298)
+* -g:                                    Options.            (line  304)
+* -G VALUE:                              Options.            (line  307)
+* -h NAME:                               Options.            (line  314)
+* -i:                                    Options.            (line  323)
+* -IFILE:                                Options.            (line 1030)
+* -init=NAME:                            Options.            (line  326)
+* -L DIR:                                Options.            (line  365)
+* -l NAMESPEC:                           Options.            (line  332)
+* -M:                                    Options.            (line  400)
+* -m EMULATION:                          Options.            (line  390)
+* -Map=MAPFILE:                          Options.            (line 1127)
+* -n:                                    Options.            (line  434)
+* -N:                                    Options.            (line  440)
+* -no-relax:                             Options.            (line 1258)
+* -non_shared:                           Options.            (line  886)
+* -nostdlib:                             Options.            (line 1215)
+* -O LEVEL:                              Options.            (line  461)
+* -o OUTPUT:                             Options.            (line  455)
+* -P AUDITLIB:                           Options.            (line  176)
+* -pie:                                  Options.            (line 1242)
+* -q:                                    Options.            (line  492)
+* -qmagic:                               Options.            (line 1252)
+* -Qy:                                   Options.            (line 1255)
+* -r:                                    Options.            (line  505)
+* -R FILE:                               Options.            (line  523)
+* -rpath-link=DIR:                       Options.            (line 1320)
+* -rpath=DIR:                            Options.            (line 1298)
+* -s:                                    Options.            (line  534)
+* -S:                                    Options.            (line  538)
+* -shared:                               Options.            (line 1377)
+* -soname=NAME:                          Options.            (line  314)
+* -static:                               Options.            (line  886)
+* -t:                                    Options.            (line  543)
+* -T SCRIPT:                             Options.            (line  547)
+* -Tbss=ORG:                             Options.            (line 1451)
+* -Tdata=ORG:                            Options.            (line 1451)
+* -Tldata-segment=ORG:                   Options.            (line 1467)
+* -Trodata-segment=ORG:                  Options.            (line 1461)
+* -Ttext-segment=ORG:                    Options.            (line 1457)
+* -Ttext=ORG:                            Options.            (line 1451)
+* -u SYMBOL:                             Options.            (line  569)
+* -Ur:                                   Options.            (line  590)
+* -v:                                    Options.            (line  635)
+* -V:                                    Options.            (line  635)
+* -x:                                    Options.            (line  641)
+* -X:                                    Options.            (line  645)
+* -Y PATH:                               Options.            (line  660)
+* -y SYMBOL:                             Options.            (line  651)
+* -z defs:                               Options.            (line 1138)
+* -z KEYWORD:                            Options.            (line  664)
+* -z muldefs:                            Options.            (line 1146)
 * .:                                     Location Counter.   (line    6)
 * /DISCARD/:                             Output Section Discarding.
                                                              (line   26)
-* 32-bit PLT entries:                    ARM.                (line  224)
+* 32-bit PLT entries:                    ARM.                (line  222)
 * :PHDR:                                 Output Section Phdr.
                                                              (line    6)
 * =FILLEXP:                              Output Section Fill.
@@ -8078,51 +7962,51 @@ LD Index
                                                              (line    6)
 * [COMMON]:                              Input Section Common.
                                                              (line   29)
-* AArch64 rela addend:                   ARM.                (line  228)
-* ABSOLUTE (MRI):                        MRI.                (line   33)
+* AArch64 rela addend:                   ARM.                (line  226)
+* ABSOLUTE (MRI):                        MRI.                (line   32)
 * absolute and relocatable symbols:      Expression Section. (line    6)
 * absolute expressions:                  Expression Section. (line    6)
 * ABSOLUTE(EXP):                         Builtin Functions.  (line   10)
 * ADDR(SECTION):                         Builtin Functions.  (line   17)
 * address, section:                      Output Section Address.
                                                              (line    6)
-* ALIAS (MRI):                           MRI.                (line   44)
-* ALIGN (MRI):                           MRI.                (line   50)
+* ALIAS (MRI):                           MRI.                (line   43)
+* ALIGN (MRI):                           MRI.                (line   49)
 * align expression:                      Builtin Functions.  (line   38)
 * align location counter:                Builtin Functions.  (line   38)
 * ALIGN(ALIGN):                          Builtin Functions.  (line   38)
 * ALIGN(EXP,ALIGN):                      Builtin Functions.  (line   38)
 * ALIGN(SECTION_ALIGN):                  Forced Output Alignment.
                                                              (line    6)
-* aligned common symbols:                WIN32.              (line  424)
-* ALIGNOF(SECTION):                      Builtin Functions.  (line   64)
+* aligned common symbols:                WIN32.              (line  415)
+* ALIGNOF(SECTION):                      Builtin Functions.  (line   63)
 * allocating memory:                     MEMORY.             (line    6)
 * architecture:                          Miscellaneous Commands.
                                                              (line  115)
-* architectures:                         Options.            (line  122)
-* archive files, from cmd line:          Options.            (line  334)
+* architectures:                         Options.            (line  121)
+* archive files, from cmd line:          Options.            (line  332)
 * archive search path in linker script:  File Commands.      (line   76)
 * arithmetic:                            Expressions.        (line    6)
 * arithmetic operators:                  Operators.          (line    6)
 * ARM interworking support:              ARM.                (line    6)
-* ARM1176 erratum workaround:            ARM.                (line  112)
-* AS_NEEDED(FILES):                      File Commands.      (line   56)
+* ARM1176 erratum workaround:            ARM.                (line  111)
 * ASSERT:                                Miscellaneous Commands.
                                                              (line    9)
 * assertion in linker script:            Miscellaneous Commands.
                                                              (line    9)
 * assignment in scripts:                 Assignments.        (line    6)
+* AS_NEEDED(FILES):                      File Commands.      (line   56)
 * AT(LMA):                               Output Section LMA. (line    6)
 * AT>LMA_REGION:                         Output Section LMA. (line    6)
-* automatic data imports:                WIN32.              (line  191)
+* automatic data imports:                WIN32.              (line  185)
 * back end:                              BFD.                (line    6)
-* BASE (MRI):                            MRI.                (line   54)
+* BASE (MRI):                            MRI.                (line   53)
 * BE8:                                   ARM.                (line   28)
 * BFD canonical format:                  Canonical format.   (line   11)
 * BFD requirements:                      BFD.                (line   16)
-* big-endian objects:                    Options.            (line  248)
-* binary input format:                   Options.            (line  134)
-* BLOCK(EXP):                            Builtin Functions.  (line   77)
+* big-endian objects:                    Options.            (line  247)
+* binary input format:                   Options.            (line  133)
+* BLOCK(EXP):                            Builtin Functions.  (line   76)
 * bug criteria:                          Bug Criteria.       (line    6)
 * bug reports:                           Bug Reporting.      (line    6)
 * bugs in ld:                            Reporting Bugs.     (line    6)
@@ -8130,70 +8014,77 @@ LD Index
                                                              (line    6)
 * C++ constructors, arranging in link:   Output Section Keywords.
                                                              (line   19)
-* CHIP (MRI):                            MRI.                (line   58)
+* CHIP (MRI):                            MRI.                (line   57)
 * COLLECT_NO_DEMANGLE:                   Environment.        (line   29)
-* combining symbols, warnings on:        Options.            (line 1540)
+* combining symbols, warnings on:        Options.            (line 1519)
 * command files:                         Scripts.            (line    6)
 * command line:                          Options.            (line    6)
-* common allocation:                     Options.            (line  168)
+* common allocation:                     Options.            (line  167)
+* common allocation <1>:                 Options.            (line  989)
 * common allocation in linker script:    Miscellaneous Commands.
+                                                             (line   46)
+* common allocation in linker script <1>: Miscellaneous Commands.
                                                              (line   51)
 * common symbol placement:               Input Section Common.
                                                              (line    6)
 * COMMONPAGESIZE:                        Symbolic Constants. (line   13)
-* compatibility, MRI:                    Options.            (line  158)
+* compatibility, MRI:                    Options.            (line  157)
 * CONSTANT:                              Symbolic Constants. (line    6)
 * constants in linker scripts:           Constants.          (line    6)
 * constraints on output sections:        Output Section Constraint.
                                                              (line    6)
+* constructors:                          Options.            (line  590)
 * CONSTRUCTORS:                          Output Section Keywords.
                                                              (line   19)
-* constructors:                          Options.            (line  596)
 * constructors, arranging in link:       Output Section Keywords.
                                                              (line   19)
-* Cortex-A53 erratum 835769 workaround:  ARM.                (line  213)
-* Cortex-A8 erratum workaround:          ARM.                (line  204)
+* Cortex-A53 erratum 835769 workaround:  ARM.                (line  211)
+* Cortex-A8 erratum workaround:          ARM.                (line  202)
 * crash of linker:                       Bug Criteria.       (line    9)
 * CREATE_OBJECT_SYMBOLS:                 Output Section Keywords.
                                                              (line    9)
-* creating a DEF file:                   WIN32.              (line  158)
-* cross reference table:                 Options.            (line  987)
+* creating a DEF file:                   WIN32.              (line  153)
+* cross reference table:                 Options.            (line  976)
 * cross references:                      Miscellaneous Commands.
                                                              (line   82)
+* cross references <1>:                  Miscellaneous Commands.
+                                                             (line   98)
 * current output location:               Location Counter.   (line    6)
 * data:                                  Output Section Data.
                                                              (line    6)
 * DATA_SEGMENT_ALIGN(MAXPAGESIZE, COMMONPAGESIZE): Builtin Functions.
-                                                             (line   82)
-* DATA_SEGMENT_END(EXP):                 Builtin Functions.  (line  104)
-* DATA_SEGMENT_RELRO_END(OFFSET, EXP):   Builtin Functions.  (line  110)
-* dbx:                                   Options.            (line 1455)
-* DEF files, creating:                   Options.            (line 1977)
+                                                             (line   81)
+* DATA_SEGMENT_END(EXP):                 Builtin Functions.  (line  103)
+* DATA_SEGMENT_RELRO_END(OFFSET, EXP):   Builtin Functions.  (line  109)
+* dbx:                                   Options.            (line 1435)
+* DEF files, creating:                   Options.            (line 1955)
 * default emulation:                     Environment.        (line   21)
 * default input format:                  Environment.        (line    9)
-* defined symbol:                        Options.            (line  588)
-* DEFINED(SYMBOL):                       Builtin Functions.  (line  123)
-* deleting local symbols:                Options.            (line  647)
+* defined symbol:                        Options.            (line  582)
+* DEFINED(SYMBOL):                       Builtin Functions.  (line  122)
+* deleting local symbols:                Options.            (line  641)
 * demangling, default:                   Environment.        (line   29)
-* demangling, from command line:         Options.            (line 1028)
-* direct linking to a dll:               WIN32.              (line  239)
+* demangling, from command line:         Options.            (line 1017)
+* direct linking to a dll:               WIN32.              (line  233)
 * discarding sections:                   Output Section Discarding.
                                                              (line    6)
 * discontinuous memory:                  MEMORY.             (line    6)
-* DLLs, creating:                        Options.            (line 1977)
-* DLLs, linking to:                      Options.            (line 2000)
+* DLLs, creating:                        Options.            (line 1850)
+* DLLs, creating <1>:                    Options.            (line 1955)
+* DLLs, creating <2>:                    Options.            (line 1963)
+* DLLs, linking to:                      Options.            (line 1978)
 * dot:                                   Location Counter.   (line    6)
 * dot inside sections:                   Location Counter.   (line   36)
 * dot outside sections:                  Location Counter.   (line   66)
-* dynamic linker, from command line:     Options.            (line 1041)
-* dynamic symbol table:                  Options.            (line  221)
+* dynamic linker, from command line:     Options.            (line 1030)
+* dynamic symbol table:                  Options.            (line  220)
 * ELF program headers:                   PHDRS.              (line    6)
-* emulation:                             Options.            (line  392)
+* emulation:                             Options.            (line  390)
 * emulation, default:                    Environment.        (line   21)
-* END (MRI):                             MRI.                (line   62)
-* endianness:                            Options.            (line  248)
+* END (MRI):                             MRI.                (line   61)
+* endianness:                            Options.            (line  247)
 * entry point:                           Entry Point.        (line    6)
-* entry point, from command line:        Options.            (line  187)
+* entry point, from command line:        Options.            (line  186)
 * entry point, thumb:                    ARM.                (line   17)
 * ENTRY(SYMBOL):                         Entry Point.        (line    6)
 * error on valid input:                  Bug Criteria.       (line   12)
@@ -8217,33 +8108,34 @@ LD Index
                                                              (line    6)
 * FILL(EXPRESSION):                      Output Section Data.
                                                              (line   39)
-* finalization function:                 Options.            (line  300)
+* finalization function:                 Options.            (line  298)
 * first input file:                      File Commands.      (line   84)
 * first instruction:                     Entry Point.        (line    6)
-* FIX_V4BX:                              ARM.                (line   50)
-* FIX_V4BX_INTERWORKING:                 ARM.                (line   63)
+* FIX_V4BX:                              ARM.                (line   48)
+* FIX_V4BX_INTERWORKING:                 ARM.                (line   61)
 * FORCE_COMMON_ALLOCATION:               Miscellaneous Commands.
                                                              (line   46)
 * forcing input section alignment:       Forced Input Alignment.
                                                              (line    6)
 * forcing output section alignment:      Forced Output Alignment.
                                                              (line    6)
-* forcing the creation of dynamic sections: Options.         (line  506)
-* FORMAT (MRI):                          MRI.                (line   66)
+* forcing the creation of dynamic sections: Options.         (line  501)
+* FORMAT (MRI):                          MRI.                (line   65)
 * functions in expressions:              Builtin Functions.  (line    6)
-* garbage collection <1>:                Options.            (line 1093)
-* garbage collection <2>:                Input Section Keep. (line    6)
-* garbage collection:                    Options.            (line 1069)
-* generating optimized output:           Options.            (line  466)
+* garbage collection:                    Options.            (line 1058)
+* garbage collection <1>:                Options.            (line 1082)
+* garbage collection <2>:                Options.            (line 1091)
+* garbage collection <3>:                Input Section Keep. (line    6)
+* generating optimized output:           Options.            (line  461)
 * GNU linker:                            Overview.           (line    6)
 * GNUTARGET:                             Environment.        (line    9)
 * GROUP(FILES):                          File Commands.      (line   49)
 * grouping input files:                  File Commands.      (line   49)
-* groups of archives:                    Options.            (line  823)
+* groups of archives:                    Options.            (line  814)
 * H8/300 support:                        H8/300.             (line    6)
-* header size:                           Builtin Functions.  (line  191)
-* heap size:                             Options.            (line 1912)
-* help:                                  Options.            (line 1130)
+* header size:                           Builtin Functions.  (line  189)
+* heap size:                             Options.            (line 1890)
+* help:                                  Options.            (line 1119)
 * HIDDEN:                                HIDDEN.             (line    6)
 * holes:                                 Location Counter.   (line   12)
 * holes, filling:                        Output Section Data.
@@ -8251,25 +8143,26 @@ LD Index
 * HPPA multiple sub-space stubs:         HPPA ELF32.         (line    6)
 * HPPA stub grouping:                    HPPA ELF32.         (line   12)
 * i960 support:                          i960.               (line    6)
-* image base:                            Options.            (line 1919)
+* image base:                            Options.            (line 1897)
 * implicit linker scripts:               Implicit Linker Scripts.
                                                              (line    6)
 * import libraries:                      WIN32.              (line   10)
 * INCLUDE FILENAME:                      File Commands.      (line    9)
 * including a linker script:             File Commands.      (line    9)
-* including an entire archive:           Options.            (line 1653)
-* incremental link:                      Options.            (line  325)
+* including an entire archive:           Options.            (line 1632)
+* incremental link:                      Options.            (line  323)
 * INHIBIT_COMMON_ALLOCATION:             Miscellaneous Commands.
                                                              (line   51)
-* initialization function:               Options.            (line  328)
+* initialization function:               Options.            (line  326)
 * initialized data in ROM:               Output Section LMA. (line   39)
 * input file format in linker script:    Format Commands.    (line   35)
 * input filename symbols:                Output Section Keywords.
                                                              (line    9)
 * input files in linker scripts:         File Commands.      (line   19)
-* input files, displaying:               Options.            (line  549)
-* input format:                          Options.            (line  134)
-* Input import library:                  ARM.                (line  241)
+* input files, displaying:               Options.            (line  543)
+* input format:                          Options.            (line  133)
+* input format <1>:                      Options.            (line  133)
+* Input import library:                  ARM.                (line  239)
 * input object files in linker scripts:  File Commands.      (line   19)
 * input section alignment:               Forced Input Alignment.
                                                              (line    6)
@@ -8289,19 +8182,19 @@ LD Index
 * invalid input:                         Bug Criteria.       (line   14)
 * K and M integer suffixes:              Constants.          (line   15)
 * KEEP:                                  Input Section Keep. (line    6)
-* l =:                                   MEMORY.             (line   74)
+* l =:                                   MEMORY.             (line   68)
 * lazy evaluation:                       Evaluation.         (line    6)
 * ld bugs, reporting:                    Bug Reporting.      (line    6)
+* ldata segment origin, cmd line:        Options.            (line 1468)
+* LDEMULATION:                           Environment.        (line   21)
 * LD_FEATURE(STRING):                    Miscellaneous Commands.
                                                              (line  121)
-* ldata segment origin, cmd line:        Options.            (line 1488)
-* LDEMULATION:                           Environment.        (line   21)
-* len =:                                 MEMORY.             (line   74)
-* LENGTH =:                              MEMORY.             (line   74)
-* LENGTH(MEMORY):                        Builtin Functions.  (line  140)
+* len =:                                 MEMORY.             (line   68)
+* LENGTH =:                              MEMORY.             (line   68)
+* LENGTH(MEMORY):                        Builtin Functions.  (line  139)
 * library search path in linker script:  File Commands.      (line   76)
-* link map:                              Options.            (line  402)
-* link-time runtime library search path: Options.            (line 1333)
+* link map:                              Options.            (line  400)
+* link-time runtime library search path: Options.            (line 1320)
 * linker crash:                          Bug Criteria.       (line    9)
 * linker script concepts:                Basic Script Concepts.
                                                              (line    6)
@@ -8311,63 +8204,65 @@ LD Index
 * linker script input object files:      File Commands.      (line   19)
 * linker script simple commands:         Simple Commands.    (line    6)
 * linker scripts:                        Scripts.            (line    6)
-* LIST (MRI):                            MRI.                (line   77)
-* little-endian objects:                 Options.            (line  251)
-* LOAD (MRI):                            MRI.                (line   84)
+* LIST (MRI):                            MRI.                (line   76)
+* little-endian objects:                 Options.            (line  250)
+* LOAD (MRI):                            MRI.                (line   83)
 * load address:                          Output Section LMA. (line    6)
-* LOADADDR(SECTION):                     Builtin Functions.  (line  143)
+* LOADADDR(SECTION):                     Builtin Functions.  (line  142)
 * loading, preventing:                   Output Section Type.
-                                                             (line   22)
-* local symbols, deleting:               Options.            (line  651)
+                                                             (line   21)
+* local symbols, deleting:               Options.            (line  645)
 * location counter:                      Location Counter.   (line    6)
-* LOG2CEIL(EXP):                         Builtin Functions.  (line  147)
+* LOG2CEIL(EXP):                         Builtin Functions.  (line  146)
 * LONG(EXPRESSION):                      Output Section Data.
                                                              (line    6)
 * M and K integer suffixes:              Constants.          (line   15)
-* M68HC11 and 68HC12 support:            M68HC11/68HC12.     (line    6)
+* M68HC11 and 68HC12 support:            M68HC11/68HC12.     (line    5)
 * machine architecture:                  Miscellaneous Commands.
                                                              (line  115)
 * machine dependencies:                  Machine Dependent.  (line    6)
 * mapping input sections to output sections: Input Section.  (line    6)
-* MAX:                                   Builtin Functions.  (line  150)
+* MAX:                                   Builtin Functions.  (line  149)
 * MAXPAGESIZE:                           Symbolic Constants. (line   10)
 * MEMORY:                                MEMORY.             (line    6)
 * memory region attributes:              MEMORY.             (line   34)
 * memory regions:                        MEMORY.             (line    6)
 * memory regions and sections:           Output Section Region.
                                                              (line    6)
-* memory usage:                          Options.            (line 1118)
-* Merging exidx entries:                 ARM.                (line  221)
-* MIN:                                   Builtin Functions.  (line  153)
+* memory usage:                          Options.            (line 1107)
+* memory usage <1>:                      Options.            (line 1131)
+* Merging exidx entries:                 ARM.                (line  219)
+* MIN:                                   Builtin Functions.  (line  152)
 * MIPS branch relocation check control:  MIPS.               (line   13)
 * MIPS microMIPS instruction choice selection: MIPS.         (line    6)
 * Motorola 68K GOT generation:           M68K.               (line    6)
 * MRI compatibility:                     MRI.                (line    6)
 * MSP430 extra sections:                 MSP430.             (line   11)
-* NAME (MRI):                            MRI.                (line   90)
+* NAME (MRI):                            MRI.                (line   89)
 * name, section:                         Output Section Name.
                                                              (line    6)
 * names:                                 Symbols.            (line    6)
-* naming the output file:                Options.            (line  460)
-* NEXT(EXP):                             Builtin Functions.  (line  157)
+* naming the output file:                Options.            (line  455)
+* NEXT(EXP):                             Builtin Functions.  (line  156)
 * Nios II call relaxation:               Nios II.            (line    6)
-* NMAGIC:                                Options.            (line  439)
-* NO_ENUM_SIZE_WARNING:                  ARM.                (line  159)
-* NO_WCHAR_SIZE_WARNING:                 ARM.                (line  166)
+* NMAGIC:                                Options.            (line  434)
 * NOCROSSREFS(SECTIONS):                 Miscellaneous Commands.
                                                              (line   82)
 * NOCROSSREFS_TO(TOSECTION FROMSECTIONS): Miscellaneous Commands.
                                                              (line   98)
 * NOLOAD:                                Output Section Type.
-                                                             (line   22)
-* not enough room for program headers:   Builtin Functions.  (line  196)
-* o =:                                   MEMORY.             (line   69)
+                                                             (line   21)
+* not enough room for program headers:   Builtin Functions.  (line  194)
+* NO_ENUM_SIZE_WARNING:                  ARM.                (line  158)
+* NO_WCHAR_SIZE_WARNING:                 ARM.                (line  165)
+* o =:                                   MEMORY.             (line   63)
 * objdump -i:                            BFD.                (line    6)
 * object file management:                BFD.                (line    6)
 * object files:                          Options.            (line   29)
 * object formats available:              BFD.                (line    6)
-* object size:                           Options.            (line  309)
-* OMAGIC:                                Options.            (line  454)
+* object size:                           Options.            (line  307)
+* OMAGIC:                                Options.            (line  440)
+* OMAGIC <1>:                            Options.            (line  449)
 * ONLY_IF_RO:                            Output Section Constraint.
                                                              (line    6)
 * ONLY_IF_RW:                            Output Section Constraint.
@@ -8375,16 +8270,16 @@ LD Index
 * opening object files:                  BFD outline.        (line    6)
 * operators for arithmetic:              Operators.          (line    6)
 * options:                               Options.            (line    6)
-* ORDER (MRI):                           MRI.                (line   95)
-* org =:                                 MEMORY.             (line   69)
-* ORIGIN =:                              MEMORY.             (line   69)
-* ORIGIN(MEMORY):                        Builtin Functions.  (line  163)
+* ORDER (MRI):                           MRI.                (line   94)
+* org =:                                 MEMORY.             (line   63)
+* ORIGIN =:                              MEMORY.             (line   63)
+* ORIGIN(MEMORY):                        Builtin Functions.  (line  162)
 * orphan:                                Orphan Sections.    (line    6)
-* orphan sections:                       Options.            (line  606)
-* output file after errors:              Options.            (line 1221)
+* orphan sections:                       Options.            (line  600)
+* output file after errors:              Options.            (line 1209)
 * output file format in linker script:   Format Commands.    (line   10)
 * output file name in linker script:     File Commands.      (line   66)
-* output format:                         Options.            (line 1112)
+* output format:                         Options.            (line 1101)
 * output section alignment:              Forced Output Alignment.
                                                              (line    6)
 * output section attributes:             Output Section Attributes.
@@ -8399,103 +8294,105 @@ LD Index
                                                              (line    6)
 * overlays:                              Overlay Description.
                                                              (line    6)
-* partial link:                          Options.            (line  510)
+* partial link:                          Options.            (line  505)
 * PE import table prefixing:             ARM.                (line   23)
-* PHDRS:                                 PHDRS.              (line   62)
-* PIC_VENEER:                            ARM.                (line  172)
-* Placement of SG veneers:               ARM.                (line  231)
-* pop state governing input file handling: Options.          (line  494)
-* position independent executables:      Options.            (line 1257)
+* PHDRS:                                 PHDRS.              (line    6)
+* PHDRS <1>:                             PHDRS.              (line   62)
+* PIC_VENEER:                            ARM.                (line  171)
+* Placement of SG veneers:               ARM.                (line  229)
+* pop state governing input file handling: Options.          (line  489)
+* position independent executables:      Options.            (line 1244)
 * PowerPC ELF32 options:                 PowerPC ELF32.      (line   16)
 * PowerPC GOT:                           PowerPC ELF32.      (line   33)
 * PowerPC long branches:                 PowerPC ELF32.      (line    6)
 * PowerPC PLT:                           PowerPC ELF32.      (line   16)
 * PowerPC stub symbols:                  PowerPC ELF32.      (line   47)
 * PowerPC TLS optimization:              PowerPC ELF32.      (line   51)
-* PowerPC64 __tls_get_addr optimization: PowerPC64 ELF64.    (line   57)
 * PowerPC64 dot symbols:                 PowerPC64 ELF64.    (line   33)
 * PowerPC64 ELF64 options:               PowerPC64 ELF64.    (line    6)
-* PowerPC64 multi-TOC:                   PowerPC64 ELF64.    (line   97)
-* PowerPC64 OPD optimization:            PowerPC64 ELF64.    (line   71)
-* PowerPC64 OPD spacing:                 PowerPC64 ELF64.    (line   77)
-* PowerPC64 PLT call stub static chain:  PowerPC64 ELF64.    (line  127)
-* PowerPC64 PLT call stub thread safety: PowerPC64 ELF64.    (line  133)
-* PowerPC64 PLT stub alignment:          PowerPC64 ELF64.    (line  119)
+* PowerPC64 multi-TOC:                   PowerPC64 ELF64.    (line   96)
+* PowerPC64 OPD optimization:            PowerPC64 ELF64.    (line   70)
+* PowerPC64 OPD spacing:                 PowerPC64 ELF64.    (line   76)
+* PowerPC64 PLT call stub static chain:  PowerPC64 ELF64.    (line  126)
+* PowerPC64 PLT call stub thread safety: PowerPC64 ELF64.    (line  132)
+* PowerPC64 PLT stub alignment:          PowerPC64 ELF64.    (line  118)
 * PowerPC64 register save/restore functions: PowerPC64 ELF64.
                                                              (line   44)
 * PowerPC64 stub grouping:               PowerPC64 ELF64.    (line    6)
 * PowerPC64 stub symbols:                PowerPC64 ELF64.    (line   29)
-* PowerPC64 TLS optimization:            PowerPC64 ELF64.    (line   52)
-* PowerPC64 TOC optimization:            PowerPC64 ELF64.    (line   83)
-* PowerPC64 TOC sorting:                 PowerPC64 ELF64.    (line  109)
+* PowerPC64 TLS optimization:            PowerPC64 ELF64.    (line   51)
+* PowerPC64 TOC optimization:            PowerPC64 ELF64.    (line   82)
+* PowerPC64 TOC sorting:                 PowerPC64 ELF64.    (line  108)
+* PowerPC64 __tls_get_addr optimization: PowerPC64 ELF64.    (line   56)
 * precedence in expressions:             Operators.          (line    6)
 * prevent unnecessary loading:           Output Section Type.
-                                                             (line   22)
+                                                             (line   21)
 * program headers:                       PHDRS.              (line    6)
 * program headers and sections:          Output Section Phdr.
                                                              (line    6)
-* program headers, not enough room:      Builtin Functions.  (line  196)
+* program headers, not enough room:      Builtin Functions.  (line  194)
 * program segments:                      PHDRS.              (line    6)
 * PROVIDE:                               PROVIDE.            (line    6)
 * PROVIDE_HIDDEN:                        PROVIDE_HIDDEN.     (line    6)
-* PUBLIC (MRI):                          MRI.                (line  103)
-* push state governing input file handling: Options.         (line  476)
+* PUBLIC (MRI):                          MRI.                (line  102)
+* push state governing input file handling: Options.         (line  471)
 * QUAD(EXPRESSION):                      Output Section Data.
                                                              (line    6)
 * quoted symbol names:                   Symbols.            (line    6)
-* read-only text:                        Options.            (line  439)
-* read/write from cmd line:              Options.            (line  445)
+* read-only text:                        Options.            (line  434)
+* read/write from cmd line:              Options.            (line  440)
 * region alias:                          REGION_ALIAS.       (line    6)
 * region names:                          REGION_ALIAS.       (line    6)
-* REGION_ALIAS(ALIAS, REGION):           REGION_ALIAS.       (line    6)
 * regions of memory:                     MEMORY.             (line    6)
+* REGION_ALIAS(ALIAS, REGION):           REGION_ALIAS.       (line    6)
 * relative expressions:                  Expression Section. (line    6)
-* relaxing addressing modes:             Options.            (line 1271)
+* relaxing addressing modes:             Options.            (line 1258)
 * relaxing on H8/300:                    H8/300.             (line    9)
-* relaxing on i960:                      i960.               (line   31)
+* relaxing on i960:                      i960.               (line   32)
 * relaxing on M68HC11:                   M68HC11/68HC12.     (line   12)
 * relaxing on NDS32:                     NDS32.              (line    6)
 * relaxing on Xtensa:                    Xtensa.             (line   27)
 * relocatable and absolute symbols:      Expression Section. (line    6)
-* relocatable output:                    Options.            (line  510)
+* relocatable output:                    Options.            (line  505)
 * removing sections:                     Output Section Discarding.
                                                              (line    6)
 * reporting bugs in ld:                  Reporting Bugs.     (line    6)
 * requirements for BFD:                  BFD.                (line   16)
-* retain relocations in final executable: Options.           (line  497)
-* retaining specified symbols:           Options.            (line 1297)
-* rodata segment origin, cmd line:       Options.            (line 1482)
+* retain relocations in final executable: Options.           (line  492)
+* retaining specified symbols:           Options.            (line 1284)
+* rodata segment origin, cmd line:       Options.            (line 1462)
 * ROM initialized data:                  Output Section LMA. (line   39)
 * round up expression:                   Builtin Functions.  (line   38)
 * round up location counter:             Builtin Functions.  (line   38)
-* runtime library name:                  Options.            (line  316)
-* runtime library search path:           Options.            (line 1311)
-* runtime pseudo-relocation:             WIN32.              (line  217)
+* runtime library name:                  Options.            (line  314)
+* runtime library search path:           Options.            (line 1298)
+* runtime pseudo-relocation:             WIN32.              (line  211)
 * scaled integers:                       Constants.          (line   15)
 * scommon section:                       Input Section Common.
                                                              (line   20)
-* script files:                          Options.            (line  553)
+* script files:                          Options.            (line  547)
+* script files <1>:                      Options.            (line  556)
 * scripts:                               Scripts.            (line    6)
-* search directory, from cmd line:       Options.            (line  367)
+* search directory, from cmd line:       Options.            (line  365)
 * search path in linker script:          File Commands.      (line   76)
 * SEARCH_DIR(PATH):                      File Commands.      (line   76)
-* SECT (MRI):                            MRI.                (line  109)
+* SECT (MRI):                            MRI.                (line  108)
 * section address:                       Output Section Address.
                                                              (line    6)
 * section address in expression:         Builtin Functions.  (line   17)
-* section alignment:                     Builtin Functions.  (line   64)
-* section alignment, warnings on:        Options.            (line 1631)
+* section alignment:                     Builtin Functions.  (line   63)
+* section alignment, warnings on:        Options.            (line 1610)
 * section data:                          Output Section Data.
                                                              (line    6)
 * section fill pattern:                  Output Section Fill.
                                                              (line    6)
 * section load address:                  Output Section LMA. (line    6)
-* section load address in expression:    Builtin Functions.  (line  143)
+* section load address in expression:    Builtin Functions.  (line  142)
 * section name:                          Output Section Name.
                                                              (line    6)
 * section name wildcard patterns:        Input Section Wildcards.
                                                              (line    6)
-* section size:                          Builtin Functions.  (line  175)
+* section size:                          Builtin Functions.  (line  173)
 * section, assigning to memory region:   Output Section Region.
                                                              (line    6)
 * section, assigning to program header:  Output Section Phdr.
@@ -8503,29 +8400,30 @@ LD Index
 * SECTIONS:                              SECTIONS.           (line    6)
 * sections, discarding:                  Output Section Discarding.
                                                              (line    6)
-* sections, orphan:                      Options.            (line  606)
-* Secure gateway import library:         ARM.                (line  236)
-* segment origins, cmd line:             Options.            (line 1471)
-* SEGMENT_START(SEGMENT, DEFAULT):       Builtin Functions.  (line  166)
+* sections, orphan:                      Options.            (line  600)
+* Secure gateway import library:         ARM.                (line  234)
+* segment origins, cmd line:             Options.            (line 1451)
 * segments, ELF:                         PHDRS.              (line    6)
-* shared libraries:                      Options.            (line 1399)
+* SEGMENT_START(SEGMENT, DEFAULT):       Builtin Functions.  (line  165)
+* shared libraries:                      Options.            (line 1379)
 * SHORT(EXPRESSION):                     Output Section Data.
                                                              (line    6)
-* SIZEOF(SECTION):                       Builtin Functions.  (line  175)
-* SIZEOF_HEADERS:                        Builtin Functions.  (line  191)
+* SIZEOF(SECTION):                       Builtin Functions.  (line  173)
+* SIZEOF_HEADERS:                        Builtin Functions.  (line  189)
 * small common symbols:                  Input Section Common.
                                                              (line   20)
 * SORT:                                  Input Section Wildcards.
-                                                             (line   65)
+                                                             (line   62)
 * SORT_BY_ALIGNMENT:                     Input Section Wildcards.
-                                                             (line   54)
+                                                             (line   51)
 * SORT_BY_INIT_PRIORITY:                 Input Section Wildcards.
-                                                             (line   60)
+                                                             (line   57)
 * SORT_BY_NAME:                          Input Section Wildcards.
-                                                             (line   46)
+                                                             (line   43)
 * SORT_NONE:                             Input Section Wildcards.
-                                                             (line  106)
+                                                             (line   98)
 * SPU:                                   SPU ELF.            (line   29)
+* SPU <1>:                               SPU ELF.            (line   46)
 * SPU ELF options:                       SPU ELF.            (line    6)
 * SPU extra overlay stubs:               SPU ELF.            (line   19)
 * SPU local store size:                  SPU ELF.            (line   24)
@@ -8534,160 +8432,160 @@ LD Index
 * SPU plugins:                           SPU ELF.            (line    6)
 * SQUAD(EXPRESSION):                     Output Section Data.
                                                              (line    6)
-* stack size:                            Options.            (line 2158)
+* stack size:                            Options.            (line 2135)
 * standard Unix system:                  Options.            (line    7)
 * start of execution:                    Entry Point.        (line    6)
 * STARTUP(FILENAME):                     File Commands.      (line   84)
-* STM32L4xx erratum workaround:          ARM.                (line  121)
-* strip all symbols:                     Options.            (line  540)
-* strip debugger symbols:                Options.            (line  544)
-* stripping all but some symbols:        Options.            (line 1297)
-* STUB_GROUP_SIZE:                       ARM.                (line  177)
+* STM32L4xx erratum workaround:          ARM.                (line  120)
+* strip all symbols:                     Options.            (line  534)
+* strip debugger symbols:                Options.            (line  538)
+* stripping all but some symbols:        Options.            (line 1284)
+* STUB_GROUP_SIZE:                       ARM.                (line  176)
 * SUBALIGN(SUBSECTION_ALIGN):            Forced Input Alignment.
                                                              (line    6)
 * suffixes for integers:                 Constants.          (line   15)
-* symbol defaults:                       Builtin Functions.  (line  123)
+* symbol defaults:                       Builtin Functions.  (line  122)
 * symbol definition, scripts:            Assignments.        (line    6)
 * symbol names:                          Symbols.            (line    6)
-* symbol tracing:                        Options.            (line  657)
+* symbol tracing:                        Options.            (line  651)
 * symbol versions:                       VERSION.            (line    6)
-* symbol-only input:                     Options.            (line  529)
+* symbol-only input:                     Options.            (line  523)
 * symbolic constants:                    Symbolic Constants. (line    6)
-* symbols, from command line:            Options.            (line 1016)
+* symbols, from command line:            Options.            (line 1005)
 * symbols, relocatable and absolute:     Expression Section. (line    6)
-* symbols, require defined:              Options.            (line  588)
-* symbols, retaining selectively:        Options.            (line 1297)
-* synthesizing linker:                   Options.            (line 1271)
+* symbols, require defined:              Options.            (line  582)
+* symbols, retaining selectively:        Options.            (line 1284)
+* synthesizing linker:                   Options.            (line 1258)
 * synthesizing on H8/300:                H8/300.             (line   14)
 * TARGET(BFDNAME):                       Format Commands.    (line   35)
 * TARGET1:                               ARM.                (line   33)
 * TARGET2:                               ARM.                (line   38)
-* text segment origin, cmd line:         Options.            (line 1478)
+* text segment origin, cmd line:         Options.            (line 1458)
 * thumb entry point:                     ARM.                (line   17)
 * TI COFF versions:                      TI COFF.            (line    6)
-* traditional format:                    Options.            (line 1450)
-* trampoline generation on M68HC11:      M68HC11/68HC12.     (line   31)
-* trampoline generation on M68HC12:      M68HC11/68HC12.     (line   31)
-* unallocated address, next:             Builtin Functions.  (line  157)
-* undefined symbol:                      Options.            (line  575)
+* traditional format:                    Options.            (line 1430)
+* trampoline generation on M68HC11:      M68HC11/68HC12.     (line   30)
+* trampoline generation on M68HC12:      M68HC11/68HC12.     (line   30)
+* unallocated address, next:             Builtin Functions.  (line  156)
+* undefined symbol:                      Options.            (line  569)
 * undefined symbol in linker script:     Miscellaneous Commands.
                                                              (line   39)
-* undefined symbols, warnings on:        Options.            (line 1627)
+* undefined symbols, warnings on:        Options.            (line 1606)
 * uninitialized data placement:          Input Section Common.
                                                              (line    6)
 * unspecified memory:                    Output Section Data.
                                                              (line   39)
-* usage:                                 Options.            (line 1130)
-* USE_BLX:                               ARM.                (line   75)
-* using a DEF file:                      WIN32.              (line   57)
+* usage:                                 Options.            (line 1119)
+* USE_BLX:                               ARM.                (line   73)
+* using a DEF file:                      WIN32.              (line   52)
 * using auto-export functionality:       WIN32.              (line   22)
-* Using decorations:                     WIN32.              (line  162)
+* Using decorations:                     WIN32.              (line  157)
 * variables, defining:                   Assignments.        (line    6)
-* verbose[=NUMBER]:                      Options.            (line 1521)
-* version:                               Options.            (line  641)
+* verbose[=NUMBER]:                      Options.            (line 1501)
+* version:                               Options.            (line  635)
 * version script:                        VERSION.            (line    6)
-* version script, symbol versions:       Options.            (line 1529)
+* version script, symbol versions:       Options.            (line 1509)
 * VERSION {script text}:                 VERSION.            (line    6)
 * versions of symbols:                   VERSION.            (line    6)
-* VFP11_DENORM_FIX:                      ARM.                (line   84)
-* warnings, on combining symbols:        Options.            (line 1540)
-* warnings, on section alignment:        Options.            (line 1631)
-* warnings, on undefined symbols:        Options.            (line 1627)
-* weak externals:                        WIN32.              (line  407)
+* VFP11_DENORM_FIX:                      ARM.                (line   82)
+* warnings, on combining symbols:        Options.            (line 1519)
+* warnings, on section alignment:        Options.            (line 1610)
+* warnings, on undefined symbols:        Options.            (line 1606)
+* weak externals:                        WIN32.              (line  400)
 * what is this?:                         Overview.           (line    6)
 * wildcard file name patterns:           Input Section Wildcards.
                                                              (line    6)
-* Xtensa options:                        Xtensa.             (line   56)
+* Xtensa options:                        Xtensa.             (line   55)
 * Xtensa processors:                     Xtensa.             (line    6)
 
 
 
 Tag Table:
-Node: Top710
-Node: Overview1493
-Node: Invocation2607
-Node: Options3015
-Node: Environment107171
-Node: Scripts108931
-Node: Basic Script Concepts110665
-Node: Script Format113373
-Node: Simple Example114236
-Node: Simple Commands117332
-Node: Entry Point117838
-Node: File Commands118771
-Node: Format Commands122891
-Node: REGION_ALIAS124847
-Node: Miscellaneous Commands129679
-Node: Assignments135218
-Node: Simple Assignments135729
-Node: HIDDEN137464
-Node: PROVIDE138094
-Node: PROVIDE_HIDDEN139287
-Node: Source Code Reference139531
-Node: SECTIONS143447
-Node: Output Section Description145338
-Node: Output Section Name146582
-Node: Output Section Address147458
-Node: Input Section149693
-Node: Input Section Basics150494
-Node: Input Section Wildcards155530
-Node: Input Section Common160737
-Node: Input Section Keep162219
-Node: Input Section Example162709
-Node: Output Section Data163677
-Node: Output Section Keywords166454
-Node: Output Section Discarding170023
-Node: Output Section Attributes171516
-Node: Output Section Type172617
-Node: Output Section LMA173688
-Node: Forced Output Alignment176759
-Node: Forced Input Alignment177189
-Node: Output Section Constraint177578
-Node: Output Section Region178006
-Node: Output Section Phdr178439
-Node: Output Section Fill179103
-Node: Overlay Description180245
-Node: MEMORY184691
-Node: PHDRS189068
-Node: VERSION194394
-Node: Expressions202487
-Node: Constants203416
-Node: Symbolic Constants204291
-Node: Symbols204842
-Node: Orphan Sections205589
-Node: Location Counter206926
-Node: Operators211362
-Node: Evaluation212284
-Node: Expression Section213648
-Node: Builtin Functions217627
-Node: Implicit Linker Scripts225867
-Node: Machine Dependent226642
-Node: H8/300227766
-Node: i960229828
-Node: M68HC11/68HC12231524
-Node: ARM232966
-Node: HPPA ELF32245208
-Node: M68K246831
-Node: MIPS247740
-Node: MMIX248856
-Node: MSP430250021
-Node: NDS32251061
-Node: Nios II252027
-Node: PowerPC ELF32253343
-Node: PowerPC64 ELF64256174
-Node: SPU ELF263506
-Node: TI COFF266138
-Node: WIN32266664
-Node: Xtensa286790
-Node: BFD289755
-Node: BFD outline291210
-Node: BFD information loss292496
-Node: Canonical format295013
-Node: Reporting Bugs299370
-Node: Bug Criteria300064
-Node: Bug Reporting300763
-Node: MRI307802
-Node: GNU Free Documentation License312445
-Node: LD Index337601
+Node: Top706
+Node: Overview1487
+Node: Invocation2603
+Node: Options3011
+Node: Environment107069
+Node: Scripts108830
+Node: Basic Script Concepts110564
+Node: Script Format113272
+Node: Simple Example114135
+Node: Simple Commands117229
+Node: Entry Point117734
+Node: File Commands118662
+Node: Format Commands122783
+Node: REGION_ALIAS124739
+Node: Miscellaneous Commands129566
+Node: Assignments135106
+Node: Simple Assignments135617
+Node: HIDDEN137348
+Node: PROVIDE137975
+Node: PROVIDE_HIDDEN139168
+Node: Source Code Reference139412
+Node: SECTIONS143329
+Node: Output Section Description145217
+Node: Output Section Name146458
+Node: Output Section Address147335
+Node: Input Section149568
+Node: Input Section Basics150369
+Node: Input Section Wildcards155387
+Node: Input Section Common160588
+Node: Input Section Keep162070
+Node: Input Section Example162560
+Node: Output Section Data163528
+Node: Output Section Keywords166307
+Node: Output Section Discarding169874
+Node: Output Section Attributes171364
+Node: Output Section Type172464
+Node: Output Section LMA173534
+Node: Forced Output Alignment176605
+Node: Forced Input Alignment177034
+Node: Output Section Constraint177422
+Node: Output Section Region177850
+Node: Output Section Phdr178283
+Node: Output Section Fill178947
+Node: Overlay Description180089
+Node: MEMORY184534
+Node: PHDRS188905
+Node: VERSION194231
+Node: Expressions202322
+Node: Constants203251
+Node: Symbolic Constants204125
+Node: Symbols204676
+Node: Orphan Sections205423
+Node: Location Counter206760
+Node: Operators211194
+Node: Evaluation212116
+Node: Expression Section213480
+Node: Builtin Functions217450
+Node: Implicit Linker Scripts225681
+Node: Machine Dependent226456
+Node: H8/300227563
+Node: i960229626
+Node: M68HC11/68HC12231322
+Node: ARM232767
+Node: HPPA ELF32245014
+Node: M68K246637
+Node: MIPS247546
+Node: MMIX248662
+Node: MSP430249827
+Node: NDS32250867
+Node: Nios II251833
+Node: PowerPC ELF32253149
+Node: PowerPC64 ELF64255980
+Node: SPU ELF263305
+Node: TI COFF265939
+Node: WIN32266465
+Node: Xtensa286594
+Node: BFD289560
+Node: BFD outline291018
+Node: BFD information loss292306
+Node: Canonical format294832
+Node: Reporting Bugs299194
+Node: Bug Criteria299888
+Node: Bug Reporting300587
+Node: MRI307625
+Node: GNU Free Documentation License312267
+Node: LD Index337404
 
 End Tag Table
diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index dc6c635..8577b0f 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,3 +1,7 @@
+2017-07-25  Tristan Gingold  <gingold@adacore.com>
+
+	* configure: Regenerate.
+
 2017-07-05  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
 
 	Backport from mainline
diff --git a/opcodes/configure b/opcodes/configure
index 0b352a4..a1c7cd0 100755
--- a/opcodes/configure
+++ b/opcodes/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for opcodes 2.28.0.
+# Generated by GNU Autoconf 2.64 for opcodes 2.28.1.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='opcodes'
 PACKAGE_TARNAME='opcodes'
-PACKAGE_VERSION='2.28.0'
-PACKAGE_STRING='opcodes 2.28.0'
+PACKAGE_VERSION='2.28.1'
+PACKAGE_STRING='opcodes 2.28.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1322,7 +1322,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures opcodes 2.28.0 to adapt to many kinds of systems.
+\`configure' configures opcodes 2.28.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1393,7 +1393,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of opcodes 2.28.0:";;
+     short | recursive ) echo "Configuration of opcodes 2.28.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1500,7 +1500,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-opcodes configure 2.28.0
+opcodes configure 2.28.1
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -1910,7 +1910,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by opcodes $as_me 2.28.0, which was
+It was created by opcodes $as_me 2.28.1, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -3719,7 +3719,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='opcodes'
- VERSION='2.28.0'
+ VERSION='2.28.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -13305,7 +13305,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by opcodes $as_me 2.28.0, which was
+This file was extended by opcodes $as_me 2.28.1, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -13369,7 +13369,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-opcodes config.status 2.28.0
+opcodes config.status 2.28.1
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 

commit 3a81cdc79fb9ca95745d485cf4d856da5e42bf47
Author: Tristan Gingold <gingold@adacore.com>
Date:   Tue Jul 25 16:54:18 2017 +0200

    Bump version.
    
    bfd/
    2017-07-25  Tristan Gingold  <gingold@adacore.com>
    
    	* version.m4: Bump version to 2.28.2
    	* configure: Regenerate.
    
    binutils/
    2017-07-25  Tristan Gingold  <gingold@adacore.com>
    
    	* configure: Regenerate.
    
    gas/
    2017-07-25  Tristan Gingold  <gingold@adacore.com>
    
    	* configure: Regenerate.
    
    gprof/
    2017-07-25  Tristan Gingold  <gingold@adacore.com>
    
    	* configure: Regenerate.
    
    ld/
    2017-07-25  Tristan Gingold  <gingold@adacore.com>
    
    	* configure: Regenerate.
    
    opcodes/
    2017-07-25  Tristan Gingold  <gingold@adacore.com>
    
    	* configure: Regenerate.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index f99ec05..a81b982 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,5 +1,14 @@
 2017-07-25  Tristan Gingold  <gingold@adacore.com>
 
+	* version.m4: Bump version to 2.28.2
+	* configure: Regenerate.
+
+2017-07-25  Tristan Gingold  <gingold@adacore.com>
+
+	* development.sh: Set development to true.
+
+2017-07-25  Tristan Gingold  <gingold@adacore.com>
+
 	* version.m4: Bump version to 2.28.1
 	* configure: Regenerate.
 
diff --git a/bfd/configure b/bfd/configure
index 48d2bde..5980925 100755
--- a/bfd/configure
+++ b/bfd/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for bfd 2.28.1.
+# Generated by GNU Autoconf 2.64 for bfd 2.28.2.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='bfd'
 PACKAGE_TARNAME='bfd'
-PACKAGE_VERSION='2.28.1'
-PACKAGE_STRING='bfd 2.28.1'
+PACKAGE_VERSION='2.28.2'
+PACKAGE_STRING='bfd 2.28.2'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1354,7 +1354,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures bfd 2.28.1 to adapt to many kinds of systems.
+\`configure' configures bfd 2.28.2 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1425,7 +1425,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of bfd 2.28.1:";;
+     short | recursive ) echo "Configuration of bfd 2.28.2:";;
    esac
   cat <<\_ACEOF
 
@@ -1546,7 +1546,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-bfd configure 2.28.1
+bfd configure 2.28.2
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -2188,7 +2188,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by bfd $as_me 2.28.1, which was
+It was created by bfd $as_me 2.28.2, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -3997,7 +3997,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='bfd'
- VERSION='2.28.1'
+ VERSION='2.28.2'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -16613,7 +16613,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by bfd $as_me 2.28.1, which was
+This file was extended by bfd $as_me 2.28.2, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -16677,7 +16677,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-bfd config.status 2.28.1
+bfd config.status 2.28.2
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
diff --git a/bfd/development.sh b/bfd/development.sh
index b001a88..cd31410 100644
--- a/bfd/development.sh
+++ b/bfd/development.sh
@@ -16,4 +16,4 @@
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
 # Controls whether to enable development-mode features by default.
-development=false
+development=true
diff --git a/bfd/version.m4 b/bfd/version.m4
index 67e8bed..fab1947 100644
--- a/bfd/version.m4
+++ b/bfd/version.m4
@@ -1 +1 @@
-m4_define([BFD_VERSION], [2.28.1])
+m4_define([BFD_VERSION], [2.28.2])
diff --git a/binutils/ChangeLog b/binutils/ChangeLog
index 20bd0be..56badd1 100644
--- a/binutils/ChangeLog
+++ b/binutils/ChangeLog
@@ -2,6 +2,10 @@
 
 	* configure: Regenerate.
 
+2017-07-25  Tristan Gingold  <gingold@adacore.com>
+
+	* configure: Regenerate.
+
 2017-05-18  Alan Modra  <amodra@gmail.com>
 
 	Apply from master
diff --git a/binutils/configure b/binutils/configure
index 2032de1..6d250ce 100755
--- a/binutils/configure
+++ b/binutils/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for binutils 2.28.1.
+# Generated by GNU Autoconf 2.64 for binutils 2.28.2.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='binutils'
 PACKAGE_TARNAME='binutils'
-PACKAGE_VERSION='2.28.1'
-PACKAGE_STRING='binutils 2.28.1'
+PACKAGE_VERSION='2.28.2'
+PACKAGE_STRING='binutils 2.28.2'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1338,7 +1338,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures binutils 2.28.1 to adapt to many kinds of systems.
+\`configure' configures binutils 2.28.2 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1409,7 +1409,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of binutils 2.28.1:";;
+     short | recursive ) echo "Configuration of binutils 2.28.2:";;
    esac
   cat <<\_ACEOF
 
@@ -1530,7 +1530,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-binutils configure 2.28.1
+binutils configure 2.28.2
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -2172,7 +2172,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by binutils $as_me 2.28.1, which was
+It was created by binutils $as_me 2.28.2, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -3981,7 +3981,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='binutils'
- VERSION='2.28.1'
+ VERSION='2.28.2'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -15223,7 +15223,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by binutils $as_me 2.28.1, which was
+This file was extended by binutils $as_me 2.28.2, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -15287,7 +15287,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-binutils config.status 2.28.1
+binutils config.status 2.28.2
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
diff --git a/gas/ChangeLog b/gas/ChangeLog
index a1472bf..0ed8e93 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -2,6 +2,10 @@
 
 	* configure: Regenerate.
 
+2017-07-25  Tristan Gingold  <gingold@adacore.com>
+
+	* configure: Regenerate.
+
 2017-07-23  Jiong Wang  <jiong.wang@arm.com>
 
 	Backport from mainline
diff --git a/gas/configure b/gas/configure
index 5aa6dcb..c52eabe 100755
--- a/gas/configure
+++ b/gas/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for gas 2.28.1.
+# Generated by GNU Autoconf 2.64 for gas 2.28.2.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='gas'
 PACKAGE_TARNAME='gas'
-PACKAGE_VERSION='2.28.1'
-PACKAGE_STRING='gas 2.28.1'
+PACKAGE_VERSION='2.28.2'
+PACKAGE_STRING='gas 2.28.2'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1330,7 +1330,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures gas 2.28.1 to adapt to many kinds of systems.
+\`configure' configures gas 2.28.2 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1401,7 +1401,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of gas 2.28.1:";;
+     short | recursive ) echo "Configuration of gas 2.28.2:";;
    esac
   cat <<\_ACEOF
 
@@ -1523,7 +1523,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-gas configure 2.28.1
+gas configure 2.28.2
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -1933,7 +1933,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by gas $as_me 2.28.1, which was
+It was created by gas $as_me 2.28.2, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -3742,7 +3742,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='gas'
- VERSION='2.28.1'
+ VERSION='2.28.2'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -15212,7 +15212,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by gas $as_me 2.28.1, which was
+This file was extended by gas $as_me 2.28.2, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -15276,7 +15276,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-gas config.status 2.28.1
+gas config.status 2.28.2
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
diff --git a/gprof/ChangeLog b/gprof/ChangeLog
index 7a931ee..e55f037 100644
--- a/gprof/ChangeLog
+++ b/gprof/ChangeLog
@@ -2,6 +2,10 @@
 
 	* configure: Regenerate.
 
+2017-07-25  Tristan Gingold  <gingold@adacore.com>
+
+	* configure: Regenerate.
+
 2017-03-02  Tristan Gingold  <gingold@adacore.com>
 
 	* configure: Regenerate.
diff --git a/gprof/configure b/gprof/configure
index 48e46a0..c67c4c7 100755
--- a/gprof/configure
+++ b/gprof/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for gprof 2.28.1.
+# Generated by GNU Autoconf 2.64 for gprof 2.28.2.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='gprof'
 PACKAGE_TARNAME='gprof'
-PACKAGE_VERSION='2.28.1'
-PACKAGE_STRING='gprof 2.28.1'
+PACKAGE_VERSION='2.28.2'
+PACKAGE_STRING='gprof 2.28.2'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1302,7 +1302,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures gprof 2.28.1 to adapt to many kinds of systems.
+\`configure' configures gprof 2.28.2 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1373,7 +1373,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of gprof 2.28.1:";;
+     short | recursive ) echo "Configuration of gprof 2.28.2:";;
    esac
   cat <<\_ACEOF
 
@@ -1479,7 +1479,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-gprof configure 2.28.1
+gprof configure 2.28.2
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -1844,7 +1844,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by gprof $as_me 2.28.1, which was
+It was created by gprof $as_me 2.28.2, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -3653,7 +3653,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='gprof'
- VERSION='2.28.1'
+ VERSION='2.28.2'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -12787,7 +12787,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by gprof $as_me 2.28.1, which was
+This file was extended by gprof $as_me 2.28.2, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -12851,7 +12851,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-gprof config.status 2.28.1
+gprof config.status 2.28.2
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
diff --git a/ld/ChangeLog b/ld/ChangeLog
index 4661a71..6b39c0d 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -2,6 +2,10 @@
 
 	* configure: Regenerate.
 
+2017-07-25  Tristan Gingold  <gingold@adacore.com>
+
+	* configure: Regenerate.
+
 2017-06-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>
 
 	Backport from mainline
diff --git a/ld/configure b/ld/configure
index 6d6448c..54c86cf 100755
--- a/ld/configure
+++ b/ld/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for ld 2.28.1.
+# Generated by GNU Autoconf 2.64 for ld 2.28.2.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='ld'
 PACKAGE_TARNAME='ld'
-PACKAGE_VERSION='2.28.1'
-PACKAGE_STRING='ld 2.28.1'
+PACKAGE_VERSION='2.28.2'
+PACKAGE_STRING='ld 2.28.2'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1354,7 +1354,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures ld 2.28.1 to adapt to many kinds of systems.
+\`configure' configures ld 2.28.2 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1425,7 +1425,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of ld 2.28.1:";;
+     short | recursive ) echo "Configuration of ld 2.28.2:";;
    esac
   cat <<\_ACEOF
 
@@ -1550,7 +1550,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-ld configure 2.28.1
+ld configure 2.28.2
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -2259,7 +2259,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by ld $as_me 2.28.1, which was
+It was created by ld $as_me 2.28.2, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -4069,7 +4069,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='ld'
- VERSION='2.28.1'
+ VERSION='2.28.2'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -17813,7 +17813,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by ld $as_me 2.28.1, which was
+This file was extended by ld $as_me 2.28.2, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -17877,7 +17877,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-ld config.status 2.28.1
+ld config.status 2.28.2
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index 8577b0f..d64ea6d 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -2,6 +2,10 @@
 
 	* configure: Regenerate.
 
+2017-07-25  Tristan Gingold  <gingold@adacore.com>
+
+	* configure: Regenerate.
+
 2017-07-05  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
 
 	Backport from mainline
diff --git a/opcodes/configure b/opcodes/configure
index a1c7cd0..902a526 100755
--- a/opcodes/configure
+++ b/opcodes/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.64 for opcodes 2.28.1.
+# Generated by GNU Autoconf 2.64 for opcodes 2.28.2.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
@@ -556,8 +556,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='opcodes'
 PACKAGE_TARNAME='opcodes'
-PACKAGE_VERSION='2.28.1'
-PACKAGE_STRING='opcodes 2.28.1'
+PACKAGE_VERSION='2.28.2'
+PACKAGE_STRING='opcodes 2.28.2'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1322,7 +1322,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures opcodes 2.28.1 to adapt to many kinds of systems.
+\`configure' configures opcodes 2.28.2 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1393,7 +1393,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of opcodes 2.28.1:";;
+     short | recursive ) echo "Configuration of opcodes 2.28.2:";;
    esac
   cat <<\_ACEOF
 
@@ -1500,7 +1500,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-opcodes configure 2.28.1
+opcodes configure 2.28.2
 generated by GNU Autoconf 2.64
 
 Copyright (C) 2009 Free Software Foundation, Inc.
@@ -1910,7 +1910,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by opcodes $as_me 2.28.1, which was
+It was created by opcodes $as_me 2.28.2, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   $ $0 $@
@@ -3719,7 +3719,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='opcodes'
- VERSION='2.28.1'
+ VERSION='2.28.2'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -13305,7 +13305,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by opcodes $as_me 2.28.1, which was
+This file was extended by opcodes $as_me 2.28.2, which was
 generated by GNU Autoconf 2.64.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -13369,7 +13369,7 @@ Report bugs to the package provider."
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_version="\\
-opcodes config.status 2.28.1
+opcodes config.status 2.28.2
 configured by $0, generated by GNU Autoconf 2.64,
   with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 

commit 7d9f1d21e004afa2f1350f880ef4b94f92f4b671
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Jul 21 10:54:06 2017 +0200

    S/390: Support z14 as CPU name.
    
    With IBM z14 officially announced I can add z14 as CPU name.
    
    No regressions with that patch on s390x.
    
    gas/ChangeLog:
    
    2017-07-26  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
    	Backport from mainline
    	2017-07-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
    	* config/tc-s390.c (s390_parse_cpu): Add z14 as alternate CPU
    	name.
    	* doc/as.texinfo: Add z14 to CPU string list.
    	* doc/c-s390.texi: Likewise.
    
    opcodes/ChangeLog:
    
    2017-07-26  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
    	Backport from mainline
    	2017-07-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
    	* s390-mkopc.c (main): Enable z14 as CPU string in the opcode
    	table.

diff --git a/gas/config/tc-s390.c b/gas/config/tc-s390.c
index dccbe2c..0d8ee4f 100644
--- a/gas/config/tc-s390.c
+++ b/gas/config/tc-s390.c
@@ -290,7 +290,7 @@ s390_parse_cpu (const char *         arg,
       S390_INSTR_FLAG_HTM },
     { STRING_COMMA_LEN ("z13"), STRING_COMMA_LEN ("arch11"),
       S390_INSTR_FLAG_HTM | S390_INSTR_FLAG_VX },
-    { STRING_COMMA_LEN ("arch12"), STRING_COMMA_LEN (""),
+    { STRING_COMMA_LEN ("z14"), STRING_COMMA_LEN ("arch12"),
       S390_INSTR_FLAG_HTM | S390_INSTR_FLAG_VX }
   };
   static struct
diff --git a/gas/doc/as.texinfo b/gas/doc/as.texinfo
index 518b38b..3c44770 100644
--- a/gas/doc/as.texinfo
+++ b/gas/doc/as.texinfo
@@ -1706,7 +1706,7 @@ Specify which s390 processor variant is the target, @samp{g5} (or
 @samp{arch3}), @samp{g6}, @samp{z900} (or @samp{arch5}), @samp{z990} (or
 @samp{arch6}), @samp{z9-109}, @samp{z9-ec} (or @samp{arch7}), @samp{z10} (or
 @samp{arch8}), @samp{z196} (or @samp{arch9}), @samp{zEC12} (or @samp{arch10}),
-@samp{z13} (or @samp{arch11}), or @samp{arch12}.
+@samp{z13} (or @samp{arch11}), or @samp{z14} (or @samp{arch12}).
 @item -mregnames
 @itemx -mno-regnames
 Allow or disallow symbolic names for registers.
diff --git a/gas/doc/c-s390.texi b/gas/doc/c-s390.texi
index 5f5a394..0a76827 100644
--- a/gas/doc/c-s390.texi
+++ b/gas/doc/c-s390.texi
@@ -18,7 +18,7 @@ and eleven chip levels. The architecture modes are the Enterprise System
 Architecture (ESA) and the newer z/Architecture mode. The chip levels
 are g5 (or arch3), g6, z900 (or arch5), z990 (or arch6), z9-109, z9-ec
 (or arch7), z10 (or arch8), z196 (or arch9), zEC12 (or arch10), z13
-(or arch11), and arch12.
+(or arch11), and z14 (or arch12).
 
 @menu
 * s390 Options::                Command-line Options.
diff --git a/opcodes/s390-mkopc.c b/opcodes/s390-mkopc.c
index 68c55a9..3286ae6 100644
--- a/opcodes/s390-mkopc.c
+++ b/opcodes/s390-mkopc.c
@@ -374,7 +374,8 @@ main (void)
       else if (strcmp (cpu_string, "z13") == 0
 	       || strcmp (cpu_string, "arch11") == 0)
 	min_cpu = S390_OPCODE_Z13;
-      else if (strcmp (cpu_string, "arch12") == 0)
+      else if (strcmp (cpu_string, "z14") == 0
+	       || strcmp (cpu_string, "arch12") == 0)
 	min_cpu = S390_OPCODE_ARCH12;
       else {
 	fprintf (stderr, "Couldn't parse cpu string %s\n", cpu_string);

commit 04a3789c7b49d4566d180e55e203859b4555890e
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Jul 28 18:35:36 2017 +0200

    S/390: Fix segfault when linking -shared -nostartfiles
    
    Regression-tested on s390x.
    
    bfd/ChangeLog:
    
    2017-07-28  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
    	Backport from mainline
    	2017-07-28  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
    	* elf32-s390.c (elf_s390_finish_dynamic_sections): Add NULL
    	pointer check for htab->elf.irelplt.
    	* elf64-s390.c (elf_s390_finish_dynamic_sections): Likewise.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index a81b982..496a5ca 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,12 @@
+2017-07-28  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
+
+	Backport from mainline
+	2017-07-28  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
+
+	* elf32-s390.c (elf_s390_finish_dynamic_sections): Add NULL
+	pointer check for htab->elf.irelplt.
+	* elf64-s390.c (elf_s390_finish_dynamic_sections): Likewise.
+
 2017-07-25  Tristan Gingold  <gingold@adacore.com>
 
 	* version.m4: Bump version to 2.28.2
diff --git a/bfd/elf32-s390.c b/bfd/elf32-s390.c
index ddb6f5b..7f22ae1 100644
--- a/bfd/elf32-s390.c
+++ b/bfd/elf32-s390.c
@@ -3930,7 +3930,9 @@ elf_s390_finish_dynamic_sections (bfd *output_bfd,
 	      break;
 
 	    case DT_PLTRELSZ:
-	      dyn.d_un.d_val = htab->elf.srelplt->size + htab->elf.irelplt->size;
+	      dyn.d_un.d_val = htab->elf.srelplt->size;
+	      if (htab->elf.irelplt)
+		dyn.d_un.d_val += htab->elf.irelplt->size;
 	      break;
 	    }
 
diff --git a/bfd/elf64-s390.c b/bfd/elf64-s390.c
index fbbf8d6..a59777c 100644
--- a/bfd/elf64-s390.c
+++ b/bfd/elf64-s390.c
@@ -3729,7 +3729,9 @@ elf_s390_finish_dynamic_sections (bfd *output_bfd,
 	      break;
 
 	    case DT_PLTRELSZ:
-	      dyn.d_un.d_val = htab->elf.srelplt->size + htab->elf.irelplt->size;
+	      dyn.d_un.d_val = htab->elf.srelplt->size;
+	      if (htab->elf.irelplt)
+		dyn.d_un.d_val += htab->elf.irelplt->size;
 	      break;
 
 	    case DT_RELASZ:
@@ -3740,7 +3742,9 @@ elf_s390_finish_dynamic_sections (bfd *output_bfd,
 		 linker script arranges for .rela.plt to follow all
 		 other relocation sections, we don't have to worry
 		 about changing the DT_RELA entry.  */
-	      dyn.d_un.d_val -= htab->elf.srelplt->size + htab->elf.irelplt->size;
+	      dyn.d_un.d_val -= htab->elf.srelplt->size;
+	      if (htab->elf.irelplt)
+		dyn.d_un.d_val -= htab->elf.irelplt->size;
 	      break;
 	    }
 

commit a595e022494154dcc2472784252394a035c16cb7
Author: H.J. Lu <hjl.tools@gmail.com>
Date:   Fri Jul 28 13:39:42 2017 -0700

    gold: Add put_ch_reserved to 64-bit Chdr_write
    
    The 64-bit ELF compression header has a reserved field.  It should be
    cleared to avoid random bits in it.
    
    elfcpp/
    
    	PR gold/21857
    	* elfcpp.h (Chdr_write): Add put_ch_reserved.
    	(Chdr_write<64, true>::put_ch_reserved): New.
    	(Chdr_write<64, false>::put_ch_reserved): Likewise.
    
    gold/
    
    	PR gold/21857
    	* compressed_output.cc (Output_compressed_section::set_final_data_size):
    	Call put_ch_reserved to clear the reserved field for 64-bit ELF.
    
    (cherry picked from commit 49ba15a23a9d3d8a109ce2fd5053822eee7f1fdf)

diff --git a/elfcpp/ChangeLog b/elfcpp/ChangeLog
index 6a61d61..b1db015 100644
--- a/elfcpp/ChangeLog
+++ b/elfcpp/ChangeLog
@@ -1,3 +1,10 @@
+2017-07-28  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gold/21857
+	* elfcpp.h (Chdr_write): Add put_ch_reserved.
+	(Chdr_write<64, true>::put_ch_reserved): New.
+	(Chdr_write<64, false>::put_ch_reserved): Likewise.
+
 2017-01-02  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
diff --git a/elfcpp/elfcpp.h b/elfcpp/elfcpp.h
index 43ba5c4..98e1ada 100644
--- a/elfcpp/elfcpp.h
+++ b/elfcpp/elfcpp.h
@@ -1345,10 +1345,27 @@ class Chdr_write
   put_ch_addralign(typename Elf_types<size>::Elf_WXword v)
   { this->p_->ch_addralign = Convert<size, big_endian>::convert_host(v); }
 
+  void
+  put_ch_reserved(Elf_Word);
+
  private:
   internal::Chdr_data<size>* p_;
 };
 
+template<>
+inline void
+elfcpp::Chdr_write<64, true>::put_ch_reserved(Elf_Word v)
+{
+  this->p_->ch_reserved = v;
+}
+
+template<>
+inline void
+elfcpp::Chdr_write<64, false>::put_ch_reserved(Elf_Word v)
+{
+  this->p_->ch_reserved = v;
+}
+
 // Accessor class for an ELF segment header.
 
 template<int size, bool big_endian>
diff --git a/gold/ChangeLog b/gold/ChangeLog
index d27713d..7be51ff 100644
--- a/gold/ChangeLog
+++ b/gold/ChangeLog
@@ -1,3 +1,9 @@
+2017-07-28  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gold/21857
+	* compressed_output.cc (Output_compressed_section::set_final_data_size):
+	Call put_ch_reserved to clear the reserved field for 64-bit ELF.
+
 2017-07-06  Han Shen  <shenhan@google.com>
 
 	PR gold/21491
diff --git a/gold/compressed_output.cc b/gold/compressed_output.cc
index 4374ba1..45077f7 100644
--- a/gold/compressed_output.cc
+++ b/gold/compressed_output.cc
@@ -286,6 +286,8 @@ Output_compressed_section::set_final_data_size()
 		  chdr.put_ch_type(elfcpp::ELFCOMPRESS_ZLIB);
 		  chdr.put_ch_size(uncompressed_size);
 		  chdr.put_ch_addralign(addralign);
+		  // Clear the reserved field.
+		  chdr.put_ch_reserved(0);
 		}
 	      else
 		{
@@ -293,6 +295,8 @@ Output_compressed_section::set_final_data_size()
 		  chdr.put_ch_type(elfcpp::ELFCOMPRESS_ZLIB);
 		  chdr.put_ch_size(uncompressed_size);
 		  chdr.put_ch_addralign(addralign);
+		  // Clear the reserved field.
+		  chdr.put_ch_reserved(0);
 		}
 	    }
 	  else

commit 278fcf38584dd22b992e1da179c06883c2b7d108
Author: Maciej W. Rozycki <macro@imgtec.com>
Date:   Wed Aug 30 15:54:19 2017 +0100

    MIPS/GAS: Also respect `-mignore-branch-isa' with MIPS16 code
    
    Fix a bug in commit 8b10b0b3e100 ("MIPS: Add options to control branch
    ISA checks") and with the `-mignore-branch-isa' command-line option also
    lift a GAS check for invalid MIPS16 branches between ISA modes, which is
    made separately from regular MIPS and microMIPS checks.
    
    	gas/
    	* config/tc-mips.c (md_convert_frag): Respect
    	`mips_ignore_branch_isa'.
    	* testsuite/gas/mips/branch-local-5.d: New test.
    	* testsuite/gas/mips/branch-local-n32-5.d: New test.
    	* testsuite/gas/mips/branch-local-n64-5.d: New test.
    	* testsuite/gas/mips/branch-local-6.d: New test.
    	* testsuite/gas/mips/branch-local-n32-6.d: New test.
    	* testsuite/gas/mips/branch-local-n64-6.d: New test.
    	* testsuite/gas/mips/branch-local-7.d: New test.
    	* testsuite/gas/mips/branch-local-n32-7.d: New test.
    	* testsuite/gas/mips/branch-local-n64-7.d: New test.
    	* testsuite/gas/mips/branch-local-ignore-5.d: New test.
    	* testsuite/gas/mips/branch-local-ignore-n32-5.d: New test.
    	* testsuite/gas/mips/branch-local-ignore-n64-5.d: New test.
    	* testsuite/gas/mips/branch-local-ignore-6.d: New test.
    	* testsuite/gas/mips/branch-local-ignore-n32-6.d: New test.
    	* testsuite/gas/mips/branch-local-ignore-n64-6.d: New test.
    	* testsuite/gas/mips/branch-local-5.l: New stderr output.
    	* testsuite/gas/mips/branch-local-6.l: New stderr output.
    	* testsuite/gas/mips/branch-local-5.s: New test source.
    	* testsuite/gas/mips/branch-local-6.s: New test source.
    	* testsuite/gas/mips/branch-local-7.s: New test source.
    	* testsuite/gas/mips/mips.exp: Run the new tests.
    
    (cherry picked from commit 37b2d327512baf2f39020e44958fd1f11db46a91)

diff --git a/gas/ChangeLog b/gas/ChangeLog
index 0ed8e93..f3c745c 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,29 @@
+2017-08-30  Maciej W. Rozycki  <macro@imgtec.com>
+
+	* config/tc-mips.c (md_convert_frag): Respect
+	`mips_ignore_branch_isa'.
+	* testsuite/gas/mips/branch-local-5.d: New test.
+	* testsuite/gas/mips/branch-local-n32-5.d: New test.
+	* testsuite/gas/mips/branch-local-n64-5.d: New test.
+	* testsuite/gas/mips/branch-local-6.d: New test.
+	* testsuite/gas/mips/branch-local-n32-6.d: New test.
+	* testsuite/gas/mips/branch-local-n64-6.d: New test.
+	* testsuite/gas/mips/branch-local-7.d: New test.
+	* testsuite/gas/mips/branch-local-n32-7.d: New test.
+	* testsuite/gas/mips/branch-local-n64-7.d: New test.
+	* testsuite/gas/mips/branch-local-ignore-5.d: New test.
+	* testsuite/gas/mips/branch-local-ignore-n32-5.d: New test.
+	* testsuite/gas/mips/branch-local-ignore-n64-5.d: New test.
+	* testsuite/gas/mips/branch-local-ignore-6.d: New test.
+	* testsuite/gas/mips/branch-local-ignore-n32-6.d: New test.
+	* testsuite/gas/mips/branch-local-ignore-n64-6.d: New test.
+	* testsuite/gas/mips/branch-local-5.l: New stderr output.
+	* testsuite/gas/mips/branch-local-6.l: New stderr output.
+	* testsuite/gas/mips/branch-local-5.s: New test source.
+	* testsuite/gas/mips/branch-local-6.s: New test source.
+	* testsuite/gas/mips/branch-local-7.s: New test source.
+	* testsuite/gas/mips/mips.exp: Run the new tests.
+
 2017-07-25  Tristan Gingold  <gingold@adacore.com>
 
 	* configure: Regenerate.
diff --git a/gas/config/tc-mips.c b/gas/config/tc-mips.c
index e24e84d..0632adc 100644
--- a/gas/config/tc-mips.c
+++ b/gas/config/tc-mips.c
@@ -18372,7 +18372,8 @@ md_convert_frag (bfd *abfd ATTRIBUTE_UNUSED, segT asec, fragS *fragp)
 	    {
 	      if (!need_reloc)
 		{
-		  if (!ELF_ST_IS_MIPS16 (S_GET_OTHER (fragp->fr_symbol)))
+		  if (!mips_ignore_branch_isa
+		      && !ELF_ST_IS_MIPS16 (S_GET_OTHER (fragp->fr_symbol)))
 		    as_bad_where (fragp->fr_file, fragp->fr_line,
 				  _("branch to a symbol in another ISA mode"));
 		  else if ((fragp->fr_offset & 0x1) != 0)
diff --git a/gas/testsuite/gas/mips/branch-local-5.d b/gas/testsuite/gas/mips/branch-local-5.d
new file mode 100644
index 0000000..8033ced
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-5.d
@@ -0,0 +1,3 @@
+#name: MIPS branch local symbol relocation 5
+#as: -32
+#error-output: branch-local-5.l
diff --git a/gas/testsuite/gas/mips/branch-local-5.l b/gas/testsuite/gas/mips/branch-local-5.l
new file mode 100644
index 0000000..361cf8a
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-5.l
@@ -0,0 +1,4 @@
+.*: Assembler messages:
+.*:19: Error: branch to a symbol in another ISA mode
+.*:21: Error: branch to a symbol in another ISA mode
+.*:23: Error: branch to a symbol in another ISA mode
diff --git a/gas/testsuite/gas/mips/branch-local-5.s b/gas/testsuite/gas/mips/branch-local-5.s
new file mode 100644
index 0000000..a6b8338
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-5.s
@@ -0,0 +1,31 @@
+	.text
+	.set	noreorder
+	.space	0x1000
+
+	.align	4
+	.set	nomips16
+	.ent	foo
+foo:
+	nor	$0, $0
+	jalr	$0, $ra
+	 nor	$0, $0
+	.end	foo
+
+	.align	4
+	.set	mips16
+	.ent	bar
+bar:
+	not	$16, $16
+	b	foo
+	not	$16, $16
+	beqz	$2, foo
+	not	$16, $16
+	bteqz	foo
+	not	$16, $16
+	jr	$ra
+	 not	$16, $16
+	.end	bar
+
+# Force some (non-delay-slot) zero bytes, to make 'objdump' print ...
+	.align	4, 0
+	.space	16
diff --git a/gas/testsuite/gas/mips/branch-local-6.d b/gas/testsuite/gas/mips/branch-local-6.d
new file mode 100644
index 0000000..45a0ede
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-6.d
@@ -0,0 +1,3 @@
+#name: MIPS branch local symbol relocation 6
+#as: -32
+#error-output: branch-local-6.l
diff --git a/gas/testsuite/gas/mips/branch-local-6.l b/gas/testsuite/gas/mips/branch-local-6.l
new file mode 100644
index 0000000..a119ade
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-6.l
@@ -0,0 +1,9 @@
+.*: Assembler messages:
+.*:19: Error: branch to a symbol in another ISA mode
+.*:25: Error: branch to a symbol in another ISA mode
+.*:27: Error: branch to a symbol in another ISA mode
+.*:29: Error: branch to a symbol in another ISA mode
+.*:31: Error: branch to a symbol in another ISA mode
+.*:33: Error: branch to a symbol in another ISA mode
+.*:21: Error: branch to a symbol in another ISA mode
+.*:23: Error: branch to a symbol in another ISA mode
diff --git a/gas/testsuite/gas/mips/branch-local-6.s b/gas/testsuite/gas/mips/branch-local-6.s
new file mode 100644
index 0000000..1a54673
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-6.s
@@ -0,0 +1,41 @@
+	.text
+	.set	noreorder
+	.space	0x1000
+
+	.align	4
+	.set	nomicromips
+	.ent	foo
+foo:
+	nor	$0, $0
+	jalr	$0, $ra
+	 nor	$0, $0
+	.end	foo
+
+	.align	4
+	.set	micromips
+	.ent	bar
+bar:
+	nor	$0, $0
+	beqzc	$2, foo
+	nor	$0, $0
+	b	foo
+	 nor	$0, $0
+	beqz	$2, foo
+	 nor	$0, $0
+	bgezal	$2, foo
+	 nor	$0, $0
+	bgezals	$2, foo
+	 not	$16, $16
+	bltzal	$2, foo
+	 nor	$0, $0
+	bltzals	$2, foo
+	 not	$16, $16
+	bals	foo
+	 not	$16, $16
+	jalr	$0, $ra
+	 nor	$0, $0
+	.end	bar
+
+# Force some (non-delay-slot) zero bytes, to make 'objdump' print ...
+	.align	4, 0
+	.space	16
diff --git a/gas/testsuite/gas/mips/branch-local-7.d b/gas/testsuite/gas/mips/branch-local-7.d
new file mode 100644
index 0000000..0cc2a11
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-7.d
@@ -0,0 +1,20 @@
+#objdump: -dr --prefix-addresses --show-raw-insn
+#name: MIPS branch local symbol relocation 7
+#as: -32
+#source: branch-local-7.s
+
+.*: +file format .*mips.*
+
+Disassembly of section \.text:
+	\.\.\.
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 03e00009 	jalr	zero,ra
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 00000000 	nop
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4060 fffe 	bal	00001014 <bar\+0x4>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	foo
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 001f 0f3c 	jr	ra
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+	\.\.\.
diff --git a/gas/testsuite/gas/mips/branch-local-7.s b/gas/testsuite/gas/mips/branch-local-7.s
new file mode 100644
index 0000000..82d94f3
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-7.s
@@ -0,0 +1,27 @@
+	.text
+	.set	noreorder
+	.space	0x1000
+
+	.align	4
+	.set	nomicromips
+	.ent	foo
+foo:
+	nor	$0, $0
+	jalr	$0, $ra
+	 nor	$0, $0
+	.end	foo
+
+	.align	4
+	.set	micromips
+	.ent	bar
+bar:
+	nor	$0, $0
+	bal	foo
+	 nor	$0, $0
+	jalr	$0, $ra
+	 nor	$0, $0
+	.end	bar
+
+# Force some (non-delay-slot) zero bytes, to make 'objdump' print ...
+	.align	4, 0
+	.space	16
diff --git a/gas/testsuite/gas/mips/branch-local-ignore-5.d b/gas/testsuite/gas/mips/branch-local-ignore-5.d
new file mode 100644
index 0000000..94ffe19
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-ignore-5.d
@@ -0,0 +1,23 @@
+#objdump: -dr --prefix-addresses --show-raw-insn
+#name: MIPS branch local symbol relocation 5 (ignore branch ISA)
+#as: -32 -mignore-branch-isa
+#source: branch-local-5.s
+
+.*: +file format .*mips.*
+
+Disassembly of section \.text:
+	\.\.\.
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 03e00009 	jalr	zero,ra
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 00000000 	nop
+[0-9a-f]+ <[^>]*> e80f      	not	s0
+[0-9a-f]+ <[^>]*> 17f6      	b	0+001000 <foo>
+[0-9a-f]+ <[^>]*> e80f      	not	s0
+[0-9a-f]+ <[^>]*> 22f4      	beqz	v0,0+001000 <foo>
+[0-9a-f]+ <[^>]*> e80f      	not	s0
+[0-9a-f]+ <[^>]*> 60f2      	bteqz	0+001000 <foo>
+[0-9a-f]+ <[^>]*> e80f      	not	s0
+[0-9a-f]+ <[^>]*> e820      	jr	ra
+[0-9a-f]+ <[^>]*> e80f      	not	s0
+	\.\.\.
diff --git a/gas/testsuite/gas/mips/branch-local-ignore-6.d b/gas/testsuite/gas/mips/branch-local-ignore-6.d
new file mode 100644
index 0000000..1565688
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-ignore-6.d
@@ -0,0 +1,41 @@
+#objdump: -dr --prefix-addresses --show-raw-insn
+#name: MIPS branch local symbol relocation 6 (ignore branch ISA)
+#as: -32 -mignore-branch-isa
+#source: branch-local-6.s
+
+.*: +file format .*mips.*
+
+Disassembly of section \.text:
+	\.\.\.
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 03e00009 	jalr	zero,ra
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 00000000 	nop
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 40e2 fffe 	beqzc	v0,00001014 <bar\+0x4>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	foo
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> cfff      	b	0000101c <bar\+0xc>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC10_S1	foo
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 8d7f      	beqz	v0,00001022 <bar\+0x12>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC7_S1	foo
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4062 fffe 	bgezal	v0,00001028 <bar\+0x18>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	foo
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4262 fffe 	bgezals	v0,00001030 <bar\+0x20>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	foo
+[0-9a-f]+ <[^>]*> 4400      	not	s0,s0
+[0-9a-f]+ <[^>]*> 4022 fffe 	bltzal	v0,00001036 <bar\+0x26>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	foo
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4222 fffe 	bltzals	v0,0000103e <bar\+0x2e>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	foo
+[0-9a-f]+ <[^>]*> 4400      	not	s0,s0
+[0-9a-f]+ <[^>]*> 4260 fffe 	bals	00001044 <bar\+0x34>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	foo
+[0-9a-f]+ <[^>]*> 4400      	not	s0,s0
+[0-9a-f]+ <[^>]*> 001f 0f3c 	jr	ra
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+	\.\.\.
diff --git a/gas/testsuite/gas/mips/branch-local-ignore-n32-5.d b/gas/testsuite/gas/mips/branch-local-ignore-n32-5.d
new file mode 100644
index 0000000..3ddd866
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-ignore-n32-5.d
@@ -0,0 +1,5 @@
+#objdump: -dr --prefix-addresses --show-raw-insn
+#name: MIPS branch local symbol relocation 5 (ignore branch ISA, n32)
+#as: -n32 -march=from-abi -mignore-branch-isa
+#source: branch-local-5.s
+#dump: branch-local-ignore-5.d
diff --git a/gas/testsuite/gas/mips/branch-local-ignore-n32-6.d b/gas/testsuite/gas/mips/branch-local-ignore-n32-6.d
new file mode 100644
index 0000000..7b12203
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-ignore-n32-6.d
@@ -0,0 +1,41 @@
+#objdump: -dr --prefix-addresses --show-raw-insn
+#name: MIPS branch local symbol relocation 6 (ignore branch ISA, n32)
+#as: -n32 -march=from-abi -mignore-branch-isa
+#source: branch-local-6.s
+
+.*: +file format .*mips.*
+
+Disassembly of section \.text:
+	\.\.\.
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 03e00009 	jalr	zero,ra
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 00000000 	nop
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 40e2 0000 	beqzc	v0,00001018 <bar\+0x8>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	\.text\+0xffc
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> cc00      	b	0000101e <bar\+0xe>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC10_S1	\.text\+0xffe
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 8d00      	beqz	v0,00001024 <bar\+0x14>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC7_S1	\.text\+0xffe
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4062 0000 	bgezal	v0,0000102c <bar\+0x1c>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	\.text\+0xffc
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4262 0000 	bgezals	v0,00001034 <bar\+0x24>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	\.text\+0xffc
+[0-9a-f]+ <[^>]*> 4400      	not	s0,s0
+[0-9a-f]+ <[^>]*> 4022 0000 	bltzal	v0,0000103a <bar\+0x2a>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	\.text\+0xffc
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4222 0000 	bltzals	v0,00001042 <bar\+0x32>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	\.text\+0xffc
+[0-9a-f]+ <[^>]*> 4400      	not	s0,s0
+[0-9a-f]+ <[^>]*> 4260 0000 	bals	00001048 <bar\+0x38>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	\.text\+0xffc
+[0-9a-f]+ <[^>]*> 4400      	not	s0,s0
+[0-9a-f]+ <[^>]*> 001f 0f3c 	jr	ra
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+	\.\.\.
diff --git a/gas/testsuite/gas/mips/branch-local-ignore-n64-5.d b/gas/testsuite/gas/mips/branch-local-ignore-n64-5.d
new file mode 100644
index 0000000..9f08b33
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-ignore-n64-5.d
@@ -0,0 +1,5 @@
+#objdump: -dr --prefix-addresses --show-raw-insn
+#name: MIPS branch local symbol relocation 5 (ignore branch ISA, n64)
+#as: -64 -march=from-abi -mignore-branch-isa
+#source: branch-local-5.s
+#dump: branch-local-ignore-5.d
diff --git a/gas/testsuite/gas/mips/branch-local-ignore-n64-6.d b/gas/testsuite/gas/mips/branch-local-ignore-n64-6.d
new file mode 100644
index 0000000..2852e98
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-ignore-n64-6.d
@@ -0,0 +1,57 @@
+#objdump: -dr --prefix-addresses --show-raw-insn
+#name: MIPS branch local symbol relocation 6 (ignore branch ISA, n64)
+#as: -64 -march=from-abi -mignore-branch-isa
+#source: branch-local-6.s
+
+.*: +file format .*mips.*
+
+Disassembly of section \.text:
+	\.\.\.
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 03e00009 	jalr	zero,ra
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 00000000 	nop
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 40e2 0000 	beqzc	v0,0000000000001018 <bar\+0x8>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	\.text\+0xffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffc
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> cc00      	b	000000000000101e <bar\+0xe>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC10_S1	\.text\+0xffe
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffe
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffe
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 8d00      	beqz	v0,0000000000001024 <bar\+0x14>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC7_S1	\.text\+0xffe
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffe
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffe
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4062 0000 	bgezal	v0,000000000000102c <bar\+0x1c>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	\.text\+0xffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffc
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4262 0000 	bgezals	v0,0000000000001034 <bar\+0x24>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	\.text\+0xffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffc
+[0-9a-f]+ <[^>]*> 4400      	not	s0,s0
+[0-9a-f]+ <[^>]*> 4022 0000 	bltzal	v0,000000000000103a <bar\+0x2a>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	\.text\+0xffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffc
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4222 0000 	bltzals	v0,0000000000001042 <bar\+0x32>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	\.text\+0xffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffc
+[0-9a-f]+ <[^>]*> 4400      	not	s0,s0
+[0-9a-f]+ <[^>]*> 4260 0000 	bals	0000000000001048 <bar\+0x38>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	\.text\+0xffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffc
+[0-9a-f]+ <[^>]*> 4400      	not	s0,s0
+[0-9a-f]+ <[^>]*> 001f 0f3c 	jr	ra
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+	\.\.\.
diff --git a/gas/testsuite/gas/mips/branch-local-n32-5.d b/gas/testsuite/gas/mips/branch-local-n32-5.d
new file mode 100644
index 0000000..ac1f73e
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-n32-5.d
@@ -0,0 +1,4 @@
+#name: MIPS branch local symbol relocation 5 (n32)
+#as: -n32 -march=from-abi
+#error-output: branch-local-5.l
+#source: branch-local-5.s
diff --git a/gas/testsuite/gas/mips/branch-local-n32-6.d b/gas/testsuite/gas/mips/branch-local-n32-6.d
new file mode 100644
index 0000000..de3fc98
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-n32-6.d
@@ -0,0 +1,4 @@
+#name: MIPS branch local symbol relocation 6 (n32)
+#as: -n32 -march=from-abi
+#error-output: branch-local-6.l
+#source: branch-local-6.s
diff --git a/gas/testsuite/gas/mips/branch-local-n32-7.d b/gas/testsuite/gas/mips/branch-local-n32-7.d
new file mode 100644
index 0000000..5d5b1de
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-n32-7.d
@@ -0,0 +1,20 @@
+#objdump: -dr --prefix-addresses --show-raw-insn
+#name: MIPS branch local symbol relocation 7 (n32)
+#as: -n32 -march=from-abi
+#source: branch-local-7.s
+
+.*: +file format .*mips.*
+
+Disassembly of section \.text:
+	\.\.\.
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 03e00009 	jalr	zero,ra
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 00000000 	nop
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4060 0000 	bal	00001018 <bar\+0x8>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	\.text\+0xffc
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 001f 0f3c 	jr	ra
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+	\.\.\.
diff --git a/gas/testsuite/gas/mips/branch-local-n64-5.d b/gas/testsuite/gas/mips/branch-local-n64-5.d
new file mode 100644
index 0000000..05a396e
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-n64-5.d
@@ -0,0 +1,4 @@
+#name: MIPS branch local symbol relocation 5 (n64)
+#as: -64 -march=from-abi
+#error-output: branch-local-5.l
+#source: branch-local-5.s
diff --git a/gas/testsuite/gas/mips/branch-local-n64-6.d b/gas/testsuite/gas/mips/branch-local-n64-6.d
new file mode 100644
index 0000000..3cd8a33
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-n64-6.d
@@ -0,0 +1,4 @@
+#name: MIPS branch local symbol relocation 6 (n64)
+#as: -64 -march=from-abi
+#error-output: branch-local-6.l
+#source: branch-local-6.s
diff --git a/gas/testsuite/gas/mips/branch-local-n64-7.d b/gas/testsuite/gas/mips/branch-local-n64-7.d
new file mode 100644
index 0000000..56296bd
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-local-n64-7.d
@@ -0,0 +1,22 @@
+#objdump: -dr --prefix-addresses --show-raw-insn
+#name: MIPS branch local symbol relocation 7 (n64)
+#as: -64 -march=from-abi
+#source: branch-local-7.s
+
+.*: +file format .*mips.*
+
+Disassembly of section \.text:
+	\.\.\.
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 03e00009 	jalr	zero,ra
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 00000000 	nop
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4060 0000 	bal	0000000000001018 <bar\+0x8>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	\.text\+0xffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xffc
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 001f 0f3c 	jr	ra
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+	\.\.\.
diff --git a/gas/testsuite/gas/mips/mips.exp b/gas/testsuite/gas/mips/mips.exp
index 5a69542..4df731a 100644
--- a/gas/testsuite/gas/mips/mips.exp
+++ b/gas/testsuite/gas/mips/mips.exp
@@ -630,6 +630,11 @@ if { [istarget mips*-*-vxworks*] } {
     run_dump_test "branch-local-3"
     run_dump_test "branch-local-ignore-3"
     run_dump_test "branch-local-4"
+    run_dump_test "branch-local-5"
+    run_dump_test "branch-local-ignore-5"
+    run_dump_test "branch-local-6"
+    run_dump_test "branch-local-ignore-6"
+    run_dump_test "branch-local-7"
     if $has_newabi {
 	run_dump_test "branch-local-n32-1"
 	run_dump_test "branch-local-n32-2"
@@ -637,12 +642,22 @@ if { [istarget mips*-*-vxworks*] } {
 	run_dump_test "branch-local-n32-3"
 	run_dump_test "branch-local-ignore-n32-3"
 	run_dump_test "branch-local-n32-4"
+	run_dump_test "branch-local-n32-5"
+	run_dump_test "branch-local-ignore-n32-5"
+	run_dump_test "branch-local-n32-6"
+	run_dump_test "branch-local-ignore-n32-6"
+	run_dump_test "branch-local-n32-7"
 	run_dump_test "branch-local-n64-1"
 	run_dump_test "branch-local-n64-2"
 	run_dump_test "branch-local-ignore-n64-2"
 	run_dump_test "branch-local-n64-3"
 	run_dump_test "branch-local-ignore-n64-3"
 	run_dump_test "branch-local-n64-4"
+	run_dump_test "branch-local-n64-5"
+	run_dump_test "branch-local-ignore-n64-5"
+	run_dump_test "branch-local-n64-6"
+	run_dump_test "branch-local-ignore-n64-6"
+	run_dump_test "branch-local-n64-7"
     }
     run_dump_test "branch-addend"
     if $has_newabi {

commit 5f3af8cbbc70b4859b7559b35324236a4658f2c8
Author: Maciej W. Rozycki <macro@imgtec.com>
Date:   Wed Aug 30 16:03:31 2017 +0100

    MIPS/BFD: Correct microMIPS cross-mode BAL to JALX relaxation
    
    Fix a bug in commit a6ebf6169a1b ("MIPS: Convert cross-mode BAL to
    JALX") and in BFD linker relaxation correct the microMIPS interpretation
    of the branch offset, which is supposed to be shifted by 1 bit, rather
    than 2 as in the regular MIPS case.
    
    	bfd/
    	* elfxx-mips.c (mips_elf_perform_relocation): Correct microMIPS
    	branch offset interpretation.
    
    	gas/
    	* testsuite/gas/mips/branch-addend-micromips.d: New test.
    	* testsuite/gas/mips/branch-addend-micromips-n32.d: New test.
    	* testsuite/gas/mips/branch-addend-micromips-n64.d: New test.
    	* testsuite/gas/mips/branch-addend-micromips.s: New test source.
    	* testsuite/gas/mips/mips.exp: Run the new tests.
    
    	ld/
    	* testsuite/ld-mips-elf/bal-jalx-addend-micromips.d: New test.
    	* testsuite/ld-mips-elf/bal-jalx-addend-micromips-n32.d: New
    	test.
    	* testsuite/ld-mips-elf/bal-jalx-addend-micromips-n64.d: New
    	test.
    	* testsuite/ld-mips-elf/bal-jalx-local-micromips.d: New test.
    	* testsuite/ld-mips-elf/bal-jalx-local-micromips-n32.d: New
    	test.
    	* testsuite/ld-mips-elf/bal-jalx-local-micromips-n64.d: New
    	test.
    	* testsuite/ld-mips-elf/bal-jalx-pic-micromips.d: New test.
    	* testsuite/ld-mips-elf/bal-jalx-pic-micromips-n32.d: New test.
    	* testsuite/ld-mips-elf/bal-jalx-pic-micromips-n64.d: New test.
    	* testsuite/ld-mips-elf/bal-jalx-pic-ignore-micromips.d: New
    	test.
    	* testsuite/ld-mips-elf/bal-jalx-pic-ignore-micromips-n32.d: New
    	test.
    	* testsuite/ld-mips-elf/bal-jalx-pic-ignore-micromips-n64.d: New
    	test.
    	* testsuite/ld-mips-elf/mips-elf.exp: Run the new tests.
    
    (cherry picked from commit 70e65ca8e5d1fc984d58f6137c290e807fe772a5)

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 496a5ca..b736f88 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,8 @@
+2017-08-30  Maciej W. Rozycki  <macro@imgtec.com>
+
+	* elfxx-mips.c (mips_elf_perform_relocation): Correct microMIPS
+	branch offset interpretation.
+
 2017-07-28  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
 
 	Backport from mainline
diff --git a/bfd/elfxx-mips.c b/bfd/elfxx-mips.c
index 723853f..62223fb 100644
--- a/bfd/elfxx-mips.c
+++ b/bfd/elfxx-mips.c
@@ -6408,6 +6408,7 @@ mips_elf_perform_relocation (struct bfd_link_info *info,
       bfd_boolean ok = FALSE;
       bfd_vma opcode = x >> 16;
       bfd_vma jalx_opcode = 0;
+      bfd_vma sign_bit = 0;
       bfd_vma addr;
       bfd_vma dest;
 
@@ -6415,12 +6416,14 @@ mips_elf_perform_relocation (struct bfd_link_info *info,
 	{
 	  ok = opcode == 0x4060;
 	  jalx_opcode = 0x3c;
+	  sign_bit = 0x10000;
 	  value <<= 1;
 	}
       else if (r_type == R_MIPS_PC16 || r_type == R_MIPS_GNU_REL16_S2)
 	{
 	  ok = opcode == 0x411;
 	  jalx_opcode = 0x1d;
+	  sign_bit = 0x20000;
 	  value <<= 2;
 	}
 
@@ -6430,7 +6433,8 @@ mips_elf_perform_relocation (struct bfd_link_info *info,
 		  + input_section->output_offset
 		  + relocation->r_offset
 		  + 4);
-	  dest = addr + (((value & 0x3ffff) ^ 0x20000) - 0x20000);
+	  dest = (addr
+		  + (((value & ((sign_bit << 1) - 1)) ^ sign_bit) - sign_bit));
 
 	  if ((addr >> 28) << 28 != (dest >> 28) << 28)
 	    {
diff --git a/gas/ChangeLog b/gas/ChangeLog
index f3c745c..ecab66f 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,5 +1,13 @@
 2017-08-30  Maciej W. Rozycki  <macro@imgtec.com>
 
+	* testsuite/gas/mips/branch-addend-micromips.d: New test.
+	* testsuite/gas/mips/branch-addend-micromips-n32.d: New test.
+	* testsuite/gas/mips/branch-addend-micromips-n64.d: New test.
+	* testsuite/gas/mips/branch-addend-micromips.s: New test source.
+	* testsuite/gas/mips/mips.exp: Run the new tests.
+
+2017-08-30  Maciej W. Rozycki  <macro@imgtec.com>
+
 	* config/tc-mips.c (md_convert_frag): Respect
 	`mips_ignore_branch_isa'.
 	* testsuite/gas/mips/branch-local-5.d: New test.
diff --git a/gas/testsuite/gas/mips/branch-addend-micromips-n32.d b/gas/testsuite/gas/mips/branch-addend-micromips-n32.d
new file mode 100644
index 0000000..085cc22
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-addend-micromips-n32.d
@@ -0,0 +1,23 @@
+#objdump: -dr --prefix-addresses --show-raw-insn
+#name: microMIPS BAL addend encoding (n32)
+#as: -n32 -march=from-abi
+#source: branch-addend-micromips.s
+
+.*: +file format .*mips.*
+
+Disassembly of section \.text:
+	\.\.\.
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 03e00009 	jalr	zero,ra
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 00000000 	nop
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4060 0000 	bal	00001018 <bar\+0x8>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	foo\+0xfffc
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4060 0000 	bal	00001020 <bar\+0x10>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	bar\+0xfffc
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 001f 0f3c 	jr	ra
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+	\.\.\.
diff --git a/gas/testsuite/gas/mips/branch-addend-micromips-n64.d b/gas/testsuite/gas/mips/branch-addend-micromips-n64.d
new file mode 100644
index 0000000..65d0cd2
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-addend-micromips-n64.d
@@ -0,0 +1,27 @@
+#objdump: -dr --prefix-addresses --show-raw-insn
+#name: microMIPS BAL addend encoding (n64)
+#as: -64 -march=from-abi
+#source: branch-addend-micromips.s
+
+.*: +file format .*mips.*
+
+Disassembly of section \.text:
+	\.\.\.
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 03e00009 	jalr	zero,ra
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 00000000 	nop
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4060 0000 	bal	0000000000001018 <bar\+0x8>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	foo\+0xfffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xfffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xfffc
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4060 0000 	bal	0000000000001020 <bar\+0x10>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	bar\+0xfffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xfffc
+[ 	]*[0-9a-f]+: R_MIPS_NONE	\*ABS\*\+0xfffc
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 001f 0f3c 	jr	ra
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+	\.\.\.
diff --git a/gas/testsuite/gas/mips/branch-addend-micromips.d b/gas/testsuite/gas/mips/branch-addend-micromips.d
new file mode 100644
index 0000000..345d9df
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-addend-micromips.d
@@ -0,0 +1,22 @@
+#objdump: -dr --prefix-addresses --show-raw-insn
+#name: microMIPS BAL addend encoding
+#as: -32
+
+.*: +file format .*mips.*
+
+Disassembly of section \.text:
+	\.\.\.
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 03e00009 	jalr	zero,ra
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 00000000 	nop
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4060 7ffe 	bal	00011014 <bar\+0x10004>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	foo
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4060 7ffe 	bal	0001101c <bar\+0x1000c>
+[ 	]*[0-9a-f]+: R_MICROMIPS_PC16_S1	bar
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 001f 0f3c 	jr	ra
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+	\.\.\.
diff --git a/gas/testsuite/gas/mips/branch-addend-micromips.s b/gas/testsuite/gas/mips/branch-addend-micromips.s
new file mode 100644
index 0000000..91d7c8f
--- /dev/null
+++ b/gas/testsuite/gas/mips/branch-addend-micromips.s
@@ -0,0 +1,31 @@
+	.text
+	.set	noreorder
+	.space	0x1000
+
+	.align	4
+	.set	nomicromips
+	.globl	foo
+	.ent	foo
+foo:
+	nor	$0, $0
+	jalr	$0, $ra
+	 nor	$0, $0
+	.end	foo
+
+	.align	4
+	.set	micromips
+	.globl	bar
+	.ent	bar
+bar:
+	nor	$0, $0
+	bal	foo + 0x10000
+	 nor	$0, $0
+	bal	bar + 0x10000
+	 nor	$0, $0
+	jalr	$0, $ra
+	 nor	$0, $0
+	.end	bar
+
+# Force some (non-delay-slot) zero bytes, to make 'objdump' print ...
+	.align	4, 0
+	.space	16
diff --git a/gas/testsuite/gas/mips/mips.exp b/gas/testsuite/gas/mips/mips.exp
index 4df731a..56b4909 100644
--- a/gas/testsuite/gas/mips/mips.exp
+++ b/gas/testsuite/gas/mips/mips.exp
@@ -660,9 +660,12 @@ if { [istarget mips*-*-vxworks*] } {
 	run_dump_test "branch-local-n64-7"
     }
     run_dump_test "branch-addend"
+    run_dump_test "branch-addend-micromips"
     if $has_newabi {
 	run_dump_test "branch-addend-n32"
+	run_dump_test "branch-addend-micromips-n32"
 	run_dump_test "branch-addend-n64"
+	run_dump_test "branch-addend-micromips-n64"
     }
     run_dump_test "branch-absolute"
     run_dump_test "branch-absolute-addend"
diff --git a/ld/ChangeLog b/ld/ChangeLog
index 6b39c0d..0b9865d 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,3 +1,26 @@
+2017-08-30  Maciej W. Rozycki  <macro@imgtec.com>
+
+	* testsuite/ld-mips-elf/bal-jalx-addend-micromips.d: New test.
+	* testsuite/ld-mips-elf/bal-jalx-addend-micromips-n32.d: New
+	test.
+	* testsuite/ld-mips-elf/bal-jalx-addend-micromips-n64.d: New
+	test.
+	* testsuite/ld-mips-elf/bal-jalx-local-micromips.d: New test.
+	* testsuite/ld-mips-elf/bal-jalx-local-micromips-n32.d: New
+	test.
+	* testsuite/ld-mips-elf/bal-jalx-local-micromips-n64.d: New
+	test.
+	* testsuite/ld-mips-elf/bal-jalx-pic-micromips.d: New test.
+	* testsuite/ld-mips-elf/bal-jalx-pic-micromips-n32.d: New test.
+	* testsuite/ld-mips-elf/bal-jalx-pic-micromips-n64.d: New test.
+	* testsuite/ld-mips-elf/bal-jalx-pic-ignore-micromips.d: New
+	test.
+	* testsuite/ld-mips-elf/bal-jalx-pic-ignore-micromips-n32.d: New
+	test.
+	* testsuite/ld-mips-elf/bal-jalx-pic-ignore-micromips-n64.d: New
+	test.
+	* testsuite/ld-mips-elf/mips-elf.exp: Run the new tests.
+
 2017-07-25  Tristan Gingold  <gingold@adacore.com>
 
 	* configure: Regenerate.
diff --git a/ld/testsuite/ld-mips-elf/bal-jalx-addend-micromips-n32.d b/ld/testsuite/ld-mips-elf/bal-jalx-addend-micromips-n32.d
new file mode 100644
index 0000000..9c7aca5
--- /dev/null
+++ b/ld/testsuite/ld-mips-elf/bal-jalx-addend-micromips-n32.d
@@ -0,0 +1,6 @@
+#name: microMIPS BAL/JALX addend calculation (n32)
+#source: ../../../gas/testsuite/gas/mips/branch-addend-micromips.s
+#as: -EB -n32 -march=from-abi
+#ld: -EB -Ttext 0x1c000000 -e 0x1c000000
+#objdump: -dr --prefix-addresses --show-raw-insn
+#dump: bal-jalx-addend-micromips.d
diff --git a/ld/testsuite/ld-mips-elf/bal-jalx-addend-micromips-n64.d b/ld/testsuite/ld-mips-elf/bal-jalx-addend-micromips-n64.d
new file mode 100644
index 0000000..e254c65
--- /dev/null
+++ b/ld/testsuite/ld-mips-elf/bal-jalx-addend-micromips-n64.d
@@ -0,0 +1,6 @@
+#name: microMIPS BAL/JALX addend calculation (n64)
+#source: ../../../gas/testsuite/gas/mips/branch-addend-micromips.s
+#as: -EB -64 -march=from-abi
+#ld: -EB -Ttext 0x1c000000 -e 0x1c000000
+#objdump: -dr --prefix-addresses --show-raw-insn
+#dump: bal-jalx-addend-micromips.d
diff --git a/ld/testsuite/ld-mips-elf/bal-jalx-addend-micromips.d b/ld/testsuite/ld-mips-elf/bal-jalx-addend-micromips.d
new file mode 100644
index 0000000..e066f5d
--- /dev/null
+++ b/ld/testsuite/ld-mips-elf/bal-jalx-addend-micromips.d
@@ -0,0 +1,22 @@
+#name: microMIPS BAL/JALX addend calculation
+#source: ../../../gas/testsuite/gas/mips/branch-addend-micromips.s
+#as: -EB -32
+#ld: -EB -Ttext 0x1c000000 -e 0x1c000000
+#objdump: -dr --prefix-addresses --show-raw-insn
+
+.*: +file format .*mips.*
+
+Disassembly of section \.text:
+	\.\.\.
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 03e00009 	jalr	zero,ra
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 00000000 	nop
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> f300 4400 	jalx	0*1c011000 <.*>
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4060 7ff8 	bal	0*1c011010 <.*>
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 001f 0f3c 	jr	ra
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+	\.\.\.
diff --git a/ld/testsuite/ld-mips-elf/bal-jalx-local-micromips-n32.d b/ld/testsuite/ld-mips-elf/bal-jalx-local-micromips-n32.d
new file mode 100644
index 0000000..16fcb0a
--- /dev/null
+++ b/ld/testsuite/ld-mips-elf/bal-jalx-local-micromips-n32.d
@@ -0,0 +1,6 @@
+#name: microMIPS BAL to JALX conversion for local symbol (n32)
+#source: ../../../gas/testsuite/gas/mips/branch-local-7.s
+#as: -EB -n32 -march=from-abi
+#ld: -EB -Ttext 0x1c000000 -e 0x1c000000
+#objdump: -dr --prefix-addresses --show-raw-insn
+#dump: bal-jalx-local-micromips.d
diff --git a/ld/testsuite/ld-mips-elf/bal-jalx-local-micromips-n64.d b/ld/testsuite/ld-mips-elf/bal-jalx-local-micromips-n64.d
new file mode 100644
index 0000000..d13a9ea
--- /dev/null
+++ b/ld/testsuite/ld-mips-elf/bal-jalx-local-micromips-n64.d
@@ -0,0 +1,6 @@
+#name: microMIPS BAL to JALX conversion for local symbol (n64)
+#source: ../../../gas/testsuite/gas/mips/branch-local-7.s
+#as: -EB -64 -march=from-abi
+#ld: -EB -Ttext 0x1c000000 -e 0x1c000000
+#objdump: -dr --prefix-addresses --show-raw-insn
+#dump: bal-jalx-local-micromips.d
diff --git a/ld/testsuite/ld-mips-elf/bal-jalx-local-micromips.d b/ld/testsuite/ld-mips-elf/bal-jalx-local-micromips.d
new file mode 100644
index 0000000..e944d3b
--- /dev/null
+++ b/ld/testsuite/ld-mips-elf/bal-jalx-local-micromips.d
@@ -0,0 +1,20 @@
+#name: microMIPS BAL to JALX conversion for local symbol
+#source: ../../../gas/testsuite/gas/mips/branch-local-7.s
+#as: -EB -32
+#ld: -EB -Ttext 0x1c000000 -e 0x1c000000
+#objdump: -dr --prefix-addresses --show-raw-insn
+
+.*: +file format .*mips.*
+
+Disassembly of section \.text:
+	\.\.\.
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 03e00009 	jalr	zero,ra
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 00000000 	nop
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> f300 0400 	jalx	0*1c001000 <foo>
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 001f 0f3c 	jr	ra
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+	\.\.\.
diff --git a/ld/testsuite/ld-mips-elf/bal-jalx-pic-ignore-micromips-n32.d b/ld/testsuite/ld-mips-elf/bal-jalx-pic-ignore-micromips-n32.d
new file mode 100644
index 0000000..9a293c5
--- /dev/null
+++ b/ld/testsuite/ld-mips-elf/bal-jalx-pic-ignore-micromips-n32.d
@@ -0,0 +1,6 @@
+#name: microMIPS BAL/JALX in PIC mode (ignore branch ISA, n32)
+#source: ../../../gas/testsuite/gas/mips/branch-addend-micromips.s
+#as: -EB -n32 -march=from-abi
+#ld: -EB -Ttext 0x1c000000 -e 0x1c000000 -shared --ignore-branch-isa
+#objdump: -dr --prefix-addresses --show-raw-insn
+#dump: bal-jalx-pic-ignore-micromips.d
diff --git a/ld/testsuite/ld-mips-elf/bal-jalx-pic-ignore-micromips-n64.d b/ld/testsuite/ld-mips-elf/bal-jalx-pic-ignore-micromips-n64.d
new file mode 100644
index 0000000..2b78bb9
--- /dev/null
+++ b/ld/testsuite/ld-mips-elf/bal-jalx-pic-ignore-micromips-n64.d
@@ -0,0 +1,6 @@
+#name: microMIPS BAL/JALX in PIC mode (ignore branch ISA, n64)
+#source: ../../../gas/testsuite/gas/mips/branch-addend-micromips.s
+#as: -EB -64 -march=from-abi
+#ld: -EB -Ttext 0x1c000000 -e 0x1c000000 -shared --ignore-branch-isa
+#objdump: -dr --prefix-addresses --show-raw-insn
+#dump: bal-jalx-pic-ignore-micromips.d
diff --git a/ld/testsuite/ld-mips-elf/bal-jalx-pic-ignore-micromips.d b/ld/testsuite/ld-mips-elf/bal-jalx-pic-ignore-micromips.d
new file mode 100644
index 0000000..0b48b3a
--- /dev/null
+++ b/ld/testsuite/ld-mips-elf/bal-jalx-pic-ignore-micromips.d
@@ -0,0 +1,22 @@
+#name: microMIPS BAL/JALX in PIC mode (ignore branch ISA)
+#source: ../../../gas/testsuite/gas/mips/branch-addend-micromips.s
+#as: -EB -32
+#ld: -EB -Ttext 0x1c000000 -e 0x1c000000 -shared --ignore-branch-isa
+#objdump: -dr --prefix-addresses --show-raw-insn
+
+.*: +file format .*mips.*
+
+Disassembly of section \.text:
+	\.\.\.
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 03e00009 	jalr	zero,ra
+[0-9a-f]+ <[^>]*> 00000027 	nor	zero,zero,zero
+[0-9a-f]+ <[^>]*> 00000000 	nop
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4060 7ff4 	bal	0*1c011000 <.*>
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 4060 7ff8 	bal	0*1c011010 <.*>
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+[0-9a-f]+ <[^>]*> 001f 0f3c 	jr	ra
+[0-9a-f]+ <[^>]*> 0000 02d0 	not	zero,zero
+	\.\.\.
diff --git a/ld/testsuite/ld-mips-elf/bal-jalx-pic-micromips-n32.d b/ld/testsuite/ld-mips-elf/bal-jalx-pic-micromips-n32.d
new file mode 100644
index 0000000..3b25dc7
--- /dev/null
+++ b/ld/testsuite/ld-mips-elf/bal-jalx-pic-micromips-n32.d
@@ -0,0 +1,6 @@
+#name: microMIPS BAL/JALX in PIC mode (n32)
+#source: ../../../gas/testsuite/gas/mips/branch-addend-micromips.s
+#as: -EB -n32 -march=from-abi
+#ld: -EB -Ttext 0x1c000000 -e 0x1c000000 -shared
+#error: \A[^\n]*: In function `bar':\n
+#error:   \(\.text\+0x1014\): Unsupported branch between ISA modes\Z
diff --git a/ld/testsuite/ld-mips-elf/bal-jalx-pic-micromips-n64.d b/ld/testsuite/ld-mips-elf/bal-jalx-pic-micromips-n64.d
new file mode 100644
index 0000000..d39f114
--- /dev/null
+++ b/ld/testsuite/ld-mips-elf/bal-jalx-pic-micromips-n64.d
@@ -0,0 +1,6 @@
+#name: microMIPS BAL/JALX in PIC mode (n64)
+#source: ../../../gas/testsuite/gas/mips/branch-addend-micromips.s
+#as: -EB -64 -march=from-abi
+#ld: -EB -Ttext 0x1c000000 -e 0x1c000000 -shared
+#error: \A[^\n]*: In function `bar':\n
+#error:   \(\.text\+0x1014\): Unsupported branch between ISA modes\Z
diff --git a/ld/testsuite/ld-mips-elf/bal-jalx-pic-micromips.d b/ld/testsuite/ld-mips-elf/bal-jalx-pic-micromips.d
new file mode 100644
index 0000000..7404d25
--- /dev/null
+++ b/ld/testsuite/ld-mips-elf/bal-jalx-pic-micromips.d
@@ -0,0 +1,6 @@
+#name: microMIPS BAL/JALX in PIC mode
+#source: ../../../gas/testsuite/gas/mips/branch-addend-micromips.s
+#as: -EB -32
+#ld: -EB -Ttext 0x1c000000 -e 0x1c000000 -shared
+#error: \A[^\n]*: In function `bar':\n
+#error:   \(\.text\+0x1014\): Unsupported branch between ISA modes\Z
diff --git a/ld/testsuite/ld-mips-elf/mips-elf.exp b/ld/testsuite/ld-mips-elf/mips-elf.exp
index 7fa11c5..ca44140 100644
--- a/ld/testsuite/ld-mips-elf/mips-elf.exp
+++ b/ld/testsuite/ld-mips-elf/mips-elf.exp
@@ -214,22 +214,43 @@ if { $linux_gnu } {
 run_dump_test "jalx-addend" [list [list ld $abi_ldflags(o32)]]
 run_dump_test "jalx-local" [list [list ld $abi_ldflags(o32)]]
 run_dump_test "bal-jalx-addend" [list [list ld $abi_ldflags(o32)]]
+run_dump_test "bal-jalx-addend-micromips" [list [list ld $abi_ldflags(o32)]]
 run_dump_test "bal-jalx-local" [list [list ld $abi_ldflags(o32)]]
+run_dump_test "bal-jalx-local-micromips" [list [list ld $abi_ldflags(o32)]]
 run_dump_test "bal-jalx-pic" [list [list ld $abi_ldflags(o32)]]
+run_dump_test "bal-jalx-pic-micromips" [list [list ld $abi_ldflags(o32)]]
 run_dump_test "bal-jalx-pic-ignore" [list [list ld $abi_ldflags(o32)]]
+run_dump_test "bal-jalx-pic-ignore-micromips" \
+					[list [list ld $abi_ldflags(o32)]]
 if $has_newabi {
     run_dump_test "jalx-addend-n32" [list [list ld $abi_ldflags(n32)]]
     run_dump_test "jalx-local-n32" [list [list ld $abi_ldflags(n32)]]
     run_dump_test "bal-jalx-addend-n32" [list [list ld $abi_ldflags(n32)]]
+    run_dump_test "bal-jalx-addend-micromips-n32" \
+					[list [list ld $abi_ldflags(n32)]]
     run_dump_test "bal-jalx-local-n32" [list [list ld $abi_ldflags(n32)]]
+    run_dump_test "bal-jalx-local-micromips-n32" \
+					[list [list ld $abi_ldflags(n32)]]
     run_dump_test "bal-jalx-pic-n32" [list [list ld $abi_ldflags(n32)]]
+    run_dump_test "bal-jalx-pic-micromips-n32" \
+					[list [list ld $abi_ldflags(n32)]]
     run_dump_test "bal-jalx-pic-ignore-n32" [list [list ld $abi_ldflags(n32)]]
+    run_dump_test "bal-jalx-pic-ignore-micromips-n32" \
+					[list [list ld $abi_ldflags(n32)]]
     run_dump_test "jalx-addend-n64" [list [list ld $abi_ldflags(n64)]]
     run_dump_test "jalx-local-n64" [list [list ld $abi_ldflags(n64)]]
     run_dump_test "bal-jalx-addend-n64" [list [list ld $abi_ldflags(n64)]]
+    run_dump_test "bal-jalx-addend-micromips-n64" \
+					[list [list ld $abi_ldflags(n64)]]
     run_dump_test "bal-jalx-local-n64" [list [list ld $abi_ldflags(n64)]]
+    run_dump_test "bal-jalx-local-micromips-n64" \
+					[list [list ld $abi_ldflags(n64)]]
     run_dump_test "bal-jalx-pic-n64" [list [list ld $abi_ldflags(n64)]]
+    run_dump_test "bal-jalx-pic-micromips-n64" \
+					[list [list ld $abi_ldflags(n64)]]
     run_dump_test "bal-jalx-pic-ignore-n64" [list [list ld $abi_ldflags(n64)]]
+    run_dump_test "bal-jalx-pic-ignore-micromips-n64" \
+					[list [list ld $abi_ldflags(n64)]]
 }
 
 run_dump_test "unaligned-jalx-0" [list [list ld $abi_ldflags(o32)]]

commit fdb1e6a81b0bd363908139e40d520801cb89e4e0
Author: Jiong Wang <jiong.wang@arm.com>
Date:   Tue Jan 24 09:33:00 2017 +0000

    [ld, testsuite] Always assemble those intermediate .o files used later
    
    ld/
    	* testsuite/ld-plugin/lto.exp (lto_link_elf_tests): Move "Compile 7",
    	"Compile 8a", "Compile 8b"...
    	(lto_compile_elf_tests): ...to here.  Always run these tests.
    	(lto_run_elf_tests): Move "LTO 7"...
    	(lto_run_elf_shared_tests): ...to here.  Restrict these tests on
    	environment where share library is supported.
    
    (cherry picked from commit 077c11e8679ea7fb4fae977327786fea8353132f)

diff --git a/ld/ChangeLog b/ld/ChangeLog
index 0b9865d..7593a08 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,3 +1,14 @@
+2017-09-27  Alan Modra  <amodra@gmail.com>
+
+	Apply from master
+	2017-01-24  Jiong Wang  <jiong.wang@arm.com>
+	* testsuite/ld-plugin/lto.exp (lto_link_elf_tests): Move "Compile 7",
+	"Compile 8a", "Compile 8b"...
+	(lto_compile_elf_tests): ...to here.  Always run these tests.
+	(lto_run_elf_tests): Move "LTO 7"...
+	(lto_run_elf_shared_tests): ...to here.  Restrict these tests on
+	environment where share library is supported.
+
 2017-08-30  Maciej W. Rozycki  <macro@imgtec.com>
 
 	* testsuite/ld-mips-elf/bal-jalx-addend-micromips.d: New test.
diff --git a/ld/testsuite/ld-plugin/lto.exp b/ld/testsuite/ld-plugin/lto.exp
index d1ef17e..49285b4 100644
--- a/ld/testsuite/ld-plugin/lto.exp
+++ b/ld/testsuite/ld-plugin/lto.exp
@@ -214,20 +214,23 @@ if { [at_least_gcc_version 4 7] } {
     ]]
 }
 
-# Generate input files for complex LTO tests for ELF.
-set lto_link_elf_tests [list \
+set lto_compile_elf_tests [list \
   [list "Compile 7" \
    "" "-flto -O2" \
    {lto-7a.c lto-7b.c lto-7c.c} {} ""] \
-  [list "Build liblto-7.so" \
-   "-shared" "-O2 -fpic" \
-   {lto-7d.c} {} "liblto-7.so" "c"] \
   [list "Compile 8a" \
    "" "-O2" \
    {lto-8a.c} {} ""] \
   [list "Compile 8b" \
    "" "-flto -O2" \
    {lto-8b.c} {} ""] \
+]
+
+# Generate input files for complex LTO tests for ELF.
+set lto_link_elf_tests [list \
+  [list "Build liblto-7.so" \
+   "-shared" "-O2 -fpic" \
+   {lto-7d.c} {} "liblto-7.so" "c"] \
   [list "Build liblto-17a.so" \
    "-shared -O2 -fpic -flto -fuse-linker-plugin" "-O2 -fpic -flto" \
    {lto-17a.c} {{"nm" {} "lto-17a.d"}} "liblto-17a.so" "c"] \
@@ -372,11 +375,15 @@ if { [at_least_gcc_version 4 7] } {
     ]]
 }
 
-# LTO run-time tests for ELF
-set lto_run_elf_tests [list \
+# LTO run-time tests for ELF which require shared library support.
+set lto_run_elf_shared_tests [list \
   [list "LTO 7" \
    "-O2 -flto -fuse-linker-plugin tmpdir/lto-7b.o tmpdir/lto-7c.o tmpdir/lto-7a.o -Wl,--no-as-needed tmpdir/liblto-7.so" "" \
    {dummy.c} "lto-7.exe" "lto-7.out" "" "c"] \
+]
+
+# LTO run-time tests for ELF
+set lto_run_elf_tests [list \
   [list "LTO 8" \
    "-O2 -flto -fuse-linker-plugin tmpdir/lto-8b.o tmpdir/lto-8a.o" "" \
    {dummy.c} "lto-8.exe" "lto-8.out" "" "c"] \
@@ -387,6 +394,10 @@ set lto_run_elf_tests [list \
 
 run_cc_link_tests $lto_link_tests
 
+# These compilation tests generate intermediate object files which will be used
+# by some elf tests besides shared libs tests.  So, always compile them.
+run_cc_link_tests $lto_compile_elf_tests
+
 # Restrict these to ELF targets that support shared libs and PIC.
 if { [is_elf_format] && [check_lto_shared_available] } {
     run_cc_link_tests $lto_link_elf_tests
@@ -487,6 +498,10 @@ if { [is_elf_format] } {
     run_ld_link_exec_tests $lto_run_elf_tests
 }
 
+if { [is_elf_format] && [check_lto_shared_available] } {
+    run_ld_link_exec_tests $lto_run_elf_shared_tests
+}
+
 proc pr20103 {cflags libs} {
     global CC
 

commit b805037cf0061e86b1a71cba26fdaff52a46844d
Author: H.J. Lu <hjl.tools@gmail.com>
Date:   Thu Apr 20 07:48:24 2017 -0700

    Handle symbol defined in IR and referenced in DSO
    
    We need to make an IR symbol visible if it is defined in an IR object
    and referenced in a dynamic object.  When --as-needed is used, since
    linker removes the IR symbol reference of the dynamic object if the
    dynamic object isn't needed in the first pass, the IR definition isn't
    visible to the dynamic object even if the dynamic object becomes needed
    in the second pass.  Add dynamic_ref_after_ir_def to bfd_link_hash_entry
    to track IR symbol which is defined in an IR object and later referenced
    in a dynamic object.  dynamic_ref_after_ir_def is preserved when restoring
    the symbol table for unneeded dynamic object.
    
    bfd/
    
    	PR ld/21382
    	* elflink.c (elf_link_add_object_symbols): Preserve
    	dynamic_ref_after_ir_def when restoring the symbol table for
    	unneeded dynamic object.
    
    include/
    
    	PR ld/21382
    	* bfdlink.h (bfd_link_hash_entry): Add dynamic_ref_after_ir_def.
    
    ld/
    
    	PR ld/21382
    	* plugin.c (is_visible_from_outside): Symbol may be visible
    	from outside if dynamic_ref_after_ir_def is set.
    	(plugin_notice): Set dynamic_ref_after_ir_def if the symbol is
    	defined in an IR object and referenced in a dynamic object.
    	* testsuite/ld-plugin/lto.exp: Run PR ld/21382 tests.
    	* testsuite/ld-plugin/pr21382a.c: New file.
    	* testsuite/ld-plugin/pr21382b.c: Likewise.
    
    (cherry picked from commit 59fa66c53823dc695f78669f40ec2eebab3aec42)

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index b736f88..e1c52ca 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,12 @@
+2017-09-27  Alan Modra  <amodra@gmail.com>
+
+	Apply from master
+	2017-04-20  H.J. Lu  <hongjiu.lu@intel.com>
+	PR ld/21382
+	* elflink.c (elf_link_add_object_symbols): Preserve
+	dynamic_ref_after_ir_def when restoring the symbol table for
+	unneeded dynamic object.
+
 2017-08-30  Maciej W. Rozycki  <macro@imgtec.com>
 
 	* elfxx-mips.c (mips_elf_perform_relocation): Correct microMIPS
diff --git a/bfd/elflink.c b/bfd/elflink.c
index f82bd82..3e0d60c 100644
--- a/bfd/elflink.c
+++ b/bfd/elflink.c
@@ -4886,6 +4886,7 @@ error_free_dyn:
 	  struct elf_link_hash_entry *h;
 	  bfd_size_type size;
 	  unsigned int alignment_power;
+	  unsigned int dynamic_ref_after_ir_def;
 
 	  for (p = htab->root.table.table[i]; p != NULL; p = p->next)
 	    {
@@ -4907,6 +4908,10 @@ error_free_dyn:
 		  size = 0;
 		  alignment_power = 0;
 		}
+	      /* Preserve dynamic_ref_after_ir_def so that this symbol
+		 will be exported when the dynamic lib becomes needed
+		 in the second pass.  */
+	      dynamic_ref_after_ir_def = h->root.dynamic_ref_after_ir_def;
 	      memcpy (p, old_ent, htab->root.table.entsize);
 	      old_ent = (char *) old_ent + htab->root.table.entsize;
 	      h = (struct elf_link_hash_entry *) p;
@@ -4923,6 +4928,7 @@ error_free_dyn:
 		  if (alignment_power > h->root.u.c.p->alignment_power)
 		    h->root.u.c.p->alignment_power = alignment_power;
 		}
+	      h->root.dynamic_ref_after_ir_def = dynamic_ref_after_ir_def;
 	    }
 	}
 
diff --git a/include/ChangeLog b/include/ChangeLog
index dddecfb..f73ca48 100644
--- a/include/ChangeLog
+++ b/include/ChangeLog
@@ -1,3 +1,10 @@
+2017-09-27  Alan Modra  <amodra@gmail.com>
+
+	Apply from master
+	2017-04-20  H.J. Lu  <hongjiu.lu@intel.com>
+	PR ld/21382
+	* bfdlink.h (bfd_link_hash_entry): Add dynamic_ref_after_ir_def.
+
 2017-04-03  Palmer Dabbelt  <palmer@dabbelt.com>
 
 	* elf/riscv.h (RISCV_GP_SYMBOL): New define.
diff --git a/include/bfdlink.h b/include/bfdlink.h
index 3835fcb..b4528da 100644
--- a/include/bfdlink.h
+++ b/include/bfdlink.h
@@ -104,6 +104,10 @@ struct bfd_link_hash_entry
      IR object file.  */
   unsigned int non_ir_ref : 1;
 
+  /* Symbol is referenced in a dynamic object after it has been defined
+     in an IR object.  */
+  unsigned int dynamic_ref_after_ir_def : 1;
+
   /* Symbol is a built-in define.  These will be overridden by PROVIDE
      in a linker script.  */
   unsigned int linker_def : 1;
diff --git a/ld/ChangeLog b/ld/ChangeLog
index 7593a08..a29c2ca 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,6 +1,16 @@
 2017-09-27  Alan Modra  <amodra@gmail.com>
 
 	Apply from master
+	2017-04-20  H.J. Lu  <hongjiu.lu@intel.com>
+	PR ld/21382
+	* plugin.c (is_visible_from_outside): Symbol may be visible
+	from outside if dynamic_ref_after_ir_def is set.
+	(plugin_notice): Set dynamic_ref_after_ir_def if the symbol is
+	defined in an IR object and referenced in a dynamic object.
+	* testsuite/ld-plugin/lto.exp: Run PR ld/21382 tests.
+	* testsuite/ld-plugin/pr21382a.c: New file.
+	* testsuite/ld-plugin/pr21382b.c: Likewise.
+
 	2017-01-24  Jiong Wang  <jiong.wang@arm.com>
 	* testsuite/ld-plugin/lto.exp (lto_link_elf_tests): Move "Compile 7",
 	"Compile 8a", "Compile 8b"...
diff --git a/ld/plugin.c b/ld/plugin.c
index 03e2e69..164b5db 100644
--- a/ld/plugin.c
+++ b/ld/plugin.c
@@ -629,7 +629,9 @@ is_visible_from_outside (struct ld_plugin_symbol *lsym,
 
   if (bfd_link_relocatable (&link_info))
     return TRUE;
-  if (link_info.export_dynamic || bfd_link_dll (&link_info))
+  if (blhe->dynamic_ref_after_ir_def
+      || link_info.export_dynamic
+      || bfd_link_dll (&link_info))
     {
       /* Check if symbol is hidden by version script.  */
       if (bfd_hide_sym_by_version (link_info.version_info,
@@ -1316,12 +1318,21 @@ plugin_notice (struct bfd_link_info *info,
       /* If this is a ref, set non_ir_ref.  */
       else if (bfd_is_und_section (section))
 	{
+	   if (h->type == bfd_link_hash_defweak
+	       || h->type == bfd_link_hash_defined)
+	     {
+	       /* Check if the symbol is referenced in a dynamic object
+		  after it has been defined in an IR object.  */
+	       if ((abfd->flags & DYNAMIC) != 0
+		   && is_ir_dummy_bfd (h->u.def.section->owner))
+		 h->dynamic_ref_after_ir_def = TRUE;
+	     }
 	  /* Replace the undefined dummy bfd with the real one.  */
-	  if ((h->type == bfd_link_hash_undefined
-	       || h->type == bfd_link_hash_undefweak)
-	      && (h->u.undef.abfd == NULL
-		  || (h->u.undef.abfd->flags & BFD_PLUGIN) != 0))
-	    h->u.undef.abfd = abfd;
+	   else if ((h->type == bfd_link_hash_undefined
+		     || h->type == bfd_link_hash_undefweak)
+		    && (h->u.undef.abfd == NULL
+			|| (h->u.undef.abfd->flags & BFD_PLUGIN) != 0))
+	     h->u.undef.abfd = abfd;
 	  h->non_ir_ref = TRUE;
 	}
 
diff --git a/ld/testsuite/ld-plugin/lto.exp b/ld/testsuite/ld-plugin/lto.exp
index 49285b4..3e6005d 100644
--- a/ld/testsuite/ld-plugin/lto.exp
+++ b/ld/testsuite/ld-plugin/lto.exp
@@ -282,6 +282,12 @@ set lto_link_elf_tests [list \
   [list "PR ld/14918" \
    "-flto" "-flto" \
    {pr14918.c} {{"readelf" {-d --wide} "pr14918.d"}} "pr14918.exe" "c"] \
+  [list "Build pr21382a.o" \
+   "" "-O2 -flto" \
+   {pr21382a.c} {} "" "c"] \
+  [list "Build pr21382.so" \
+   "-shared" "-O2 -fpic" \
+   {pr21382b.c} {} "pr21382.so" "c"] \
 ]
 
 # Check final symbols in executables.
@@ -380,6 +386,9 @@ set lto_run_elf_shared_tests [list \
   [list "LTO 7" \
    "-O2 -flto -fuse-linker-plugin tmpdir/lto-7b.o tmpdir/lto-7c.o tmpdir/lto-7a.o -Wl,--no-as-needed tmpdir/liblto-7.so" "" \
    {dummy.c} "lto-7.exe" "lto-7.out" "" "c"] \
+  [list "Run pr21382" \
+   "-O2 -flto -fuse-linker-plugin -Wl,--as-needed tmpdir/pr21382a.o tmpdir/pr21382.so" "" \
+   {dummy.c} "pr21382.exe" "pass.out" "" "c"] \
 ]
 
 # LTO run-time tests for ELF
diff --git a/ld/testsuite/ld-plugin/pr21382a.c b/ld/testsuite/ld-plugin/pr21382a.c
new file mode 100644
index 0000000..09b9d75
--- /dev/null
+++ b/ld/testsuite/ld-plugin/pr21382a.c
@@ -0,0 +1,17 @@
+#include <stdio.h>
+
+extern void y (void);
+
+void
+x (void)
+{
+  printf ("PASS\n");
+}
+
+
+int
+main (void)
+{
+  y ();
+  return 0;
+}
diff --git a/ld/testsuite/ld-plugin/pr21382b.c b/ld/testsuite/ld-plugin/pr21382b.c
new file mode 100644
index 0000000..c5b74a9
--- /dev/null
+++ b/ld/testsuite/ld-plugin/pr21382b.c
@@ -0,0 +1,7 @@
+extern void x (void);
+
+void
+y (void)
+{
+  x ();
+}

commit 558f8c38379439f847429905a9e3de05ffc32c7f
Author: Alan Modra <amodra@gmail.com>
Date:   Tue May 16 07:56:41 2017 +0930

    non_ir_ref_dynamic
    
    dynamic_ref_after_ir_def is a little odd compared to other symbol
    flags in that as the name suggests, it is set only for certain
    references after a definition.  It turns out that setting a flag for
    any non-ir reference from a dynamic object can be used to solve the
    problem for which this flag was invented, which I think is a cleaner.
    This patch does that, and sets non_ir_ref only for regular object
    references.
    
    include/
    	* bfdlink.h (struct bfd_link_hash_entry): Update non_ir_ref
    	comment.  Rename dynamic_ref_after_ir_def to non_ir_ref_dynamic.
    ld/
    	* plugin.c (is_visible_from_outside): Use non_ir_ref_dynamic.
    	(plugin_notice): Set non_ir_ref for references from regular
    	objects, non_ir_ref_dynamic for references from dynamic objects.
    bfd/
    	* elf64-ppc.c (add_symbol_adjust): Transfer non_ir_ref_dynamic.
    	* elflink.c (elf_link_add_object_symbols): Update to use
    	non_ir_ref_dynamic.
    	(elf_link_input_bfd): Test non_ir_ref_dynamic in addition to
    	non_ir_ref.
    	* linker.c (_bfd_generic_link_add_one_symbol): Likewise.
    
    (cherry picked from commit 4070765b1a1640ff8f43483cd9ee06727f658dfe)

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index e1c52ca..6043ad8 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,6 +1,14 @@
 2017-09-27  Alan Modra  <amodra@gmail.com>
 
 	Apply from master
+	2017-05-16  Alan Modra  <amodra@gmail.com>
+	* elf64-ppc.c (add_symbol_adjust): Transfer non_ir_ref_dynamic.
+	* elflink.c (elf_link_add_object_symbols): Update to use
+	non_ir_ref_dynamic.
+	(elf_link_input_bfd): Test non_ir_ref_dynamic in addition to
+	non_ir_ref.
+	* linker.c (_bfd_generic_link_add_one_symbol): Likewise.
+
 	2017-04-20  H.J. Lu  <hongjiu.lu@intel.com>
 	PR ld/21382
 	* elflink.c (elf_link_add_object_symbols): Preserve
diff --git a/bfd/elf64-ppc.c b/bfd/elf64-ppc.c
index 765bc6b..12d73a1 100644
--- a/bfd/elf64-ppc.c
+++ b/bfd/elf64-ppc.c
@@ -5106,6 +5106,7 @@ add_symbol_adjust (struct ppc_link_hash_entry *eh, struct bfd_link_info *info)
       /* Propagate reference flags from entry symbol to function
 	 descriptor symbol.  */
       fdh->elf.root.non_ir_ref |= eh->elf.root.non_ir_ref;
+      fdh->elf.root.non_ir_ref_dynamic |= eh->elf.root.non_ir_ref_dynamic;
       fdh->elf.ref_regular |= eh->elf.ref_regular;
       fdh->elf.ref_regular_nonweak |= eh->elf.ref_regular_nonweak;
 
diff --git a/bfd/elflink.c b/bfd/elflink.c
index 3e0d60c..439b387 100644
--- a/bfd/elflink.c
+++ b/bfd/elflink.c
@@ -4886,7 +4886,7 @@ error_free_dyn:
 	  struct elf_link_hash_entry *h;
 	  bfd_size_type size;
 	  unsigned int alignment_power;
-	  unsigned int dynamic_ref_after_ir_def;
+	  unsigned int non_ir_ref_dynamic;
 
 	  for (p = htab->root.table.table[i]; p != NULL; p = p->next)
 	    {
@@ -4908,10 +4908,10 @@ error_free_dyn:
 		  size = 0;
 		  alignment_power = 0;
 		}
-	      /* Preserve dynamic_ref_after_ir_def so that this symbol
+	      /* Preserve non_ir_ref_dynamic so that this symbol
 		 will be exported when the dynamic lib becomes needed
 		 in the second pass.  */
-	      dynamic_ref_after_ir_def = h->root.dynamic_ref_after_ir_def;
+	      non_ir_ref_dynamic = h->root.non_ir_ref_dynamic;
 	      memcpy (p, old_ent, htab->root.table.entsize);
 	      old_ent = (char *) old_ent + htab->root.table.entsize;
 	      h = (struct elf_link_hash_entry *) p;
@@ -4928,7 +4928,7 @@ error_free_dyn:
 		  if (alignment_power > h->root.u.c.p->alignment_power)
 		    h->root.u.c.p->alignment_power = alignment_power;
 		}
-	      h->root.dynamic_ref_after_ir_def = dynamic_ref_after_ir_def;
+	      h->root.non_ir_ref_dynamic = non_ir_ref_dynamic;
 	    }
 	}
 
@@ -10346,7 +10346,8 @@ elf_link_input_bfd (struct elf_final_link_info *flinfo, bfd *input_bfd)
 		     linker may attach linker created dynamic sections
 		     to the plugin bfd.  Symbols defined in linker
 		     created sections are not plugin symbols.  */
-		  if (h->root.non_ir_ref
+		  if ((h->root.non_ir_ref
+		       || h->root.non_ir_ref_dynamic)
 		      && (h->root.type == bfd_link_hash_defined
 			  || h->root.type == bfd_link_hash_defweak)
 		      && (h->root.u.def.section->flags
diff --git a/bfd/linker.c b/bfd/linker.c
index c3ec4fe..577f504 100644
--- a/bfd/linker.c
+++ b/bfd/linker.c
@@ -1736,7 +1736,8 @@ _bfd_generic_link_add_one_symbol (struct bfd_link_info *info,
 	     otherwise add a warning.  */
 	  if ((!info->lto_plugin_active
 	       && (h->u.undef.next != NULL || info->hash->undefs_tail == h))
-	      || h->non_ir_ref)
+	      || h->non_ir_ref
+	      || h->non_ir_ref_dynamic)
 	    {
 	      (*info->callbacks->warning) (info, string, h->root.string,
 					   hash_entry_bfd (h), NULL, 0);
diff --git a/include/ChangeLog b/include/ChangeLog
index f73ca48..c99dcfe 100644
--- a/include/ChangeLog
+++ b/include/ChangeLog
@@ -1,6 +1,10 @@
 2017-09-27  Alan Modra  <amodra@gmail.com>
 
 	Apply from master
+	2017-05-16  Alan Modra  <amodra@gmail.com>
+	* bfdlink.h (struct bfd_link_hash_entry): Update non_ir_ref
+	comment.  Rename dynamic_ref_after_ir_def to non_ir_ref_dynamic.
+
 	2017-04-20  H.J. Lu  <hongjiu.lu@intel.com>
 	PR ld/21382
 	* bfdlink.h (bfd_link_hash_entry): Add dynamic_ref_after_ir_def.
diff --git a/include/bfdlink.h b/include/bfdlink.h
index b4528da..2724610 100644
--- a/include/bfdlink.h
+++ b/include/bfdlink.h
@@ -100,13 +100,13 @@ struct bfd_link_hash_entry
   /* Type of this entry.  */
   ENUM_BITFIELD (bfd_link_hash_type) type : 8;
 
-  /* Symbol is referenced in a normal object file, as distict from a LTO
-     IR object file.  */
+  /* Symbol is referenced in a normal regular object file,
+     as distinct from a LTO IR object file.  */
   unsigned int non_ir_ref : 1;
 
-  /* Symbol is referenced in a dynamic object after it has been defined
-     in an IR object.  */
-  unsigned int dynamic_ref_after_ir_def : 1;
+  /* Symbol is referenced in a normal dynamic object file,
+     as distinct from a LTO IR object file.  */
+  unsigned int non_ir_ref_dynamic : 1;
 
   /* Symbol is a built-in define.  These will be overridden by PROVIDE
      in a linker script.  */
diff --git a/ld/ChangeLog b/ld/ChangeLog
index a29c2ca..2720d52 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,6 +1,11 @@
 2017-09-27  Alan Modra  <amodra@gmail.com>
 
 	Apply from master
+	2017-05-16  Alan Modra  <amodra@gmail.com>
+	* plugin.c (is_visible_from_outside): Use non_ir_ref_dynamic.
+	(plugin_notice): Set non_ir_ref for references from regular
+	objects, non_ir_ref_dynamic for references from dynamic objects.
+
 	2017-04-20  H.J. Lu  <hongjiu.lu@intel.com>
 	PR ld/21382
 	* plugin.c (is_visible_from_outside): Symbol may be visible
diff --git a/ld/plugin.c b/ld/plugin.c
index 164b5db..087cedc 100644
--- a/ld/plugin.c
+++ b/ld/plugin.c
@@ -629,7 +629,7 @@ is_visible_from_outside (struct ld_plugin_symbol *lsym,
 
   if (bfd_link_relocatable (&link_info))
     return TRUE;
-  if (blhe->dynamic_ref_after_ir_def
+  if (blhe->non_ir_ref_dynamic
       || link_info.export_dynamic
       || bfd_link_dll (&link_info))
     {
@@ -1266,9 +1266,10 @@ plugin_call_cleanup (void)
 /* To determine which symbols should be resolved LDPR_PREVAILING_DEF
    and which LDPR_PREVAILING_DEF_IRONLY, we notice all the symbols as
    the linker adds them to the linker hash table.  Mark those
-   referenced from a non-IR file with non_ir_ref.  We have to
-   notice_all symbols, because we won't necessarily know until later
-   which ones will be contributed by IR files.  */
+   referenced from a non-IR file with non_ir_ref or
+   non_ir_ref_dynamic as appropriate.  We have to notice_all symbols,
+   because we won't necessarily know until later which ones will be
+   contributed by IR files.  */
 static bfd_boolean
 plugin_notice (struct bfd_link_info *info,
 	       struct bfd_link_hash_entry *h,
@@ -1283,6 +1284,7 @@ plugin_notice (struct bfd_link_info *info,
   if (h != NULL)
     {
       bfd *sym_bfd;
+      bfd_boolean ref = FALSE;
 
       if (h->type == bfd_link_hash_warning)
 	h = h->u.i.link;
@@ -1298,13 +1300,17 @@ plugin_notice (struct bfd_link_info *info,
 	{
 	  /* ??? Some of this is questionable.  See comments in
 	     _bfd_generic_link_add_one_symbol for case IND.  */
-	  if (h->type != bfd_link_hash_new)
+	  if (h->type != bfd_link_hash_new
+	      || inh->type == bfd_link_hash_new)
 	    {
-	      h->non_ir_ref = TRUE;
-	      inh->non_ir_ref = TRUE;
+	      if ((abfd->flags & DYNAMIC) == 0)
+		inh->non_ir_ref = TRUE;
+	      else
+		inh->non_ir_ref_dynamic = TRUE;
 	    }
-	  else if (inh->type == bfd_link_hash_new)
-	    inh->non_ir_ref = TRUE;
+
+	  if (h->type != bfd_link_hash_new)
+	    ref = TRUE;
 	}
 
       /* Nothing to do here for warning symbols.  */
@@ -1318,34 +1324,18 @@ plugin_notice (struct bfd_link_info *info,
       /* If this is a ref, set non_ir_ref.  */
       else if (bfd_is_und_section (section))
 	{
-	   if (h->type == bfd_link_hash_defweak
-	       || h->type == bfd_link_hash_defined)
-	     {
-	       /* Check if the symbol is referenced in a dynamic object
-		  after it has been defined in an IR object.  */
-	       if ((abfd->flags & DYNAMIC) != 0
-		   && is_ir_dummy_bfd (h->u.def.section->owner))
-		 h->dynamic_ref_after_ir_def = TRUE;
-	     }
 	  /* Replace the undefined dummy bfd with the real one.  */
-	   else if ((h->type == bfd_link_hash_undefined
-		     || h->type == bfd_link_hash_undefweak)
-		    && (h->u.undef.abfd == NULL
-			|| (h->u.undef.abfd->flags & BFD_PLUGIN) != 0))
+	   if ((h->type == bfd_link_hash_undefined
+		|| h->type == bfd_link_hash_undefweak)
+	       && (h->u.undef.abfd == NULL
+		   || (h->u.undef.abfd->flags & BFD_PLUGIN) != 0))
 	     h->u.undef.abfd = abfd;
-	  h->non_ir_ref = TRUE;
+	  ref = TRUE;
 	}
 
       /* Otherwise, it must be a new def.  */
       else
 	{
-	  /* A common symbol should be merged with other commons or
-	     defs with the same name.  In particular, a common ought
-	     to be overridden by a def in a -flto object.  In that
-	     sense a common is also a ref.  */
-	  if (bfd_is_com_section (section))
-	    h->non_ir_ref = TRUE;
-
 	  /* Ensure any symbol defined in an IR dummy BFD takes on a
 	     new value from a real BFD.  Weak symbols are not normally
 	     overridden by a new weak definition, and strong symbols
@@ -1360,6 +1350,21 @@ plugin_notice (struct bfd_link_info *info,
 	      h->type = bfd_link_hash_undefweak;
 	      h->u.undef.abfd = sym_bfd;
 	    }
+
+	  /* A common symbol should be merged with other commons or
+	     defs with the same name.  In particular, a common ought
+	     to be overridden by a def in a -flto object.  In that
+	     sense a common is also a ref.  */
+	  if (bfd_is_com_section (section))
+	    ref = TRUE;
+	}
+
+      if (ref)
+	{
+	  if ((abfd->flags & DYNAMIC) == 0)
+	    h->non_ir_ref = TRUE;
+	  else
+	    h->non_ir_ref_dynamic = TRUE;
 	}
     }
 

commit d0be41fe4082db1ebb1c20e8ed118ead79cb3e03
Author: Alan Modra <amodra@gmail.com>
Date:   Tue May 16 07:58:14 2017 +0930

    Rename non_ir_ref to non_ir_ref_regular
    
    Since the flag is now set only for regular object refs.
    
    include/
    	* bfdlink.h (struct bfd_link_hash_entry <non_ir_ref>): Rename to
    	non_ir_ref_regular.
    bfd/
    	* elf-m10300.c: Rename occurrences of non_ir_ref.
    	* elf32-arm.c: Likewise.
    	* elf32-bfin.c: Likewise.
    	* elf32-cr16.c: Likewise.
    	* elf32-cris.c: Likewise.
    	* elf32-d10v.c: Likewise.
    	* elf32-dlx.c: Likewise.
    	* elf32-fr30.c: Likewise.
    	* elf32-frv.c: Likewise.
    	* elf32-hppa.c: Likewise.
    	* elf32-i370.c: Likewise.
    	* elf32-i386.c: Likewise.
    	* elf32-iq2000.c: Likewise.
    	* elf32-lm32.c: Likewise.
    	* elf32-m32c.c: Likewise.
    	* elf32-m32r.c: Likewise.
    	* elf32-m68hc1x.c: Likewise.
    	* elf32-m68k.c: Likewise.
    	* elf32-mcore.c: Likewise.
    	* elf32-metag.c: Likewise.
    	* elf32-microblaze.c: Likewise.
    	* elf32-moxie.c: Likewise.
    	* elf32-msp430.c: Likewise.
    	* elf32-mt.c: Likewise.
    	* elf32-nios2.c: Likewise.
    	* elf32-or1k.c: Likewise.
    	* elf32-ppc.c: Likewise.
    	* elf32-rl78.c: Likewise.
    	* elf32-s390.c: Likewise.
    	* elf32-score.c: Likewise.
    	* elf32-score7.c: Likewise.
    	* elf32-sh.c: Likewise.
    	* elf32-tic6x.c: Likewise.
    	* elf32-tilepro.c: Likewise.
    	* elf32-v850.c: Likewise.
    	* elf32-vax.c: Likewise.
    	* elf32-xstormy16.c: Likewise.
    	* elf32-xtensa.c: Likewise.
    	* elf64-alpha.c: Likewise.
    	* elf64-hppa.c: Likewise.
    	* elf64-ia64-vms.c: Likewise.
    	* elf64-mmix.c: Likewise.
    	* elf64-ppc.c: Likewise.
    	* elf64-s390.c: Likewise.
    	* elf64-sh64.c: Likewise.
    	* elf64-x86-64.c: Likewise.
    	* elflink.c: Likewise.
    	* elfnn-aarch64.c: Likewise.
    	* elfnn-ia64.c: Likewise.
    	* elfnn-riscv.c: Likewise.
    	* elfxx-mips.c: Likewise.
    	* elfxx-sparc.c: Likewise.
    	* elfxx-tilegx.c: Likewise.
    	* linker.c: Likewise.
    ld/
    	* plugin.c: Rename occurrences of non_ir_ref.
    
    (cherry picked from commit bc4e12ded1d4c8d589d82b2a10ade6b47f219db3)

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 6043ad8..b0870df 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -2,6 +2,62 @@
 
 	Apply from master
 	2017-05-16  Alan Modra  <amodra@gmail.com>
+	* elf-m10300.c: Rename occurrences of non_ir_ref.
+	* elf32-arm.c: Likewise.
+	* elf32-bfin.c: Likewise.
+	* elf32-cr16.c: Likewise.
+	* elf32-cris.c: Likewise.
+	* elf32-d10v.c: Likewise.
+	* elf32-dlx.c: Likewise.
+	* elf32-fr30.c: Likewise.
+	* elf32-frv.c: Likewise.
+	* elf32-hppa.c: Likewise.
+	* elf32-i370.c: Likewise.
+	* elf32-i386.c: Likewise.
+	* elf32-iq2000.c: Likewise.
+	* elf32-lm32.c: Likewise.
+	* elf32-m32c.c: Likewise.
+	* elf32-m32r.c: Likewise.
+	* elf32-m68hc1x.c: Likewise.
+	* elf32-m68k.c: Likewise.
+	* elf32-mcore.c: Likewise.
+	* elf32-metag.c: Likewise.
+	* elf32-microblaze.c: Likewise.
+	* elf32-moxie.c: Likewise.
+	* elf32-msp430.c: Likewise.
+	* elf32-mt.c: Likewise.
+	* elf32-nios2.c: Likewise.
+	* elf32-or1k.c: Likewise.
+	* elf32-ppc.c: Likewise.
+	* elf32-rl78.c: Likewise.
+	* elf32-s390.c: Likewise.
+	* elf32-score.c: Likewise.
+	* elf32-score7.c: Likewise.
+	* elf32-sh.c: Likewise.
+	* elf32-tic6x.c: Likewise.
+	* elf32-tilepro.c: Likewise.
+	* elf32-v850.c: Likewise.
+	* elf32-vax.c: Likewise.
+	* elf32-xstormy16.c: Likewise.
+	* elf32-xtensa.c: Likewise.
+	* elf64-alpha.c: Likewise.
+	* elf64-hppa.c: Likewise.
+	* elf64-ia64-vms.c: Likewise.
+	* elf64-mmix.c: Likewise.
+	* elf64-ppc.c: Likewise.
+	* elf64-s390.c: Likewise.
+	* elf64-sh64.c: Likewise.
+	* elf64-x86-64.c: Likewise.
+	* elflink.c: Likewise.
+	* elfnn-aarch64.c: Likewise.
+	* elfnn-ia64.c: Likewise.
+	* elfnn-riscv.c: Likewise.
+	* elfxx-mips.c: Likewise.
+	* elfxx-sparc.c: Likewise.
+	* elfxx-tilegx.c: Likewise.
+	* linker.c: Likewise.
+
+	2017-05-16  Alan Modra  <amodra@gmail.com>
 	* elf64-ppc.c (add_symbol_adjust): Transfer non_ir_ref_dynamic.
 	* elflink.c (elf_link_add_object_symbols): Update to use
 	non_ir_ref_dynamic.
diff --git a/bfd/elf-m10300.c b/bfd/elf-m10300.c
index e7d466b..66bdca7 100644
--- a/bfd/elf-m10300.c
+++ b/bfd/elf-m10300.c
@@ -1094,7 +1094,7 @@ mn10300_elf_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       r_type = ELF32_R_TYPE (rel->r_info);
diff --git a/bfd/elf32-arm.c b/bfd/elf32-arm.c
index 9f956d3..7b142a0 100644
--- a/bfd/elf32-arm.c
+++ b/bfd/elf32-arm.c
@@ -14553,7 +14553,7 @@ elf32_arm_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	      /* PR15323, ref flags aren't set for references in the
 		 same object.  */
-	      h->root.non_ir_ref = 1;
+	      h->root.non_ir_ref_regular = 1;
 	    }
 	}
 
diff --git a/bfd/elf32-bfin.c b/bfd/elf32-bfin.c
index 2a53903..9a43409 100644
--- a/bfd/elf32-bfin.c
+++ b/bfd/elf32-bfin.c
@@ -1191,7 +1191,7 @@ bfin_check_relocs (bfd * abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (ELF32_R_TYPE (rel->r_info))
diff --git a/bfd/elf32-cr16.c b/bfd/elf32-cr16.c
index 92aa0c8..c36388e 100644
--- a/bfd/elf32-cr16.c
+++ b/bfd/elf32-cr16.c
@@ -738,7 +738,7 @@ cr16_elf_check_relocs (bfd *abfd, struct bfd_link_info *info, asection *sec,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
         }
 
       /* Some relocs require a global offset table.  */
diff --git a/bfd/elf32-cris.c b/bfd/elf32-cris.c
index d4bbceb..83c4101 100644
--- a/bfd/elf32-cris.c
+++ b/bfd/elf32-cris.c
@@ -3178,7 +3178,7 @@ cris_elf_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       r_type = ELF32_R_TYPE (rel->r_info);
diff --git a/bfd/elf32-d10v.c b/bfd/elf32-d10v.c
index 6b6fb34..d284d4f 100644
--- a/bfd/elf32-d10v.c
+++ b/bfd/elf32-d10v.c
@@ -294,7 +294,7 @@ elf32_d10v_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (ELF32_R_TYPE (rel->r_info))
diff --git a/bfd/elf32-dlx.c b/bfd/elf32-dlx.c
index 965d866..b12d24a 100644
--- a/bfd/elf32-dlx.c
+++ b/bfd/elf32-dlx.c
@@ -454,7 +454,7 @@ elf32_dlx_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (ELF32_R_TYPE (rel->r_info))
diff --git a/bfd/elf32-fr30.c b/bfd/elf32-fr30.c
index f668074..94070d8 100644
--- a/bfd/elf32-fr30.c
+++ b/bfd/elf32-fr30.c
@@ -673,7 +673,7 @@ fr30_elf_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (ELF32_R_TYPE (rel->r_info))
diff --git a/bfd/elf32-frv.c b/bfd/elf32-frv.c
index f998690..415c92d 100644
--- a/bfd/elf32-frv.c
+++ b/bfd/elf32-frv.c
@@ -6041,7 +6041,7 @@ elf32_frv_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (ELF32_R_TYPE (rel->r_info))
diff --git a/bfd/elf32-hppa.c b/bfd/elf32-hppa.c
index 1deebf4..0087c71 100644
--- a/bfd/elf32-hppa.c
+++ b/bfd/elf32-hppa.c
@@ -1171,7 +1171,7 @@ elf32_hppa_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  hh->eh.root.non_ir_ref = 1;
+	  hh->eh.root.non_ir_ref_regular = 1;
 	}
 
       r_type = ELF32_R_TYPE (rela->r_info);
diff --git a/bfd/elf32-i370.c b/bfd/elf32-i370.c
index f8e825f..4c40b79 100644
--- a/bfd/elf32-i370.c
+++ b/bfd/elf32-i370.c
@@ -839,7 +839,7 @@ i370_elf_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       if (bfd_link_pic (info))
diff --git a/bfd/elf32-i386.c b/bfd/elf32-i386.c
index f570253..3ee61bb 100644
--- a/bfd/elf32-i386.c
+++ b/bfd/elf32-i386.c
@@ -1978,7 +1978,7 @@ elf_i386_check_relocs (bfd *abfd,
 
 	  /* It is referenced by a non-shared object. */
 	  h->ref_regular = 1;
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 
 	  if (h->type == STT_GNU_IFUNC)
 	    elf_tdata (info->output_bfd)->has_gnu_symbols
diff --git a/bfd/elf32-iq2000.c b/bfd/elf32-iq2000.c
index f28e751..8baec19 100644
--- a/bfd/elf32-iq2000.c
+++ b/bfd/elf32-iq2000.c
@@ -486,7 +486,7 @@ iq2000_elf_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (ELF32_R_TYPE (rel->r_info))
diff --git a/bfd/elf32-lm32.c b/bfd/elf32-lm32.c
index a6fafef..aabf49f 100644
--- a/bfd/elf32-lm32.c
+++ b/bfd/elf32-lm32.c
@@ -1272,7 +1272,7 @@ lm32_elf_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       /* Some relocs require a global offset table.  */
diff --git a/bfd/elf32-m32c.c b/bfd/elf32-m32c.c
index b5e2474..53ae9b1 100644
--- a/bfd/elf32-m32c.c
+++ b/bfd/elf32-m32c.c
@@ -689,7 +689,7 @@ m32c_elf_check_relocs
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (ELF32_R_TYPE (rel->r_info))
diff --git a/bfd/elf32-m32r.c b/bfd/elf32-m32r.c
index 645a1ff..3c591fa 100644
--- a/bfd/elf32-m32r.c
+++ b/bfd/elf32-m32r.c
@@ -3706,7 +3706,7 @@ m32r_elf_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       /* Some relocs require a global offset table.  */
diff --git a/bfd/elf32-m68hc1x.c b/bfd/elf32-m68hc1x.c
index 86e52d8..96fc96f 100644
--- a/bfd/elf32-m68hc1x.c
+++ b/bfd/elf32-m68hc1x.c
@@ -879,7 +879,7 @@ elf32_m68hc11_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (ELF32_R_TYPE (rel->r_info))
diff --git a/bfd/elf32-m68k.c b/bfd/elf32-m68k.c
index 20e6362..932d8ff 100644
--- a/bfd/elf32-m68k.c
+++ b/bfd/elf32-m68k.c
@@ -2590,7 +2590,7 @@ elf_m68k_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (ELF32_R_TYPE (rel->r_info))
diff --git a/bfd/elf32-mcore.c b/bfd/elf32-mcore.c
index 79c0da6..0037129 100644
--- a/bfd/elf32-mcore.c
+++ b/bfd/elf32-mcore.c
@@ -629,7 +629,7 @@ mcore_elf_check_relocs (bfd * abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (ELF32_R_TYPE (rel->r_info))
diff --git a/bfd/elf32-metag.c b/bfd/elf32-metag.c
index c45d719..94eda953 100644
--- a/bfd/elf32-metag.c
+++ b/bfd/elf32-metag.c
@@ -2132,7 +2132,7 @@ elf_metag_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  hh->eh.root.non_ir_ref = 1;
+	  hh->eh.root.non_ir_ref_regular = 1;
 	}
 
       /* Some relocs require a global offset table.  */
diff --git a/bfd/elf32-microblaze.c b/bfd/elf32-microblaze.c
index 7765fe8..cb83765 100644
--- a/bfd/elf32-microblaze.c
+++ b/bfd/elf32-microblaze.c
@@ -2315,7 +2315,7 @@ microblaze_elf_check_relocs (bfd * abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (r_type)
diff --git a/bfd/elf32-moxie.c b/bfd/elf32-moxie.c
index fde9b64..f955096 100644
--- a/bfd/elf32-moxie.c
+++ b/bfd/elf32-moxie.c
@@ -359,7 +359,7 @@ moxie_elf_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
     }
 
diff --git a/bfd/elf32-msp430.c b/bfd/elf32-msp430.c
index 43fcff5..0e4c05c 100644
--- a/bfd/elf32-msp430.c
+++ b/bfd/elf32-msp430.c
@@ -698,7 +698,7 @@ elf32_msp430_check_relocs (bfd * abfd, struct bfd_link_info * info,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
     }
 
diff --git a/bfd/elf32-mt.c b/bfd/elf32-mt.c
index 9e58a7f..db89f8c 100644
--- a/bfd/elf32-mt.c
+++ b/bfd/elf32-mt.c
@@ -458,7 +458,7 @@ mt_elf_check_relocs
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
     }
 
diff --git a/bfd/elf32-nios2.c b/bfd/elf32-nios2.c
index a2045bf..50a09ea 100644
--- a/bfd/elf32-nios2.c
+++ b/bfd/elf32-nios2.c
@@ -4734,7 +4734,7 @@ nios2_elf32_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       r_type = ELF32_R_TYPE (rel->r_info);
diff --git a/bfd/elf32-or1k.c b/bfd/elf32-or1k.c
index 224cbb8..583f2d4 100644
--- a/bfd/elf32-or1k.c
+++ b/bfd/elf32-or1k.c
@@ -1404,7 +1404,7 @@ or1k_elf_check_relocs (bfd *abfd,
 
           /* PR15323, ref flags aren't set for references in the same
              object.  */
-          h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
         }
 
       switch (ELF32_R_TYPE (rel->r_info))
diff --git a/bfd/elf32-ppc.c b/bfd/elf32-ppc.c
index 10caa8a..6077cc2 100644
--- a/bfd/elf32-ppc.c
+++ b/bfd/elf32-ppc.c
@@ -4043,7 +4043,7 @@ ppc_elf_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       /* If a relocation refers to _GLOBAL_OFFSET_TABLE_, create the .got.
diff --git a/bfd/elf32-rl78.c b/bfd/elf32-rl78.c
index 42e2568..da54237 100644
--- a/bfd/elf32-rl78.c
+++ b/bfd/elf32-rl78.c
@@ -1328,7 +1328,7 @@ rl78_elf_check_relocs
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (ELF32_R_TYPE (rel->r_info))
diff --git a/bfd/elf32-s390.c b/bfd/elf32-s390.c
index 7f22ae1..c71dd94 100644
--- a/bfd/elf32-s390.c
+++ b/bfd/elf32-s390.c
@@ -996,7 +996,7 @@ elf_s390_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       /* Create got section and local_got_refcounts array if they
diff --git a/bfd/elf32-score.c b/bfd/elf32-score.c
index 98170df..b9ac71d 100644
--- a/bfd/elf32-score.c
+++ b/bfd/elf32-score.c
@@ -2845,7 +2845,7 @@ s3_bfd_score_elf_check_relocs (bfd *abfd,
 
 	      /* PR15323, ref flags aren't set for references in the
 		 same object.  */
-	      h->root.non_ir_ref = 1;
+	      h->root.non_ir_ref_regular = 1;
             }
         }
 
diff --git a/bfd/elf32-score7.c b/bfd/elf32-score7.c
index 91b25d9..4240206 100644
--- a/bfd/elf32-score7.c
+++ b/bfd/elf32-score7.c
@@ -2654,7 +2654,7 @@ s7_bfd_score_elf_check_relocs (bfd *abfd,
 
 	      /* PR15323, ref flags aren't set for references in the
 		 same object.  */
-	      h->root.non_ir_ref = 1;
+	      h->root.non_ir_ref_regular = 1;
             }
         }
 
diff --git a/bfd/elf32-sh.c b/bfd/elf32-sh.c
index 3c30032..3b1cc67 100644
--- a/bfd/elf32-sh.c
+++ b/bfd/elf32-sh.c
@@ -5823,7 +5823,7 @@ sh_elf_check_relocs (bfd *abfd, struct bfd_link_info *info, asection *sec,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       r_type = sh_elf_optimized_tls_reloc (info, r_type, h == NULL);
diff --git a/bfd/elf32-tic6x.c b/bfd/elf32-tic6x.c
index f65e24f..e2a2961 100644
--- a/bfd/elf32-tic6x.c
+++ b/bfd/elf32-tic6x.c
@@ -2835,7 +2835,7 @@ elf32_tic6x_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (r_type)
diff --git a/bfd/elf32-tilepro.c b/bfd/elf32-tilepro.c
index fb06a47..63d0cbe 100644
--- a/bfd/elf32-tilepro.c
+++ b/bfd/elf32-tilepro.c
@@ -1504,7 +1504,7 @@ tilepro_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       r_type = tilepro_elf_tls_transition (info, r_type, h == NULL);
diff --git a/bfd/elf32-v850.c b/bfd/elf32-v850.c
index e97d1d1..ee61c45 100644
--- a/bfd/elf32-v850.c
+++ b/bfd/elf32-v850.c
@@ -86,7 +86,7 @@ v850_elf_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       r_type = ELF32_R_TYPE (rel->r_info);
diff --git a/bfd/elf32-vax.c b/bfd/elf32-vax.c
index 41bd772..474450d 100644
--- a/bfd/elf32-vax.c
+++ b/bfd/elf32-vax.c
@@ -591,7 +591,7 @@ elf_vax_check_relocs (bfd *abfd, struct bfd_link_info *info, asection *sec,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (ELF32_R_TYPE (rel->r_info))
diff --git a/bfd/elf32-xstormy16.c b/bfd/elf32-xstormy16.c
index af4175c..d6aab8f 100644
--- a/bfd/elf32-xstormy16.c
+++ b/bfd/elf32-xstormy16.c
@@ -438,7 +438,7 @@ xstormy16_elf_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (ELF32_R_TYPE (rel->r_info))
diff --git a/bfd/elf32-xtensa.c b/bfd/elf32-xtensa.c
index 80f50e3..d11d43b 100644
--- a/bfd/elf32-xtensa.c
+++ b/bfd/elf32-xtensa.c
@@ -1015,7 +1015,7 @@ elf_xtensa_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
       eh = elf_xtensa_hash_entry (h);
 
diff --git a/bfd/elf64-alpha.c b/bfd/elf64-alpha.c
index b4a50f4..6485be2 100644
--- a/bfd/elf64-alpha.c
+++ b/bfd/elf64-alpha.c
@@ -1838,7 +1838,7 @@ elf64_alpha_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.root.non_ir_ref = 1;
+	  h->root.root.non_ir_ref_regular = 1;
 	  h->root.ref_regular = 1;
 	}
 
diff --git a/bfd/elf64-hppa.c b/bfd/elf64-hppa.c
index 96e03ba..834855a 100644
--- a/bfd/elf64-hppa.c
+++ b/bfd/elf64-hppa.c
@@ -644,7 +644,7 @@ elf64_hppa_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  hh->eh.root.non_ir_ref = 1;
+	  hh->eh.root.non_ir_ref_regular = 1;
 	  hh->eh.ref_regular = 1;
 	}
       else
diff --git a/bfd/elf64-ia64-vms.c b/bfd/elf64-ia64-vms.c
index 3e316d3..918dbb1 100644
--- a/bfd/elf64-ia64-vms.c
+++ b/bfd/elf64-ia64-vms.c
@@ -2098,7 +2098,7 @@ elf64_ia64_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	  h->ref_regular = 1;
 	}
       else
diff --git a/bfd/elf64-mmix.c b/bfd/elf64-mmix.c
index 91aa4c5..e4a6075 100644
--- a/bfd/elf64-mmix.c
+++ b/bfd/elf64-mmix.c
@@ -2017,7 +2017,7 @@ mmix_elf_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (ELF64_R_TYPE (rel->r_info))
diff --git a/bfd/elf64-ppc.c b/bfd/elf64-ppc.c
index 12d73a1..34c5708 100644
--- a/bfd/elf64-ppc.c
+++ b/bfd/elf64-ppc.c
@@ -5105,7 +5105,7 @@ add_symbol_adjust (struct ppc_link_hash_entry *eh, struct bfd_link_info *info)
 
       /* Propagate reference flags from entry symbol to function
 	 descriptor symbol.  */
-      fdh->elf.root.non_ir_ref |= eh->elf.root.non_ir_ref;
+      fdh->elf.root.non_ir_ref_regular |= eh->elf.root.non_ir_ref_regular;
       fdh->elf.root.non_ir_ref_dynamic |= eh->elf.root.non_ir_ref_dynamic;
       fdh->elf.ref_regular |= eh->elf.ref_regular;
       fdh->elf.ref_regular_nonweak |= eh->elf.ref_regular_nonweak;
@@ -5410,9 +5410,9 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	  if (eh->is_func && eh->oh != NULL)
-	    eh->oh->elf.root.non_ir_ref = 1;
+	    eh->oh->elf.root.non_ir_ref_regular = 1;
 
 	  if (h == htab->elf.hgot)
 	    sec->has_toc_reloc = 1;
diff --git a/bfd/elf64-s390.c b/bfd/elf64-s390.c
index a59777c..b5cece6 100644
--- a/bfd/elf64-s390.c
+++ b/bfd/elf64-s390.c
@@ -911,7 +911,7 @@ elf_s390_check_relocs (bfd *abfd,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       /* Create got section and local_got_refcounts array if they
diff --git a/bfd/elf64-sh64.c b/bfd/elf64-sh64.c
index 5de67b2..4db27a8 100644
--- a/bfd/elf64-sh64.c
+++ b/bfd/elf64-sh64.c
@@ -2385,7 +2385,7 @@ sh_elf64_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       /* Some relocs require a global offset table.  */
diff --git a/bfd/elf64-x86-64.c b/bfd/elf64-x86-64.c
index e363eaf..d193639 100644
--- a/bfd/elf64-x86-64.c
+++ b/bfd/elf64-x86-64.c
@@ -2414,7 +2414,7 @@ elf_x86_64_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	  /* It is referenced by a non-shared object. */
 	  h->ref_regular = 1;
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 
 	  if (h->type == STT_GNU_IFUNC)
 	    elf_tdata (info->output_bfd)->has_gnu_symbols
diff --git a/bfd/elflink.c b/bfd/elflink.c
index 439b387..7e960cc 100644
--- a/bfd/elflink.c
+++ b/bfd/elflink.c
@@ -10346,7 +10346,7 @@ elf_link_input_bfd (struct elf_final_link_info *flinfo, bfd *input_bfd)
 		     linker may attach linker created dynamic sections
 		     to the plugin bfd.  Symbols defined in linker
 		     created sections are not plugin symbols.  */
-		  if ((h->root.non_ir_ref
+		  if ((h->root.non_ir_ref_regular
 		       || h->root.non_ir_ref_dynamic)
 		      && (h->root.type == bfd_link_hash_defined
 			  || h->root.type == bfd_link_hash_defweak)
diff --git a/bfd/elfnn-aarch64.c b/bfd/elfnn-aarch64.c
index a92c0f3..16b520c 100644
--- a/bfd/elfnn-aarch64.c
+++ b/bfd/elfnn-aarch64.c
@@ -7088,7 +7088,7 @@ elfNN_aarch64_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       /* Could be done earlier, if h were already available.  */
@@ -7144,7 +7144,7 @@ elfNN_aarch64_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	  /* It is referenced by a non-shared object. */
 	  h->ref_regular = 1;
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (bfd_r_type)
diff --git a/bfd/elfnn-ia64.c b/bfd/elfnn-ia64.c
index 6f92b34..b166ccc 100644
--- a/bfd/elfnn-ia64.c
+++ b/bfd/elfnn-ia64.c
@@ -2358,7 +2358,7 @@ elfNN_ia64_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	  h->ref_regular = 1;
 	}
       else
diff --git a/bfd/elfnn-riscv.c b/bfd/elfnn-riscv.c
index 3c04507..53c28be 100644
--- a/bfd/elfnn-riscv.c
+++ b/bfd/elfnn-riscv.c
@@ -539,7 +539,7 @@ riscv_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       switch (r_type)
diff --git a/bfd/elfxx-mips.c b/bfd/elfxx-mips.c
index 62223fb..64713d7 100644
--- a/bfd/elfxx-mips.c
+++ b/bfd/elfxx-mips.c
@@ -8389,7 +8389,7 @@ _bfd_mips_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	      /* PR15323, ref flags aren't set for references in the
 		 same object.  */
-	      h->root.non_ir_ref = 1;
+	      h->root.non_ir_ref_regular = 1;
 	    }
 	}
 
diff --git a/bfd/elfxx-sparc.c b/bfd/elfxx-sparc.c
index 80fda1b..275ee53 100644
--- a/bfd/elfxx-sparc.c
+++ b/bfd/elfxx-sparc.c
@@ -1448,7 +1448,7 @@ _bfd_sparc_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       if (h && h->type == STT_GNU_IFUNC)
diff --git a/bfd/elfxx-tilegx.c b/bfd/elfxx-tilegx.c
index 76dfcd8..95c9a15 100644
--- a/bfd/elfxx-tilegx.c
+++ b/bfd/elfxx-tilegx.c
@@ -1721,7 +1721,7 @@ tilegx_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,
 
 	  /* PR15323, ref flags aren't set for references in the same
 	     object.  */
-	  h->root.non_ir_ref = 1;
+	  h->root.non_ir_ref_regular = 1;
 	}
 
       r_type = tilegx_elf_tls_transition (info, r_type, h == NULL,
diff --git a/bfd/linker.c b/bfd/linker.c
index 577f504..f6f0450 100644
--- a/bfd/linker.c
+++ b/bfd/linker.c
@@ -1736,7 +1736,7 @@ _bfd_generic_link_add_one_symbol (struct bfd_link_info *info,
 	     otherwise add a warning.  */
 	  if ((!info->lto_plugin_active
 	       && (h->u.undef.next != NULL || info->hash->undefs_tail == h))
-	      || h->non_ir_ref
+	      || h->non_ir_ref_regular
 	      || h->non_ir_ref_dynamic)
 	    {
 	      (*info->callbacks->warning) (info, string, h->root.string,
diff --git a/include/ChangeLog b/include/ChangeLog
index c99dcfe..339cabe 100644
--- a/include/ChangeLog
+++ b/include/ChangeLog
@@ -2,6 +2,10 @@
 
 	Apply from master
 	2017-05-16  Alan Modra  <amodra@gmail.com>
+	* bfdlink.h (struct bfd_link_hash_entry <non_ir_ref>): Rename to
+	non_ir_ref_regular.
+
+	2017-05-16  Alan Modra  <amodra@gmail.com>
 	* bfdlink.h (struct bfd_link_hash_entry): Update non_ir_ref
 	comment.  Rename dynamic_ref_after_ir_def to non_ir_ref_dynamic.
 
diff --git a/include/bfdlink.h b/include/bfdlink.h
index 2724610..46528ce 100644
--- a/include/bfdlink.h
+++ b/include/bfdlink.h
@@ -102,7 +102,7 @@ struct bfd_link_hash_entry
 
   /* Symbol is referenced in a normal regular object file,
      as distinct from a LTO IR object file.  */
-  unsigned int non_ir_ref : 1;
+  unsigned int non_ir_ref_regular : 1;
 
   /* Symbol is referenced in a normal dynamic object file,
      as distinct from a LTO IR object file.  */
diff --git a/ld/ChangeLog b/ld/ChangeLog
index 2720d52..d9db80e 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -2,6 +2,9 @@
 
 	Apply from master
 	2017-05-16  Alan Modra  <amodra@gmail.com>
+	* plugin.c: Rename occurrences of non_ir_ref.
+
+	2017-05-16  Alan Modra  <amodra@gmail.com>
 	* plugin.c (is_visible_from_outside): Use non_ir_ref_dynamic.
 	(plugin_notice): Set non_ir_ref for references from regular
 	objects, non_ir_ref_dynamic for references from dynamic objects.
diff --git a/ld/plugin.c b/ld/plugin.c
index 087cedc..9abeaf0 100644
--- a/ld/plugin.c
+++ b/ld/plugin.c
@@ -774,7 +774,7 @@ get_symbols (const void *handle, int nsyms, struct ld_plugin_symbol *syms,
 	     even potentially-referenced, perhaps in a future final link if
 	     this is a partial one, perhaps dynamically at load-time if the
 	     symbol is externally visible.  */
-	  if (blhe->non_ir_ref)
+	  if (blhe->non_ir_ref_regular)
 	    res = LDPR_PREVAILING_DEF;
 	  else if (is_visible_from_outside (&syms[n], blhe))
 	    res = def_ironly_exp;
@@ -1266,7 +1266,7 @@ plugin_call_cleanup (void)
 /* To determine which symbols should be resolved LDPR_PREVAILING_DEF
    and which LDPR_PREVAILING_DEF_IRONLY, we notice all the symbols as
    the linker adds them to the linker hash table.  Mark those
-   referenced from a non-IR file with non_ir_ref or
+   referenced from a non-IR file with non_ir_ref_regular or
    non_ir_ref_dynamic as appropriate.  We have to notice_all symbols,
    because we won't necessarily know until later which ones will be
    contributed by IR files.  */
@@ -1304,7 +1304,7 @@ plugin_notice (struct bfd_link_info *info,
 	      || inh->type == bfd_link_hash_new)
 	    {
 	      if ((abfd->flags & DYNAMIC) == 0)
-		inh->non_ir_ref = TRUE;
+		inh->non_ir_ref_regular = TRUE;
 	      else
 		inh->non_ir_ref_dynamic = TRUE;
 	    }
@@ -1362,7 +1362,7 @@ plugin_notice (struct bfd_link_info *info,
       if (ref)
 	{
 	  if ((abfd->flags & DYNAMIC) == 0)
-	    h->non_ir_ref = TRUE;
+	    h->non_ir_ref_regular = TRUE;
 	  else
 	    h->non_ir_ref_dynamic = TRUE;
 	}

commit ce94efcee97180303d98ce96e40c9bc45f405cee
Author: Alan Modra <amodra@gmail.com>
Date:   Thu Sep 28 17:11:38 2017 +0930

    PR22220, BFD linker wrongly marks symbols as PREVAILING_DEF_IRONLY
    
    non_ir_ref_dynamic wasn't being set in the case where we have a
    versioned dynamic symbol definition with a non-versioned matching IR
    symbol.
    
    bfd/
    	PR 22220
    	* elflink.c (_bfd_elf_merge_symbol): Set non_ir_ref_dynamic in
    	a case where plugin_notice isn't called.
    ld/
    	* testsuite/ld-plugin/pr22220.h,
    	* testsuite/ld-plugin/pr22220lib.cc,
    	* testsuite/ld-plugin/pr22220lib.ver,
    	* testsuite/ld-plugin/pr22220main.cc: New test.
    	* testsuite/ld-plugin/lto.exp: Run it.
    
    (cherry picked from commit 1a3b5c34fe371f618402f811a981839c9191ff9f)

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index b0870df..a376ed3 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,9 @@
+2017-09-28  Alan Modra  <amodra@gmail.com>
+
+	PR 22220
+	* elflink.c (_bfd_elf_merge_symbol): Set non_ir_ref_dynamic in
+	a case where plugin_notice isn't called.
+
 2017-09-27  Alan Modra  <amodra@gmail.com>
 
 	Apply from master
diff --git a/bfd/elflink.c b/bfd/elflink.c
index 7e960cc..7a800a9 100644
--- a/bfd/elflink.c
+++ b/bfd/elflink.c
@@ -1223,6 +1223,16 @@ _bfd_elf_merge_symbol (bfd *abfd,
       olddyn = (oldsec->symbol->flags & BSF_DYNAMIC) != 0;
     }
 
+  /* Handle a case where plugin_notice won't be called and thus won't
+     set the non_ir_ref flags on the first pass over symbols.  */
+  if (oldbfd != NULL
+      && (oldbfd->flags & BFD_PLUGIN) != (abfd->flags & BFD_PLUGIN)
+      && newdyn != olddyn)
+    {
+      h->root.non_ir_ref_dynamic = TRUE;
+      hi->root.non_ir_ref_dynamic = TRUE;
+    }
+
   /* NEWDEF and OLDDEF indicate whether the new or old symbol,
      respectively, appear to be a definition rather than reference.  */
 
diff --git a/ld/ChangeLog b/ld/ChangeLog
index d9db80e..67830b9 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,3 +1,11 @@
+2017-09-28  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-plugin/pr22220.h,
+	* testsuite/ld-plugin/pr22220lib.cc,
+	* testsuite/ld-plugin/pr22220lib.ver,
+	* testsuite/ld-plugin/pr22220main.cc: New test.
+	* testsuite/ld-plugin/lto.exp: Run it.
+
 2017-09-27  Alan Modra  <amodra@gmail.com>
 
 	Apply from master
diff --git a/ld/testsuite/ld-plugin/lto.exp b/ld/testsuite/ld-plugin/lto.exp
index 3e6005d..04e4eea 100644
--- a/ld/testsuite/ld-plugin/lto.exp
+++ b/ld/testsuite/ld-plugin/lto.exp
@@ -288,6 +288,12 @@ set lto_link_elf_tests [list \
   [list "Build pr21382.so" \
    "-shared" "-O2 -fpic" \
    {pr21382b.c} {} "pr21382.so" "c"] \
+  [list {Build pr22220lib.so} \
+   {-shared -Wl,--version-script=pr22220lib.ver} {-fPIC} \
+   {pr22220lib.cc} {} {pr22220lib.so} {c++}] \
+  [list {Build pr22220main.o} \
+   {} {-flto} \
+   {pr22220main.cc} {} {} {c++}] \
 ]
 
 # Check final symbols in executables.
@@ -389,6 +395,12 @@ set lto_run_elf_shared_tests [list \
   [list "Run pr21382" \
    "-O2 -flto -fuse-linker-plugin -Wl,--as-needed tmpdir/pr21382a.o tmpdir/pr21382.so" "" \
    {dummy.c} "pr21382.exe" "pass.out" "" "c"] \
+  [list {pr22220a} \
+   {-flto -fuse-linker-plugin tmpdir/pr22220main.o tmpdir/pr22220lib.so} {} \
+   {dummy.c} {pr22220a.exe} {pass.out} {} {c++}] \
+  [list {pr22220b} \
+   {-flto -fuse-linker-plugin -Wl,--no-as-needed tmpdir/pr22220lib.so tmpdir/pr22220main.o} {} \
+   {dummy.c} {pr22220b.exe} {pass.out} {} {c++}] \
 ]
 
 # LTO run-time tests for ELF
diff --git a/ld/testsuite/ld-plugin/pr22220.h b/ld/testsuite/ld-plugin/pr22220.h
new file mode 100644
index 0000000..b15b45c
--- /dev/null
+++ b/ld/testsuite/ld-plugin/pr22220.h
@@ -0,0 +1,8 @@
+extern int doo();
+
+inline int *goo() {
+	static int xyz;
+	return &xyz;
+}
+
+int *boo();
diff --git a/ld/testsuite/ld-plugin/pr22220lib.cc b/ld/testsuite/ld-plugin/pr22220lib.cc
new file mode 100644
index 0000000..771f44f
--- /dev/null
+++ b/ld/testsuite/ld-plugin/pr22220lib.cc
@@ -0,0 +1,6 @@
+#include "pr22220.h"
+
+int* boo()
+{
+  return goo ();
+}
diff --git a/ld/testsuite/ld-plugin/pr22220lib.ver b/ld/testsuite/ld-plugin/pr22220lib.ver
new file mode 100644
index 0000000..6da7e1a
--- /dev/null
+++ b/ld/testsuite/ld-plugin/pr22220lib.ver
@@ -0,0 +1 @@
+BAR { global: *; };
diff --git a/ld/testsuite/ld-plugin/pr22220main.cc b/ld/testsuite/ld-plugin/pr22220main.cc
new file mode 100644
index 0000000..38c206f
--- /dev/null
+++ b/ld/testsuite/ld-plugin/pr22220main.cc
@@ -0,0 +1,12 @@
+#include <stdio.h>
+#include "pr22220.h"
+
+int main()
+{
+  if (boo() == goo())
+    {
+      printf ("PASS\n");
+      return 0;
+    }
+  return 1;
+}

commit 234874b46f90b1e6a650dc4a700f8e6b0999e482
Author: Eric Christopher <echristo@gmail.com>
Date:   Wed Nov 15 18:23:15 2017 -0800

    Apply from mainline:
    
    [GOLD] Fix powerpc64 optimization of TOC accesses
    
    Fixes a thinko.  Given code that puts variables into the TOC (a bad
    idea, but some see the TOC as a small data section) this bug could
    result in an attempt to optimize a sequence that should not be
    optimized.
    
    	* powerpc.cc (Target_powerpc::Scan::local): Correct dst_off
    	calculation for TOC16 relocs.
    	(Target_powerpc::Scan::global): Likewise.
    
    2017-11-08  Kyle Butt  <iteratee@google.com>
    
            * object.cc (do_find_special_sections): Fix a thinko with memmem return
            values and check for != NULL rather than == 0.

diff --git a/gold/ChangeLog b/gold/ChangeLog
index 7be51ff..b15b0d8 100644
--- a/gold/ChangeLog
+++ b/gold/ChangeLog
@@ -1,3 +1,227 @@
+2017-11-15  Eric Christopher  <echristo@gmail.com>
+
+	Apply from master.
+        2017-10-18  Kyle Butt  <iteratee@google.com>
+	    Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Target_powerpc::Scan::local): Correct dst_off
+	calculation for TOC16 relocs.
+	(Target_powerpc::Scan::global): Likewise.
+
+        2017-11-08  Kyle Butt  <iteratee@google.com>
+
+        * object.cc (do_find_special_sections): Fix a thinko with memmem return
+        values and check for !=	NULL rather than == 0.
+
+2017-11-07  Alan Modra  <amodra@gmail.com>
+
+	* system.h (textdomain, bindtextdomain): Use safer "do nothing".
+	(ngettext, dngettext, dcngettext): Define when !ENABLE_NLS.
+
+2017-10-25  Alan Modra  <amodra@gmail.com>
+
+	* symtab.cc (Symbol_table::add_from_relobj): Match "__gnu_lto_slim"
+	optionally prefixed with "_".
+
+2017-10-20  Sriraman Tallam  <tmsriram@google.com>
+
+	* options.h (-z,text_unlikely_segment): New option.
+	* layout.cc (Layout::layout): Create new output section
+	for .text.unlikely sections with the new option.
+	(Layout::segment_precedes): Check for the new option
+	when segment flags match.
+	* testsuite/text_unlikely_segment.cc: New test source.
+	* testsuite/text_unlikely_segment.sh: New test script.
+	* testsuite/Makefile.am (text_unlikely_segment): New test.
+	* testsuite/Makefile.in: Regenerate.
+
+2017-10-19  Umesh Kalappa  <ukalappa@cisco.com>
+
+	* arm.cc (Stub::do_fixed_endian_write):Far call stubs support for arm
+	in the be8 mode.
+	* testsuite/Makefile.am: New test cases.
+	* testsuite/Makefile.in: Regenerate.
+	* testsuite/arm_farcall_arm_arm_be8.sh: New script for arm to arm far
+	call stubs.
+	* testsuite/arm_farcall_thumb_thumb_be8.sh: New script for thumb to
+	thumb far call stubs.
+
+2017-09-26  Cary Coutant  <ccoutant@gmail.com>
+
+	PR gold/22213
+	* sparc.cc (Target_sparc): Fix incorrect register mask.
+
+2017-09-22  Jim Wilson  <jim.wilson@linaro.org>
+
+	* aarch64.cc (Target_aarch64::aarch64_info): Set
+	is_default_stack_executable to false.
+
+2017-09-22  Alan Modra  <amodra@gmail.com>
+
+	* resolve.cc (clone): Fix got_offset_list test.
+
+2017-09-22  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Target_powerpc<64,*>::powerpc_info): Set
+	is_default_stack_executable false.
+
+2017-09-20  Teresa Johnson  <tejohnson@google.com>
+
+	* plugin.cc (is_visible_from_outside): Check for export dynamic symbol
+        option and list.
+	* testsuite/Makefile.am (plugin_test_12): New test.
+	* testsuite/Makefile.in: Regenerate.
+	* testsuite/export_dynamic_plugin.cc: New test source.
+	* testsuite/plugin_test_12.sh: New test script.
+
+2017-09-20  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Target_powerpc::Branch_info::make_stub): Put
+	stubs for ppc32 non-branch relocs in first stub table.
+	(Target_powerpc::Relocate::relocate): Resolve similarly.
+
+2017-09-19  Alan Modra  <amodra@gmail.com>
+
+	* options.h (stub-group-multi): Default to true.  Add
+	--no-stub-group-multi.
+
+2017-08-30  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Target_powerpc::Relocate::relocate): Nop addis on
+	TPREL16_HA, and convert insn on TPREL16_LO and TPREL16_LO_DS
+	relocs to use r2/r13 when addis would add zero.
+
+2017-08-29  Alan Modra  <amodra@gmail.com>
+
+	* options.h (tls_get_addr_optimize): New option.
+	* symtab.h (Symbol::clear_in_reg, clone): New functions.
+	(Sized_symbol::clone): New function.
+	(Symbol_table::clone): New function.
+	* resolve.cc (Symbol::clone, Sized_symbol::clone): New functions.
+	* powerpc.cc (Target_powerpc::has_tls_get_addr_opt_,
+	tls_get_addr_, tls_get_addr_opt_): New vars.
+	(Target_powerpc::tls_get_addr_opt, tls_get_addr,
+	is_tls_get_addr_opt, replace_tls_get_addr,
+	set_has_tls_get_addr_opt, stk_linker): New functions.
+	(Target_powerpc::Track_tls::maybe_skip_tls_get_addr_call): Add
+	target param.  Update callers.  Compare symbols rather than names.
+	(Target_powerpc::do_define_standard_symbols): Init tls_get_addr_
+	and tls_get_addr_opt_.
+	(Target_powerpc::Branch_info::mark_pltcall): Translate tls_get_addr
+	sym to tls_get_addr_opt.
+	(Target_powerpc::Branch_info::make_stub): Likewise.
+	(Stub_table::define_stub_syms): Likewise.
+	(Target_powerpc::Scan::global): Likewise.
+	(Target_powerpc::Relocate::relocate): Likewise.
+	(add_3_12_2, add_3_12_13, bctrl, beqlr, cmpdi_11_0, cmpwi_11_0,
+	ld_11_1, ld_11_3, ld_12_3, lwz_11_3, lwz_12_3, mr_0_3, mr_3_0,
+	mtlr_11, std_11_1): New constants.
+	(Stub_table::eh_frame_added_): Delete.
+	(Stub_table::tls_get_addr_opt_bctrl_, plt_fde_len_, plt_fde_): New vars.
+	(Stub_table::init_plt_fde): New functions.
+	(Stub_table::add_eh_frame, replace_eh_frame): Move definition out
+	of line.  Init and use plt_fde_.
+	(Stub_table::plt_call_size): Return size for tls_get_addr stub.
+	Extract alignment code to..
+	(Stub_table::plt_call_align): ..this new function.  Adjust all callers.
+	(Stub_table::add_plt_call_entry): Set has_tls_get_addr_opt and
+	tls_get_addr_opt_bctrl, and align after that.
+	(Stub_table::do_write): Write out tls_get_addr stub.
+	(Target_powerpc::do_finalize_sections): Emit DT_PPC_OPT
+	PPC_OPT_TLS/PPC64_OPT_TLS bit.
+	(Target_powerpc::Relocate::relocate): Don't check for or modify
+	nop following bl for tls_get_addr stub.
+
+2017-08-29  Alan Modra  <amodra@gmail.com>
+
+	* symtab.h (Symbol): Split u_ into u1_ and u2_.  Adjust accessors
+	to suit.  Move plt_offset_ before got_offsets_.
+	* symtab.cc (Symbol::init_fields): Adjust for union change.
+	(Symbol::init_base_output_data): Likewise.
+	(Symbol::init_base_output_segment): Likewise.
+	(Symbol::allocate_base_common): Likewise.
+	(Symbol::output_section): Likewise.
+	(Symbol::set_output_section): Likewise.
+	(Symbol::set_output_segment): Likewise.
+	* resolve.cc (Symbol::override_base): Likewise.
+	(Symbol::override_base_with_special): Likewise.
+
+2017-08-28  Igor Kudrin  <ikudrin@accesssoftek.com>
+
+	* aarch64.cc (Target_aarch64::Relocate::relocate_tls):
+	Make got_tlsdesc_offset signed and fix its calculation.
+	* testsuite/Makefile.am (aarch64_tlsdesc): New test.
+	* testsuite/Makefile.in: Regenerate.
+	* testsuite/aarch64_tlsdesc.s: New test source file.
+	* testsuite/aarch64_tlsdesc.sh: New test script.
+	* testsuite/aarch64_tlsdesc.t: New test linker script.
+
+2017-08-28  Alan Modra  <amodra@gmail.com>
+
+	PR 21847
+	* powerpc.cc (Target_powerpc::is_elfv2_localentry0): Test
+	non_zero_localentry.
+	(Target_powerpc::resolve): New function.
+	(powerpc_info): Set has_resolve for 64-bit.
+	* target.h (Sized_target::resolve): Return bool.
+	* resolve.cc (Symbol_table::resolve): Continue with normal
+	processing when target resolve returns false.
+	* symtab.h (Symbol::non_zero_localentry, set_non_zero_localentry):
+	New accessors.
+	(Symbol::non_zero_localentry_): New flag bit.
+	* symtab.cc (Symbol::init_fields): Init non_zero_localentry_.
+
+2017-08-08  Romain Geissler  <romain.geissler@gmail.com>
+	    Alan Modra  <amodra@gmail.com>
+
+	* configure.ac: Add --enable-default-hash-style option.
+	* options.h (hash_style): Use DEFAULT_HASH_STYLE as default value.
+	* configure: Regenerate.
+	* config.in: Regenerate.
+
+2017-08-03  James Clarke  <jrtc27@jrtc27.com>
+
+	* options.h (General_options): Set a non-NULL second help string
+	argument for relax to allow --no-relax.
+
+2017-08-01  Alan Modra  <amodra@gmail.com>
+
+	* ehframe.cc (Fde::operator==): New.
+	(Cie::remove_fde, Eh_frame::remove_ehframe_for_plt): New.
+	* ehframe.h (Fde::operator==): Declare.
+	(Cie::remove_fde, Eh_frame::remove_ehframe_for_plt): Likewise.
+	* layout.cc (Layout::remove_eh_frame_for_plt): New.
+	* layout.h (Layout::remove_eh_frame_for_plt): Declare.
+	* powerpc.cc (Target_powerpc::do_relax): Remove old eh_frame FDEs.
+	(Stub_table::add_eh_frame): Delete eh_frame_added_ condition.
+	Don't add eh_frame for empty stub section.
+	(Stub_table::remove_eh_frame): New.
+
+2017-07-31  Alan Modra  <amodra@gmail.com>
+
+	* options.h (no_tls_optimize): New powerpc option.
+	* powerpc.cc (Target_powerpc::abiversion, set_abiversion): Formatting.
+	(Target_powerpc::stk_toc): Formatting, fix comment.
+	(Target_powerpc::Track_tls::tls_get_addr_state): Rename from
+	tls_get_addr.
+	(Target_powerpc::optimize_tls_gd, optimize_tls_ld, optimize_tls_ie):
+	Return TLSOPT_NONE when !tls_optimize.
+	(Target_powerpc::add_global_pair_with_rel): Check
+	for existing reloc before reserving.
+	(Target_powerpc::add_local_tls_pair): Likewise.
+
+2017-07-31  Alan Modra  <amodra@gmail.com>
+
+	PR 21847
+	* powerpc.cc (Target_powerpc::scan_relocs): Warn on --plt-localentry
+	without ld.so checks.
+
+2017-07-29  Alan Modra  <amodra@gmail.com>
+
+	PR 21847
+	* powerpc.cc (Target_powerpc::scan_relocs): Default to
+	--no-plt-localentry.
+
 2017-07-28  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR gold/21857
diff --git a/gold/object.cc b/gold/object.cc
index 4110686..0135651 100644
--- a/gold/object.cc
+++ b/gold/object.cc
@@ -816,9 +816,9 @@ Sized_relobj_file<size, big_endian>::do_find_special_sections(
   return (this->has_eh_frame_
 	  || (!parameters->options().relocatable()
 	      && parameters->options().gdb_index()
-	      && (memmem(names, sd->section_names_size, "debug_info", 11) == 0
+	      && (memmem(names, sd->section_names_size, "debug_info", 11) != NULL
 		  || memmem(names, sd->section_names_size,
-			    "debug_types", 12) == 0)));
+			    "debug_types", 12) != NULL)));
 }
 
 // Read the sections and symbols from an object file.
diff --git a/gold/powerpc.cc b/gold/powerpc.cc
index a448efb..9658867 100644
--- a/gold/powerpc.cc
+++ b/gold/powerpc.cc
@@ -6420,7 +6420,7 @@ Target_powerpc<size, big_endian>::Scan::local(
 	  shndx = ppc_object->adjust_sym_shndx(r_sym, shndx, &is_ordinary);
 	  if (is_ordinary && shndx == ppc_object->toc_shndx())
 	    {
-	      Address dst_off = lsym.get_st_value() + reloc.get_r_offset();
+	      Address dst_off = lsym.get_st_value() + reloc.get_r_addend();
 	      if (dst_off < ppc_object->section_size(shndx))
 		{
 		  bool ok = false;
@@ -7065,7 +7065,7 @@ Target_powerpc<size, big_endian>::Scan::global(
 	      if (shndx == sym_object->toc_shndx())
 		{
 		  Sized_symbol<size>* sym = symtab->get_sized_symbol<size>(gsym);
-		  Address dst_off = sym->value() + reloc.get_r_offset();
+		  Address dst_off = sym->value() + reloc.get_r_addend();
 		  if (dst_off < sym_object->section_size(shndx))
 		    {
 		      bool ok = false;

commit 72a84cb1b1285e244e918381c69de5a08bb63a9b
Author: Cary Coutant <ccoutant@gmail.com>
Date:   Sun Nov 19 17:56:30 2017 -0800

    Fix DWARF reader to use correct size for DW_FORM_ref_addr.
    
    2017-11-19  Ian Lance Taylor  <iant@google.com>
    	    Cary Coutant  <ccoutant@gmail.com>
    
    gold/
    	* gold/dwarf_reader.h (class Dwarf_info_reader): Add ref_addr_size
    	method.
    	* gold/dwarf_reader.cc (Dwarf_die::read_attributes): Use ref_addr_size
    	for DW_FORM_ref_addr_size.
    	(Dwarf_die::skip_attributes): Likewise.

diff --git a/gold/ChangeLog b/gold/ChangeLog
index b15b0d8..00cc91f 100644
--- a/gold/ChangeLog
+++ b/gold/ChangeLog
@@ -1,3 +1,14 @@
+2017-11-21  Ian Lance Taylor  <iant@google.com>
+
+	Apply from master:
+	2017-11-19  Ian Lance Taylor  <iant@google.com>
+		    Cary Coutant  <ccoutant@gmail.com>
+	* gold/dwarf_reader.h (class Dwarf_info_reader): Add ref_addr_size
+	method.
+	* gold/dwarf_reader.cc (Dwarf_die::read_attributes): Use ref_addr_size
+	for DW_FORM_ref_addr_size.
+	(Dwarf_die::skip_attributes): Likewise.
+
 2017-11-15  Eric Christopher  <echristo@gmail.com>
 
 	Apply from master.
diff --git a/gold/dwarf_reader.cc b/gold/dwarf_reader.cc
index 8c0d593..4da9c1e 100644
--- a/gold/dwarf_reader.cc
+++ b/gold/dwarf_reader.cc
@@ -737,7 +737,6 @@ Dwarf_die::read_attributes()
 	      break;
 	    }
 	  case elfcpp::DW_FORM_addr:
-	  case elfcpp::DW_FORM_ref_addr:
 	    {
 	      off_t sec_off;
 	      if (this->dwinfo_->address_size() == 4)
@@ -751,6 +750,20 @@ Dwarf_die::read_attributes()
 	      ref_form = true;
 	      break;
 	    }
+	  case elfcpp::DW_FORM_ref_addr:
+	    {
+	      off_t sec_off;
+	      if (this->dwinfo_->ref_addr_size() == 4)
+		sec_off = this->dwinfo_->read_from_pointer<32>(&pattr);
+	      else
+		sec_off = this->dwinfo_->read_from_pointer<64>(&pattr);
+	      unsigned int shndx =
+		  this->dwinfo_->lookup_reloc(attr_off, &sec_off);
+	      attr_value.aux.shndx = shndx;
+	      attr_value.val.refval = sec_off;
+	      ref_form = true;
+	      break;
+	    }
 	  case elfcpp::DW_FORM_block1:
 	    attr_value.aux.blocklen = *pattr++;
 	    attr_value.val.blockval = pattr;
@@ -947,9 +960,11 @@ Dwarf_die::skip_attributes()
 	    pattr += this->dwinfo_->offset_size();
 	    break;
 	  case elfcpp::DW_FORM_addr:
-	  case elfcpp::DW_FORM_ref_addr:
 	    pattr += this->dwinfo_->address_size();
 	    break;
+	  case elfcpp::DW_FORM_ref_addr:
+	    pattr += this->dwinfo_->ref_addr_size();
+	    break;
 	  case elfcpp::DW_FORM_block1:
 	    pattr += 1 + *pattr;
 	    break;
diff --git a/gold/dwarf_reader.h b/gold/dwarf_reader.h
index b41e057..31e76ce 100644
--- a/gold/dwarf_reader.h
+++ b/gold/dwarf_reader.h
@@ -764,6 +764,13 @@ class Dwarf_info_reader
   address_size() const
   { return this->address_size_; }
 
+  // Return the size of a DW_FORM_ref_addr.
+  // In DWARF v2, this was the size of an address; in DWARF v3 and later,
+  // it is the size of an DWARF offset.
+  unsigned int
+  ref_addr_size() const
+  { return this->cu_version_ > 2 ? this->offset_size_ : this->address_size_; }
+
   // Set the section index of the .debug_abbrev section.
   // We use this if there are no relocations for the .debug_info section.
   // If not set, the code parse() routine will search for the section by name.

commit 462fd94a64b5bceff98bb2ff7202974a756595e9
Author: Cary Coutant <ccoutant@gmail.com>
Date:   Sun Nov 19 18:02:31 2017 -0800

    Fix typo in ChangeLog entry.

diff --git a/gold/ChangeLog b/gold/ChangeLog
index 00cc91f..208dc1f 100644
--- a/gold/ChangeLog
+++ b/gold/ChangeLog
@@ -3,9 +3,9 @@
 	Apply from master:
 	2017-11-19  Ian Lance Taylor  <iant@google.com>
 		    Cary Coutant  <ccoutant@gmail.com>
-	* gold/dwarf_reader.h (class Dwarf_info_reader): Add ref_addr_size
+	* dwarf_reader.h (class Dwarf_info_reader): Add ref_addr_size
 	method.
-	* gold/dwarf_reader.cc (Dwarf_die::read_attributes): Use ref_addr_size
+	* dwarf_reader.cc (Dwarf_die::read_attributes): Use ref_addr_size
 	for DW_FORM_ref_addr_size.
 	(Dwarf_die::skip_attributes): Likewise.
 

commit 1e4d2a179d04d08bf113706939dd502c46301261
Author: Eric Christopher <echristo@gmail.com>
Date:   Fri Jan 12 11:12:55 2018 -0800

    2018-01-12  Eric Christopher  <echristo@gmail.com>
    
    	    Apply from master:
    	    2018-01-12 Sterling Augustine <saugustine@google.com>
    
            * cref.cc (Cref_inputs::Cref_table_compare::operator): Add
            conditionals and calls to is_forwarder.

diff --git a/gold/ChangeLog b/gold/ChangeLog
index 208dc1f..e2eebd1 100644
--- a/gold/ChangeLog
+++ b/gold/ChangeLog
@@ -1,3 +1,11 @@
+2018-01-12  Eric Christopher  <echristo@gmail.com>
+
+	Apply from master:
+	2018-01-12 Sterling Augustine <saugustine@google.com>
+
+	* cref.cc (Cref_inputs::Cref_table_compare::operator): Add
+	conditionals and calls to is_forwarder.
+
 2017-11-21  Ian Lance Taylor  <iant@google.com>
 
 	Apply from master:
diff --git a/gold/cref.cc b/gold/cref.cc
index d3337b9..ff9e217 100644
--- a/gold/cref.cc
+++ b/gold/cref.cc
@@ -236,9 +236,13 @@ Cref_inputs::Cref_table_compare::operator()(const Symbol* s1,
     }
 
   // We should never have two different symbols with the same name and
-  // version.
+  // version, where one doesn't forward to the other.
   if (s1 == s2)
     return false;
+  if (s1->is_forwarder() && !s2->is_forwarder())
+    return true;
+  if (!s1->is_forwarder() && s2->is_forwarder())
+    return false;
   gold_unreachable();
 }
 

commit d739ba97ead5649639803fa5b6928e88f81117cd
Author: Tamar Christina <tamar.christina@arm.com>
Date:   Mon Apr 24 11:55:44 2017 +0100

    Fix snafu in aarch64 opcodes debugging statement.
    
    	* aarch64-opc.c (aarch64_logical_immediate_p): Update DEBUG_TRACE
    	arguments.
    
    (cherry picked from commit 957f6b39cab6cac0e4c54e650c7f75109544ac1d)
    Signed-off-by: Tamar Christina <tamar.christina@arm.com>

diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index d64ea6d..8f55608 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,4 +1,10 @@
-2017-07-25  Tristan Gingold  <gingold@adacore.com>
+2018-04-05  Tamar Christina  <tamar.christina@arm.com>
+
+	* aarch64-opc.c (aarch64_logical_immediate_p): Update DEBUG_TRACE
+	arguments.
+
+2017-04-22  Alexander Fedotov  <alfedotov@gmail.com>
+	    Alan Modra  <amodra@gmail.com>
 
 	* configure: Regenerate.
 
diff --git a/opcodes/aarch64-opc.c b/opcodes/aarch64-opc.c
index 3c1b00f..e076ff0 100644
--- a/opcodes/aarch64-opc.c
+++ b/opcodes/aarch64-opc.c
@@ -1204,8 +1204,8 @@ aarch64_logical_immediate_p (uint64_t value, int esize, aarch64_insn *encoding)
   uint64_t upper;
   int i;
 
-  DEBUG_TRACE ("enter with 0x%" PRIx64 "(%" PRIi64 "), is32: %d", value,
-	       value, is32);
+  DEBUG_TRACE ("enter with 0x%" PRIx64 "(%" PRIi64 "), esize: %d", value,
+	       value, esize);
 
   if (initialized == FALSE)
     {
