From: Val Lorentz <progval@progval.net>
Subject: nasm: please make the build reproducible (timestamps)
Date: Fri, 21 Aug 2015 13:58:53 +0200

https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=796335

While working on the "reproducible builds" effort [1], we have noticed
that nasm could not be built reproducibly.

The attached patch removes extra timestamps from the build system.
Once applied, and after an issue with Ghostscript [2] is fixed, nasm can
be built reproducibly in our current experimental framework.

[1]: https://wiki.debian.org/ReproducibleBuilds
[2]: https://wiki.debian.org/ReproducibleBuilds/PdfGeneratedByGhostscript

Valentin

Index: nasm-2.11.08/nasm.c
===================================================================
--- nasm-2.11.08.orig/nasm.c
+++ nasm-2.11.08/nasm.c
@@ -624,8 +624,8 @@ struct textargs textopts[] = {
 
 static void show_version(void)
 {
-    printf("NASM version %s compiled on %s%s\n",
-           nasm_version, nasm_date, nasm_compile_options);
+    printf("NASM version %s%s\n",
+           nasm_version, nasm_compile_options);
     exit(0);
 }
 
Index: nasm-2.11.08/nasm.h
===================================================================
--- nasm-2.11.08.orig/nasm.h
+++ nasm-2.11.08/nasm.h
@@ -1187,7 +1187,6 @@ extern int maxbits;             /* max b
  * NASM version strings, defined in ver.c
  */
 extern const char nasm_version[];
-extern const char nasm_date[];
 extern const char nasm_compile_options[];
 extern const char nasm_comment[];
 extern const char nasm_signature[];
Index: nasm-2.11.08/ndisasm.c
===================================================================
--- nasm-2.11.08.orig/ndisasm.c
+++ nasm-2.11.08/ndisasm.c
@@ -117,8 +117,8 @@ int main(int argc, char **argv)
                 case 'r':
                 case 'v':
                     fprintf(stderr,
-                            "NDISASM version %s compiled on %s\n",
-			    nasm_version, nasm_date);
+                            "NDISASM version %s\n",
+			    nasm_version);
                     return 0;
                 case 'u':	/* -u for -b 32, -uu for -b 64 */
 		    if (bits < 64)
Index: nasm-2.11.08/ver.c
===================================================================
--- nasm-2.11.08.orig/ver.c
+++ nasm-2.11.08/ver.c
@@ -36,7 +36,6 @@
 
 /* This is printed when entering nasm -v */
 const char nasm_version[] = NASM_VER;
-const char nasm_date[] = __DATE__;
 const char nasm_compile_options[] = ""
 #ifdef DEBUG
     " with -DDEBUG"
