# fix for segvault with null input, backported from upstream commit 54711f6
#
# bug details:
# debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=823999
# upstream: https://github.com/skvadrik/re2c/issues/142
--- a/bootstrap/src/parse/lex.cc
+++ b/bootstrap/src/parse/lex.cc
@@ -118,14 +118,14 @@
 	++YYCURSOR;
 #line 202 "../src/parse/lex.re"
 	{
-					if (!ignore_eoc && opts->target == opt_t::CODE)
-					{
-						out.wraw(tok, tok_len () - 1);
-						// -1 so we don't write out the \0
-					}
-					if(cur == eof)
-					{
+					if(cur == eof) {
+						if (!ignore_eoc && opts->target == opt_t::CODE) {
+							out.wraw(tok, tok_len () - 1);
+							// -1 so we don't write out the \0
+						}
 						return Stop;
+					} else {
+						goto echo;
 					}
 				}
 #line 132 "src/parse/lex.cc"
--- a/src/parse/lex.re
+++ b/src/parse/lex.re
@@ -200,14 +200,14 @@
 					goto echo;
 				}
 	zero		{
-					if (!ignore_eoc && opts->target == opt_t::CODE)
-					{
-						out.wraw(tok, tok_len () - 1);
-						// -1 so we don't write out the \0
-					}
-					if(cur == eof)
-					{
+					if(cur == eof) {
+						if (!ignore_eoc && opts->target == opt_t::CODE) {
+							out.wraw(tok, tok_len () - 1);
+							// -1 so we don't write out the \0
+						}
 						return Stop;
+					} else {
+						goto echo;
 					}
 				}
 	*			{
