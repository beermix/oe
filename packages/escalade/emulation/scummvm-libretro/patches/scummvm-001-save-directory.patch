From 00cf8102bc63922498b381d87bb35bd754693627 Mon Sep 17 00:00:00 2001
From: Christian Fetzer <fetzer.ch@gmail.com>
Date: Sun, 13 Nov 2016 12:36:07 +0100
Subject: [PATCH] libretro: Ask frontend for default save directory

Use RETRO_ENVIRONMENT_GET_SAVE_DIRECTORY to retrieve the frontend's
default save directory.

Fixes an issue that the default save directory was not writeable on
as it defaulted to the current working directory of the application.
---
 backends/platform/libretro/libretro.cpp | 10 ++++++++++
 backends/platform/libretro/os.cpp       | 11 ++++++++++-
 backends/platform/libretro/os.h         |  1 +
 3 files changed, 21 insertions(+), 1 deletion(-)

diff --git a/backends/platform/libretro/libretro.cpp b/backends/platform/libretro/libretro.cpp
index 067f5e9..e3fce5c 100644
--- a/backends/platform/libretro/libretro.cpp
+++ b/backends/platform/libretro/libretro.cpp
@@ -205,6 +205,7 @@ void parse_command_params(char* cmdline)
 bool retro_load_game(const struct retro_game_info *game)
 {
    const char* sysdir;
+   const char* savedir;
 
    cmd_params_num = 1;
    strcpy(cmd_params[0],"scummvm\0");
@@ -264,6 +265,15 @@ bool retro_load_game(const struct retro_game_info *game)
       retroSetSystemDir(".");
    }
 
+   if(environ_cb(RETRO_ENVIRONMENT_GET_SAVE_DIRECTORY, &savedir))
+      retroSetSaveDir(savedir);
+   else
+   {
+      if (log_cb)
+         log_cb(RETRO_LOG_WARN, "No Save directory specified, using current directory.\n");
+      retroSetSaveDir(".");
+   }
+
    if(!emuThread && !mainThread)
    {
       mainThread = co_active();
diff --git a/backends/platform/libretro/os.cpp b/backends/platform/libretro/os.cpp
index 7beb89f..d9cfdf4 100644
--- a/backends/platform/libretro/os.cpp
+++ b/backends/platform/libretro/os.cpp
@@ -245,6 +245,7 @@ static INLINE void copyRectToSurface(uint8_t *pixels, int out_pitch, const uint8
 }
 
 static Common::String s_systemDir;
+static Common::String s_saveDir;
 
 #ifdef FRONTEND_SUPPORTS_RGB565
 #define SURF_BPP 2
@@ -322,6 +323,9 @@ class OSystem_RETRO : public EventsBaseBackend, public PaletteManager {
 
       if(s_systemDir.empty())
          s_systemDir = ".";
+
+      if(s_saveDir.empty())
+         s_saveDir = ".";
    }
 
       virtual ~OSystem_RETRO()
@@ -336,7 +340,7 @@ class OSystem_RETRO : public EventsBaseBackend, public PaletteManager {
 
       virtual void initBackend()
       {
-         _savefileManager = new DefaultSaveFileManager();
+         _savefileManager = new DefaultSaveFileManager(s_saveDir);
 #ifdef FRONTEND_SUPPORTS_RGB565
          _overlay.create(RES_W, RES_H, Graphics::PixelFormat(2, 5, 6, 5, 0, 11, 5, 0, 0));
 #else
@@ -1022,6 +1026,11 @@ void retroSetSystemDir(const char* aPath)
    s_systemDir = Common::String(aPath ? aPath : ".");
 }
 
+void retroSetSaveDir(const char* aPath)
+{
+   s_saveDir = Common::String(aPath ? aPath : ".");
+}
+
 void retroKeyEvent(bool down, unsigned keycode, uint32_t character, uint16_t key_modifiers)
 {
    ((OSystem_RETRO*)g_system)->processKeyEvent(down, keycode, character, key_modifiers);
diff --git a/backends/platform/libretro/os.h b/backends/platform/libretro/os.h
index 07ee3e9..ed54090 100644
--- a/backends/platform/libretro/os.h
+++ b/backends/platform/libretro/os.h
@@ -49,6 +49,7 @@ void retroProcessMouse(retro_input_state_t aCallback);
 void retroPostQuit();
 
 void retroSetSystemDir(const char* aPath);
+void retroSetSaveDir(const char* aPath);
 
 void retroKeyEvent(bool down, unsigned keycode, uint32_t character, uint16_t key_modifiers);
 
