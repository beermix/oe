#!/bin/sh

. /etc/profile

SPOTIFY_HOME=/storage/.cache/app.spotify

install_spotify() {
  kodi-send --action="Notification(Spotify,This is the first time you are starting Spotify. It is being downloaded in the background...,13000)"
  if [ -z "$1" ]; then
    export `curl -s "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=spotify" | grep -E '^pkgver='` || exit 1
    export `curl -s "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=spotify" | grep -E '^_anotherpkgver='` || exit 1
    export `curl -s "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=spotify" | grep -E '^source_x86_64='` || exit 1
    export `curl -s "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=spotify" | grep -E '^_amd64_pkgrel='`
    export url=`echo $source_x86_64 | sed s:\$\{pkgver\}:$pkgver: | sed s:\$\{_anotherpkgver\}:$_anotherpkgver: | sed s:\$\{_amd64_pkgrel\}:$_amd64_pkgrel: | cut -d \" -f 2`
  else
    export url="$1"
  fi 
  mkdir -p /tmp/spotify ; cd /tmp/spotify
  echo downloading $url
  wget -q $url || exit 1
  ar -x *.deb && tar -zxf data.tar.gz
  mv usr/share/spotify $SPOTIFY_HOME
  cd ~ ; rm -rf /tmp/spotify
}

run_spotify() {
  LD_PRELOAD="libcurl-compat.so libcrypto-compat.so libssl-compat.so" $SPOTIFY_HOME/spotify "$@"
}

if [ ! -x $SPOTIFY_HOME ]; then
  install_spotify "$1" > /tmp/spotify.log 2>&1
fi

if [ -S /var/run/pulse/native -a ! -f /storage/.config/usepulse ]; then
  kodifreeze.sh freeze muteonly
  systemctl stop pulseaudio
  NOPULSE=1
fi

run_spotify "$@" > /tmp/spotify.log 2>&1

if [ "$NOPULSE" = "1" ]; then
  systemctl start pulseaudio
  kodifreeze.sh unfreeze muteonly
fi
