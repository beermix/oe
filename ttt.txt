commit f493ba8156aa97a5d082cba9b3661246b2eb6969
Author: AV <27rurk@gmail.com>
Date:   Fri May 10 18:46:04 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 4d4ce875bb..7a0e5a9cc9 100755
--- a/scripts/build
+++ b/scripts/build
@@ -131,8 +131,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared \
-                       --enable-silent-rules"
+                       --enable-shared"
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                    -DCMAKE_INSTALL_PREFIX=/usr \
@@ -157,8 +156,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared \
-                     --enable-silent-rules"
+                     --enable-shared"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit 6c6b4493673f3bf3583d94d6e8ccd09ef3a66df6
Author: AV <27rurk@gmail.com>
Date:   Sat May 4 03:09:51 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index c57be7d0a6..4d4ce875bb 100755
--- a/scripts/build
+++ b/scripts/build
@@ -110,8 +110,8 @@ fi
 
 # configure debug build defaults
 if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
-  CMAKE_BUILD_TYPE="Debug"
-  MESON_BUILD_TYPE="debug"
+  CMAKE_BUILD_TYPE=""
+  MESON_BUILD_TYPE="plain"
 else
   CMAKE_BUILD_TYPE=""
   MESON_BUILD_TYPE="plain"
@@ -131,7 +131,8 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared"
+                       --enable-shared \
+                       --enable-silent-rules"
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                    -DCMAKE_INSTALL_PREFIX=/usr \
@@ -156,7 +157,8 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared"
+                     --enable-shared \
+                     --enable-silent-rules"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit de7c1004bd897fd554d4a22f0c1694d25cb5e824
Author: AV <27rurk@gmail.com>
Date:   Tue Apr 30 23:41:09 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index f83346f203..c57be7d0a6 100755
--- a/scripts/build
+++ b/scripts/build
@@ -93,9 +93,6 @@ else
   build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color "CLR_TARGET" "(${TARGET})")" "indent"
 fi
 
-# Don't need to block if this package is not in SERIAL_BUILD_PACKAGES list
-listcontains "${SERIAL_BUILD_PACKAGES}" "${PACKAGE_NAME}" && $SCRIPTS/do_build_block add "${PACKAGE_NAME}" "${SERIAL_BUILD_PACKAGES_LIMIT}"
-
 setup_toolchain $TARGET
 
 # configure install directory
@@ -134,8 +131,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared \
-                       --enable-silent-rules"
+                       --enable-shared"
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                    -DCMAKE_INSTALL_PREFIX=/usr \
@@ -160,8 +156,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared \
-                     --enable-silent-rules"
+                     --enable-shared"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
@@ -501,6 +496,4 @@ for i in PKG_NAME PKG_DEEPHASH BUILD_WITH_DEBUG; do
   echo "STAMP_$i=\"${!i}\"" >> $STAMP
 done
 
-listcontains "${SERIAL_BUILD_PACKAGES}" "${PACKAGE_NAME}" && $SCRIPTS/do_build_block del "${PACKAGE_NAME}" "${SERIAL_BUILD_PACKAGES_LIMIT}" || true
-
 pkg_lock_status "UNLOCK" "${PKG_NAME}:${TARGET}" "build" "built"

commit be67ae32736862341638cea6eb0ff762af98d90e
Author: AV <27rurk@gmail.com>
Date:   Tue Apr 30 21:19:51 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 48d6a61a12..f83346f203 100755
--- a/scripts/build
+++ b/scripts/build
@@ -116,7 +116,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
   MESON_BUILD_TYPE="debug"
 else
-  CMAKE_BUILD_TYPE="Release"
+  CMAKE_BUILD_TYPE=""
   MESON_BUILD_TYPE="plain"
 fi
 

commit 6e874f6de8df70777ea2e3f80d4e98a9a052edd7
Author: AV <27rurk@gmail.com>
Date:   Tue Apr 30 00:51:52 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 5b4de1242d..48d6a61a12 100755
--- a/scripts/build
+++ b/scripts/build
@@ -93,6 +93,9 @@ else
   build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color "CLR_TARGET" "(${TARGET})")" "indent"
 fi
 
+# Don't need to block if this package is not in SERIAL_BUILD_PACKAGES list
+listcontains "${SERIAL_BUILD_PACKAGES}" "${PACKAGE_NAME}" && $SCRIPTS/do_build_block add "${PACKAGE_NAME}" "${SERIAL_BUILD_PACKAGES_LIMIT}"
+
 setup_toolchain $TARGET
 
 # configure install directory
@@ -498,4 +501,6 @@ for i in PKG_NAME PKG_DEEPHASH BUILD_WITH_DEBUG; do
   echo "STAMP_$i=\"${!i}\"" >> $STAMP
 done
 
+listcontains "${SERIAL_BUILD_PACKAGES}" "${PACKAGE_NAME}" && $SCRIPTS/do_build_block del "${PACKAGE_NAME}" "${SERIAL_BUILD_PACKAGES_LIMIT}" || true
+
 pkg_lock_status "UNLOCK" "${PKG_NAME}:${TARGET}" "build" "built"

commit c1f3ebe9940c0bdf5ef5c62f4bea3f24b34cca01
Author: AV <27rurk@gmail.com>
Date:   Tue Apr 30 00:22:02 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 48d6a61a12..5b4de1242d 100755
--- a/scripts/build
+++ b/scripts/build
@@ -93,9 +93,6 @@ else
   build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color "CLR_TARGET" "(${TARGET})")" "indent"
 fi
 
-# Don't need to block if this package is not in SERIAL_BUILD_PACKAGES list
-listcontains "${SERIAL_BUILD_PACKAGES}" "${PACKAGE_NAME}" && $SCRIPTS/do_build_block add "${PACKAGE_NAME}" "${SERIAL_BUILD_PACKAGES_LIMIT}"
-
 setup_toolchain $TARGET
 
 # configure install directory
@@ -501,6 +498,4 @@ for i in PKG_NAME PKG_DEEPHASH BUILD_WITH_DEBUG; do
   echo "STAMP_$i=\"${!i}\"" >> $STAMP
 done
 
-listcontains "${SERIAL_BUILD_PACKAGES}" "${PACKAGE_NAME}" && $SCRIPTS/do_build_block del "${PACKAGE_NAME}" "${SERIAL_BUILD_PACKAGES_LIMIT}" || true
-
 pkg_lock_status "UNLOCK" "${PKG_NAME}:${TARGET}" "build" "built"

commit 4212f021120016cca3a2f583c0f2c09e7636dce1
Author: AV <27rurk@gmail.com>
Date:   Tue Apr 30 00:03:04 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 5b4de1242d..48d6a61a12 100755
--- a/scripts/build
+++ b/scripts/build
@@ -93,6 +93,9 @@ else
   build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color "CLR_TARGET" "(${TARGET})")" "indent"
 fi
 
+# Don't need to block if this package is not in SERIAL_BUILD_PACKAGES list
+listcontains "${SERIAL_BUILD_PACKAGES}" "${PACKAGE_NAME}" && $SCRIPTS/do_build_block add "${PACKAGE_NAME}" "${SERIAL_BUILD_PACKAGES_LIMIT}"
+
 setup_toolchain $TARGET
 
 # configure install directory
@@ -498,4 +501,6 @@ for i in PKG_NAME PKG_DEEPHASH BUILD_WITH_DEBUG; do
   echo "STAMP_$i=\"${!i}\"" >> $STAMP
 done
 
+listcontains "${SERIAL_BUILD_PACKAGES}" "${PACKAGE_NAME}" && $SCRIPTS/do_build_block del "${PACKAGE_NAME}" "${SERIAL_BUILD_PACKAGES_LIMIT}" || true
+
 pkg_lock_status "UNLOCK" "${PKG_NAME}:${TARGET}" "build" "built"

commit 068313580ab3fa15decb1b984bbb4ddf6846aa28
Author: AV <27rurk@gmail.com>
Date:   Mon Apr 29 06:25:33 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index e370a3a98b..5b4de1242d 100755
--- a/scripts/build
+++ b/scripts/build
@@ -131,7 +131,8 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared"
+                       --enable-shared \
+                       --enable-silent-rules"
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                    -DCMAKE_INSTALL_PREFIX=/usr \
@@ -156,7 +157,8 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared"
+                     --enable-shared \
+                     --enable-silent-rules"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit d1e7b98425bd99bf6b93c0f075b32595d071cc26
Author: AV <27rurk@gmail.com>
Date:   Fri Apr 26 03:51:53 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 3099d1bbc4..e370a3a98b 100755
--- a/scripts/build
+++ b/scripts/build
@@ -113,7 +113,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
   MESON_BUILD_TYPE="debug"
 else
-  CMAKE_BUILD_TYPE="MinSizeRel"
+  CMAKE_BUILD_TYPE="Release"
   MESON_BUILD_TYPE="plain"
 fi
 

commit 0b553694e763faad5388fac530d2d09cdaadeb95
Author: AV <27rurk@gmail.com>
Date:   Thu Apr 25 19:05:02 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 97bf1653cd..3099d1bbc4 100755
--- a/scripts/build
+++ b/scripts/build
@@ -49,8 +49,6 @@ if [ -f $STAMP ]; then
     rm -f $STAMP
   elif [ ! "$BUILD_WITH_DEBUG" = "$STAMP_BUILD_WITH_DEBUG" ]; then
     rm -f $STAMP
-  elif [ "${PKG_NAME}" = "u-boot" -a ! "$UBOOT_SYSTEM" = "$STAMP_UBOOT_SYSTEM" ]; then
-    rm -f $STAMP
   else
     # stamp matched: already built, do nothing
     pkg_lock_status "UNLOCK" "${PKG_NAME}:${TARGET}" "build" "already built"
@@ -448,7 +446,7 @@ done
 
 # Transfer the new sysroot content to the shared sysroot
 mkdir -p "${PKG_ORIG_SYSROOT_PREFIX}"
-cp -PR "${SYSROOT_PREFIX}"/* "${PKG_ORIG_SYSROOT_PREFIX}"
+cp -PRf "${SYSROOT_PREFIX}"/* "${PKG_ORIG_SYSROOT_PREFIX}"
 rm -rf "${SYSROOT_PREFIX}"
 
 export SYSROOT_PREFIX="${PKG_ORIG_SYSROOT_PREFIX}"
@@ -497,8 +495,5 @@ PKG_DEEPHASH=$(calculate_stamp)
 for i in PKG_NAME PKG_DEEPHASH BUILD_WITH_DEBUG; do
   echo "STAMP_$i=\"${!i}\"" >> $STAMP
 done
-if [ "${PKG_NAME}" = "u-boot" ]; then
-  echo "STAMP_UBOOT_SYSTEM=\"${UBOOT_SYSTEM}\"" >> $STAMP
-fi
 
 pkg_lock_status "UNLOCK" "${PKG_NAME}:${TARGET}" "build" "built"

commit a0be79a0d01f065e1d5414ad4be32f7fa4b16dc0
Author: AV <27rurk@gmail.com>
Date:   Tue Mar 12 18:01:45 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 258b0025de..97bf1653cd 100755
--- a/scripts/build
+++ b/scripts/build
@@ -373,13 +373,17 @@ fi
 
 pkg_call_exists post_make_$TARGET && pkg_call post_make_$TARGET
 
-# make install writes directly to sysroot which then needs fixing up - this is racy
-if listcontains "configure:target cmake-make:target autotools:target make:target" "${PKG_TOOLCHAIN}:${TARGET}"; then
-  acquire_exclusive_lock "${PKG_NAME}:${TARGET}" "build"
-  PKG_NEED_UNLOCK=yes
-else
-  PKG_NEED_UNLOCK=no
-fi
+# Hack around directly writing/modifying the content of a shared sysroot
+# by temporarily installing new files to a package specific sysroot
+PKG_ORIG_SYSROOT_PREFIX="${SYSROOT_PREFIX}"
+export SYSROOT_PREFIX="${BUILD}/.sysroot/${PKG_NAME}.${TARGET}"
+rm -rf "${SYSROOT_PREFIX}"
+
+# Create common sysroot directories as some packages expect them to exist.
+# TODO: Fix those packages so we don't need to pre-create directories.
+for d in /usr/lib /usr/include /usr/bin /usr/lib/pkgconfig; do
+  mkdir -p "${SYSROOT_PREFIX}${d}"
+done
 
 # make install
 pkg_call_exists pre_makeinstall_$TARGET && pkg_call pre_makeinstall_$TARGET
@@ -422,14 +426,32 @@ fi
 
 pkg_call_exists post_makeinstall_$TARGET && pkg_call post_makeinstall_$TARGET
 
-# This is the racy part - one or more processes may be creating, modifying or deleting
-# $SYSROOT_PREFIX/usr/lib/*.la files while another (eg. this) process is rewriting the same
-# files as it fixes up the libdir prefix. Eugh.
-for i in $(find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null); do
-  sed -e "s:\(['= ]\)/usr:\\1$SYSROOT_PREFIX/usr:g" -i $i
+# Fixup temporary sysroot references to the shared sysroot
+for i in $(find "${SYSROOT_PREFIX}/usr/lib" -type f -name "*.la" 2>/dev/null); do
+  sed -e "s:\(['= ]\)/usr:\\1${PKG_ORIG_SYSROOT_PREFIX}/usr:g" -i "${i}"
+done
+for i in $(find "${SYSROOT_PREFIX}/usr/bin" -type f -name "*-config" 2>/dev/null); do
+  sed -e "s#${SYSROOT_PREFIX}/usr#${PKG_ORIG_SYSROOT_PREFIX}/usr#g" -i "${i}"
+done
+for i in $(find "${SYSROOT_PREFIX}/usr/lib" -type f -name "*.pc" 2>/dev/null); do
+  sed -e "s#${SYSROOT_PREFIX}/usr#${PKG_ORIG_SYSROOT_PREFIX}/usr#g" -i "${i}"
 done
+for i in $(find "${SYSROOT_PREFIX}/usr"/{lib,share} -type f -name "*.cmake" 2>/dev/null); do
+  sed -e "s#${SYSROOT_PREFIX}/usr#${PKG_ORIG_SYSROOT_PREFIX}/usr#g" -i "${i}"
+done
+for i in $(find "${SYSROOT_PREFIX}" -type l 2>/dev/null); do
+  _tmp="$(readlink -m "${i}")"
+  if [[ ${_tmp} =~ ^${SYSROOT_PREFIX}/ ]]; then
+    ln -sf "${_tmp/${SYSROOT_PREFIX}\//${PKG_ORIG_SYSROOT_PREFIX}\/}" "${i}"
+  fi
+done
+
+# Transfer the new sysroot content to the shared sysroot
+mkdir -p "${PKG_ORIG_SYSROOT_PREFIX}"
+cp -PR "${SYSROOT_PREFIX}"/* "${PKG_ORIG_SYSROOT_PREFIX}"
+rm -rf "${SYSROOT_PREFIX}"
 
-[ "${PKG_NEED_UNLOCK}" = "yes" ] && release_exclusive_lock "${PKG_NAME}:${TARGET}" "build"
+export SYSROOT_PREFIX="${PKG_ORIG_SYSROOT_PREFIX}"
 
 if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
   if [ -d $INSTALL ]; then

commit fdfbce72b121e398a0d6e4d4c2aa2eebf68554bc
Author: AV <27rurk@gmail.com>
Date:   Mon Feb 18 23:49:17 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 21590a4ef5..258b0025de 100755
--- a/scripts/build
+++ b/scripts/build
@@ -433,7 +433,7 @@ done
 
 if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
   if [ -d $INSTALL ]; then
-    [ ! "$PKG_INCLUDE_INSTALL" = yes ] && rm -rf $INSTALL/{usr/,}include
+    rm -rf $INSTALL/{usr/,}include
     rm -rf $INSTALL/{usr/,}lib/cmake
     rm -rf $INSTALL/{usr/,}lib/pkgconfig
     rm -rf $INSTALL/{usr/,}man
@@ -442,7 +442,7 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     rm -rf $INSTALL/{usr/,}share/doc
     rm -rf $INSTALL/{usr/,}share/gtk-doc
     rm -rf $INSTALL/{usr/,}share/info
-    [ ! "$PKG_LOCALE_INSTALL" = yes ] && rm -rf $INSTALL/{usr/,}share/locale
+    rm -rf $INSTALL/{usr/,}share/locale
     rm -rf $INSTALL/{usr/,}share/man
     rm -rf $INSTALL/{usr/,}share/pkgconfig
     rm -rf $INSTALL/{usr/,}var

commit 48f74c0cce27b4f02462a27ee0323ac0016daff7
Author: AV <27rurk@gmail.com>
Date:   Mon Feb 18 21:03:40 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index c123a5b8b9..21590a4ef5 100755
--- a/scripts/build
+++ b/scripts/build
@@ -433,7 +433,7 @@ done
 
 if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
   if [ -d $INSTALL ]; then
-    rm -rf $INSTALL/{usr/,}include
+    [ ! "$PKG_INCLUDE_INSTALL" = yes ] && rm -rf $INSTALL/{usr/,}include
     rm -rf $INSTALL/{usr/,}lib/cmake
     rm -rf $INSTALL/{usr/,}lib/pkgconfig
     rm -rf $INSTALL/{usr/,}man
@@ -442,10 +442,9 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     rm -rf $INSTALL/{usr/,}share/doc
     rm -rf $INSTALL/{usr/,}share/gtk-doc
     rm -rf $INSTALL/{usr/,}share/info
-    rm -rf $INSTALL/{usr/,}share/locale
+    [ ! "$PKG_LOCALE_INSTALL" = yes ] && rm -rf $INSTALL/{usr/,}share/locale
     rm -rf $INSTALL/{usr/,}share/man
     rm -rf $INSTALL/{usr/,}share/pkgconfig
-    rm -rf $INSTALL/{usr/,}share/zsh
     rm -rf $INSTALL/{usr/,}var
     find $INSTALL \( -name "*.orig" \
                   -o -name "*.rej" \
@@ -460,10 +459,6 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
       $STRIP $(find $INSTALL \
         -type f -name "*.so*" \
-        ! -name "ld-*.so" \
-        ! -name "libc-*.so" \
-        ! -name "libpthread-*.so" \
-        ! -name "libthread_db-*so" \
         2>/dev/null) 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
           $STRIP $(find $INSTALL -type f -name "*.so*" 2>/dev/null) 2>/dev/null || :

commit 30d6fdb56fd2a0b10e9564722dc1983a5916eea6
Author: AV <27rurk@gmail.com>
Date:   Mon Feb 18 20:37:01 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 39d228dad2..c123a5b8b9 100755
--- a/scripts/build
+++ b/scripts/build
@@ -7,7 +7,7 @@
 . config/options "$1"
 
 if [ -z "$1" ]; then
-  die "usage: $0 package_name[:<host|target|init|bootstrap>]"
+  die "usage: $0 package_name[:<host|target|init|bootstrap>] [parent_pkg]"
 fi
 
 if [ "$1" = "--all" ]; then
@@ -32,10 +32,13 @@ if [ "${1//:/}" != "${1}" ]; then
   PACKAGE_NAME="${1%:*}"
   TARGET="${1#*:}"
 else
-  PACKAGE_NAME=$1
+  PACKAGE_NAME="${1}"
   TARGET=
 fi
 TARGET="${TARGET:-target}"
+PARENT_PKG="${2:-${PKG_NAME}:${TARGET}}"
+
+pkg_lock "${PACKAGE_NAME}:${TARGET}" "build" "${PARENT_PKG}"
 
 mkdir -p $STAMPS/$PACKAGE_NAME
 STAMP=$STAMPS/$PACKAGE_NAME/build_$TARGET
@@ -46,15 +49,21 @@ if [ -f $STAMP ]; then
     rm -f $STAMP
   elif [ ! "$BUILD_WITH_DEBUG" = "$STAMP_BUILD_WITH_DEBUG" ]; then
     rm -f $STAMP
-  elif [ "$1" = "u-boot" -a ! "$UBOOT_SYSTEM" = "$STAMP_UBOOT_SYSTEM" ]; then
+  elif [ "${PKG_NAME}" = "u-boot" -a ! "$UBOOT_SYSTEM" = "$STAMP_UBOOT_SYSTEM" ]; then
     rm -f $STAMP
   else
     # stamp matched: already built, do nothing
+    pkg_lock_status "UNLOCK" "${PKG_NAME}:${TARGET}" "build" "already built"
     exit 0
   fi
 fi
 
-$SCRIPTS/unpack $PACKAGE_NAME
+if [ -n "${PKG_DEPENDS_UNPACK}" ]; then
+  for p in ${PKG_DEPENDS_UNPACK}; do
+    $SCRIPTS/unpack "${p}" "${PARENT_PKG}"
+  done
+fi
+$SCRIPTS/unpack "${PACKAGE_NAME}" "${PARENT_PKG}"
 
 # build dependencies, only when PKG_DEPENDS_? is filled
 unset _pkg_depends
@@ -65,16 +74,9 @@ case "$TARGET" in
   "bootstrap") _pkg_depends="$PKG_DEPENDS_BOOTSTRAP";;
 esac
 for p in $_pkg_depends; do
-  $SCRIPTS/build $p
+  $SCRIPTS/build "${p}" "${PARENT_PKG}"
 done
 
-# build this package
-if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
-  build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color "CLR_TARGET" "(${TARGET})") [DEBUG]" "indent"
-else
-  build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color "CLR_TARGET" "(${TARGET})")" "indent"
-fi
-
 # virtual packages are not built as they only contain dependencies, so dont go further here
 if [ "$PKG_SECTION" = "virtual" ]; then
   PKG_DEEPHASH=$(calculate_stamp)
@@ -82,9 +84,17 @@ if [ "$PKG_SECTION" = "virtual" ]; then
     echo "STAMP_$i=\"${!i}\"" >> $STAMP
   done
 
+  pkg_lock_status "UNLOCK" "${PKG_NAME}:${TARGET}" "build" "built"
   exit 0
 fi
 
+# build this package
+if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
+  build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color "CLR_TARGET" "(${TARGET})") [DEBUG]" "indent"
+else
+  build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color "CLR_TARGET" "(${TARGET})")" "indent"
+fi
+
 setup_toolchain $TARGET
 
 # configure install directory
@@ -102,10 +112,10 @@ fi
 
 # configure debug build defaults
 if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
-  CMAKE_BUILD_TYPE=""
-  MESON_BUILD_TYPE="plain"
+  CMAKE_BUILD_TYPE="Debug"
+  MESON_BUILD_TYPE="debug"
 else
-  CMAKE_BUILD_TYPE=""
+  CMAKE_BUILD_TYPE="MinSizeRel"
   MESON_BUILD_TYPE="plain"
 fi
 
@@ -123,8 +133,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared \
-                       --enable-silent-rules"
+                       --enable-shared"
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                    -DCMAKE_INSTALL_PREFIX=/usr \
@@ -149,8 +158,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared \
-                     --enable-silent-rules"
+                     --enable-shared"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
@@ -203,9 +211,11 @@ build_msg "CLR_TOOLCHAIN" "TOOLCHAIN" "${PKG_TOOLCHAIN}${_auto_toolchain}"
 
 # make autoreconf
 if [ "$PKG_TOOLCHAIN" = "autotools" ]; then
-  $SCRIPTS/autoreconf $PACKAGE_NAME
+  $SCRIPTS/autoreconf "${PACKAGE_NAME}" "${PARENT_PKG}"
 fi
 
+pkg_lock_status "ACTIVE" "${PKG_NAME}:${TARGET}" "build"
+
 # include build template and build
 pkg_call_exists pre_build_$TARGET && pkg_call pre_build_$TARGET
 
@@ -363,6 +373,14 @@ fi
 
 pkg_call_exists post_make_$TARGET && pkg_call post_make_$TARGET
 
+# make install writes directly to sysroot which then needs fixing up - this is racy
+if listcontains "configure:target cmake-make:target autotools:target make:target" "${PKG_TOOLCHAIN}:${TARGET}"; then
+  acquire_exclusive_lock "${PKG_NAME}:${TARGET}" "build"
+  PKG_NEED_UNLOCK=yes
+else
+  PKG_NEED_UNLOCK=no
+fi
+
 # make install
 pkg_call_exists pre_makeinstall_$TARGET && pkg_call pre_makeinstall_$TARGET
 
@@ -387,7 +405,7 @@ else
 
     # make based builds
     "configure:target"|"cmake-make:target"|"autotools:target"|"make:target")
-      $MAKEINSTALL $PKG_MAKEINSTALL_OPTS_TARGET
+      make install DESTDIR=$SYSROOT_PREFIX -j1 $PKG_MAKEINSTALL_OPTS_TARGET
       make install DESTDIR=$INSTALL $PKG_MAKEINSTALL_OPTS_TARGET
       ;;
     "configure:host"|"cmake-make:host"|"autotools:host"|"make:host")
@@ -404,9 +422,18 @@ fi
 
 pkg_call_exists post_makeinstall_$TARGET && pkg_call post_makeinstall_$TARGET
 
+# This is the racy part - one or more processes may be creating, modifying or deleting
+# $SYSROOT_PREFIX/usr/lib/*.la files while another (eg. this) process is rewriting the same
+# files as it fixes up the libdir prefix. Eugh.
+for i in $(find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null); do
+  sed -e "s:\(['= ]\)/usr:\\1$SYSROOT_PREFIX/usr:g" -i $i
+done
+
+[ "${PKG_NEED_UNLOCK}" = "yes" ] && release_exclusive_lock "${PKG_NAME}:${TARGET}" "build"
+
 if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
   if [ -d $INSTALL ]; then
-    [ ! "$PKG_INCLUDE_INSTALL" = yes ] && rm -rf $INSTALL/{usr/,}include
+    rm -rf $INSTALL/{usr/,}include
     rm -rf $INSTALL/{usr/,}lib/cmake
     rm -rf $INSTALL/{usr/,}lib/pkgconfig
     rm -rf $INSTALL/{usr/,}man
@@ -415,9 +442,10 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     rm -rf $INSTALL/{usr/,}share/doc
     rm -rf $INSTALL/{usr/,}share/gtk-doc
     rm -rf $INSTALL/{usr/,}share/info
-    [ ! "$PKG_LOCALE_INSTALL" = yes ] && rm -rf $INSTALL/{usr/,}share/locale
+    rm -rf $INSTALL/{usr/,}share/locale
     rm -rf $INSTALL/{usr/,}share/man
     rm -rf $INSTALL/{usr/,}share/pkgconfig
+    rm -rf $INSTALL/{usr/,}share/zsh
     rm -rf $INSTALL/{usr/,}var
     find $INSTALL \( -name "*.orig" \
                   -o -name "*.rej" \
@@ -432,6 +460,10 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
       $STRIP $(find $INSTALL \
         -type f -name "*.so*" \
+        ! -name "ld-*.so" \
+        ! -name "libc-*.so" \
+        ! -name "libpthread-*.so" \
+        ! -name "libthread_db-*so" \
         2>/dev/null) 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
           $STRIP $(find $INSTALL -type f -name "*.so*" 2>/dev/null) 2>/dev/null || :
@@ -444,14 +476,12 @@ fi
 
 cd $ROOT
 
-for i in $(find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null); do
-  sed -e "s:\(['= ]\)/usr:\\1$SYSROOT_PREFIX/usr:g" -i $i
-done
-
 PKG_DEEPHASH=$(calculate_stamp)
 for i in PKG_NAME PKG_DEEPHASH BUILD_WITH_DEBUG; do
   echo "STAMP_$i=\"${!i}\"" >> $STAMP
 done
-if [ "$1" = "u-boot" ]; then
+if [ "${PKG_NAME}" = "u-boot" ]; then
   echo "STAMP_UBOOT_SYSTEM=\"${UBOOT_SYSTEM}\"" >> $STAMP
 fi
+
+pkg_lock_status "UNLOCK" "${PKG_NAME}:${TARGET}" "build" "built"

commit b009c83fd5b2c8b9f6c0887c5e1374508ed1cf41
Author: AV <27rurk@gmail.com>
Date:   Wed Jan 23 16:27:15 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index a618b055af..39d228dad2 100755
--- a/scripts/build
+++ b/scripts/build
@@ -207,7 +207,7 @@ if [ "$PKG_TOOLCHAIN" = "autotools" ]; then
 fi
 
 # include build template and build
-pkg_call_optional pre_build_$TARGET
+pkg_call_exists pre_build_$TARGET && pkg_call pre_build_$TARGET
 
 # ensure $PKG_BUILD is there. (installer? PKG_URL="")
 if [ ! -d "$PKG_BUILD" ] ; then
@@ -230,9 +230,11 @@ if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRI
 fi
 
 # configure
-pkg_call_optional pre_configure_$TARGET
+pkg_call_exists pre_configure_$TARGET && pkg_call pre_configure_$TARGET
 
-if ! pkg_call configure_$TARGET; then
+if pkg_call_exists configure_$TARGET; then
+  pkg_call configure_$TARGET
+else
   case "$PKG_TOOLCHAIN:$TARGET" in
     # meson builds
     "meson:target")
@@ -312,12 +314,14 @@ if ! pkg_call configure_$TARGET; then
   esac
 fi
 
-pkg_call_optional post_configure_$TARGET
+pkg_call_exists post_configure_$TARGET && pkg_call post_configure_$TARGET
 
 # make
-pkg_call_optional pre_make_$TARGET
+pkg_call_exists pre_make_$TARGET && pkg_call pre_make_$TARGET
 
-if ! pkg_call make_$TARGET; then
+if pkg_call_exists make_$TARGET; then
+  pkg_call make_$TARGET
+else
   case "$PKG_TOOLCHAIN:$TARGET" in
     # ninja based builds
     "meson:target"|"cmake:target"|"ninja:target")
@@ -357,12 +361,14 @@ if ! pkg_call make_$TARGET; then
   esac
 fi
 
-pkg_call_optional post_make_$TARGET
+pkg_call_exists post_make_$TARGET && pkg_call post_make_$TARGET
 
 # make install
-pkg_call_optional pre_makeinstall_$TARGET
+pkg_call_exists pre_makeinstall_$TARGET && pkg_call pre_makeinstall_$TARGET
 
-if ! pkg_call makeinstall_$TARGET; then
+if pkg_call_exists makeinstall_$TARGET; then
+  pkg_call makeinstall_$TARGET
+else
   case "$PKG_TOOLCHAIN:$TARGET" in
     # ninja based builds
     "meson:target"|"cmake:target")
@@ -396,7 +402,7 @@ if ! pkg_call makeinstall_$TARGET; then
   esac
 fi
 
-pkg_call_optional post_makeinstall_$TARGET
+pkg_call_exists post_makeinstall_$TARGET && pkg_call post_makeinstall_$TARGET
 
 if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
   if [ -d $INSTALL ]; then

commit 25e519771f1bc6f83de387826f5b24c772a3f7b6
Author: AV <27rurk@gmail.com>
Date:   Sun Jan 6 00:46:32 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 5fdcc23cb7..a618b055af 100755
--- a/scripts/build
+++ b/scripts/build
@@ -128,7 +128,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                    -DCMAKE_INSTALL_PREFIX=/usr \
-                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE -Wno-dev"
+                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
 
 TARGET_MESON_OPTS="--prefix=/usr \
                    --bindir=/usr/bin \
@@ -154,7 +154,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN -Wno-dev"
+                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
 
 HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
                  --bindir=$TOOLCHAIN/bin \

commit 67687a6cdfe81680f2cc3ae92ce877bd0e6d371e
Author: AV <27rurk@gmail.com>
Date:   Sun Jan 6 00:02:33 2019 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 3035f4a33e..5fdcc23cb7 100755
--- a/scripts/build
+++ b/scripts/build
@@ -4,30 +4,30 @@
 # Copyright (C) 2009-2016 Stephan Raue (stephan@openelec.tv)
 # Copyright (C) 2018-present Team LibreELEC (https://libreelec.tv)
 
-. config/options $1
+. config/options "$1"
+
+if [ -z "$1" ]; then
+  die "usage: $0 package_name[:<host|target|init|bootstrap>]"
+fi
 
 if [ "$1" = "--all" ]; then
   if [ -n "$2" ]; then
     for build_dir in $(ls -1d ${ROOT}/build.*); do
-      load_build_config ${build_dir} && ./scripts/build $2
+      load_build_config ${build_dir} && ${SCRIPTS}/build "$2"
     done
   fi
   exit 0
 fi
 
-if [ -z "$1" ]; then
-  die "usage: $0 package_name[:<host|target|init|bootstrap>]"
+if [ -z "${PKG_NAME}" ]; then
+  die "$(print_color CLR_ERROR "${1}: no package.mk file found")"
 fi
 
-if [ ! -f $PKG_DIR/package.mk ]; then
-  die "$(print_color CLR_ERROR "$1: no package.mk file found")"
+if [ -n "$PKG_ARCH" ]; then
+  listcontains "$PKG_ARCH" "!$TARGET_ARCH" && exit 0
+  listcontains "$PKG_ARCH" "$TARGET_ARCH" || listcontains "$PKG_ARCH" "any" || exit 0
 fi
 
-# set defaults
-PKG_CONFIGURE_SCRIPT=""
-PKG_MAKE_OPTS=""
-PKG_MAKEINSTALL_OPTS=""
-
 if [ "${1//:/}" != "${1}" ]; then
   PACKAGE_NAME="${1%:*}"
   TARGET="${1#*:}"
@@ -37,19 +37,9 @@ else
 fi
 TARGET="${TARGET:-target}"
 
-if [ -n "$PKG_ARCH" ]; then
-  listcontains "$PKG_ARCH" "!$TARGET_ARCH" && exit 0
-  listcontains "$PKG_ARCH" "$TARGET_ARCH" || listcontains "$PKG_ARCH" "any" || exit 0
-fi
-
-unset INSTALL
-
 mkdir -p $STAMPS/$PACKAGE_NAME
 STAMP=$STAMPS/$PACKAGE_NAME/build_$TARGET
-
-$SCRIPTS/unpack $PACKAGE_NAME
-
-if [ -f $STAMP ] ; then
+if [ -f $STAMP ]; then
   . $STAMP
   PKG_DEEPHASH=$(calculate_stamp)
   if [ ! "$PKG_DEEPHASH" = "$STAMP_PKG_DEEPHASH" ]; then
@@ -58,72 +48,70 @@ if [ -f $STAMP ] ; then
     rm -f $STAMP
   elif [ "$1" = "u-boot" -a ! "$UBOOT_SYSTEM" = "$STAMP_UBOOT_SYSTEM" ]; then
     rm -f $STAMP
+  else
+    # stamp matched: already built, do nothing
+    exit 0
   fi
 fi
 
-if [ -f $STAMP ]; then
-  # already build, do nothing
+$SCRIPTS/unpack $PACKAGE_NAME
+
+# build dependencies, only when PKG_DEPENDS_? is filled
+unset _pkg_depends
+case "$TARGET" in
+  "target") _pkg_depends="$PKG_DEPENDS_TARGET";;
+  "host") _pkg_depends="$PKG_DEPENDS_HOST";;
+  "init") _pkg_depends="$PKG_DEPENDS_INIT";;
+  "bootstrap") _pkg_depends="$PKG_DEPENDS_BOOTSTRAP";;
+esac
+for p in $_pkg_depends; do
+  $SCRIPTS/build $p
+done
+
+# build this package
+if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
+  build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color "CLR_TARGET" "(${TARGET})") [DEBUG]" "indent"
+else
+  build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color "CLR_TARGET" "(${TARGET})")" "indent"
+fi
+
+# virtual packages are not built as they only contain dependencies, so dont go further here
+if [ "$PKG_SECTION" = "virtual" ]; then
+  PKG_DEEPHASH=$(calculate_stamp)
+  for i in PKG_NAME PKG_DEEPHASH BUILD_WITH_DEBUG; do
+    echo "STAMP_$i=\"${!i}\"" >> $STAMP
+  done
+
   exit 0
 fi
-rm -f $STAMP
 
 setup_toolchain $TARGET
 
-# unset functions
-unset -f configure_package
-unset -f pre_build_target
-unset -f pre_configure_target
-unset -f configure_target
-unset -f post_configure_target
-unset -f pre_make_target
-unset -f make_target
-unset -f post_make_target
-unset -f pre_makeinstall_target
-unset -f makeinstall_target
-unset -f post_makeinstall_target
-
-unset -f pre_build_host
-unset -f pre_configure_host
-unset -f configure_host
-unset -f post_configure_host
-unset -f pre_make_host
-unset -f make_host
-unset -f post_make_host
-unset -f pre_makeinstall_host
-unset -f makeinstall_host
-unset -f post_makeinstall_host
-
-unset -f pre_build_init
-unset -f pre_configure_init
-unset -f configure_init
-unset -f post_configure_init
-unset -f pre_make_init
-unset -f make_init
-unset -f post_make_init
-unset -f pre_makeinstall_init
-unset -f makeinstall_init
-unset -f post_makeinstall_init
-
-unset -f pre_build_bootstrap
-unset -f pre_configure_bootstrap
-unset -f configure_bootstrap
-unset -f post_configure_bootstrap
-unset -f pre_make_bootstrap
-unset -f make_bootstrap
-unset -f post_make_bootstrap
-unset -f pre_makeinstall_bootstrap
-unset -f makeinstall_bootstrap
-unset -f post_makeinstall_bootstrap
+# configure install directory
+if [ "$TARGET" = "target" ]; then
+  INSTALL="$PKG_BUILD/.install_pkg"
+elif [ "$TARGET" = "init" ]; then
+  INSTALL="$PKG_BUILD/.install_init"
+else
+  unset INSTALL
+fi
+# remove previous install files
+if [ -n "$INSTALL" -a -d "$INSTALL" ]; then
+  rm -rf "$INSTALL"
+fi
 
 # configure debug build defaults
 if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
-  CMAKE_BUILD_TYPE="None"
+  CMAKE_BUILD_TYPE=""
   MESON_BUILD_TYPE="plain"
 else
-  CMAKE_BUILD_TYPE="None"
+  CMAKE_BUILD_TYPE=""
   MESON_BUILD_TYPE="plain"
 fi
 
+CMAKE_GENERATOR_NINJA="-GNinja \
+                       -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
+
 # configure TARGET build defaults
 TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --build=$HOST_NAME \
@@ -138,12 +126,9 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --enable-shared \
                        --enable-silent-rules"
 
-CMAKE_GENERATOR_NINJA="-GNinja \
-                       -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
-
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                    -DCMAKE_INSTALL_PREFIX=/usr \
-                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
+                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE -Wno-dev"
 
 TARGET_MESON_OPTS="--prefix=/usr \
                    --bindir=/usr/bin \
@@ -154,7 +139,7 @@ TARGET_MESON_OPTS="--prefix=/usr \
                    --localstatedir=/var \
                    --buildtype=$MESON_BUILD_TYPE"
 
-# configure HOST build defaults = -Wno-dev
+# configure HOST build defaults
 HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --build=$HOST_NAME \
                      --prefix=$TOOLCHAIN \
@@ -169,7 +154,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
+                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN -Wno-dev"
 
 HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
                  --bindir=$TOOLCHAIN/bin \
@@ -190,62 +175,10 @@ BOOTSTRAP_CONFIGURE_OPTS="$HOST_CONFIGURE_OPTS"
 BOOTSTRAP_CMAKE_OPTS="$HOST_CMAKE_OPTS"
 BOOTSTRAP_MESON_OPTS="$HOST_MESON_OPTS"
 
-# include buildfile
-. $PKG_DIR/package.mk
-
-# finalise package configuration
-pkg_call_optional configure_package
-
-# build dependencies, only when PKG_DEPENDS_? is filled
-unset _pkg_depends
-case "$TARGET" in
-  "target") _pkg_depends="$PKG_DEPENDS_TARGET";;
-  "host") _pkg_depends="$PKG_DEPENDS_HOST";;
-  "init") _pkg_depends="$PKG_DEPENDS_INIT";;
-  "bootstrap") _pkg_depends="$PKG_DEPENDS_BOOTSTRAP";;
-esac
-for p in $_pkg_depends; do
-  $SCRIPTS/build $p
-done
-
-if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
-  build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color "CLR_TARGET" "(${TARGET})") [DEBUG]" "indent"
-else
-  build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color "CLR_TARGET" "(${TARGET})")" "indent"
-fi
-
-# virtual packages dont must be build, they only contains dependencies, so dont go further here
-if [ "$PKG_SECTION" = "virtual" ]; then
-  PKG_DEEPHASH=$(calculate_stamp)
-  for i in PKG_NAME PKG_DEEPHASH BUILD_WITH_DEBUG; do
-    echo "STAMP_$i=\"${!i}\"" >> $STAMP
-  done
-
-  exit 0
-fi
-
-# configure other variables
-if [ "$TARGET" = "target" ]; then
-  INSTALL="$PKG_BUILD/.install_pkg"
-elif [ "$TARGET" = "init" ]; then
-  INSTALL="$PKG_BUILD/.install_init"
-fi
-
-# clear previous image files
-if [ -n "$INSTALL" -a -d "$INSTALL" ]; then
-  rm -rf "$INSTALL"
-fi
-
 # setup configure scripts
-if [ -z "$PKG_CONFIGURE_SCRIPT" ]; then
-  PKG_CONFIGURE_SCRIPT="$PKG_BUILD/configure"
-else
-  PKG_CONFIGURE_SCRIPT="$PKG_BUILD/$PKG_CONFIGURE_SCRIPT"
-fi
-
-PKG_CMAKE_SCRIPT="${PKG_CMAKE_SCRIPT:-$PKG_BUILD/CMakeLists.txt}"
-
-PKG_MESON_SCRIPT="${PKG_MESON_SCRIPT:-$PKG_BUILD/meson.build}"
+PKG_CONFIGURE_SCRIPT="${PKG_CONFIGURE_SCRIPT:-${PKG_BUILD}/configure}"
+PKG_CMAKE_SCRIPT="${PKG_CMAKE_SCRIPT:-${PKG_BUILD}/CMakeLists.txt}"
+PKG_MESON_SCRIPT="${PKG_MESON_SCRIPT:-${PKG_BUILD}/meson.build}"
 
 # auto detect toolchain
 _auto_toolchain=""
@@ -292,6 +225,7 @@ if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRI
   esac
   mkdir -p "$PKG_REAL_BUILD"
   cd "$PKG_REAL_BUILD"
+
   MESON_CONF="$PKG_REAL_BUILD/meson.conf"
 fi
 
@@ -377,6 +311,7 @@ if ! pkg_call configure_$TARGET; then
       ;;
   esac
 fi
+
 pkg_call_optional post_configure_$TARGET
 
 # make
@@ -421,6 +356,7 @@ if ! pkg_call make_$TARGET; then
       ;;
   esac
 fi
+
 pkg_call_optional post_make_$TARGET
 
 # make install
@@ -510,7 +446,6 @@ PKG_DEEPHASH=$(calculate_stamp)
 for i in PKG_NAME PKG_DEEPHASH BUILD_WITH_DEBUG; do
   echo "STAMP_$i=\"${!i}\"" >> $STAMP
 done
-
 if [ "$1" = "u-boot" ]; then
   echo "STAMP_UBOOT_SYSTEM=\"${UBOOT_SYSTEM}\"" >> $STAMP
 fi

commit 3ff0780a3c49b37a7fe7f43f2f4665e503457fb1
Author: AV <27rurk@gmail.com>
Date:   Wed Dec 26 21:57:22 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index ecfacb8128..3035f4a33e 100755
--- a/scripts/build
+++ b/scripts/build
@@ -143,8 +143,7 @@ CMAKE_GENERATOR_NINJA="-GNinja \
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                    -DCMAKE_INSTALL_PREFIX=/usr \
-                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
-                   -Wno-dev"
+                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
 
 TARGET_MESON_OPTS="--prefix=/usr \
                    --bindir=/usr/bin \
@@ -155,7 +154,7 @@ TARGET_MESON_OPTS="--prefix=/usr \
                    --localstatedir=/var \
                    --buildtype=$MESON_BUILD_TYPE"
 
-# configure HOST build defaults
+# configure HOST build defaults = -Wno-dev
 HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --build=$HOST_NAME \
                      --prefix=$TOOLCHAIN \
@@ -170,8 +169,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN \
-                 -Wno-dev"
+                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
 
 HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
                  --bindir=$TOOLCHAIN/bin \

commit 9e91b198e958c608918527ad65a5e92c37439f8d
Author: AV <27rurk@gmail.com>
Date:   Tue Dec 25 21:01:23 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 3879d658b6..ecfacb8128 100755
--- a/scripts/build
+++ b/scripts/build
@@ -136,7 +136,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --localstatedir=/var \
                        --disable-static \
                        --enable-shared \
-                       --disable-silent-rules"
+                       --enable-silent-rules"
 
 CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"

commit 859fbf04f22ff7e107b82db9039e2401cdf7cb67
Author: AV <27rurk@gmail.com>
Date:   Tue Dec 25 19:24:51 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index ecfacb8128..3879d658b6 100755
--- a/scripts/build
+++ b/scripts/build
@@ -136,7 +136,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --localstatedir=/var \
                        --disable-static \
                        --enable-shared \
-                       --enable-silent-rules"
+                       --disable-silent-rules"
 
 CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"

commit 8a958bbb0d1c6c87ab414540ed630e9492fc4196
Author: AV <27rurk@gmail.com>
Date:   Tue Dec 25 14:35:39 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index e651e455a8..ecfacb8128 100755
--- a/scripts/build
+++ b/scripts/build
@@ -389,19 +389,19 @@ if ! pkg_call make_$TARGET; then
     # ninja based builds
     "meson:target"|"cmake:target"|"ninja:target")
       echo "Executing (target): ninja $PKG_MAKE_OPTS_TARGET" | tr -s " "
-      ninja -j${CONCURRENCY_MAKE_LEVEL} $NINJA_OPTS $PKG_MAKE_OPTS_TARGET
+      ninja $NINJA_OPTS $PKG_MAKE_OPTS_TARGET
       ;;
     "meson:host"|"cmake:host"|"ninja:host")
       echo "Executing (host): ninja $PKG_MAKE_OPTS_HOST" | tr -s " "
-      ninja -j${CONCURRENCY_MAKE_LEVEL} $NINJA_OPTS $PKG_MAKE_OPTS_HOST
+      ninja $NINJA_OPTS $PKG_MAKE_OPTS_HOST
       ;;
     "meson:init"|"cmake:init"|"ninja:init")
       echo "Executing (init): ninja $PKG_MAKE_OPTS_INIT" | tr -s " "
-      ninja -j${CONCURRENCY_MAKE_LEVEL} $NINJA_OPTS $PKG_MAKE_OPTS_INIT
+      ninja $NINJA_OPTS $PKG_MAKE_OPTS_INIT
       ;;
     "meson:bootstrap"|"cmake:bootstrap"|"ninja:bootstrap")
       echo "Executing (bootstrap): ninja $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
-      ninja -j${CONCURRENCY_MAKE_LEVEL} $NINJA_OPTS $PKG_MAKE_OPTS_BOOTSTRAP
+      ninja $NINJA_OPTS $PKG_MAKE_OPTS_BOOTSTRAP
       ;;
 
     # make based builds

commit 2ad9dcffe8ac7ad5aba2fd4fdcfc97eecdf41184
Author: AV <27rurk@gmail.com>
Date:   Sun Dec 9 15:27:20 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index e2be10e4ae..e651e455a8 100755
--- a/scripts/build
+++ b/scripts/build
@@ -196,9 +196,7 @@ BOOTSTRAP_MESON_OPTS="$HOST_MESON_OPTS"
 . $PKG_DIR/package.mk
 
 # finalise package configuration
-if [ "$(type -t configure_package)" = "function" ]; then
-  configure_package
-fi
+pkg_call_optional configure_package
 
 # build dependencies, only when PKG_DEPENDS_? is filled
 unset _pkg_depends
@@ -278,9 +276,7 @@ if [ "$PKG_TOOLCHAIN" = "autotools" ]; then
 fi
 
 # include build template and build
-if [ "$(type -t pre_build_$TARGET)" = "function" ]; then
-  pre_build_$TARGET
-fi
+pkg_call_optional pre_build_$TARGET
 
 # ensure $PKG_BUILD is there. (installer? PKG_URL="")
 if [ ! -d "$PKG_BUILD" ] ; then
@@ -302,12 +298,9 @@ if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRI
 fi
 
 # configure
-if [ "$(type -t pre_configure_$TARGET)" = "function" ]; then
-  pre_configure_$TARGET
-fi
-if [ "$(type -t configure_$TARGET)" = "function" ]; then
-  configure_$TARGET
-else
+pkg_call_optional pre_configure_$TARGET
+
+if ! pkg_call configure_$TARGET; then
   case "$PKG_TOOLCHAIN:$TARGET" in
     # meson builds
     "meson:target")
@@ -386,17 +379,12 @@ else
       ;;
   esac
 fi
-if [ "$(type -t post_configure_$TARGET)" = "function" ]; then
-  post_configure_$TARGET
-fi
+pkg_call_optional post_configure_$TARGET
 
 # make
-if [ "$(type -t pre_make_$TARGET)" = "function" ]; then
-  pre_make_$TARGET
-fi
-if [ "$(type -t make_$TARGET)" = "function" ]; then
-  make_$TARGET
-else
+pkg_call_optional pre_make_$TARGET
+
+if ! pkg_call make_$TARGET; then
   case "$PKG_TOOLCHAIN:$TARGET" in
     # ninja based builds
     "meson:target"|"cmake:target"|"ninja:target")
@@ -435,17 +423,12 @@ else
       ;;
   esac
 fi
-if [ "$(type -t post_make_$TARGET)" = "function" ]; then
-  post_make_$TARGET
-fi
+pkg_call_optional post_make_$TARGET
 
 # make install
-if [ "$(type -t pre_makeinstall_$TARGET)" = "function" ]; then
-  pre_makeinstall_$TARGET
-fi
-if [ "$(type -t makeinstall_$TARGET)" = "function" ]; then
-  makeinstall_$TARGET
-else
+pkg_call_optional pre_makeinstall_$TARGET
+
+if ! pkg_call makeinstall_$TARGET; then
   case "$PKG_TOOLCHAIN:$TARGET" in
     # ninja based builds
     "meson:target"|"cmake:target")
@@ -478,18 +461,8 @@ else
       ;;
   esac
 fi
-if [ "$(type -t post_makeinstall_$TARGET)" = "function" ]; then
-  post_makeinstall_$TARGET
-fi
 
-# Bump addon version to prevent online updates
-if [ "$TARGET" = "target" -a "$PKG_IS_ADDON" = "yes" ]; then
-  mhaddonxml="$(find $INSTALL -type f -name addon.xml 2>/dev/null | head -1 || true)"
-  if [[ -n "${mhaddonxml}" ]] && [[ -f "${mhaddonxml}" ]]; then
-    mhaddonver="$(xmlstarlet sel -t -m "/addon" -m "@version" -v . -n ${mhaddonxml})"
-    [ -n "${mhaddonver}" ] && xmlstarlet edit --inplace --update "/addon/@version" --value "999.${mhaddonver}" ${mhaddonxml}
-  fi
-fi
+pkg_call_optional post_makeinstall_$TARGET
 
 if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
   if [ -d $INSTALL ]; then

commit 671c53ecf728007703d4c04b59adee54971b950b
Author: AV <27rurk@gmail.com>
Date:   Thu Nov 29 18:30:52 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index e40a1316e0..e2be10e4ae 100755
--- a/scripts/build
+++ b/scripts/build
@@ -213,9 +213,9 @@ for p in $_pkg_depends; do
 done
 
 if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
-  build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color CLR_TARGET "(${TARGET})" [DEBUG])" "indent"
+  build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color "CLR_TARGET" "(${TARGET})") [DEBUG]" "indent"
 else
-  build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color CLR_TARGET "(${TARGET})")" "indent"
+  build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color "CLR_TARGET" "(${TARGET})")" "indent"
 fi
 
 # virtual packages dont must be build, they only contains dependencies, so dont go further here
@@ -268,7 +268,7 @@ if [ -z "$PKG_TOOLCHAIN" -o "$PKG_TOOLCHAIN" = "auto" ]; then
   _auto_toolchain=" (auto-detect)"
 fi
 if ! listcontains "meson cmake cmake-make configure ninja make autotools manual" "$PKG_TOOLCHAIN"; then
-  die "$(print_color bold-red "ERROR:") unknown toolchain $PKG_TOOLCHAIN"
+  die "$(print_color "CLR_ERROR" "ERROR:") unknown toolchain $PKG_TOOLCHAIN"
 fi
 build_msg "CLR_TOOLCHAIN" "TOOLCHAIN" "${PKG_TOOLCHAIN}${_auto_toolchain}"
 

commit f01cc5b58ba5d2a88242db3042f5d8602f8c1f2d
Author: AV <27rurk@gmail.com>
Date:   Tue Nov 20 07:53:44 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 18ab79124d..e40a1316e0 100755
--- a/scripts/build
+++ b/scripts/build
@@ -213,11 +213,10 @@ for p in $_pkg_depends; do
 done
 
 if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
-  printf "%${BUILD_INDENT}c $(print_color CLR_BUILD "BUILD")    $PACKAGE_NAME $(print_color CLR_TARGET "($TARGET)") [DEBUG]\n" ' '>&$SILENT_OUT
+  build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color CLR_TARGET "(${TARGET})" [DEBUG])" "indent"
 else
-  printf "%${BUILD_INDENT}c $(print_color CLR_BUILD "BUILD")    $PACKAGE_NAME $(print_color CLR_TARGET "($TARGET)")\n" ' '>&$SILENT_OUT
+  build_msg "CLR_BUILD" "BUILD" "${PACKAGE_NAME} $(print_color CLR_TARGET "(${TARGET})")" "indent"
 fi
-export BUILD_INDENT=$((${BUILD_INDENT:-1}+$BUILD_INDENT_SIZE))
 
 # virtual packages dont must be build, they only contains dependencies, so dont go further here
 if [ "$PKG_SECTION" = "virtual" ]; then
@@ -271,7 +270,7 @@ fi
 if ! listcontains "meson cmake cmake-make configure ninja make autotools manual" "$PKG_TOOLCHAIN"; then
   die "$(print_color bold-red "ERROR:") unknown toolchain $PKG_TOOLCHAIN"
 fi
-printf "%${BUILD_INDENT}c $(print_color CLR_TOOLCHAIN "TOOLCHAIN")    $PKG_TOOLCHAIN${_auto_toolchain}\n" ' '>&$SILENT_OUT
+build_msg "CLR_TOOLCHAIN" "TOOLCHAIN" "${PKG_TOOLCHAIN}${_auto_toolchain}"
 
 # make autoreconf
 if [ "$PKG_TOOLCHAIN" = "autotools" ]; then

commit 651f65b56c09273247c6a0d5221319b551698b41
Author: AV <27rurk@gmail.com>
Date:   Tue Nov 20 03:56:16 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 02f2034169..18ab79124d 100755
--- a/scripts/build
+++ b/scripts/build
@@ -135,7 +135,8 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared"
+                       --enable-shared \
+                       --enable-silent-rules"
 
 CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"

commit d035f9c52e12f34da64f43e191c5d5c7222c03c9
Author: AV <27rurk@gmail.com>
Date:   Tue Nov 20 02:11:38 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 18ab79124d..02f2034169 100755
--- a/scripts/build
+++ b/scripts/build
@@ -135,8 +135,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared \
-                       --enable-silent-rules"
+                       --enable-shared"
 
 CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"

commit 79c60474a4ed20249d0138f63fef1128beeda12f
Author: AV <27rurk@gmail.com>
Date:   Sun Nov 18 21:25:35 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 2c8727d60b..18ab79124d 100755
--- a/scripts/build
+++ b/scripts/build
@@ -493,7 +493,7 @@ if [ "$TARGET" = "target" -a "$PKG_IS_ADDON" = "yes" ]; then
 fi
 
 if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
-  if [ -d $INSTALL ] ; then
+  if [ -d $INSTALL ]; then
     [ ! "$PKG_INCLUDE_INSTALL" = yes ] && rm -rf $INSTALL/{usr/,}include
     rm -rf $INSTALL/{usr/,}lib/cmake
     rm -rf $INSTALL/{usr/,}lib/pkgconfig

commit d7a690637672171dbbb195968ef29d6227ae1688
Author: AV <27rurk@gmail.com>
Date:   Sun Nov 18 17:20:48 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 8670dcd7b7..2c8727d60b 100755
--- a/scripts/build
+++ b/scripts/build
@@ -2,11 +2,12 @@
 
 # SPDX-License-Identifier: GPL-2.0-or-later
 # Copyright (C) 2009-2016 Stephan Raue (stephan@openelec.tv)
+# Copyright (C) 2018-present Team LibreELEC (https://libreelec.tv)
 
 . config/options $1
 
 if [ "$1" = "--all" ]; then
-  if [ ! -z "$2" ]; then
+  if [ -n "$2" ]; then
     for build_dir in $(ls -1d ${ROOT}/build.*); do
       load_build_config ${build_dir} && ./scripts/build $2
     done
@@ -15,13 +16,11 @@ if [ "$1" = "--all" ]; then
 fi
 
 if [ -z "$1" ]; then
-  echo "usage: $0 package_name[:<host|target|init|bootstrap>]"
-  exit 1
+  die "usage: $0 package_name[:<host|target|init|bootstrap>]"
 fi
 
 if [ ! -f $PKG_DIR/package.mk ]; then
-  printf "$(print_color CLR_ERROR "$1: no package.mk file found")\n"
-  exit 1
+  die "$(print_color CLR_ERROR "$1: no package.mk file found")"
 fi
 
 # set defaults
@@ -36,7 +35,7 @@ else
   PACKAGE_NAME=$1
   TARGET=
 fi
-[ -z "$TARGET" ] && TARGET="target"
+TARGET="${TARGET:-target}"
 
 if [ -n "$PKG_ARCH" ]; then
   listcontains "$PKG_ARCH" "!$TARGET_ARCH" && exit 0
@@ -53,15 +52,11 @@ $SCRIPTS/unpack $PACKAGE_NAME
 if [ -f $STAMP ] ; then
   . $STAMP
   PKG_DEEPHASH=$(calculate_stamp)
-  if [ ! "$PKG_DEEPHASH" = "$STAMP_PKG_DEEPHASH" ] ; then
+  if [ ! "$PKG_DEEPHASH" = "$STAMP_PKG_DEEPHASH" ]; then
     rm -f $STAMP
-  fi
-
-  if [ ! "$BUILD_WITH_DEBUG" = "$STAMP_BUILD_WITH_DEBUG" ]; then
+  elif [ ! "$BUILD_WITH_DEBUG" = "$STAMP_BUILD_WITH_DEBUG" ]; then
     rm -f $STAMP
-  fi
-
-  if [ "$1" = "u-boot" -a ! "$UBOOT_SYSTEM" = "$STAMP_UBOOT_SYSTEM" ]; then
+  elif [ "$1" = "u-boot" -a ! "$UBOOT_SYSTEM" = "$STAMP_UBOOT_SYSTEM" ]; then
     rm -f $STAMP
   fi
 fi
@@ -236,32 +231,26 @@ fi
 
 # configure other variables
 if [ "$TARGET" = "target" ]; then
-  INSTALL=$PKG_BUILD/.install_pkg
+  INSTALL="$PKG_BUILD/.install_pkg"
 elif [ "$TARGET" = "init" ]; then
-  INSTALL=$PKG_BUILD/.install_init
+  INSTALL="$PKG_BUILD/.install_init"
 fi
 
-# clean up
-if [ ! -z "$INSTALL" ] ; then
-  if [ -d "$INSTALL" ] ; then
-    rm -rf $INSTALL
-  fi
+# clear previous image files
+if [ -n "$INSTALL" -a -d "$INSTALL" ]; then
+  rm -rf "$INSTALL"
 fi
 
-# setup configure script
+# setup configure scripts
 if [ -z "$PKG_CONFIGURE_SCRIPT" ]; then
   PKG_CONFIGURE_SCRIPT="$PKG_BUILD/configure"
 else
   PKG_CONFIGURE_SCRIPT="$PKG_BUILD/$PKG_CONFIGURE_SCRIPT"
 fi
 
-if [ -z "$PKG_CMAKE_SCRIPT" ]; then
-  PKG_CMAKE_SCRIPT="$PKG_BUILD/CMakeLists.txt"
-fi
+PKG_CMAKE_SCRIPT="${PKG_CMAKE_SCRIPT:-$PKG_BUILD/CMakeLists.txt}"
 
-if [ -z "$PKG_MESON_SCRIPT" ]; then
-  PKG_MESON_SCRIPT="$PKG_BUILD/meson.build"
-fi
+PKG_MESON_SCRIPT="${PKG_MESON_SCRIPT:-$PKG_BUILD/meson.build}"
 
 # auto detect toolchain
 _auto_toolchain=""
@@ -272,17 +261,15 @@ if [ -z "$PKG_TOOLCHAIN" -o "$PKG_TOOLCHAIN" = "auto" ]; then
     PKG_TOOLCHAIN="cmake"
   elif [ -f "$PKG_CONFIGURE_SCRIPT" ]; then
     PKG_TOOLCHAIN="configure"
-  elif [ -f $PKG_BUILD/Makefile ]; then
+  elif [ -f "$PKG_BUILD/Makefile" ]; then
     PKG_TOOLCHAIN="make"
   else
-    echo "Not possible to detect toolchain automatically. Add PKG_TOOLCHAIN= to package.mk"
-    exit 1
+    die "Not possible to detect toolchain automatically. Add PKG_TOOLCHAIN= to package.mk"
   fi
   _auto_toolchain=" (auto-detect)"
 fi
 if ! listcontains "meson cmake cmake-make configure ninja make autotools manual" "$PKG_TOOLCHAIN"; then
-  printf "$(print_color bold-red "ERROR:") unknown toolchain $PKG_TOOLCHAIN"
-  exit 1
+  die "$(print_color bold-red "ERROR:") unknown toolchain $PKG_TOOLCHAIN"
 fi
 printf "%${BUILD_INDENT}c $(print_color CLR_TOOLCHAIN "TOOLCHAIN")    $PKG_TOOLCHAIN${_auto_toolchain}\n" ' '>&$SILENT_OUT
 
@@ -297,11 +284,11 @@ if [ "$(type -t pre_build_$TARGET)" = "function" ]; then
 fi
 
 # ensure $PKG_BUILD is there. (installer? PKG_URL="")
-if [ ! -d $PKG_BUILD ] ; then
-  mkdir -p $PKG_BUILD
+if [ ! -d "$PKG_BUILD" ] ; then
+  mkdir -p "$PKG_BUILD"
 fi
 
-cd $PKG_BUILD
+cd "$PKG_BUILD"
 
 if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRIPT" ]; then
   case "$TARGET" in
@@ -310,9 +297,8 @@ if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRI
     "init")      PKG_REAL_BUILD="$PKG_BUILD/.$TARGET_NAME-$TARGET" ;;
     "bootstrap") PKG_REAL_BUILD="$PKG_BUILD/.$HOST_NAME-$TARGET" ;;
   esac
-  mkdir -p $PKG_REAL_BUILD
-  cd $PKG_REAL_BUILD
-  
+  mkdir -p "$PKG_REAL_BUILD"
+  cd "$PKG_REAL_BUILD"
   MESON_CONF="$PKG_REAL_BUILD/meson.conf"
 fi
 
@@ -532,22 +518,22 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
 
     if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
-      $STRIP `find $INSTALL \
+      $STRIP $(find $INSTALL \
         -type f -name "*.so*" \
-        2>/dev/null` 2>/dev/null || :
+        2>/dev/null) 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
-          $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
+          $STRIP $(find $INSTALL -type f -name "*.so*" 2>/dev/null) 2>/dev/null || :
         fi
-        $STRIP `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
-          -type f -executable 2>/dev/null` 2>/dev/null || :
+        $STRIP $(find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
+          -type f -executable 2>/dev/null) 2>/dev/null || :
     fi
   fi
 fi
 
 cd $ROOT
 
-for i in `find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null`; do \
-  $SED "s:\(['= ]\)/usr:\\1$SYSROOT_PREFIX/usr:g" $i; \
+for i in $(find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null); do
+  sed -e "s:\(['= ]\)/usr:\\1$SYSROOT_PREFIX/usr:g" -i $i
 done
 
 PKG_DEEPHASH=$(calculate_stamp)

commit 1f02b9e8132716b661471f60a58d001163179e56
Author: AV <27rurk@gmail.com>
Date:   Tue Oct 9 17:54:11 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index e5bbbd9363..8670dcd7b7 100755
--- a/scripts/build
+++ b/scripts/build
@@ -122,10 +122,10 @@ unset -f post_makeinstall_bootstrap
 
 # configure debug build defaults
 if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
-  CMAKE_BUILD_TYPE=""
+  CMAKE_BUILD_TYPE="None"
   MESON_BUILD_TYPE="plain"
 else
-  CMAKE_BUILD_TYPE=""
+  CMAKE_BUILD_TYPE="None"
   MESON_BUILD_TYPE="plain"
 fi
 

commit bed2835b2db12aee96e1c1f56eff3ccce529481b
Author: AV <27rurk@gmail.com>
Date:   Tue Oct 9 00:52:41 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 04dfb835c7..e5bbbd9363 100755
--- a/scripts/build
+++ b/scripts/build
@@ -148,7 +148,8 @@ CMAKE_GENERATOR_NINJA="-GNinja \
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                    -DCMAKE_INSTALL_PREFIX=/usr \
-                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
+                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
+                   -Wno-dev"
 
 TARGET_MESON_OPTS="--prefix=/usr \
                    --bindir=/usr/bin \
@@ -174,7 +175,8 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
+                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN \
+                 -Wno-dev"
 
 HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
                  --bindir=$TOOLCHAIN/bin \

commit faccc0be422d53597091ebbfd29cd3d90adcf272
Author: AV <27rurk@gmail.com>
Date:   Mon Oct 8 20:13:04 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 1a5612f1b8..04dfb835c7 100755
--- a/scripts/build
+++ b/scripts/build
@@ -147,7 +147,8 @@ CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                   -DCMAKE_INSTALL_PREFIX=/usr"
+                   -DCMAKE_INSTALL_PREFIX=/usr \
+                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
 
 TARGET_MESON_OPTS="--prefix=/usr \
                    --bindir=/usr/bin \

commit 046886af39fb3b44876b740aa1b08c71d377a8d3
Author: AV <27rurk@gmail.com>
Date:   Sun Sep 30 13:42:09 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 570dde850e..1a5612f1b8 100755
--- a/scripts/build
+++ b/scripts/build
@@ -123,7 +123,7 @@ unset -f post_makeinstall_bootstrap
 # configure debug build defaults
 if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   CMAKE_BUILD_TYPE=""
-  MESON_BUILD_TYPE="debug"
+  MESON_BUILD_TYPE="plain"
 else
   CMAKE_BUILD_TYPE=""
   MESON_BUILD_TYPE="plain"

commit c6cf9e9099f46f5e1e70cd8970c0ad6d90fcd3b9
Author: AV <27rurk@gmail.com>
Date:   Sun Sep 30 03:08:13 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index ec5dd64cdf..570dde850e 100755
--- a/scripts/build
+++ b/scripts/build
@@ -505,7 +505,7 @@ fi
 
 if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
   if [ -d $INSTALL ] ; then
-    rm -rf $INSTALL/{usr/,}include
+    [ ! "$PKG_INCLUDE_INSTALL" = yes ] && rm -rf $INSTALL/{usr/,}include
     rm -rf $INSTALL/{usr/,}lib/cmake
     rm -rf $INSTALL/{usr/,}lib/pkgconfig
     rm -rf $INSTALL/{usr/,}man
@@ -514,7 +514,7 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     rm -rf $INSTALL/{usr/,}share/doc
     rm -rf $INSTALL/{usr/,}share/gtk-doc
     rm -rf $INSTALL/{usr/,}share/info
-    rm -rf $INSTALL/{usr/,}share/locale
+    [ ! "$PKG_LOCALE_INSTALL" = yes ] && rm -rf $INSTALL/{usr/,}share/locale
     rm -rf $INSTALL/{usr/,}share/man
     rm -rf $INSTALL/{usr/,}share/pkgconfig
     rm -rf $INSTALL/{usr/,}var

commit 93911e19b2e93aed7afb1dcc09e6205198db74a8
Author: AV <27rurk@gmail.com>
Date:   Wed Sep 19 21:37:17 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index f3e3e6857d..ec5dd64cdf 100755
--- a/scripts/build
+++ b/scripts/build
@@ -122,7 +122,7 @@ unset -f post_makeinstall_bootstrap
 
 # configure debug build defaults
 if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
-  CMAKE_BUILD_TYPE="Debug"
+  CMAKE_BUILD_TYPE=""
   MESON_BUILD_TYPE="debug"
 else
   CMAKE_BUILD_TYPE=""

commit 2ab94dc4fa79f709cc7df191345b294b7a9a73e8
Author: AV <27rurk@gmail.com>
Date:   Wed Sep 5 22:39:41 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 277b74dd28..f3e3e6857d 100755
--- a/scripts/build
+++ b/scripts/build
@@ -140,14 +140,14 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared --enable-silent-rules"
+                       --enable-shared \
+                       --enable-silent-rules"
 
 CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                   -DCMAKE_INSTALL_PREFIX=/usr \
-                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
+                   -DCMAKE_INSTALL_PREFIX=/usr"
 
 TARGET_MESON_OPTS="--prefix=/usr \
                    --bindir=/usr/bin \
@@ -168,7 +168,8 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared --enable-silent-rules"
+                     --enable-shared \
+                     --enable-silent-rules"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit 0191560b0f92f836672b8e6c767bb4819182e8d6
Author: AV <27rurk@gmail.com>
Date:   Wed Sep 5 20:47:24 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 2ce09aba42..277b74dd28 100755
--- a/scripts/build
+++ b/scripts/build
@@ -528,13 +528,13 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
 
     if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
-      $STRIP --strip-all `find $INSTALL \
+      $STRIP `find $INSTALL \
         -type f -name "*.so*" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
-          $STRIP --strip-all `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
+          $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
         fi
-        $STRIP --strip-all `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
+        $STRIP `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
           -type f -executable 2>/dev/null` 2>/dev/null || :
     fi
   fi

commit 4633d4c358decae0fc15feac7a33b847080387d4
Author: AV <27rurk@gmail.com>
Date:   Wed Sep 5 14:06:34 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 277b74dd28..2ce09aba42 100755
--- a/scripts/build
+++ b/scripts/build
@@ -528,13 +528,13 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
 
     if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
-      $STRIP `find $INSTALL \
+      $STRIP --strip-all `find $INSTALL \
         -type f -name "*.so*" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
-          $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
+          $STRIP --strip-all `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
         fi
-        $STRIP `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
+        $STRIP --strip-all `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
           -type f -executable 2>/dev/null` 2>/dev/null || :
     fi
   fi

commit da117c89161ca37bb0745bef4abeb875b63bbaa7
Author: AV <27rurk@gmail.com>
Date:   Mon Sep 3 07:12:32 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index aabcaf5ba9..277b74dd28 100755
--- a/scripts/build
+++ b/scripts/build
@@ -125,7 +125,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
   MESON_BUILD_TYPE="debug"
 else
-  CMAKE_BUILD_TYPE="Release"
+  CMAKE_BUILD_TYPE=""
   MESON_BUILD_TYPE="plain"
 fi
 

commit f9dce900fdd0b695df1bdf75479c5a3fa7781704
Author: AV <27rurk@gmail.com>
Date:   Mon Sep 3 00:12:05 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 277b74dd28..aabcaf5ba9 100755
--- a/scripts/build
+++ b/scripts/build
@@ -125,7 +125,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
   MESON_BUILD_TYPE="debug"
 else
-  CMAKE_BUILD_TYPE=""
+  CMAKE_BUILD_TYPE="Release"
   MESON_BUILD_TYPE="plain"
 fi
 

commit 56011e53fcaca0fe190e47e058c3b783943b2e41
Author: AV <27rurk@gmail.com>
Date:   Thu Aug 16 01:49:12 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index ca89240406..277b74dd28 100755
--- a/scripts/build
+++ b/scripts/build
@@ -140,7 +140,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared"
+                       --enable-shared --enable-silent-rules"
 
 CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
@@ -168,7 +168,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared"
+                     --enable-shared --enable-silent-rules"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit 5719ae5070dae18b202c5e265749774b7fa9dd4c
Author: AV <27rurk@gmail.com>
Date:   Thu Aug 9 19:46:26 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 876a28c403..ca89240406 100755
--- a/scripts/build
+++ b/scripts/build
@@ -125,7 +125,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
   MESON_BUILD_TYPE="debug"
 else
-  CMAKE_BUILD_TYPE="Release"
+  CMAKE_BUILD_TYPE=""
   MESON_BUILD_TYPE="plain"
 fi
 

commit baa5521fbe9fd1dc3160d0128fdf6df5ae33ef05
Author: AV <27rurk@gmail.com>
Date:   Thu Aug 9 15:15:18 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 4cbfbaa305..876a28c403 100755
--- a/scripts/build
+++ b/scripts/build
@@ -140,8 +140,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared \
-                       --enable-silent-rules"
+                       --enable-shared"
 
 CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
@@ -169,8 +168,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared \
-                     --enable-silent-rules"
+                     --enable-shared"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit fa350e6b60106bd3f97b1cd3f61c9f0daa4ffd57
Author: AV <27rurk@gmail.com>
Date:   Thu Aug 9 09:11:47 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 4ac57eec27..4cbfbaa305 100755
--- a/scripts/build
+++ b/scripts/build
@@ -140,7 +140,8 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared"
+                       --enable-shared \
+                       --enable-silent-rules"
 
 CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
@@ -169,7 +170,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
                      --enable-shared \
-                     --disable-silent-rules"
+                     --enable-silent-rules"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit 6bb9bf49554f78d4aad01e0de9a5a008072bdbc1
Author: AV <27rurk@gmail.com>
Date:   Thu Aug 9 07:06:06 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 876a28c403..4ac57eec27 100755
--- a/scripts/build
+++ b/scripts/build
@@ -168,7 +168,8 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared"
+                     --enable-shared \
+                     --disable-silent-rules"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit bab886675840b95458ff6124a822973af79109d0
Author: AV <27rurk@gmail.com>
Date:   Thu Aug 9 02:48:32 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index ca89240406..876a28c403 100755
--- a/scripts/build
+++ b/scripts/build
@@ -125,7 +125,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
   MESON_BUILD_TYPE="debug"
 else
-  CMAKE_BUILD_TYPE=""
+  CMAKE_BUILD_TYPE="Release"
   MESON_BUILD_TYPE="plain"
 fi
 

commit 403920b1c7c061360fff54f550293a703e893a89
Author: AV <27rurk@gmail.com>
Date:   Fri Aug 3 00:00:04 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 876a28c403..ca89240406 100755
--- a/scripts/build
+++ b/scripts/build
@@ -125,7 +125,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
   MESON_BUILD_TYPE="debug"
 else
-  CMAKE_BUILD_TYPE="Release"
+  CMAKE_BUILD_TYPE=""
   MESON_BUILD_TYPE="plain"
 fi
 

commit e3bbbd15164eb2c1426229b0fa631a16c474a9bc
Author: AV <27rurk@gmail.com>
Date:   Mon Jul 23 21:02:22 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 25081d5c4d..876a28c403 100755
--- a/scripts/build
+++ b/scripts/build
@@ -1,22 +1,7 @@
 #!/bin/bash
 
-################################################################################
-#      This file is part of OpenELEC - http://www.openelec.tv
-#      Copyright (C) 2009-2016 Stephan Raue (stephan@openelec.tv)
-#
-#  OpenELEC is free software: you can redistribute it and/or modify
-#  it under the terms of the GNU General Public License as published by
-#  the Free Software Foundation, either version 2 of the License, or
-#  (at your option) any later version.
-#
-#  OpenELEC is distributed in the hope that it will be useful,
-#  but WITHOUT ANY WARRANTY; without even the implied warranty of
-#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#  GNU General Public License for more details.
-#
-#  You should have received a copy of the GNU General Public License
-#  along with OpenELEC.  If not, see <http://www.gnu.org/licenses/>.
-################################################################################
+# SPDX-License-Identifier: GPL-2.0-or-later
+# Copyright (C) 2009-2016 Stephan Raue (stephan@openelec.tv)
 
 . config/options $1
 

commit fbcf20ed38338c8e7d13cbbe8a2169bc7342ac0a
Author: AV <27rurk@gmail.com>
Date:   Thu Jul 12 17:17:56 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 13a3c752a7..25081d5c4d 100755
--- a/scripts/build
+++ b/scripts/build
@@ -140,7 +140,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
   MESON_BUILD_TYPE="debug"
 else
-  CMAKE_BUILD_TYPE=""
+  CMAKE_BUILD_TYPE="Release"
   MESON_BUILD_TYPE="plain"
 fi
 
@@ -155,8 +155,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared \
-                       --enable-silent-rules"
+                       --enable-shared"
 
 CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
@@ -184,8 +183,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared \
-                     --enable-silent-rules"
+                     --enable-shared"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit ead37b813da4e7d16cb295d48aa6617234b3f965
Author: AV <27rurk@gmail.com>
Date:   Wed May 23 14:46:52 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 3827384b66..13a3c752a7 100755
--- a/scripts/build
+++ b/scripts/build
@@ -547,10 +547,6 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
       $STRIP `find $INSTALL \
         -type f -name "*.so*" \
-        ! -name "ld-*.so" \
-        ! -name "libc-*.so" \
-        ! -name "libpthread-*.so" \
-        ! -name "libthread_db-*so" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
           $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :

commit 6e35124a70d6973736b39e2ff61e4f0c9b8ad979
Author: AV <27rurk@gmail.com>
Date:   Wed May 23 14:08:55 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 02ea2a228c..3827384b66 100755
--- a/scripts/build
+++ b/scripts/build
@@ -530,6 +530,7 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     rm -rf $INSTALL/{usr/,}share/doc
     rm -rf $INSTALL/{usr/,}share/gtk-doc
     rm -rf $INSTALL/{usr/,}share/info
+    rm -rf $INSTALL/{usr/,}share/locale
     rm -rf $INSTALL/{usr/,}share/man
     rm -rf $INSTALL/{usr/,}share/pkgconfig
     rm -rf $INSTALL/{usr/,}var

commit 639581e705fd4ffe0476bcda24e1bf5807874bc7
Author: AV <27rurk@gmail.com>
Date:   Wed May 23 13:58:41 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 93fd600bd9..02ea2a228c 100755
--- a/scripts/build
+++ b/scripts/build
@@ -546,6 +546,10 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
       $STRIP `find $INSTALL \
         -type f -name "*.so*" \
+        ! -name "ld-*.so" \
+        ! -name "libc-*.so" \
+        ! -name "libpthread-*.so" \
+        ! -name "libthread_db-*so" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
           $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :

commit ddedf22837cffe574b4b16ccb49e50db37aad4d8
Author: AV <27rurk@gmail.com>
Date:   Wed May 23 13:49:31 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 26b6b896c1..93fd600bd9 100755
--- a/scripts/build
+++ b/scripts/build
@@ -140,7 +140,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
   MESON_BUILD_TYPE="debug"
 else
-  CMAKE_BUILD_TYPE="Release"
+  CMAKE_BUILD_TYPE=""
   MESON_BUILD_TYPE="plain"
 fi
 
@@ -155,7 +155,8 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared"
+                       --enable-shared \
+                       --enable-silent-rules"
 
 CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
@@ -183,7 +184,8 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared"
+                     --enable-shared \
+                     --enable-silent-rules"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit d31b1091bba29107b2af219aed62f695ed3037d4
Author: AV <27rurk@gmail.com>
Date:   Fri May 11 18:51:15 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 31a57f029d..26b6b896c1 100755
--- a/scripts/build
+++ b/scripts/build
@@ -140,7 +140,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
   MESON_BUILD_TYPE="debug"
 else
-  CMAKE_BUILD_TYPE=""
+  CMAKE_BUILD_TYPE="Release"
   MESON_BUILD_TYPE="plain"
 fi
 

commit 5ce6820a393a2f1acabb1fb57942ea068c405bff
Author: AV <27rurk@gmail.com>
Date:   Wed May 9 18:00:32 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 6289f14313..31a57f029d 100755
--- a/scripts/build
+++ b/scripts/build
@@ -554,20 +554,6 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
   fi
 fi
 
-#if [ "$TARGET" = "host" ]; then
-#  if [ -d $TOOLCHAIN ] ; then
-#    find $TOOLCHAIN -type d -exec rmdir -p {} \; 2>/dev/null || :
-#
-#    if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
-#      strip `find $TOOLCHAIN \
-#        -type f -cmin -1 -name "*.so*" \
-#        2>/dev/null` 2>/dev/null || :
-#        strip `find $TOOLCHAIN/bin \
-#          -type f -executable -cmin -1 2>/dev/null` 2>/dev/null || :
-#    fi
-#  fi
-#fi
-
 cd $ROOT
 
 for i in `find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null`; do \

commit 145cc689766e6a7120403d232553e9f356599fae
Author: AV <27rurk@gmail.com>
Date:   Thu Apr 26 23:24:58 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 362a0ce4f0..6289f14313 100755
--- a/scripts/build
+++ b/scripts/build
@@ -554,19 +554,19 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
   fi
 fi
 
-if [ "$TARGET" = "host" ]; then
-  if [ -d $TOOLCHAIN ] ; then
-    find $TOOLCHAIN -type d -exec rmdir -p {} \; 2>/dev/null || :
-
-    if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
-      strip `find $TOOLCHAIN \
-        -type f -cmin -1 -name "*.so*" \
-        2>/dev/null` 2>/dev/null || :
-        strip `find $TOOLCHAIN/bin \
-          -type f -executable -cmin -1 2>/dev/null` 2>/dev/null || :
-    fi
-  fi
-fi
+#if [ "$TARGET" = "host" ]; then
+#  if [ -d $TOOLCHAIN ] ; then
+#    find $TOOLCHAIN -type d -exec rmdir -p {} \; 2>/dev/null || :
+#
+#    if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
+#      strip `find $TOOLCHAIN \
+#        -type f -cmin -1 -name "*.so*" \
+#        2>/dev/null` 2>/dev/null || :
+#        strip `find $TOOLCHAIN/bin \
+#          -type f -executable -cmin -1 2>/dev/null` 2>/dev/null || :
+#    fi
+#  fi
+#fi
 
 cd $ROOT
 

commit 5f432b369550c65a34f9cdad6d758a2ee9eb8ebb
Author: AV <27rurk@gmail.com>
Date:   Thu Apr 26 23:12:25 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index c0e682aa4e..362a0ce4f0 100755
--- a/scripts/build
+++ b/scripts/build
@@ -562,7 +562,7 @@ if [ "$TARGET" = "host" ]; then
       strip `find $TOOLCHAIN \
         -type f -cmin -1 -name "*.so*" \
         2>/dev/null` 2>/dev/null || :
-        strip `find $TOOLCHAIN/bin $TOOLCHAIN/sbin $TOOLCHAIN/lib \
+        strip `find $TOOLCHAIN/bin \
           -type f -executable -cmin -1 2>/dev/null` 2>/dev/null || :
     fi
   fi

commit cd7cc60dab12868a84d7048306a5fe47638197c9
Author: AV <27rurk@gmail.com>
Date:   Thu Apr 26 20:58:29 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 8ac800cb48..c0e682aa4e 100755
--- a/scripts/build
+++ b/scripts/build
@@ -187,8 +187,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN \
-                 -DCMAKE_INSTALL_DO_STRIP=1"
+                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
 
 HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
                  --bindir=$TOOLCHAIN/bin \

commit 1559de949822957eefc1e422f9d5e6d5034aa987
Author: AV <27rurk@gmail.com>
Date:   Thu Apr 26 20:17:16 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 7748577dd2..8ac800cb48 100755
--- a/scripts/build
+++ b/scripts/build
@@ -565,7 +565,6 @@ if [ "$TARGET" = "host" ]; then
         2>/dev/null` 2>/dev/null || :
         strip `find $TOOLCHAIN/bin $TOOLCHAIN/sbin $TOOLCHAIN/lib \
           -type f -executable -cmin -1 2>/dev/null` 2>/dev/null || :
-          #-type f -readable -cmin -1 2>/dev/null` 2>/dev/null || :
     fi
   fi
 fi

commit f9dc4dcf9fc3b3cd115bf6f7abe84a5f556003c4
Author: AV <27rurk@gmail.com>
Date:   Thu Apr 26 20:09:58 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 6fd72f1257..7748577dd2 100755
--- a/scripts/build
+++ b/scripts/build
@@ -564,7 +564,8 @@ if [ "$TARGET" = "host" ]; then
         -type f -cmin -1 -name "*.so*" \
         2>/dev/null` 2>/dev/null || :
         strip `find $TOOLCHAIN/bin $TOOLCHAIN/sbin $TOOLCHAIN/lib \
-          -type f -readable -cmin -1 2>/dev/null` 2>/dev/null || :
+          -type f -executable -cmin -1 2>/dev/null` 2>/dev/null || :
+          #-type f -readable -cmin -1 2>/dev/null` 2>/dev/null || :
     fi
   fi
 fi

commit d099c711b084d1ccc3657a18dfd8d9fdd8227a6c
Author: AV <27rurk@gmail.com>
Date:   Thu Apr 26 16:00:06 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 53284847a6..6fd72f1257 100755
--- a/scripts/build
+++ b/scripts/build
@@ -564,7 +564,7 @@ if [ "$TARGET" = "host" ]; then
         -type f -cmin -1 -name "*.so*" \
         2>/dev/null` 2>/dev/null || :
         strip `find $TOOLCHAIN/bin $TOOLCHAIN/sbin $TOOLCHAIN/lib \
-          -type f -cmin -1 2>/dev/null` 2>/dev/null || :
+          -type f -readable -cmin -1 2>/dev/null` 2>/dev/null || :
     fi
   fi
 fi

commit 76136e95df7051d758e5ccd0d16510d3ffa9cb2d
Author: AV <27rurk@gmail.com>
Date:   Thu Apr 26 15:15:55 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 16b05afc79..53284847a6 100755
--- a/scripts/build
+++ b/scripts/build
@@ -564,7 +564,7 @@ if [ "$TARGET" = "host" ]; then
         -type f -cmin -1 -name "*.so*" \
         2>/dev/null` 2>/dev/null || :
         strip `find $TOOLCHAIN/bin $TOOLCHAIN/sbin $TOOLCHAIN/lib \
-          -type f -cmin -1 -executable 2>/dev/null` 2>/dev/null || :
+          -type f -cmin -1 2>/dev/null` 2>/dev/null || :
     fi
   fi
 fi

commit e7ade16fb1586d5eea040604337c29d0e289d677
Author: AV <27rurk@gmail.com>
Date:   Thu Apr 26 14:47:14 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index e236f95825..16b05afc79 100755
--- a/scripts/build
+++ b/scripts/build
@@ -561,10 +561,10 @@ if [ "$TARGET" = "host" ]; then
 
     if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
       strip `find $TOOLCHAIN \
-        -type f -name "*.so*" \
+        -type f -cmin -1 -name "*.so*" \
         2>/dev/null` 2>/dev/null || :
         strip `find $TOOLCHAIN/bin $TOOLCHAIN/sbin $TOOLCHAIN/lib \
-          -type f -executable 2>/dev/null` 2>/dev/null || :
+          -type f -cmin -1 -executable 2>/dev/null` 2>/dev/null || :
     fi
   fi
 fi

commit 774221e449d0098afbd3595f52390fa30386f700
Author: AV <27rurk@gmail.com>
Date:   Thu Apr 26 14:38:06 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index ca3fceda73..e236f95825 100755
--- a/scripts/build
+++ b/scripts/build
@@ -529,7 +529,6 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     rm -rf $INSTALL/{usr/,}share/doc
     rm -rf $INSTALL/{usr/,}share/gtk-doc
     rm -rf $INSTALL/{usr/,}share/info
-    rm -rf $INSTALL/{usr/,}share/locale
     rm -rf $INSTALL/{usr/,}share/man
     rm -rf $INSTALL/{usr/,}share/pkgconfig
     rm -rf $INSTALL/{usr/,}var

commit 989b2529e67d9f4800626f94db0ac83a172c1ccf
Author: AV <27rurk@gmail.com>
Date:   Thu Apr 26 14:32:30 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 9f587099fa..ca3fceda73 100755
--- a/scripts/build
+++ b/scripts/build
@@ -564,7 +564,7 @@ if [ "$TARGET" = "host" ]; then
       strip `find $TOOLCHAIN \
         -type f -name "*.so*" \
         2>/dev/null` 2>/dev/null || :
-        strip `find $TOOLCHAIN/bin $TOOLCHAIN/sbin \
+        strip `find $TOOLCHAIN/bin $TOOLCHAIN/sbin $TOOLCHAIN/lib \
           -type f -executable 2>/dev/null` 2>/dev/null || :
     fi
   fi

commit ec1330c4c200e313cd5883b6bc44c72dc9dd5806
Author: AV <27rurk@gmail.com>
Date:   Thu Apr 26 14:10:15 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 1660a34573..9f587099fa 100755
--- a/scripts/build
+++ b/scripts/build
@@ -187,7 +187,8 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
+                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN \
+                 -DCMAKE_INSTALL_DO_STRIP=1"
 
 HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
                  --bindir=$TOOLCHAIN/bin \
@@ -555,6 +556,20 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
   fi
 fi
 
+if [ "$TARGET" = "host" ]; then
+  if [ -d $TOOLCHAIN ] ; then
+    find $TOOLCHAIN -type d -exec rmdir -p {} \; 2>/dev/null || :
+
+    if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
+      strip `find $TOOLCHAIN \
+        -type f -name "*.so*" \
+        2>/dev/null` 2>/dev/null || :
+        strip `find $TOOLCHAIN/bin $TOOLCHAIN/sbin \
+          -type f -executable 2>/dev/null` 2>/dev/null || :
+    fi
+  fi
+fi
+
 cd $ROOT
 
 for i in `find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null`; do \

commit b42044872fbab2897da9d4d31de50e31fd418376
Author: AV <27rurk@gmail.com>
Date:   Mon Apr 23 17:26:19 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 13a3c752a7..1660a34573 100755
--- a/scripts/build
+++ b/scripts/build
@@ -155,8 +155,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared \
-                       --enable-silent-rules"
+                       --enable-shared"
 
 CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
@@ -184,8 +183,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared \
-                     --enable-silent-rules"
+                     --enable-shared"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit b7a61f662a763ba3d5ead722159d6791aca13434
Author: AV <27rurk@gmail.com>
Date:   Mon Apr 16 08:55:47 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 1660a34573..13a3c752a7 100755
--- a/scripts/build
+++ b/scripts/build
@@ -155,7 +155,8 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared"
+                       --enable-shared \
+                       --enable-silent-rules"
 
 CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
@@ -183,7 +184,8 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared"
+                     --enable-shared \
+                     --enable-silent-rules"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit cc9177c659c039852e26b265df8602932640e5f4
Author: AV <27rurk@gmail.com>
Date:   Sun Apr 15 17:34:58 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 0604c83117..1660a34573 100755
--- a/scripts/build
+++ b/scripts/build
@@ -543,13 +543,13 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
 
     if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
-      $STRIP -s `find $INSTALL \
+      $STRIP `find $INSTALL \
         -type f -name "*.so*" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
-          $STRIP -s `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
+          $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
         fi
-        $STRIP -s `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
+        $STRIP `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
           -type f -executable 2>/dev/null` 2>/dev/null || :
     fi
   fi

commit cd1cf53e8fad7435a3ec9d193b2a13d2761223ea
Author: AV <27rurk@gmail.com>
Date:   Sun Apr 15 15:01:27 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index a90935b9e7..0604c83117 100755
--- a/scripts/build
+++ b/scripts/build
@@ -140,7 +140,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
   MESON_BUILD_TYPE="debug"
 else
-  CMAKE_BUILD_TYPE="Release"
+  CMAKE_BUILD_TYPE=""
   MESON_BUILD_TYPE="plain"
 fi
 

commit b67eb963e5118d18ef58449d74ce257be0963ec6
Author: AV <27rurk@gmail.com>
Date:   Sat Apr 14 20:07:00 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 509ff896a6..a90935b9e7 100755
--- a/scripts/build
+++ b/scripts/build
@@ -140,7 +140,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
   MESON_BUILD_TYPE="debug"
 else
-  CMAKE_BUILD_TYPE=""
+  CMAKE_BUILD_TYPE="Release"
   MESON_BUILD_TYPE="plain"
 fi
 
@@ -161,7 +161,8 @@ CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                   -DCMAKE_INSTALL_PREFIX=/usr"
+                   -DCMAKE_INSTALL_PREFIX=/usr \
+                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
 
 TARGET_MESON_OPTS="--prefix=/usr \
                    --bindir=/usr/bin \

commit 7795fd199f3b8178dd01987f85a494825959922a
Author: AV <27rurk@gmail.com>
Date:   Wed Apr 11 05:19:15 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 84f3fb02c5..509ff896a6 100755
--- a/scripts/build
+++ b/scripts/build
@@ -542,13 +542,13 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
 
     if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
-      $STRIP --strip-all `find $INSTALL \
+      $STRIP -s `find $INSTALL \
         -type f -name "*.so*" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
-          $STRIP --strip-all `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
+          $STRIP -s `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
         fi
-        $STRIP --strip-all `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
+        $STRIP -s `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
           -type f -executable 2>/dev/null` 2>/dev/null || :
     fi
   fi

commit 812a266f647f531cdd297bd3c7ea59962a17e613
Author: AV <27rurk@gmail.com>
Date:   Wed Apr 11 04:48:19 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index c70e0e3fe4..84f3fb02c5 100755
--- a/scripts/build
+++ b/scripts/build
@@ -542,13 +542,13 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
 
     if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
-      $STRIP `find $INSTALL \
+      $STRIP --strip-all `find $INSTALL \
         -type f -name "*.so*" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
-          $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
+          $STRIP --strip-all `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
         fi
-        $STRIP `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
+        $STRIP --strip-all `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
           -type f -executable 2>/dev/null` 2>/dev/null || :
     fi
   fi

commit b961e1a703f897046126d08e4f96122fd2452323
Author: AV <27rurk@gmail.com>
Date:   Wed Apr 4 22:01:55 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 4019f2fd6f..c70e0e3fe4 100755
--- a/scripts/build
+++ b/scripts/build
@@ -141,7 +141,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
   CMAKE_BUILD_TYPE=""
-  MESON_BUILD_TYPE="release"
+  MESON_BUILD_TYPE="plain"
 fi
 
 # configure TARGET build defaults

commit 4d7e91d4bc5187a6ecb9debb4a5a34512ae3814e
Author: AV <27rurk@gmail.com>
Date:   Tue Apr 3 09:22:13 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index c70e0e3fe4..4019f2fd6f 100755
--- a/scripts/build
+++ b/scripts/build
@@ -141,7 +141,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
   CMAKE_BUILD_TYPE=""
-  MESON_BUILD_TYPE="plain"
+  MESON_BUILD_TYPE="release"
 fi
 
 # configure TARGET build defaults

commit df9d6780292bdec300e0d1d3298eb720e179e44c
Author: AV <27rurk@gmail.com>
Date:   Tue Apr 3 04:45:13 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 4019f2fd6f..c70e0e3fe4 100755
--- a/scripts/build
+++ b/scripts/build
@@ -141,7 +141,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
   CMAKE_BUILD_TYPE=""
-  MESON_BUILD_TYPE="release"
+  MESON_BUILD_TYPE="plain"
 fi
 
 # configure TARGET build defaults

commit b922b3a06ea70cca43ed92ff4aac871e83817b61
Author: AV <27rurk@gmail.com>
Date:   Mon Apr 2 23:01:05 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index c70e0e3fe4..4019f2fd6f 100755
--- a/scripts/build
+++ b/scripts/build
@@ -141,7 +141,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
   CMAKE_BUILD_TYPE=""
-  MESON_BUILD_TYPE="plain"
+  MESON_BUILD_TYPE="release"
 fi
 
 # configure TARGET build defaults

commit 39a1baa29e46de8e86e78181013f2f57d93159a1
Author: AV <27rurk@gmail.com>
Date:   Mon Apr 2 19:05:03 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index a3e8457cf5..c70e0e3fe4 100755
--- a/scripts/build
+++ b/scripts/build
@@ -65,13 +65,10 @@ STAMP=$STAMPS/$PACKAGE_NAME/build_$TARGET
 
 $SCRIPTS/unpack $PACKAGE_NAME
 
-STAMP_DEPENDS="$PKG_DIR $PKG_NEED_UNPACK $PROJECT_DIR/$PROJECT/patches/$PKG_NAME"
-[ -n "$DEVICE" ] && STAMP_DEPENDS="$STAMP_DEPENDS $PROJECT_DIR/$PROJECT/devices/$DEVICE/patches/$PKG_NAME"
-
 if [ -f $STAMP ] ; then
   . $STAMP
-  PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
-  if [ ! "$PKG_DEEPMD5" = "$STAMP_PKG_DEEPMD5" ] ; then
+  PKG_DEEPHASH=$(calculate_stamp)
+  if [ ! "$PKG_DEEPHASH" = "$STAMP_PKG_DEEPHASH" ] ; then
     rm -f $STAMP
   fi
 
@@ -173,8 +170,7 @@ TARGET_MESON_OPTS="--prefix=/usr \
                    --libdir=/usr/lib \
                    --libexecdir=/usr/lib \
                    --localstatedir=/var \
-                   --buildtype=$MESON_BUILD_TYPE \
-                   --cross-file=$MESON_CONF"
+                   --buildtype=$MESON_BUILD_TYPE"
 
 # configure HOST build defaults
 HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
@@ -199,8 +195,7 @@ HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
                  --libdir=$TOOLCHAIN/lib \
                  --libexecdir=$TOOLCHAIN/lib \
                  --localstatedir=$TOOLCHAIN/var \
-                 --buildtype=plain \
-                 --cross-file=$MESON_CONF"
+                 --buildtype=plain"
 
 # configure INIT build defaults
 INIT_CONFIGURE_OPTS="$TARGET_CONFIGURE_OPTS"
@@ -241,8 +236,8 @@ export BUILD_INDENT=$((${BUILD_INDENT:-1}+$BUILD_INDENT_SIZE))
 
 # virtual packages dont must be build, they only contains dependencies, so dont go further here
 if [ "$PKG_SECTION" = "virtual" ]; then
-  PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
-  for i in PKG_NAME PKG_DEEPMD5 BUILD_WITH_DEBUG; do
+  PKG_DEEPHASH=$(calculate_stamp)
+  for i in PKG_NAME PKG_DEEPHASH BUILD_WITH_DEBUG; do
     echo "STAMP_$i=\"${!i}\"" >> $STAMP
   done
 
@@ -320,23 +315,15 @@ cd $PKG_BUILD
 
 if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRIPT" ]; then
   case "$TARGET" in
-    "target")
-      mkdir -p .$TARGET_NAME
-      cd .$TARGET_NAME
-      ;;
-    "host")
-      mkdir -p .$HOST_NAME
-      cd .$HOST_NAME
-      ;;
-    "init")
-      mkdir -p .$TARGET_NAME-$TARGET
-      cd .$TARGET_NAME-$TARGET
-      ;;
-    "bootstrap")
-      mkdir -p .$HOST_NAME-$TARGET
-      cd .$HOST_NAME-$TARGET
-      ;;
+    "target")    PKG_REAL_BUILD="$PKG_BUILD/.$TARGET_NAME" ;;
+    "host")      PKG_REAL_BUILD="$PKG_BUILD/.$HOST_NAME" ;;
+    "init")      PKG_REAL_BUILD="$PKG_BUILD/.$TARGET_NAME-$TARGET" ;;
+    "bootstrap") PKG_REAL_BUILD="$PKG_BUILD/.$HOST_NAME-$TARGET" ;;
   esac
+  mkdir -p $PKG_REAL_BUILD
+  cd $PKG_REAL_BUILD
+  
+  MESON_CONF="$PKG_REAL_BUILD/meson.conf"
 fi
 
 # configure
@@ -349,20 +336,24 @@ else
   case "$PKG_TOOLCHAIN:$TARGET" in
     # meson builds
     "meson:target")
-      echo "Executing (target): meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      CC="$HOST_CC" CXX="$HOST_CXX" meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)
+      create_meson_conf $TARGET $MESON_CONF
+      echo "Executing (target): meson $TARGET_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      CC="$HOST_CC" CXX="$HOST_CXX" meson $TARGET_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:host")
-      echo "Executing (host): meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)
+      create_meson_conf $TARGET $MESON_CONF
+      echo "Executing (host): meson $HOST_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $HOST_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:init")
-      echo "Executing (init): meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)
+      create_meson_conf $TARGET $MESON_CONF
+      echo "Executing (init): meson $INIT_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $INIT_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:bootstrap")
-      echo "Executing (bootstrap): meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)
+      create_meson_conf $TARGET $MESON_CONF
+      echo "Executing (bootstrap): meson $BOOTSTRAP_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $BOOTSTRAP_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)
       ;;
 
     # cmake builds with ninja
@@ -569,10 +560,11 @@ for i in `find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null`; do \
   $SED "s:\(['= ]\)/usr:\\1$SYSROOT_PREFIX/usr:g" $i; \
 done
 
-PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
-for i in PKG_NAME PKG_DEEPMD5 BUILD_WITH_DEBUG; do
+PKG_DEEPHASH=$(calculate_stamp)
+for i in PKG_NAME PKG_DEEPHASH BUILD_WITH_DEBUG; do
   echo "STAMP_$i=\"${!i}\"" >> $STAMP
 done
+
 if [ "$1" = "u-boot" ]; then
   echo "STAMP_UBOOT_SYSTEM=\"${UBOOT_SYSTEM}\"" >> $STAMP
 fi

commit e1646b41f690abe4339330a7d59b011da6c8cd64
Author: AV <27rurk@gmail.com>
Date:   Sat Mar 31 04:50:24 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index db54e28201..a3e8457cf5 100755
--- a/scripts/build
+++ b/scripts/build
@@ -338,6 +338,7 @@ if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRI
       ;;
   esac
 fi
+
 # configure
 if [ "$(type -t pre_configure_$TARGET)" = "function" ]; then
   pre_configure_$TARGET

commit f20f072ee881a106cdd94231ce6d75b294520807
Author: AV <27rurk@gmail.com>
Date:   Fri Mar 30 23:59:56 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index c9b2e74715..db54e28201 100755
--- a/scripts/build
+++ b/scripts/build
@@ -164,8 +164,7 @@ CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                   -DCMAKE_INSTALL_PREFIX=/usr \
-                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
+                   -DCMAKE_INSTALL_PREFIX=/usr"
 
 TARGET_MESON_OPTS="--prefix=/usr \
                    --bindir=/usr/bin \

commit 2bbc7ee64bc1979e73232b353048325cf789a480
Author: AV <27rurk@gmail.com>
Date:   Fri Mar 30 23:57:35 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 44005372a2..c9b2e74715 100755
--- a/scripts/build
+++ b/scripts/build
@@ -174,7 +174,8 @@ TARGET_MESON_OPTS="--prefix=/usr \
                    --libdir=/usr/lib \
                    --libexecdir=/usr/lib \
                    --localstatedir=/var \
-                   --buildtype=$MESON_BUILD_TYPE"
+                   --buildtype=$MESON_BUILD_TYPE \
+                   --cross-file=$MESON_CONF"
 
 # configure HOST build defaults
 HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
@@ -199,7 +200,8 @@ HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
                  --libdir=$TOOLCHAIN/lib \
                  --libexecdir=$TOOLCHAIN/lib \
                  --localstatedir=$TOOLCHAIN/var \
-                 --buildtype=plain"
+                 --buildtype=plain \
+                 --cross-file=$MESON_CONF"
 
 # configure INIT build defaults
 INIT_CONFIGURE_OPTS="$TARGET_CONFIGURE_OPTS"
@@ -319,15 +321,23 @@ cd $PKG_BUILD
 
 if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRIPT" ]; then
   case "$TARGET" in
-    "target")    PKG_REAL_BUILD="$PKG_BUILD/.$TARGET_NAME" ;;
-    "host")      PKG_REAL_BUILD="$PKG_BUILD/.$HOST_NAME" ;;
-    "init")      PKG_REAL_BUILD="$PKG_BUILD/.$TARGET_NAME-$TARGET" ;;
-    "bootstrap") PKG_REAL_BUILD="$PKG_BUILD/.$HOST_NAME-$TARGET" ;;
+    "target")
+      mkdir -p .$TARGET_NAME
+      cd .$TARGET_NAME
+      ;;
+    "host")
+      mkdir -p .$HOST_NAME
+      cd .$HOST_NAME
+      ;;
+    "init")
+      mkdir -p .$TARGET_NAME-$TARGET
+      cd .$TARGET_NAME-$TARGET
+      ;;
+    "bootstrap")
+      mkdir -p .$HOST_NAME-$TARGET
+      cd .$HOST_NAME-$TARGET
+      ;;
   esac
-  mkdir -p $PKG_REAL_BUILD
-  cd $PKG_REAL_BUILD
-  
-  MESON_CONF="$PKG_REAL_BUILD/meson.conf"
 fi
 # configure
 if [ "$(type -t pre_configure_$TARGET)" = "function" ]; then
@@ -339,24 +349,20 @@ else
   case "$PKG_TOOLCHAIN:$TARGET" in
     # meson builds
     "meson:target")
-      create_meson_conf $TARGET $MESON_CONF
-      echo "Executing (target): meson $TARGET_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      CC="$HOST_CC" CXX="$HOST_CXX" meson $TARGET_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)
+      echo "Executing (target): meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      CC="$HOST_CC" CXX="$HOST_CXX" meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:host")
-      create_meson_conf $TARGET $MESON_CONF
-      echo "Executing (host): meson $HOST_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $HOST_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)
+      echo "Executing (host): meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:init")
-      create_meson_conf $TARGET $MESON_CONF
-      echo "Executing (init): meson $INIT_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $INIT_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)
+      echo "Executing (init): meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:bootstrap")
-      create_meson_conf $TARGET $MESON_CONF
-      echo "Executing (bootstrap): meson $BOOTSTRAP_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $BOOTSTRAP_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)
+      echo "Executing (bootstrap): meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)
       ;;
 
     # cmake builds with ninja

commit b769ad229c8fdaab658e1194d32f0d052a94e8a3
Author: AV <27rurk@gmail.com>
Date:   Fri Mar 30 23:18:05 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index c6327df6a2..44005372a2 100755
--- a/scripts/build
+++ b/scripts/build
@@ -145,7 +145,6 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
 else
   CMAKE_BUILD_TYPE=""
   MESON_BUILD_TYPE="plain"
-#  MESON_BUILD_TYPE="release"
 fi
 
 # configure TARGET build defaults
@@ -166,14 +165,7 @@ CMAKE_GENERATOR_NINJA="-GNinja \
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                    -DCMAKE_INSTALL_PREFIX=/usr \
-                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
-                   -DBUILD_DOC=OFF \
-                   -DBUILD_DOCS=OFF \
-                   -DBUILD_EXAMPLE=OFF \
-                   -DBUILD_EXAMPLES=OFF \
-                   -DBUILD_TEST=OFF \
-                   -DBUILD_TESTS=OFF \
-                   -DBUILD_TESTING=OFF"
+                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
 
 TARGET_MESON_OPTS="--prefix=/usr \
                    --bindir=/usr/bin \
@@ -182,8 +174,7 @@ TARGET_MESON_OPTS="--prefix=/usr \
                    --libdir=/usr/lib \
                    --libexecdir=/usr/lib \
                    --localstatedir=/var \
-                   --buildtype=$MESON_BUILD_TYPE \
-                   --cross-file=$MESON_CONF"
+                   --buildtype=$MESON_BUILD_TYPE"
 
 # configure HOST build defaults
 HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
@@ -199,14 +190,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN \
-                 -DBUILD_DOC=OFF \
-                 -DBUILD_DOCS=OFF \
-                 -DBUILD_EXAMPLE=OFF \
-                 -DBUILD_EXAMPLES=OFF \
-                 -DBUILD_TEST=OFF \
-                 -DBUILD_TESTS=OFF \
-                 -DBUILD_TESTING=OFF"
+                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
 
 HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
                  --bindir=$TOOLCHAIN/bin \
@@ -215,8 +199,7 @@ HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
                  --libdir=$TOOLCHAIN/lib \
                  --libexecdir=$TOOLCHAIN/lib \
                  --localstatedir=$TOOLCHAIN/var \
-                 --buildtype=plain \
-                 --cross-file=$MESON_CONF"
+                 --buildtype=plain"
 
 # configure INIT build defaults
 INIT_CONFIGURE_OPTS="$TARGET_CONFIGURE_OPTS"
@@ -336,23 +319,15 @@ cd $PKG_BUILD
 
 if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRIPT" ]; then
   case "$TARGET" in
-    "target")
-      mkdir -p .$TARGET_NAME
-      cd .$TARGET_NAME
-      ;;
-    "host")
-      mkdir -p .$HOST_NAME
-      cd .$HOST_NAME
-      ;;
-    "init")
-      mkdir -p .$TARGET_NAME-$TARGET
-      cd .$TARGET_NAME-$TARGET
-      ;;
-    "bootstrap")
-      mkdir -p .$HOST_NAME-$TARGET
-      cd .$HOST_NAME-$TARGET
-      ;;
+    "target")    PKG_REAL_BUILD="$PKG_BUILD/.$TARGET_NAME" ;;
+    "host")      PKG_REAL_BUILD="$PKG_BUILD/.$HOST_NAME" ;;
+    "init")      PKG_REAL_BUILD="$PKG_BUILD/.$TARGET_NAME-$TARGET" ;;
+    "bootstrap") PKG_REAL_BUILD="$PKG_BUILD/.$HOST_NAME-$TARGET" ;;
   esac
+  mkdir -p $PKG_REAL_BUILD
+  cd $PKG_REAL_BUILD
+  
+  MESON_CONF="$PKG_REAL_BUILD/meson.conf"
 fi
 # configure
 if [ "$(type -t pre_configure_$TARGET)" = "function" ]; then
@@ -364,20 +339,24 @@ else
   case "$PKG_TOOLCHAIN:$TARGET" in
     # meson builds
     "meson:target")
-      echo "Executing (target): meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      CC="$HOST_CC" CXX="$HOST_CXX" meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)
+      create_meson_conf $TARGET $MESON_CONF
+      echo "Executing (target): meson $TARGET_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      CC="$HOST_CC" CXX="$HOST_CXX" meson $TARGET_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:host")
-      echo "Executing (host): meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)
+      create_meson_conf $TARGET $MESON_CONF
+      echo "Executing (host): meson $HOST_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $HOST_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:init")
-      echo "Executing (init): meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)
+      create_meson_conf $TARGET $MESON_CONF
+      echo "Executing (init): meson $INIT_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $INIT_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:bootstrap")
-      echo "Executing (bootstrap): meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)
+      create_meson_conf $TARGET $MESON_CONF
+      echo "Executing (bootstrap): meson $BOOTSTRAP_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $BOOTSTRAP_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)
       ;;
 
     # cmake builds with ninja
@@ -566,13 +545,13 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
 
     if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
-      $STRIP --strip-all `find $INSTALL \
+      $STRIP `find $INSTALL \
         -type f -name "*.so*" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
-          $STRIP --strip-all `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
+          $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
         fi
-        $STRIP --strip-all `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
+        $STRIP `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
           -type f -executable 2>/dev/null` 2>/dev/null || :
     fi
   fi

commit e668d5fad2c33ec34157d1848ee37767eabaf236
Author: AV <27rurk@gmail.com>
Date:   Thu Mar 29 21:50:50 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 93c67366b9..c6327df6a2 100755
--- a/scripts/build
+++ b/scripts/build
@@ -145,6 +145,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
 else
   CMAKE_BUILD_TYPE=""
   MESON_BUILD_TYPE="plain"
+#  MESON_BUILD_TYPE="release"
 fi
 
 # configure TARGET build defaults
@@ -181,7 +182,8 @@ TARGET_MESON_OPTS="--prefix=/usr \
                    --libdir=/usr/lib \
                    --libexecdir=/usr/lib \
                    --localstatedir=/var \
-                   --buildtype=$MESON_BUILD_TYPE"
+                   --buildtype=$MESON_BUILD_TYPE \
+                   --cross-file=$MESON_CONF"
 
 # configure HOST build defaults
 HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
@@ -213,7 +215,8 @@ HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
                  --libdir=$TOOLCHAIN/lib \
                  --libexecdir=$TOOLCHAIN/lib \
                  --localstatedir=$TOOLCHAIN/var \
-                 --buildtype=plain"
+                 --buildtype=plain \
+                 --cross-file=$MESON_CONF"
 
 # configure INIT build defaults
 INIT_CONFIGURE_OPTS="$TARGET_CONFIGURE_OPTS"
@@ -333,17 +336,24 @@ cd $PKG_BUILD
 
 if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRIPT" ]; then
   case "$TARGET" in
-    "target")    PKG_REAL_BUILD="$PKG_BUILD/.$TARGET_NAME" ;;
-    "host")      PKG_REAL_BUILD="$PKG_BUILD/.$HOST_NAME" ;;
-    "init")      PKG_REAL_BUILD="$PKG_BUILD/.$TARGET_NAME-$TARGET" ;;
-    "bootstrap") PKG_REAL_BUILD="$PKG_BUILD/.$HOST_NAME-$TARGET" ;;
+    "target")
+      mkdir -p .$TARGET_NAME
+      cd .$TARGET_NAME
+      ;;
+    "host")
+      mkdir -p .$HOST_NAME
+      cd .$HOST_NAME
+      ;;
+    "init")
+      mkdir -p .$TARGET_NAME-$TARGET
+      cd .$TARGET_NAME-$TARGET
+      ;;
+    "bootstrap")
+      mkdir -p .$HOST_NAME-$TARGET
+      cd .$HOST_NAME-$TARGET
+      ;;
   esac
-  mkdir -p $PKG_REAL_BUILD
-  cd $PKG_REAL_BUILD
-  
-  MESON_CONF="$PKG_REAL_BUILD/meson.conf"
 fi
-
 # configure
 if [ "$(type -t pre_configure_$TARGET)" = "function" ]; then
   pre_configure_$TARGET
@@ -354,24 +364,20 @@ else
   case "$PKG_TOOLCHAIN:$TARGET" in
     # meson builds
     "meson:target")
-      create_meson_conf $TARGET $MESON_CONF
-      echo "Executing (target): meson $TARGET_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      CC="$HOST_CC" CXX="$HOST_CXX" meson $TARGET_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)
+      echo "Executing (target): meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      CC="$HOST_CC" CXX="$HOST_CXX" meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:host")
-      create_meson_conf $TARGET $MESON_CONF
-      echo "Executing (host): meson $HOST_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $HOST_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)
+      echo "Executing (host): meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:init")
-      create_meson_conf $TARGET $MESON_CONF
-      echo "Executing (init): meson $INIT_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $INIT_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)
+      echo "Executing (init): meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:bootstrap")
-      create_meson_conf $TARGET $MESON_CONF
-      echo "Executing (bootstrap): meson $BOOTSTRAP_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $BOOTSTRAP_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)
+      echo "Executing (bootstrap): meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)
       ;;
 
     # cmake builds with ninja

commit 09543b7e667d70b25088ef419367354520c9fcb4
Author: AV <27rurk@gmail.com>
Date:   Thu Mar 29 21:21:56 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 7e1cbf1eff..93c67366b9 100755
--- a/scripts/build
+++ b/scripts/build
@@ -145,7 +145,6 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
 else
   CMAKE_BUILD_TYPE=""
   MESON_BUILD_TYPE="plain"
-#  MESON_BUILD_TYPE="release"
 fi
 
 # configure TARGET build defaults

commit 9c4a07d017266d75082eaf8670f16fc7b7827f80
Author: AV <27rurk@gmail.com>
Date:   Thu Mar 29 20:16:55 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index a18b6c3cb1..7e1cbf1eff 100755
--- a/scripts/build
+++ b/scripts/build
@@ -445,19 +445,19 @@ else
     # ninja based builds
     "meson:target"|"cmake:target"|"ninja:target")
       echo "Executing (target): ninja $PKG_MAKE_OPTS_TARGET" | tr -s " "
-      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_TARGET
+      ninja -j${CONCURRENCY_MAKE_LEVEL} $NINJA_OPTS $PKG_MAKE_OPTS_TARGET
       ;;
     "meson:host"|"cmake:host"|"ninja:host")
       echo "Executing (host): ninja $PKG_MAKE_OPTS_HOST" | tr -s " "
-      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_HOST
+      ninja -j${CONCURRENCY_MAKE_LEVEL} $NINJA_OPTS $PKG_MAKE_OPTS_HOST
       ;;
     "meson:init"|"cmake:init"|"ninja:init")
       echo "Executing (init): ninja $PKG_MAKE_OPTS_INIT" | tr -s " "
-      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_INIT
+      ninja -j${CONCURRENCY_MAKE_LEVEL} $NINJA_OPTS $PKG_MAKE_OPTS_INIT
       ;;
     "meson:bootstrap"|"cmake:bootstrap"|"ninja:bootstrap")
       echo "Executing (bootstrap): ninja $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
-      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_BOOTSTRAP
+      ninja -j${CONCURRENCY_MAKE_LEVEL} $NINJA_OPTS $PKG_MAKE_OPTS_BOOTSTRAP
       ;;
 
     # make based builds

commit f659ee2d8ae3be0f93bc9ee7861934d1ad0781a5
Author: AV <27rurk@gmail.com>
Date:   Thu Mar 29 20:06:33 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index dd46fd139d..a18b6c3cb1 100755
--- a/scripts/build
+++ b/scripts/build
@@ -182,8 +182,7 @@ TARGET_MESON_OPTS="--prefix=/usr \
                    --libdir=/usr/lib \
                    --libexecdir=/usr/lib \
                    --localstatedir=/var \
-                   --buildtype=$MESON_BUILD_TYPE \
-                   --cross-file=$MESON_CONF"
+                   --buildtype=$MESON_BUILD_TYPE"
 
 # configure HOST build defaults
 HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
@@ -215,8 +214,7 @@ HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
                  --libdir=$TOOLCHAIN/lib \
                  --libexecdir=$TOOLCHAIN/lib \
                  --localstatedir=$TOOLCHAIN/var \
-                 --buildtype=plain \
-                 --cross-file=$MESON_CONF"
+                 --buildtype=plain"
 
 # configure INIT build defaults
 INIT_CONFIGURE_OPTS="$TARGET_CONFIGURE_OPTS"
@@ -336,23 +334,15 @@ cd $PKG_BUILD
 
 if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRIPT" ]; then
   case "$TARGET" in
-    "target")
-      mkdir -p .$TARGET_NAME
-      cd .$TARGET_NAME
-      ;;
-    "host")
-      mkdir -p .$HOST_NAME
-      cd .$HOST_NAME
-      ;;
-    "init")
-      mkdir -p .$TARGET_NAME-$TARGET
-      cd .$TARGET_NAME-$TARGET
-      ;;
-    "bootstrap")
-      mkdir -p .$HOST_NAME-$TARGET
-      cd .$HOST_NAME-$TARGET
-      ;;
+    "target")    PKG_REAL_BUILD="$PKG_BUILD/.$TARGET_NAME" ;;
+    "host")      PKG_REAL_BUILD="$PKG_BUILD/.$HOST_NAME" ;;
+    "init")      PKG_REAL_BUILD="$PKG_BUILD/.$TARGET_NAME-$TARGET" ;;
+    "bootstrap") PKG_REAL_BUILD="$PKG_BUILD/.$HOST_NAME-$TARGET" ;;
   esac
+  mkdir -p $PKG_REAL_BUILD
+  cd $PKG_REAL_BUILD
+  
+  MESON_CONF="$PKG_REAL_BUILD/meson.conf"
 fi
 
 # configure
@@ -365,20 +355,24 @@ else
   case "$PKG_TOOLCHAIN:$TARGET" in
     # meson builds
     "meson:target")
-      echo "Executing (target): meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      CC="$HOST_CC" CXX="$HOST_CXX" meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)
+      create_meson_conf $TARGET $MESON_CONF
+      echo "Executing (target): meson $TARGET_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      CC="$HOST_CC" CXX="$HOST_CXX" meson $TARGET_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:host")
-      echo "Executing (host): meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)
+      create_meson_conf $TARGET $MESON_CONF
+      echo "Executing (host): meson $HOST_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $HOST_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:init")
-      echo "Executing (init): meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)
+      create_meson_conf $TARGET $MESON_CONF
+      echo "Executing (init): meson $INIT_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $INIT_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:bootstrap")
-      echo "Executing (bootstrap): meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)
+      create_meson_conf $TARGET $MESON_CONF
+      echo "Executing (bootstrap): meson $BOOTSTRAP_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $BOOTSTRAP_MESON_OPTS --cross-file=$MESON_CONF $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)
       ;;
 
     # cmake builds with ninja

commit d1647b58432096f4cbe856f3081cedf3eb86a810
Author: AV <27rurk@gmail.com>
Date:   Wed Mar 21 21:16:29 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 5240e3fd0d..dd46fd139d 100755
--- a/scripts/build
+++ b/scripts/build
@@ -166,7 +166,14 @@ CMAKE_GENERATOR_NINJA="-GNinja \
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                    -DCMAKE_INSTALL_PREFIX=/usr \
-                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
+                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
+                   -DBUILD_DOC=OFF \
+                   -DBUILD_DOCS=OFF \
+                   -DBUILD_EXAMPLE=OFF \
+                   -DBUILD_EXAMPLES=OFF \
+                   -DBUILD_TEST=OFF \
+                   -DBUILD_TESTS=OFF \
+                   -DBUILD_TESTING=OFF"
 
 TARGET_MESON_OPTS="--prefix=/usr \
                    --bindir=/usr/bin \
@@ -192,7 +199,14 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
+                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN \
+                 -DBUILD_DOC=OFF \
+                 -DBUILD_DOCS=OFF \
+                 -DBUILD_EXAMPLE=OFF \
+                 -DBUILD_EXAMPLES=OFF \
+                 -DBUILD_TEST=OFF \
+                 -DBUILD_TESTS=OFF \
+                 -DBUILD_TESTING=OFF"
 
 HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
                  --bindir=$TOOLCHAIN/bin \

commit 04c4360855ea229028208806342a3dc25e6fcdf3
Author: AV <27rurk@gmail.com>
Date:   Tue Mar 20 13:46:03 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 9f0ec49145..5240e3fd0d 100755
--- a/scripts/build
+++ b/scripts/build
@@ -144,8 +144,8 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
   CMAKE_BUILD_TYPE=""
-# MESON_BUILD_TYPE="plain"
-  MESON_BUILD_TYPE="release"
+  MESON_BUILD_TYPE="plain"
+#  MESON_BUILD_TYPE="release"
 fi
 
 # configure TARGET build defaults

commit 3c655ce625d73919906d80298e0910f2bf26aa9d
Author: AV <27rurk@gmail.com>
Date:   Tue Mar 20 00:57:42 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index e3a0cc4d03..9f0ec49145 100755
--- a/scripts/build
+++ b/scripts/build
@@ -144,7 +144,8 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
   CMAKE_BUILD_TYPE=""
-  MESON_BUILD_TYPE="plain"
+# MESON_BUILD_TYPE="plain"
+  MESON_BUILD_TYPE="release"
 fi
 
 # configure TARGET build defaults

commit ad28b5f8551c94688f2189f823510f2331318945
Author: AV <27rurk@gmail.com>
Date:   Sat Mar 17 08:02:37 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 94277497a5..e3a0cc4d03 100755
--- a/scripts/build
+++ b/scripts/build
@@ -144,7 +144,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
   CMAKE_BUILD_TYPE=""
-  MESON_BUILD_TYPE="release"
+  MESON_BUILD_TYPE="plain"
 fi
 
 # configure TARGET build defaults

commit faeca6ed9761cd1287ef21c9a2200a6767013633
Author: AV <27rurk@gmail.com>
Date:   Sat Mar 17 05:01:36 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index e3a0cc4d03..94277497a5 100755
--- a/scripts/build
+++ b/scripts/build
@@ -144,7 +144,7 @@ if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
   CMAKE_BUILD_TYPE=""
-  MESON_BUILD_TYPE="plain"
+  MESON_BUILD_TYPE="release"
 fi
 
 # configure TARGET build defaults

commit 5dd0e4a5360ef965f21cf64ae1c8df8f5149f9e8
Author: AV <27rurk@gmail.com>
Date:   Fri Mar 16 10:37:00 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index d5a4a1902f..e3a0cc4d03 100755
--- a/scripts/build
+++ b/scripts/build
@@ -552,13 +552,13 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
 
     if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
-      $STRIP `find $INSTALL \
+      $STRIP --strip-all `find $INSTALL \
         -type f -name "*.so*" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
-          $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
+          $STRIP --strip-all `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
         fi
-        $STRIP `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
+        $STRIP --strip-all `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
           -type f -executable 2>/dev/null` 2>/dev/null || :
     fi
   fi

commit 1e00f4287988192696f807c4723051303e493d49
Author: AV <27rurk@gmail.com>
Date:   Wed Mar 14 20:41:56 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 2c6641c328..d5a4a1902f 100755
--- a/scripts/build
+++ b/scripts/build
@@ -20,6 +20,15 @@
 
 . config/options $1
 
+if [ "$1" = "--all" ]; then
+  if [ ! -z "$2" ]; then
+    for build_dir in $(ls -1d ${ROOT}/build.*); do
+      load_build_config ${build_dir} && ./scripts/build $2
+    done
+  fi
+  exit 0
+fi
+
 if [ -z "$1" ]; then
   echo "usage: $0 package_name[:<host|target|init|bootstrap>]"
   exit 1
@@ -212,13 +221,6 @@ if [ "$(type -t configure_package)" = "function" ]; then
   configure_package
 fi
 
-if [ "$PKG_IS_KERNEL_PKG" = "yes" ]; then
-  if [ "$TARGET_KERNEL_ARCH" = "arm64" -a "$TARGET_ARCH" = "arm" ]; then
-    TARGET_PREFIX=$TOOLCHAIN/lib/gcc-linaro-aarch64-linux-gnu/bin/aarch64-linux-gnu-
-    STRIP=${TARGET_PREFIX}strip
-  fi
-fi
-
 # build dependencies, only when PKG_DEPENDS_? is filled
 unset _pkg_depends
 case "$TARGET" in

commit 59de48c6afb8bd7ea66b8402e7745cb57df1a727
Author: AV <27rurk@gmail.com>
Date:   Mon Mar 5 16:35:42 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 21d07c4e27..2c6641c328 100755
--- a/scripts/build
+++ b/scripts/build
@@ -66,6 +66,10 @@ if [ -f $STAMP ] ; then
     rm -f $STAMP
   fi
 
+  if [ ! "$BUILD_WITH_DEBUG" = "$STAMP_BUILD_WITH_DEBUG" ]; then
+    rm -f $STAMP
+  fi
+
   if [ "$1" = "u-boot" -a ! "$UBOOT_SYSTEM" = "$STAMP_UBOOT_SYSTEM" ]; then
     rm -f $STAMP
   fi
@@ -125,6 +129,15 @@ unset -f pre_makeinstall_bootstrap
 unset -f makeinstall_bootstrap
 unset -f post_makeinstall_bootstrap
 
+# configure debug build defaults
+if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
+  CMAKE_BUILD_TYPE="Debug"
+  MESON_BUILD_TYPE="debug"
+else
+  CMAKE_BUILD_TYPE=""
+  MESON_BUILD_TYPE="plain"
+fi
+
 # configure TARGET build defaults
 TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --build=$HOST_NAME \
@@ -138,13 +151,6 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --disable-static \
                        --enable-shared"
 
-# cmake build defaults
-if [ "$DEBUG" = "yes" ]; then
-  CMAKE_BUILD_TYPE="Debug"
-else
-  CMAKE_BUILD_TYPE=""
-fi
-
 CMAKE_GENERATOR_NINJA="-GNinja \
                        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
 
@@ -152,13 +158,6 @@ TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                    -DCMAKE_INSTALL_PREFIX=/usr \
                    -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
 
-# meson build defaults
-if [ "$DEBUG" = "yes" ]; then
-  MESON_BUILD_TYPE="debug"
-else
-  MESON_BUILD_TYPE="plain"
-fi
-
 TARGET_MESON_OPTS="--prefix=/usr \
                    --bindir=/usr/bin \
                    --sbindir=/usr/sbin \
@@ -232,13 +231,17 @@ for p in $_pkg_depends; do
   $SCRIPTS/build $p
 done
 
-printf "%${BUILD_INDENT}c $(print_color CLR_BUILD "BUILD")    $PACKAGE_NAME $(print_color CLR_TARGET "($TARGET)")\n" ' '>&$SILENT_OUT
+if [ "${BUILD_WITH_DEBUG}" = "yes" ]; then
+  printf "%${BUILD_INDENT}c $(print_color CLR_BUILD "BUILD")    $PACKAGE_NAME $(print_color CLR_TARGET "($TARGET)") [DEBUG]\n" ' '>&$SILENT_OUT
+else
+  printf "%${BUILD_INDENT}c $(print_color CLR_BUILD "BUILD")    $PACKAGE_NAME $(print_color CLR_TARGET "($TARGET)")\n" ' '>&$SILENT_OUT
+fi
 export BUILD_INDENT=$((${BUILD_INDENT:-1}+$BUILD_INDENT_SIZE))
 
 # virtual packages dont must be build, they only contains dependencies, so dont go further here
 if [ "$PKG_SECTION" = "virtual" ]; then
   PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
-  for i in PKG_NAME PKG_DEEPMD5; do
+  for i in PKG_NAME PKG_DEEPMD5 BUILD_WITH_DEBUG; do
     echo "STAMP_$i=\"${!i}\"" >> $STAMP
   done
 
@@ -512,6 +515,15 @@ if [ "$(type -t post_makeinstall_$TARGET)" = "function" ]; then
   post_makeinstall_$TARGET
 fi
 
+# Bump addon version to prevent online updates
+if [ "$TARGET" = "target" -a "$PKG_IS_ADDON" = "yes" ]; then
+  mhaddonxml="$(find $INSTALL -type f -name addon.xml 2>/dev/null | head -1 || true)"
+  if [[ -n "${mhaddonxml}" ]] && [[ -f "${mhaddonxml}" ]]; then
+    mhaddonver="$(xmlstarlet sel -t -m "/addon" -m "@version" -v . -n ${mhaddonxml})"
+    [ -n "${mhaddonver}" ] && xmlstarlet edit --inplace --update "/addon/@version" --value "999.${mhaddonver}" ${mhaddonxml}
+  fi
+fi
+
 if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
   if [ -d $INSTALL ] ; then
     rm -rf $INSTALL/{usr/,}include
@@ -537,7 +549,7 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
         -exec rm -f {} \; 2>/dev/null || :
     find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
 
-    if [ ! "$DEBUG" = yes ]; then
+    if [ ! "${BUILD_WITH_DEBUG}" = "yes" ]; then
       $STRIP `find $INSTALL \
         -type f -name "*.so*" \
         2>/dev/null` 2>/dev/null || :
@@ -557,7 +569,7 @@ for i in `find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null`; do \
 done
 
 PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
-for i in PKG_NAME PKG_DEEPMD5; do
+for i in PKG_NAME PKG_DEEPMD5 BUILD_WITH_DEBUG; do
   echo "STAMP_$i=\"${!i}\"" >> $STAMP
 done
 if [ "$1" = "u-boot" ]; then

commit a52a7b06b41dc28cb87cca45e0bc235fc7deef99
Author: AV <27rurk@gmail.com>
Date:   Mon Feb 12 22:28:40 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 0605e66a3d..21d07c4e27 100755
--- a/scripts/build
+++ b/scripts/build
@@ -1,4 +1,4 @@
-21:58 12.02.2018#!/bin/bash
+#!/bin/bash
 
 ################################################################################
 #      This file is part of OpenELEC - http://www.openelec.tv

commit 39a994aba71056801938002cdae4c9a172b98bcd
Author: AV <27rurk@gmail.com>
Date:   Mon Feb 12 22:25:16 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index a77f357340..0605e66a3d 100755
--- a/scripts/build
+++ b/scripts/build
@@ -136,8 +136,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared \
-                       --enable-silent-rules"
+                       --enable-shared"
 
 # cmake build defaults
 if [ "$DEBUG" = "yes" ]; then
@@ -180,8 +179,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared \
-                     --enable-silent-rules"
+                     --enable-shared"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit 43fc23bdda2d07fc2fd661739772ea65ccb93d4d
Author: AV <27rurk@gmail.com>
Date:   Mon Feb 12 22:02:25 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 21d07c4e27..a77f357340 100755
--- a/scripts/build
+++ b/scripts/build
@@ -1,4 +1,4 @@
-#!/bin/bash
+21:58 12.02.2018#!/bin/bash
 
 ################################################################################
 #      This file is part of OpenELEC - http://www.openelec.tv
@@ -136,7 +136,8 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared"
+                       --enable-shared \
+                       --enable-silent-rules"
 
 # cmake build defaults
 if [ "$DEBUG" = "yes" ]; then
@@ -179,7 +180,8 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared"
+                     --enable-shared \
+                     --enable-silent-rules"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit 46313f35e576ee3e6c3ec24c6eaba0c4772ffe61
Author: AV <27rurk@gmail.com>
Date:   Mon Feb 5 22:00:30 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 363dbebf8d..21d07c4e27 100755
--- a/scripts/build
+++ b/scripts/build
@@ -62,7 +62,11 @@ STAMP_DEPENDS="$PKG_DIR $PKG_NEED_UNPACK $PROJECT_DIR/$PROJECT/patches/$PKG_NAME
 if [ -f $STAMP ] ; then
   . $STAMP
   PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
-  if [ ! "$PKG_DEEPMD5" = "$STAMP_PKG_DEEPMD5" -o ! "$PKG_STAMP" = "$STAMP_PKG_STAMP" ] ; then
+  if [ ! "$PKG_DEEPMD5" = "$STAMP_PKG_DEEPMD5" ] ; then
+    rm -f $STAMP
+  fi
+
+  if [ "$1" = "u-boot" -a ! "$UBOOT_SYSTEM" = "$STAMP_UBOOT_SYSTEM" ]; then
     rm -f $STAMP
   fi
 fi
@@ -234,7 +238,7 @@ export BUILD_INDENT=$((${BUILD_INDENT:-1}+$BUILD_INDENT_SIZE))
 # virtual packages dont must be build, they only contains dependencies, so dont go further here
 if [ "$PKG_SECTION" = "virtual" ]; then
   PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
-  for i in PKG_NAME PKG_DEEPMD5 PKG_STAMP; do
+  for i in PKG_NAME PKG_DEEPMD5; do
     echo "STAMP_$i=\"${!i}\"" >> $STAMP
   done
 
@@ -553,6 +557,9 @@ for i in `find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null`; do \
 done
 
 PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
-for i in PKG_NAME PKG_DEEPMD5 PKG_STAMP; do
+for i in PKG_NAME PKG_DEEPMD5; do
   echo "STAMP_$i=\"${!i}\"" >> $STAMP
 done
+if [ "$1" = "u-boot" ]; then
+  echo "STAMP_UBOOT_SYSTEM=\"${UBOOT_SYSTEM}\"" >> $STAMP
+fi

commit 55b4844eb5e793f94531a473f4df358cb44dbc47
Author: AV <27rurk@gmail.com>
Date:   Thu Jan 25 18:37:14 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 2023249168..363dbebf8d 100755
--- a/scripts/build
+++ b/scripts/build
@@ -146,21 +146,13 @@ CMAKE_GENERATOR_NINJA="-GNinja \
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                    -DCMAKE_INSTALL_PREFIX=/usr \
-                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
-                   -DBUILD_DOC=OFF \
-                   -DBUILD_DOCS=OFF \
-                   -DBUILD_EXAMPLE=OFF \
-                   -DBUILD_EXAMPLES=OFF \
-                   -DBUILD_TEST=OFF \
-                   -DBUILD_TESTS=OFF \
-                   -DBUILD_TESTING=OFF"
+                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
 
 # meson build defaults
 if [ "$DEBUG" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
   MESON_BUILD_TYPE="plain"
-  #MESON_BUILD_TYPE="release"
 fi
 
 TARGET_MESON_OPTS="--prefix=/usr \
@@ -187,14 +179,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN \
-                 -DBUILD_DOC=OFF \
-                 -DBUILD_DOCS=OFF \
-                 -DBUILD_EXAMPLE=OFF \
-                 -DBUILD_EXAMPLES=OFF \
-                 -DBUILD_TEST=OFF \
-                 -DBUILD_TESTS=OFF \
-                 -DBUILD_TESTING=OFF"
+                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
 
 HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
                  --bindir=$TOOLCHAIN/bin \

commit 39cebe41666ee56536b3d66f96496de33dd06b17
Author: AV <27rurk@gmail.com>
Date:   Thu Jan 25 15:04:33 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index eff5159a02..2023249168 100755
--- a/scripts/build
+++ b/scripts/build
@@ -62,11 +62,7 @@ STAMP_DEPENDS="$PKG_DIR $PKG_NEED_UNPACK $PROJECT_DIR/$PROJECT/patches/$PKG_NAME
 if [ -f $STAMP ] ; then
   . $STAMP
   PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
-  if [ ! "$PKG_DEEPMD5" = "$STAMP_PKG_DEEPMD5" ] ; then
-    rm -f $STAMP
-  fi
-
-  if [ "$1" = "u-boot" -a ! "$UBOOT_SYSTEM" = "$STAMP_UBOOT_SYSTEM" ]; then
+  if [ ! "$PKG_DEEPMD5" = "$STAMP_PKG_DEEPMD5" -o ! "$PKG_STAMP" = "$STAMP_PKG_STAMP" ] ; then
     rm -f $STAMP
   fi
 fi
@@ -253,7 +249,7 @@ export BUILD_INDENT=$((${BUILD_INDENT:-1}+$BUILD_INDENT_SIZE))
 # virtual packages dont must be build, they only contains dependencies, so dont go further here
 if [ "$PKG_SECTION" = "virtual" ]; then
   PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
-  for i in PKG_NAME PKG_DEEPMD5; do
+  for i in PKG_NAME PKG_DEEPMD5 PKG_STAMP; do
     echo "STAMP_$i=\"${!i}\"" >> $STAMP
   done
 
@@ -572,10 +568,6 @@ for i in `find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null`; do \
 done
 
 PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
-for i in PKG_NAME PKG_DEEPMD5; do
+for i in PKG_NAME PKG_DEEPMD5 PKG_STAMP; do
   echo "STAMP_$i=\"${!i}\"" >> $STAMP
 done
-
-if [ "$1" = "u-boot" ]; then
-  echo "STAMP_UBOOT_SYSTEM=\"${UBOOT_SYSTEM}\"" >> $STAMP
-fi

commit dcee3e53cb7bc099976ebb7a9c1f6ec93449171b
Author: AV <27rurk@gmail.com>
Date:   Thu Jan 25 10:19:51 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 78afc40dd7..eff5159a02 100755
--- a/scripts/build
+++ b/scripts/build
@@ -489,7 +489,7 @@ if [ "$(type -t pre_makeinstall_$TARGET)" = "function" ]; then
   pre_makeinstall_$TARGET
 fi
 if [ "$(type -t makeinstall_$TARGET)" = "function" ]; then
-  makeinstall_$TARGET -j1
+  makeinstall_$TARGET
 else
   case "$PKG_TOOLCHAIN:$TARGET" in
     # ninja based builds

commit a9ec9c57a64c3a7fcd72187c3ab9f8e7aaba200f
Author: AV <27rurk@gmail.com>
Date:   Wed Jan 24 04:57:12 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 48874b7470..78afc40dd7 100755
--- a/scripts/build
+++ b/scripts/build
@@ -163,8 +163,8 @@ TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
 if [ "$DEBUG" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
-#  MESON_BUILD_TYPE="plain"
-  MESON_BUILD_TYPE="release"
+  MESON_BUILD_TYPE="plain"
+  #MESON_BUILD_TYPE="release"
 fi
 
 TARGET_MESON_OPTS="--prefix=/usr \

commit fc1764036cbec4a7f182424367beaa0e8ae816cc
Author: AV <27rurk@gmail.com>
Date:   Tue Jan 23 21:54:27 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 60b9ded7a6..48874b7470 100755
--- a/scripts/build
+++ b/scripts/build
@@ -163,8 +163,8 @@ TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
 if [ "$DEBUG" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
-  MESON_BUILD_TYPE="plain"
-#  MESON_BUILD_TYPE="release"
+#  MESON_BUILD_TYPE="plain"
+  MESON_BUILD_TYPE="release"
 fi
 
 TARGET_MESON_OPTS="--prefix=/usr \

commit a142f80dd9b50416825b7b564524b6ac0c598003
Author: AV <27rurk@gmail.com>
Date:   Sat Jan 20 02:20:02 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 4b24c5f4b8..60b9ded7a6 100755
--- a/scripts/build
+++ b/scripts/build
@@ -489,7 +489,7 @@ if [ "$(type -t pre_makeinstall_$TARGET)" = "function" ]; then
   pre_makeinstall_$TARGET
 fi
 if [ "$(type -t makeinstall_$TARGET)" = "function" ]; then
-  makeinstall_$TARGET
+  makeinstall_$TARGET -j1
 else
   case "$PKG_TOOLCHAIN:$TARGET" in
     # ninja based builds

commit e4172b1fedf4b0cc363330dc5a3968147a25bb3c
Author: AV <27rurk@gmail.com>
Date:   Fri Jan 19 13:10:04 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 7524501704..4b24c5f4b8 100755
--- a/scripts/build
+++ b/scripts/build
@@ -163,8 +163,8 @@ TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
 if [ "$DEBUG" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
-#  MESON_BUILD_TYPE="plain"
-  MESON_BUILD_TYPE="release"
+  MESON_BUILD_TYPE="plain"
+#  MESON_BUILD_TYPE="release"
 fi
 
 TARGET_MESON_OPTS="--prefix=/usr \

commit 2f66e4d91e4be6d12a9033718e3939d39bf6fb2b
Author: AV <27rurk@gmail.com>
Date:   Fri Jan 19 11:51:26 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 66e8b66211..7524501704 100755
--- a/scripts/build
+++ b/scripts/build
@@ -142,7 +142,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
 if [ "$DEBUG" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
 else
-  CMAKE_BUILD_TYPE="Release"
+  CMAKE_BUILD_TYPE=""
 fi
 
 CMAKE_GENERATOR_NINJA="-GNinja \
@@ -555,10 +555,6 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     if [ ! "$DEBUG" = yes ]; then
       $STRIP `find $INSTALL \
         -type f -name "*.so*" \
-        ! -name "ld-*.so" \
-        ! -name "libc-*.so" \
-        ! -name "libpthread-*.so" \
-        ! -name "libthread_db-*so" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
           $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :

commit 903d56f7a1b803e3104208e6e552978a46b577a4
Author: AV <27rurk@gmail.com>
Date:   Fri Jan 19 09:09:22 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 410be7cc24..66e8b66211 100755
--- a/scripts/build
+++ b/scripts/build
@@ -555,6 +555,10 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     if [ ! "$DEBUG" = yes ]; then
       $STRIP `find $INSTALL \
         -type f -name "*.so*" \
+        ! -name "ld-*.so" \
+        ! -name "libc-*.so" \
+        ! -name "libpthread-*.so" \
+        ! -name "libthread_db-*so" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
           $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :

commit 578d6c0929a3e716e18e97fa4bd5e0a1bebdfd73
Author: AV <27rurk@gmail.com>
Date:   Fri Jan 19 04:15:37 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 352bf742ba..410be7cc24 100755
--- a/scripts/build
+++ b/scripts/build
@@ -136,8 +136,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared \
-                       --disable-nls"
+                       --enable-shared"
 
 # cmake build defaults
 if [ "$DEBUG" = "yes" ]; then

commit 32f2dd2557fa682d9fc062361c449575a187bc72
Author: AV <27rurk@gmail.com>
Date:   Fri Jan 19 03:25:00 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 7524501704..352bf742ba 100755
--- a/scripts/build
+++ b/scripts/build
@@ -136,13 +136,14 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared"
+                       --enable-shared \
+                       --disable-nls"
 
 # cmake build defaults
 if [ "$DEBUG" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
 else
-  CMAKE_BUILD_TYPE=""
+  CMAKE_BUILD_TYPE="Release"
 fi
 
 CMAKE_GENERATOR_NINJA="-GNinja \

commit 0f6b39e677e190014d461424814283e5ef60468a
Author: AV <27rurk@gmail.com>
Date:   Thu Jan 18 02:55:12 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 4b24c5f4b8..7524501704 100755
--- a/scripts/build
+++ b/scripts/build
@@ -163,8 +163,8 @@ TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
 if [ "$DEBUG" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
-  MESON_BUILD_TYPE="plain"
-#  MESON_BUILD_TYPE="release"
+#  MESON_BUILD_TYPE="plain"
+  MESON_BUILD_TYPE="release"
 fi
 
 TARGET_MESON_OPTS="--prefix=/usr \

commit 4e0f2d95869582f5816c21b6801c15349b90ebe4
Author: AV <27rurk@gmail.com>
Date:   Thu Jan 18 02:33:25 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 546328a660..4b24c5f4b8 100755
--- a/scripts/build
+++ b/scripts/build
@@ -555,10 +555,6 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     if [ ! "$DEBUG" = yes ]; then
       $STRIP `find $INSTALL \
         -type f -name "*.so*" \
-        ! -name "ld-*.so" \
-        ! -name "libc-*.so" \
-        ! -name "libpthread-*.so" \
-        ! -name "libthread_db-*so" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
           $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :

commit 22bdc5beb8601461103428948ef860bde079f904
Author: AV <27rurk@gmail.com>
Date:   Fri Jan 12 09:21:04 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 84dab1e4d6..546328a660 100755
--- a/scripts/build
+++ b/scripts/build
@@ -142,7 +142,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
 if [ "$DEBUG" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
 else
-  CMAKE_BUILD_TYPE="Release"
+  CMAKE_BUILD_TYPE=""
 fi
 
 CMAKE_GENERATOR_NINJA="-GNinja \

commit 9c8635005191206acc038bcd0ce1867e8d0852c9
Author: AV <27rurk@gmail.com>
Date:   Fri Jan 12 09:14:39 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 546328a660..84dab1e4d6 100755
--- a/scripts/build
+++ b/scripts/build
@@ -142,7 +142,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
 if [ "$DEBUG" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
 else
-  CMAKE_BUILD_TYPE=""
+  CMAKE_BUILD_TYPE="Release"
 fi
 
 CMAKE_GENERATOR_NINJA="-GNinja \

commit 2e8c5a09888cdcb5c7a08a18eb396767bd6aebc4
Author: AV <27rurk@gmail.com>
Date:   Tue Jan 9 05:08:56 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 2c046d8674..546328a660 100755
--- a/scripts/build
+++ b/scripts/build
@@ -163,7 +163,8 @@ TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
 if [ "$DEBUG" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
-  MESON_BUILD_TYPE="release"
+  MESON_BUILD_TYPE="plain"
+#  MESON_BUILD_TYPE="release"
 fi
 
 TARGET_MESON_OPTS="--prefix=/usr \

commit 9de1222c17bf6ca90738440d2ee2dc3b87056ac0
Author: AV <27rurk@gmail.com>
Date:   Mon Jan 8 21:41:18 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 38e40c50d0..2c046d8674 100755
--- a/scripts/build
+++ b/scripts/build
@@ -150,7 +150,14 @@ CMAKE_GENERATOR_NINJA="-GNinja \
 
 TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                    -DCMAKE_INSTALL_PREFIX=/usr \
-                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
+                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
+                   -DBUILD_DOC=OFF \
+                   -DBUILD_DOCS=OFF \
+                   -DBUILD_EXAMPLE=OFF \
+                   -DBUILD_EXAMPLES=OFF \
+                   -DBUILD_TEST=OFF \
+                   -DBUILD_TESTS=OFF \
+                   -DBUILD_TESTING=OFF"
 
 # meson build defaults
 if [ "$DEBUG" = "yes" ]; then
@@ -183,7 +190,14 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
+                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN \
+                 -DBUILD_DOC=OFF \
+                 -DBUILD_DOCS=OFF \
+                 -DBUILD_EXAMPLE=OFF \
+                 -DBUILD_EXAMPLES=OFF \
+                 -DBUILD_TEST=OFF \
+                 -DBUILD_TESTS=OFF \
+                 -DBUILD_TESTING=OFF"
 
 HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
                  --bindir=$TOOLCHAIN/bin \

commit a008d08f7d8702a4f24a12acfe9e54a0d2a8dca5
Author: AV <27rurk@gmail.com>
Date:   Sun Jan 7 20:20:01 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index eb826684e7..38e40c50d0 100755
--- a/scripts/build
+++ b/scripts/build
@@ -156,7 +156,7 @@ TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
 if [ "$DEBUG" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
-  MESON_BUILD_TYPE="optimized"
+  MESON_BUILD_TYPE="release"
 fi
 
 TARGET_MESON_OPTS="--prefix=/usr \

commit dcd6bdfbc74bd568c805c3fa0f196a48c2acda91
Author: AV <27rurk@gmail.com>
Date:   Sun Jan 7 20:07:27 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index c9ac05379d..eb826684e7 100755
--- a/scripts/build
+++ b/scripts/build
@@ -156,7 +156,7 @@ TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
 if [ "$DEBUG" = "yes" ]; then
   MESON_BUILD_TYPE="debug"
 else
-  MESON_BUILD_TYPE="plain"
+  MESON_BUILD_TYPE="optimized"
 fi
 
 TARGET_MESON_OPTS="--prefix=/usr \

commit 9883df4eec345c5d000e536437c3228438fd855e
Author: AV <27rurk@gmail.com>
Date:   Fri Jan 5 23:12:35 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index edd904f58e..c9ac05379d 100755
--- a/scripts/build
+++ b/scripts/build
@@ -216,6 +216,7 @@ fi
 if [ "$PKG_IS_KERNEL_PKG" = "yes" ]; then
   if [ "$TARGET_KERNEL_ARCH" = "arm64" -a "$TARGET_ARCH" = "arm" ]; then
     TARGET_PREFIX=$TOOLCHAIN/lib/gcc-linaro-aarch64-linux-gnu/bin/aarch64-linux-gnu-
+    STRIP=${TARGET_PREFIX}strip
   fi
 fi
 
@@ -345,7 +346,7 @@ else
     # meson builds
     "meson:target")
       echo "Executing (target): meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-      meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)
+      CC="$HOST_CC" CXX="$HOST_CXX" meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)
       ;;
     "meson:host")
       echo "Executing (host): meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)" | tr -s " "

commit 59a6d52db2ed6387bb07306b82b1a33fe91bafcb
Author: AV <27rurk@gmail.com>
Date:   Mon Jan 1 01:26:28 2018 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 4e5323172e..edd904f58e 100755
--- a/scripts/build
+++ b/scripts/build
@@ -142,7 +142,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
 if [ "$DEBUG" = "yes" ]; then
   CMAKE_BUILD_TYPE="Debug"
 else
-  CMAKE_BUILD_TYPE="Release"
+  CMAKE_BUILD_TYPE=""
 fi
 
 CMAKE_GENERATOR_NINJA="-GNinja \

commit c6e7a384e9d6b41c1f29f7afa20eb5ba5b268922
Author: AV <27rurk@gmail.com>
Date:   Sun Dec 31 22:25:24 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 6676bc0cdb..4e5323172e 100755
--- a/scripts/build
+++ b/scripts/build
@@ -136,8 +136,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared \
-                       --enable-silent-rules"
+                       --enable-shared"
 
 # cmake build defaults
 if [ "$DEBUG" = "yes" ]; then
@@ -180,8 +179,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared \
-                     --enable-silent-rules"
+                     --enable-shared"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit 7c3fbb5be3c22c3fd1fbb026a85829bb3c52791c
Author: AV <27rurk@gmail.com>
Date:   Sun Dec 31 21:11:17 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 11a51bbd28..6676bc0cdb 100755
--- a/scripts/build
+++ b/scripts/build
@@ -80,6 +80,7 @@ rm -f $STAMP
 setup_toolchain $TARGET
 
 # unset functions
+unset -f configure_package
 unset -f pre_build_target
 unset -f pre_configure_target
 unset -f configure_target
@@ -209,6 +210,11 @@ BOOTSTRAP_MESON_OPTS="$HOST_MESON_OPTS"
 # include buildfile
 . $PKG_DIR/package.mk
 
+# finalise package configuration
+if [ "$(type -t configure_package)" = "function" ]; then
+  configure_package
+fi
+
 if [ "$PKG_IS_KERNEL_PKG" = "yes" ]; then
   if [ "$TARGET_KERNEL_ARCH" = "arm64" -a "$TARGET_ARCH" = "arm" ]; then
     TARGET_PREFIX=$TOOLCHAIN/lib/gcc-linaro-aarch64-linux-gnu/bin/aarch64-linux-gnu-

commit 797e0278fd52c5f233fd8de5218263e16ae08fe6
Author: AV <27rurk@gmail.com>
Date:   Sat Dec 23 20:50:40 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 72138fbbe5..11a51bbd28 100755
--- a/scripts/build
+++ b/scripts/build
@@ -426,19 +426,19 @@ else
     # ninja based builds
     "meson:target"|"cmake:target"|"ninja:target")
       echo "Executing (target): ninja $PKG_MAKE_OPTS_TARGET" | tr -s " "
-      ninja -j$CONCURRENCY_MAKE_LEVEL $PKG_MAKE_OPTS_TARGET
+      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_TARGET
       ;;
     "meson:host"|"cmake:host"|"ninja:host")
       echo "Executing (host): ninja $PKG_MAKE_OPTS_HOST" | tr -s " "
-      ninja -j$CONCURRENCY_MAKE_LEVEL $PKG_MAKE_OPTS_HOST
+      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_HOST
       ;;
     "meson:init"|"cmake:init"|"ninja:init")
       echo "Executing (init): ninja $PKG_MAKE_OPTS_INIT" | tr -s " "
-      ninja -j$CONCURRENCY_MAKE_LEVEL $PKG_MAKE_OPTS_INIT
+      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_INIT
       ;;
     "meson:bootstrap"|"cmake:bootstrap"|"ninja:bootstrap")
       echo "Executing (bootstrap): ninja $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
-      ninja -j$CONCURRENCY_MAKE_LEVEL $PKG_MAKE_OPTS_BOOTSTRAP
+      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_BOOTSTRAP
       ;;
 
     # make based builds

commit 1bcea6cf2383baa6d78cd7912f7f7366a7c51386
Author: AV <27rurk@gmail.com>
Date:   Sat Dec 23 15:16:46 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 35f01ae658..72138fbbe5 100755
--- a/scripts/build
+++ b/scripts/build
@@ -135,7 +135,8 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared"
+                       --enable-shared \
+                       --enable-silent-rules"
 
 # cmake build defaults
 if [ "$DEBUG" = "yes" ]; then
@@ -178,7 +179,8 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared"
+                     --enable-shared \
+                     --enable-silent-rules"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit a68df1cb166d8f9bca18154f68169fedf72b0629
Author: AV <27rurk@gmail.com>
Date:   Sat Dec 23 12:40:35 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 5f4a1d1631..35f01ae658 100755
--- a/scripts/build
+++ b/scripts/build
@@ -424,19 +424,19 @@ else
     # ninja based builds
     "meson:target"|"cmake:target"|"ninja:target")
       echo "Executing (target): ninja $PKG_MAKE_OPTS_TARGET" | tr -s " "
-      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_TARGET
+      ninja -j$CONCURRENCY_MAKE_LEVEL $PKG_MAKE_OPTS_TARGET
       ;;
     "meson:host"|"cmake:host"|"ninja:host")
       echo "Executing (host): ninja $PKG_MAKE_OPTS_HOST" | tr -s " "
-      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_HOST
+      ninja -j$CONCURRENCY_MAKE_LEVEL $PKG_MAKE_OPTS_HOST
       ;;
     "meson:init"|"cmake:init"|"ninja:init")
       echo "Executing (init): ninja $PKG_MAKE_OPTS_INIT" | tr -s " "
-      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_INIT
+      ninja -j$CONCURRENCY_MAKE_LEVEL $PKG_MAKE_OPTS_INIT
       ;;
     "meson:bootstrap"|"cmake:bootstrap"|"ninja:bootstrap")
       echo "Executing (bootstrap): ninja $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
-      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_BOOTSTRAP
+      ninja -j$CONCURRENCY_MAKE_LEVEL $PKG_MAKE_OPTS_BOOTSTRAP
       ;;
 
     # make based builds

commit 4f4458412d05217f1b72f2e80ab59b8ced0f3a48
Author: AV <27rurk@gmail.com>
Date:   Sat Dec 23 02:11:59 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 49df6a3d94..5f4a1d1631 100755
--- a/scripts/build
+++ b/scripts/build
@@ -424,19 +424,19 @@ else
     # ninja based builds
     "meson:target"|"cmake:target"|"ninja:target")
       echo "Executing (target): ninja $PKG_MAKE_OPTS_TARGET" | tr -s " "
-      ninja $PKG_MAKE_OPTS_TARGET
+      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_TARGET
       ;;
     "meson:host"|"cmake:host"|"ninja:host")
       echo "Executing (host): ninja $PKG_MAKE_OPTS_HOST" | tr -s " "
-      ninja $PKG_MAKE_OPTS_HOST
+      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_HOST
       ;;
     "meson:init"|"cmake:init"|"ninja:init")
       echo "Executing (init): ninja $PKG_MAKE_OPTS_INIT" | tr -s " "
-      ninja $PKG_MAKE_OPTS_INIT
+      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_INIT
       ;;
     "meson:bootstrap"|"cmake:bootstrap"|"ninja:bootstrap")
       echo "Executing (bootstrap): ninja $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
-      ninja $PKG_MAKE_OPTS_BOOTSTRAP
+      ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_BOOTSTRAP
       ;;
 
     # make based builds

commit 5f791b964a808bae1713acb397c4e27ec75d02d6
Author: AV <27rurk@gmail.com>
Date:   Fri Dec 22 03:30:38 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index f6b3a99ca3..49df6a3d94 100755
--- a/scripts/build
+++ b/scripts/build
@@ -135,8 +135,7 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared \
-                       --enable-silent-rules"
+                       --enable-shared"
 
 # cmake build defaults
 if [ "$DEBUG" = "yes" ]; then
@@ -179,8 +178,7 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared \
-                     --enable-silent-rules"
+                     --enable-shared"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit 388b83319165d37a057e005e0ce45e9c3f7cc225
Author: AV <27rurk@gmail.com>
Date:   Fri Dec 15 16:38:22 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 8774351237..f6b3a99ca3 100755
--- a/scripts/build
+++ b/scripts/build
@@ -535,6 +535,10 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     if [ ! "$DEBUG" = yes ]; then
       $STRIP `find $INSTALL \
         -type f -name "*.so*" \
+        ! -name "ld-*.so" \
+        ! -name "libc-*.so" \
+        ! -name "libpthread-*.so" \
+        ! -name "libthread_db-*so" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
           $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :

commit 667f44e597517af0a3c5eb51a679c875815256f0
Author: AV <27rurk@gmail.com>
Date:   Wed Dec 13 22:38:35 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index d147a1ed28..8774351237 100755
--- a/scripts/build
+++ b/scripts/build
@@ -533,13 +533,13 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
 
     if [ ! "$DEBUG" = yes ]; then
-      $STRIP --strip-all `find $INSTALL \
+      $STRIP `find $INSTALL \
         -type f -name "*.so*" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
-          $STRIP --strip-all `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
+          $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
         fi
-        $STRIP --strip-all `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
+        $STRIP `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
           -type f -executable 2>/dev/null` 2>/dev/null || :
     fi
   fi

commit 2501182141a8e7811ad8ab93c43f5d31c9436601
Author: AV <27rurk@gmail.com>
Date:   Tue Dec 12 18:37:20 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index b4cddf97de..d147a1ed28 100755
--- a/scripts/build
+++ b/scripts/build
@@ -535,10 +535,6 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     if [ ! "$DEBUG" = yes ]; then
       $STRIP --strip-all `find $INSTALL \
         -type f -name "*.so*" \
-        ! -name "ld-*.so" \
-        ! -name "libc-*.so" \
-        ! -name "libpthread-*.so" \
-        ! -name "libthread_db-*so" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
           $STRIP --strip-all `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :

commit 6a916d67defa3d33b0f6d086bfdffaacca5d527e
Author: AV <27rurk@gmail.com>
Date:   Tue Dec 12 17:01:56 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index f6b3a99ca3..b4cddf97de 100755
--- a/scripts/build
+++ b/scripts/build
@@ -533,7 +533,7 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
 
     if [ ! "$DEBUG" = yes ]; then
-      $STRIP `find $INSTALL \
+      $STRIP --strip-all `find $INSTALL \
         -type f -name "*.so*" \
         ! -name "ld-*.so" \
         ! -name "libc-*.so" \
@@ -541,9 +541,9 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
         ! -name "libthread_db-*so" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
-          $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
+          $STRIP --strip-all `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
         fi
-        $STRIP `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
+        $STRIP --strip-all `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
           -type f -executable 2>/dev/null` 2>/dev/null || :
     fi
   fi

commit f3357abf13db1d96bd0532b13a0c3af8a83c9aa5
Author: AV <27rurk@gmail.com>
Date:   Tue Dec 12 16:41:03 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 8774351237..f6b3a99ca3 100755
--- a/scripts/build
+++ b/scripts/build
@@ -535,6 +535,10 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     if [ ! "$DEBUG" = yes ]; then
       $STRIP `find $INSTALL \
         -type f -name "*.so*" \
+        ! -name "ld-*.so" \
+        ! -name "libc-*.so" \
+        ! -name "libpthread-*.so" \
+        ! -name "libthread_db-*so" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
           $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :

commit f9cf204fae4e468f236526697074b288c0d8a55c
Author: AV <27rurk@gmail.com>
Date:   Tue Dec 12 06:55:12 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index f6b3a99ca3..8774351237 100755
--- a/scripts/build
+++ b/scripts/build
@@ -535,10 +535,6 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     if [ ! "$DEBUG" = yes ]; then
       $STRIP `find $INSTALL \
         -type f -name "*.so*" \
-        ! -name "ld-*.so" \
-        ! -name "libc-*.so" \
-        ! -name "libpthread-*.so" \
-        ! -name "libthread_db-*so" \
         2>/dev/null` 2>/dev/null || :
         if [ "$TARGET" = "init" ]; then
           $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :

commit 63b2614cf8147a62936e652cb9ca45fc31606c7a
Author: AV <27rurk@gmail.com>
Date:   Tue Dec 12 06:40:12 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 55a37500db..f6b3a99ca3 100755
--- a/scripts/build
+++ b/scripts/build
@@ -521,7 +521,6 @@ if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
     rm -rf $INSTALL/{usr/,}share/locale
     rm -rf $INSTALL/{usr/,}share/man
     rm -rf $INSTALL/{usr/,}share/pkgconfig
-    rm -rf $INSTALL/{usr/,}share/zsh
     rm -rf $INSTALL/{usr/,}var
     find $INSTALL \( -name "*.orig" \
                   -o -name "*.rej" \

commit 192a91fd3194202011d3c40d26e75fba15e4ad6d
Author: AV <27rurk@gmail.com>
Date:   Sun Nov 26 17:14:23 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 433d119fca..55a37500db 100755
--- a/scripts/build
+++ b/scripts/build
@@ -135,7 +135,8 @@ TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
                        --disable-static \
-                       --enable-shared"
+                       --enable-shared \
+                       --enable-silent-rules"
 
 # cmake build defaults
 if [ "$DEBUG" = "yes" ]; then
@@ -178,7 +179,8 @@ HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
                      --disable-static \
-                     --enable-shared"
+                     --enable-shared \
+                     --enable-silent-rules"
 
 HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                  -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit fc699eafd665b85636219a3abc580510bab0691c
Author: AV <27rurk@gmail.com>
Date:   Sun Nov 26 06:08:56 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index a037394954..433d119fca 100755
--- a/scripts/build
+++ b/scripts/build
@@ -71,435 +71,494 @@ if [ -f $STAMP ] ; then
   fi
 fi
 
-if [ ! -f $STAMP ]; then
-  rm -f $STAMP
-
-  setup_toolchain $TARGET
-
-  # unset functions
-    unset -f pre_build_target
-    unset -f pre_configure_target
-    unset -f configure_target
-    unset -f post_configure_target
-    unset -f pre_make_target
-    unset -f make_target
-    unset -f post_make_target
-    unset -f pre_makeinstall_target
-    unset -f makeinstall_target
-    unset -f post_makeinstall_target
-
-    unset -f pre_build_host
-    unset -f pre_configure_host
-    unset -f configure_host
-    unset -f post_configure_host
-    unset -f pre_make_host
-    unset -f make_host
-    unset -f post_make_host
-    unset -f pre_makeinstall_host
-    unset -f makeinstall_host
-    unset -f post_makeinstall_host
-
-    unset -f pre_build_init
-    unset -f pre_configure_init
-    unset -f configure_init
-    unset -f post_configure_init
-    unset -f pre_make_init
-    unset -f make_init
-    unset -f post_make_init
-    unset -f pre_makeinstall_init
-    unset -f makeinstall_init
-    unset -f post_makeinstall_init
-
-    unset -f pre_build_bootstrap
-    unset -f pre_configure_bootstrap
-    unset -f configure_bootstrap
-    unset -f post_configure_bootstrap
-    unset -f pre_make_bootstrap
-    unset -f make_bootstrap
-    unset -f post_make_bootstrap
-    unset -f pre_makeinstall_bootstrap
-    unset -f makeinstall_bootstrap
-    unset -f post_makeinstall_bootstrap
-
-  # configure TARGET build defaults
-    TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
-                           --build=$HOST_NAME \
-                           --prefix=/usr \
-                           --bindir=/usr/bin \
-                           --sbindir=/usr/sbin \
-                           --sysconfdir=/etc \
-                           --libdir=/usr/lib \
-                           --libexecdir=/usr/lib \
-                           --localstatedir=/var \
-                           --disable-static \
-                           --enable-shared \
-                           --enable-silent-rules"
-
-    if [ "$DEBUG" = "yes" ]; then
-      CMAKE_BUILD_TYPE="Debug"
-    else
-      CMAKE_BUILD_TYPE=""
-    fi
-    if [ "$PKG_USE_NINJA" = "no" ]; then
-      CMAKE_GENERATOR=""
-    else
-      CMAKE_GENERATOR="-GNinja \
-                       -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
-    fi
-
-    TARGET_CMAKE_OPTS="$CMAKE_GENERATOR \
-                       -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                       -DCMAKE_INSTALL_PREFIX=/usr \
-                       -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
-
-    if [ "$DEBUG" = "yes" ]; then
-      MESON_BUILD_TYPE="debug"
-    else
-      MESON_BUILD_TYPE="plain"
-    fi
-
-    TARGET_MESON_OPTS="--prefix=/usr \
+if [ -f $STAMP ]; then
+  # already build, do nothing
+  exit 0
+fi
+rm -f $STAMP
+
+setup_toolchain $TARGET
+
+# unset functions
+unset -f pre_build_target
+unset -f pre_configure_target
+unset -f configure_target
+unset -f post_configure_target
+unset -f pre_make_target
+unset -f make_target
+unset -f post_make_target
+unset -f pre_makeinstall_target
+unset -f makeinstall_target
+unset -f post_makeinstall_target
+
+unset -f pre_build_host
+unset -f pre_configure_host
+unset -f configure_host
+unset -f post_configure_host
+unset -f pre_make_host
+unset -f make_host
+unset -f post_make_host
+unset -f pre_makeinstall_host
+unset -f makeinstall_host
+unset -f post_makeinstall_host
+
+unset -f pre_build_init
+unset -f pre_configure_init
+unset -f configure_init
+unset -f post_configure_init
+unset -f pre_make_init
+unset -f make_init
+unset -f post_make_init
+unset -f pre_makeinstall_init
+unset -f makeinstall_init
+unset -f post_makeinstall_init
+
+unset -f pre_build_bootstrap
+unset -f pre_configure_bootstrap
+unset -f configure_bootstrap
+unset -f post_configure_bootstrap
+unset -f pre_make_bootstrap
+unset -f make_bootstrap
+unset -f post_make_bootstrap
+unset -f pre_makeinstall_bootstrap
+unset -f makeinstall_bootstrap
+unset -f post_makeinstall_bootstrap
+
+# configure TARGET build defaults
+TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
+                       --build=$HOST_NAME \
+                       --prefix=/usr \
                        --bindir=/usr/bin \
                        --sbindir=/usr/sbin \
                        --sysconfdir=/etc \
                        --libdir=/usr/lib \
                        --libexecdir=/usr/lib \
                        --localstatedir=/var \
-                       --buildtype=$MESON_BUILD_TYPE \
-                       --cross-file=$MESON_CONF"
-
-  # configure HOST build defaults
-    HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
-                         --build=$HOST_NAME \
-                         --prefix=$TOOLCHAIN \
-                         --bindir=$TOOLCHAIN/bin \
-                         --sbindir=$TOOLCHAIN/sbin \
-                         --sysconfdir=$TOOLCHAIN/etc \
-                         --libexecdir=$TOOLCHAIN/lib \
-                         --localstatedir=$TOOLCHAIN/var \
-                         --disable-static \
-                         --enable-shared \
-                         --enable-silent-rules"
-
-    HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
-                     -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                     -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
-
-    HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
+                       --disable-static \
+                       --enable-shared"
+
+# cmake build defaults
+if [ "$DEBUG" = "yes" ]; then
+  CMAKE_BUILD_TYPE="Debug"
+else
+  CMAKE_BUILD_TYPE="Release"
+fi
+
+CMAKE_GENERATOR_NINJA="-GNinja \
+                       -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
+
+TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
+                   -DCMAKE_INSTALL_PREFIX=/usr \
+                   -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
+
+# meson build defaults
+if [ "$DEBUG" = "yes" ]; then
+  MESON_BUILD_TYPE="debug"
+else
+  MESON_BUILD_TYPE="plain"
+fi
+
+TARGET_MESON_OPTS="--prefix=/usr \
+                   --bindir=/usr/bin \
+                   --sbindir=/usr/sbin \
+                   --sysconfdir=/etc \
+                   --libdir=/usr/lib \
+                   --libexecdir=/usr/lib \
+                   --localstatedir=/var \
+                   --buildtype=$MESON_BUILD_TYPE \
+                   --cross-file=$MESON_CONF"
+
+# configure HOST build defaults
+HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
+                     --build=$HOST_NAME \
+                     --prefix=$TOOLCHAIN \
                      --bindir=$TOOLCHAIN/bin \
                      --sbindir=$TOOLCHAIN/sbin \
                      --sysconfdir=$TOOLCHAIN/etc \
-                     --libdir=$TOOLCHAIN/lib \
                      --libexecdir=$TOOLCHAIN/lib \
                      --localstatedir=$TOOLCHAIN/var \
-                     --buildtype=plain \
-                     --cross-file=$MESON_CONF"
-
-  # configure INIT build defaults
-    INIT_CONFIGURE_OPTS="$TARGET_CONFIGURE_OPTS"
-    INIT_CMAKE_OPTS="$TARGET_CMAKE_OPTS"
-    INIT_MESON_OPTS="$TARGET_MESON_OPTS"
-
-  # configure BOOTSTRAP build defaults
-    BOOTSTRAP_CONFIGURE_OPTS="$HOST_CONFIGURE_OPTS"
-    BOOTSTRAP_CMAKE_OPTS="$HOST_CMAKE_OPTS"
-    BOOTSTRAP_MESON_OPTS="$HOST_MESON_OPTS"
-
-  # include buildfile
-    . $PKG_DIR/package.mk
-
-    if [ "$PKG_IS_KERNEL_PKG" = "yes" ]; then
-      if [ "$TARGET_KERNEL_ARCH" = "arm64" -a "$TARGET_ARCH" = "arm" ]; then
-        TARGET_PREFIX=$TOOLCHAIN/lib/gcc-linaro-aarch64-linux-gnu/bin/aarch64-linux-gnu-
-      fi
-    fi
+                     --disable-static \
+                     --enable-shared"
+
+HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
+                 -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
+                 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
+
+HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
+                 --bindir=$TOOLCHAIN/bin \
+                 --sbindir=$TOOLCHAIN/sbin \
+                 --sysconfdir=$TOOLCHAIN/etc \
+                 --libdir=$TOOLCHAIN/lib \
+                 --libexecdir=$TOOLCHAIN/lib \
+                 --localstatedir=$TOOLCHAIN/var \
+                 --buildtype=plain \
+                 --cross-file=$MESON_CONF"
+
+# configure INIT build defaults
+INIT_CONFIGURE_OPTS="$TARGET_CONFIGURE_OPTS"
+INIT_CMAKE_OPTS="$TARGET_CMAKE_OPTS"
+INIT_MESON_OPTS="$TARGET_MESON_OPTS"
+
+# configure BOOTSTRAP build defaults
+BOOTSTRAP_CONFIGURE_OPTS="$HOST_CONFIGURE_OPTS"
+BOOTSTRAP_CMAKE_OPTS="$HOST_CMAKE_OPTS"
+BOOTSTRAP_MESON_OPTS="$HOST_MESON_OPTS"
+
+# include buildfile
+. $PKG_DIR/package.mk
+
+if [ "$PKG_IS_KERNEL_PKG" = "yes" ]; then
+  if [ "$TARGET_KERNEL_ARCH" = "arm64" -a "$TARGET_ARCH" = "arm" ]; then
+    TARGET_PREFIX=$TOOLCHAIN/lib/gcc-linaro-aarch64-linux-gnu/bin/aarch64-linux-gnu-
+  fi
+fi
 
-    if [ "$TARGET" = "target" ]; then
-      for p in $PKG_DEPENDS_TARGET; do
-        $SCRIPTS/build $p
-      done
-    elif [ "$TARGET" = "host" ]; then
-      for p in $PKG_DEPENDS_HOST; do
-        $SCRIPTS/build $p
-      done
-    elif [ "$TARGET" = "init" ]; then
-      for p in $PKG_DEPENDS_INIT; do
-        $SCRIPTS/build $p
-      done
-    elif [ "$TARGET" = "bootstrap" ]; then
-      for p in $PKG_DEPENDS_BOOTSTRAP; do
-        $SCRIPTS/build $p
-      done
-    fi
+# build dependencies, only when PKG_DEPENDS_? is filled
+unset _pkg_depends
+case "$TARGET" in
+  "target") _pkg_depends="$PKG_DEPENDS_TARGET";;
+  "host") _pkg_depends="$PKG_DEPENDS_HOST";;
+  "init") _pkg_depends="$PKG_DEPENDS_INIT";;
+  "bootstrap") _pkg_depends="$PKG_DEPENDS_BOOTSTRAP";;
+esac
+for p in $_pkg_depends; do
+  $SCRIPTS/build $p
+done
+
+printf "%${BUILD_INDENT}c $(print_color CLR_BUILD "BUILD")    $PACKAGE_NAME $(print_color CLR_TARGET "($TARGET)")\n" ' '>&$SILENT_OUT
+export BUILD_INDENT=$((${BUILD_INDENT:-1}+$BUILD_INDENT_SIZE))
+
+# virtual packages dont must be build, they only contains dependencies, so dont go further here
+if [ "$PKG_SECTION" = "virtual" ]; then
+  PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
+  for i in PKG_NAME PKG_DEEPMD5; do
+    echo "STAMP_$i=\"${!i}\"" >> $STAMP
+  done
 
-    printf "%${BUILD_INDENT}c $(print_color CLR_BUILD "BUILD")    $PACKAGE_NAME $(print_color CLR_TARGET "($TARGET)")\n" ' '>&$SILENT_OUT
-    export BUILD_INDENT=$((${BUILD_INDENT:-1}+$BUILD_INDENT_SIZE))
+  exit 0
+fi
 
-    if [ "$PKG_AUTORECONF" = yes ]; then
-      $SCRIPTS/autoreconf $PACKAGE_NAME
-    fi
+# configure other variables
+if [ "$TARGET" = "target" ]; then
+  INSTALL=$PKG_BUILD/.install_pkg
+elif [ "$TARGET" = "init" ]; then
+  INSTALL=$PKG_BUILD/.install_init
+fi
 
-    # virtual packages dont must be build, they only contains dependencies, so dont go further here
-    if [ ! "$PKG_SECTION" = "virtual" ]; then
-
-      # configure other variables
-      INSTALL_DEV=$PKG_BUILD/.install_dev
-      if [ "$TARGET" = "target" ]; then
-        INSTALL=$PKG_BUILD/.install_pkg
-      elif [ "$TARGET" = "init" ]; then
-        INSTALL=$PKG_BUILD/.install_init
-      fi
-
-       # clean up
-       if [ ! -z "$INSTALL" ] ; then
-         if [ -d "$INSTALL" ] ; then
-           rm -rf $INSTALL
-         fi
-       fi
-
-      # setup configure script
-      if [ -z "$PKG_CONFIGURE_SCRIPT" ]; then
-        PKG_CONFIGURE_SCRIPT="$PKG_BUILD/configure"
-      else
-        PKG_CONFIGURE_SCRIPT="$PKG_BUILD/$PKG_CONFIGURE_SCRIPT"
-      fi
-      if [ -z "$PKG_CMAKE_SCRIPT" ]; then
-        PKG_CMAKE_SCRIPT="$PKG_BUILD/CMakeLists.txt"
-      fi
-
-      if [ -z "$PKG_MESON_SCRIPT" ]; then
-        PKG_MESON_SCRIPT="$PKG_BUILD/meson.build"
-      fi
-
-      # include build template and build
-      if [ "$(type -t pre_build_$TARGET)" = "function" ]; then
-        pre_build_$TARGET
-      fi
-
-      # ensure $PKG_BUILD is there. (installer? PKG_URL="")
-      if [ ! -d $PKG_BUILD ] ; then
-        mkdir -p $PKG_BUILD
-      fi
-
-      cd $PKG_BUILD
-
-      if [ "$TARGET" = "target" ]; then
-        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRIPT" ]; then
-          mkdir -p .$TARGET_NAME
-          cd .$TARGET_NAME
-        fi
-      elif [ "$TARGET" = "host" ]; then
-        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRIPT" ]; then
-          mkdir -p .$HOST_NAME
-          cd .$HOST_NAME
-        fi
-      elif [ "$TARGET" = "init" ]; then
-        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRIPT" ]; then
-          mkdir -p .$TARGET_NAME-$TARGET
-          cd .$TARGET_NAME-$TARGET
-        fi
-      elif [ "$TARGET" = "bootstrap" ]; then
-        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRIPT" ]; then
-          mkdir -p .$HOST_NAME-$TARGET
-          cd .$HOST_NAME-$TARGET
-        fi
-      fi
-
-      # configure
-      if [ "$(type -t pre_configure_$TARGET)" = "function" ]; then
-        pre_configure_$TARGET
-      fi
-      if [ "$(type -t configure_$TARGET)" = "function" ]; then
-        configure_$TARGET
-      elif [ -f "$PKG_MESON_SCRIPT" -a ! "$PKG_USE_MESON" = "no" ]; then
-        if [ "$TARGET" = "target" ]; then
-          echo "Executing (target): meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-          meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)
-        elif [ "$TARGET" = "host" ]; then
-          echo "Executing (host): meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-          meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)
-        elif [ "$TARGET" = "init" ]; then
-          echo "Executing (init): meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-          meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)
-        elif [ "$TARGET" = "bootstrap" ]; then
-          echo "Executing (bootstrap): meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
-          meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)
-        fi
-      elif [ -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" ]; then
-        if [ "$TARGET" = "target" ]; then
-          echo "Executing (target): cmake $TARGET_CMAKE_OPTS $PKG_CMAKE_OPTS_TARGET $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
-          cmake $TARGET_CMAKE_OPTS $PKG_CMAKE_OPTS_TARGET $(dirname $PKG_CMAKE_SCRIPT)
-        elif [ "$TARGET" = "host" ]; then
-          echo "Executing (host): cmake $HOST_CMAKE_OPTS $PKG_CMAKE_OPTS_HOST $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
-          cmake $HOST_CMAKE_OPTS $PKG_CMAKE_OPTS_HOST $(dirname $PKG_CMAKE_SCRIPT)
-        elif [ "$TARGET" = "init" ]; then
-          echo "Executing (init): cmake $INIT_CMAKE_OPTS $PKG_CMAKE_OPTS_INIT $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
-          cmake $INIT_CMAKE_OPTS $PKG_CMAKE_OPTS_INIT $(dirname $PKG_CMAKE_SCRIPT)
-        elif [ "$TARGET" = "bootstrap" ]; then
-          echo "Executing (bootstrap): cmake $BOOTSTRAP_CMAKE_OPTS $PKG_CMAKE_OPTS_BOOTSTRAP $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
-          cmake $BOOTSTRAP_CMAKE_OPTS $PKG_CMAKE_OPTS_BOOTSTRAP $(dirname $PKG_CMAKE_SCRIPT)
-        fi
-      elif [ -f "$PKG_CONFIGURE_SCRIPT" ]; then
-        if [ "$TARGET" = "target" ]; then
-          echo "Executing (target): $PKG_CONFIGURE_SCRIPT $TARGET_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_TARGET" | tr -s " "
-          $PKG_CONFIGURE_SCRIPT $TARGET_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_TARGET
-        elif [ "$TARGET" = "host" ]; then
-          echo "Executing (host): $PKG_CONFIGURE_SCRIPT $HOST_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_HOST" | tr -s " "
-          $PKG_CONFIGURE_SCRIPT $HOST_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_HOST
-        elif [ "$TARGET" = "init" ]; then
-          echo "Executing (init): $PKG_CONFIGURE_SCRIPT $INIT_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_INIT" | tr -s " "
-          $PKG_CONFIGURE_SCRIPT $INIT_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_INIT
-        elif [ "$TARGET" = "bootstrap" ]; then
-          echo "Executing (bootstrap): $PKG_CONFIGURE_SCRIPT $BOOTSTRAP_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_BOOTSTRAP" | tr -s " "
-          $PKG_CONFIGURE_SCRIPT $BOOTSTRAP_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_BOOTSTRAP
-        fi
-      fi
-      if [ "$(type -t post_configure_$TARGET)" = "function" ]; then
-        post_configure_$TARGET
-      fi
-
-      # make
-      if [ "$(type -t pre_make_$TARGET)" = "function" ]; then
-        pre_make_$TARGET
-      fi
-      if [ "$(type -t make_$TARGET)" = "function" ]; then
-        make_$TARGET
-      elif [ \( -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" \) -o \( -f "$PKG_MESON_SCRIPT" -a ! "$PKG_USE_MESON" = "no" \) ]; then
-        if [ "$TARGET" = "target" ]; then
-          echo "Executing (target): ninja $PKG_MAKE_OPTS_TARGET" | tr -s " "
-          ninja $PKG_MAKE_OPTS_TARGET
-        elif [ "$TARGET" = "host" ]; then
-          echo "Executing (host): ninja $PKG_MAKE_OPTS_HOST" | tr -s " "
-          ninja $PKG_MAKE_OPTS_HOST
-        elif [ "$TARGET" = "init" ]; then
-          echo "Executing (init): ninja $PKG_MAKE_OPTS_INIT" | tr -s " "
-          ninja $PKG_MAKE_OPTS_INIT
-        elif [ "$TARGET" = "bootstrap" ]; then
-          echo "Executing (bootstrap): ninja $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
-          ninja $PKG_MAKE_OPTS_BOOTSTRAP
-        fi
-      else
-        if [ "$TARGET" = "target" ]; then
-          echo "Executing (target): make $PKG_MAKE_OPTS_TARGET" | tr -s " "
-          make $PKG_MAKE_OPTS_TARGET
-        elif [ "$TARGET" = "host" ]; then
-          echo "Executing (host): make $PKG_MAKE_OPTS_HOST" | tr -s " "
-          make $PKG_MAKE_OPTS_HOST
-        elif [ "$TARGET" = "init" ]; then
-          echo "Executing (init): make $PKG_MAKE_OPTS_INIT" | tr -s " "
-          make $PKG_MAKE_OPTS_INIT
-        elif [ "$TARGET" = "bootstrap" ]; then
-          echo "Executing (bootstrap): make $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
-          make $PKG_MAKE_OPTS_BOOTSTRAP
-        fi
-      fi
-      if [ "$(type -t post_make_$TARGET)" = "function" ]; then
-        post_make_$TARGET
-      fi
-
-      # make install
-      if [ "$(type -t pre_makeinstall_$TARGET)" = "function" ]; then
-        pre_makeinstall_$TARGET
-      fi
-      if [ "$(type -t makeinstall_$TARGET)" = "function" ]; then
-        makeinstall_$TARGET
-      elif [ \( -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" \) -o \( -f "$PKG_MESON_SCRIPT"  -a ! "$PKG_USE_MESON" = "no" \) ]; then
-        if [ "$TARGET" = "target" ]; then
-          DESTDIR=$SYSROOT_PREFIX ninja install $PKG_MAKEINSTALL_OPTS_TARGET
-          DESTDIR=$INSTALL ninja install $PKG_MAKEINSTALL_OPTS_TARGET
-        elif [ "$TARGET" = "host" ]; then
-          ninja install $PKG_MAKEINSTALL_OPTS_HOST
-        elif [ "$TARGET" = "init" ]; then
-          DESTDIR=$INSTALL ninja install $PKG_MAKEINSTALL_OPTS_INIT
-        elif [ "$TARGET" = "bootstrap" ]; then
-          ninja install $PKG_MAKEINSTALL_OPTS_BOOTSTRAP
-        fi
-      else
-        if [ "$TARGET" = "target" ]; then
-          $MAKEINSTALL $PKG_MAKEINSTALL_OPTS_TARGET
-          make install DESTDIR=$INSTALL_DEV $PKG_MAKEINSTALL_OPTS_TARGET
-            for i in `find $INSTALL_DEV/lib/ -name "*.la" 2>/dev/null`; do \
-              $SED "s:\(['= ]\)/lib:\\1$SYSROOT_PREFIX/lib:g" $i; \
-            done
-            for i in `find $INSTALL_DEV/usr/lib/ -name "*.la" 2>/dev/null`; do \
-              $SED "s:\(['= ]\)/usr:\\1$SYSROOT_PREFIX/usr:g" $i; \
-            done
-            mkdir -p $SYSROOT_PREFIX
-              cp -PRvf $INSTALL_DEV/* $SYSROOT_PREFIX
-            mkdir -p $INSTALL
-              cp -PRvf $INSTALL_DEV/* $INSTALL
-        elif [ "$TARGET" = "host" ]; then
-          make install $PKG_MAKEINSTALL_OPTS_HOST
-        elif [ "$TARGET" = "init" ]; then
-          make install DESTDIR=$INSTALL $PKG_MAKEINSTALL_OPTS_INIT
-        elif [ "$TARGET" = "bootstrap" ]; then
-          make install $PKG_MAKEINSTALL_OPTS_BOOTSTRAP
-        fi
-      fi
-      if [ "$(type -t post_makeinstall_$TARGET)" = "function" ]; then
-        post_makeinstall_$TARGET
-      fi
-
-      # Bump addon version to prevent online updates
-      if [ "$TARGET" = "target" -a "$PKG_IS_ADDON" = "yes" ]; then
-        mhaddonxml="$(find $INSTALL -type f -name addon.xml 2>/dev/null | head -1 || true)"
-        if [[ -n "${mhaddonxml}" ]] && [[ -f "${mhaddonxml}" ]]; then
-          mhaddonver="$(xmlstarlet sel -t -m "/addon" -m "@version" -v . -n ${mhaddonxml})"
-          [ -n "${mhaddonver}" ] && xmlstarlet edit --inplace --update "/addon/@version" --value "999.${mhaddonver}" ${mhaddonxml}
-        fi
-      fi
-
-      if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
-        if [ -d $INSTALL ] ; then
-          rm -rf $INSTALL/{usr/,}include
-          rm -rf $INSTALL/{usr/,}lib/cmake
-          rm -rf $INSTALL/{usr/,}lib/pkgconfig
-          rm -rf $INSTALL/{usr/,}man
-          rm -rf $INSTALL/{usr/,}share/aclocal
-          rm -rf $INSTALL/{usr/,}share/bash-completion
-          rm -rf $INSTALL/{usr/,}share/doc
-          rm -rf $INSTALL/{usr/,}share/gtk-doc
-          rm -rf $INSTALL/{usr/,}share/info
-          rm -rf $INSTALL/{usr/,}share/locale
-          rm -rf $INSTALL/{usr/,}share/man
-          rm -rf $INSTALL/{usr/,}share/pkgconfig
-          rm -rf $INSTALL/{usr/,}var
-          find $INSTALL \( -name "*.orig" \
-                        -o -name "*.rej" \
-                        -o -name "*.a" \
-                        -o -name "*.la" \
-                        -o -name "*.o" \
-                        -o -name "*.in" \
-                        -o -name ".git*" \) \
-            -exec rm -f {} \; 2>/dev/null || :
-          find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
-
-          if [ ! "$DEBUG" = yes ]; then
-            $STRIP `find $INSTALL \
-              -type f -name "*.so*" \
-              2>/dev/null` 2>/dev/null || :
-            if [ "$TARGET" = "init" ]; then
-              $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
-            fi
-            $STRIP `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
-              -type f -executable 2>/dev/null` 2>/dev/null || :
-          fi
-        fi
-      fi
+# clean up
+if [ ! -z "$INSTALL" ] ; then
+  if [ -d "$INSTALL" ] ; then
+    rm -rf $INSTALL
+  fi
+fi
+
+# setup configure script
+if [ -z "$PKG_CONFIGURE_SCRIPT" ]; then
+  PKG_CONFIGURE_SCRIPT="$PKG_BUILD/configure"
+else
+  PKG_CONFIGURE_SCRIPT="$PKG_BUILD/$PKG_CONFIGURE_SCRIPT"
+fi
+
+if [ -z "$PKG_CMAKE_SCRIPT" ]; then
+  PKG_CMAKE_SCRIPT="$PKG_BUILD/CMakeLists.txt"
+fi
+
+if [ -z "$PKG_MESON_SCRIPT" ]; then
+  PKG_MESON_SCRIPT="$PKG_BUILD/meson.build"
+fi
+
+# auto detect toolchain
+_auto_toolchain=""
+if [ -z "$PKG_TOOLCHAIN" -o "$PKG_TOOLCHAIN" = "auto" ]; then
+  if [ -f "$PKG_MESON_SCRIPT" ]; then
+    PKG_TOOLCHAIN="meson"
+  elif [ -f "$PKG_CMAKE_SCRIPT" ]; then
+    PKG_TOOLCHAIN="cmake"
+  elif [ -f "$PKG_CONFIGURE_SCRIPT" ]; then
+    PKG_TOOLCHAIN="configure"
+  elif [ -f $PKG_BUILD/Makefile ]; then
+    PKG_TOOLCHAIN="make"
+  else
+    echo "Not possible to detect toolchain automatically. Add PKG_TOOLCHAIN= to package.mk"
+    exit 1
+  fi
+  _auto_toolchain=" (auto-detect)"
+fi
+if ! listcontains "meson cmake cmake-make configure ninja make autotools manual" "$PKG_TOOLCHAIN"; then
+  printf "$(print_color bold-red "ERROR:") unknown toolchain $PKG_TOOLCHAIN"
+  exit 1
+fi
+printf "%${BUILD_INDENT}c $(print_color CLR_TOOLCHAIN "TOOLCHAIN")    $PKG_TOOLCHAIN${_auto_toolchain}\n" ' '>&$SILENT_OUT
+
+# make autoreconf
+if [ "$PKG_TOOLCHAIN" = "autotools" ]; then
+  $SCRIPTS/autoreconf $PACKAGE_NAME
+fi
+
+# include build template and build
+if [ "$(type -t pre_build_$TARGET)" = "function" ]; then
+  pre_build_$TARGET
+fi
+
+# ensure $PKG_BUILD is there. (installer? PKG_URL="")
+if [ ! -d $PKG_BUILD ] ; then
+  mkdir -p $PKG_BUILD
+fi
+
+cd $PKG_BUILD
+
+if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRIPT" ]; then
+  case "$TARGET" in
+    "target")
+      mkdir -p .$TARGET_NAME
+      cd .$TARGET_NAME
+      ;;
+    "host")
+      mkdir -p .$HOST_NAME
+      cd .$HOST_NAME
+      ;;
+    "init")
+      mkdir -p .$TARGET_NAME-$TARGET
+      cd .$TARGET_NAME-$TARGET
+      ;;
+    "bootstrap")
+      mkdir -p .$HOST_NAME-$TARGET
+      cd .$HOST_NAME-$TARGET
+      ;;
+  esac
+fi
 
-      cd $ROOT
-    fi  # ! "$PKG_SECTION" = "virtual"
+# configure
+if [ "$(type -t pre_configure_$TARGET)" = "function" ]; then
+  pre_configure_$TARGET
+fi
+if [ "$(type -t configure_$TARGET)" = "function" ]; then
+  configure_$TARGET
+else
+  case "$PKG_TOOLCHAIN:$TARGET" in
+    # meson builds
+    "meson:target")
+      echo "Executing (target): meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)
+      ;;
+    "meson:host")
+      echo "Executing (host): meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)
+      ;;
+    "meson:init")
+      echo "Executing (init): meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)
+      ;;
+    "meson:bootstrap")
+      echo "Executing (bootstrap): meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+      meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)
+      ;;
+
+    # cmake builds with ninja
+    "cmake:target")
+      echo "Executing (target): cmake $CMAKE_GENERATOR_NINJA $TARGET_CMAKE_OPTS $PKG_CMAKE_OPTS_TARGET $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
+      cmake $CMAKE_GENERATOR_NINJA $TARGET_CMAKE_OPTS $PKG_CMAKE_OPTS_TARGET $(dirname $PKG_CMAKE_SCRIPT)
+      ;;
+    "cmake:host")
+      echo "Executing (host): cmake $CMAKE_GENERATOR_NINJA $HOST_CMAKE_OPTS $PKG_CMAKE_OPTS_HOST $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
+      cmake $CMAKE_GENERATOR_NINJA $HOST_CMAKE_OPTS $PKG_CMAKE_OPTS_HOST $(dirname $PKG_CMAKE_SCRIPT)
+      ;;
+    "cmake:init")
+      echo "Executing (init): cmake $CMAKE_GENERATOR_NINJA $INIT_CMAKE_OPTS $PKG_CMAKE_OPTS_INIT $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
+      cmake $CMAKE_GENERATOR_NINJA $INIT_CMAKE_OPTS $PKG_CMAKE_OPTS_INIT $(dirname $PKG_CMAKE_SCRIPT)
+      ;;
+    "cmake:bootstrap")
+      echo "Executing (bootstrap): cmake $CMAKE_GENERATOR_NINJA $BOOTSTRAP_CMAKE_OPTS $PKG_CMAKE_OPTS_BOOTSTRAP $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
+      cmake $CMAKE_GENERATOR_NINJA $BOOTSTRAP_CMAKE_OPTS $PKG_CMAKE_OPTS_BOOTSTRAP $(dirname $PKG_CMAKE_SCRIPT)
+      ;;
+
+    # cmake builds with make
+    "cmake-make:target")
+      echo "Executing (target): cmake $TARGET_CMAKE_OPTS $PKG_CMAKE_OPTS_TARGET $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
+      cmake $TARGET_CMAKE_OPTS $PKG_CMAKE_OPTS_TARGET $(dirname $PKG_CMAKE_SCRIPT)
+      ;;
+    "cmake-make:host")
+      echo "Executing (host): cmake $HOST_CMAKE_OPTS $PKG_CMAKE_OPTS_HOST $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
+      cmake $HOST_CMAKE_OPTS $PKG_CMAKE_OPTS_HOST $(dirname $PKG_CMAKE_SCRIPT)
+      ;;
+    "cmake-make:init")
+      echo "Executing (init): cmake $INIT_CMAKE_OPTS $PKG_CMAKE_OPTS_INIT $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
+      cmake $INIT_CMAKE_OPTS $PKG_CMAKE_OPTS_INIT $(dirname $PKG_CMAKE_SCRIPT)
+      ;;
+    "cmake-make:bootstrap")
+      echo "Executing (bootstrap): cmake $BOOTSTRAP_CMAKE_OPTS $PKG_CMAKE_OPTS_BOOTSTRAP $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
+      cmake $BOOTSTRAP_CMAKE_OPTS $PKG_CMAKE_OPTS_BOOTSTRAP $(dirname $PKG_CMAKE_SCRIPT)
+      ;;
+
+    # configure builds
+    "configure:target"|"autotools:target")
+      echo "Executing (target): $PKG_CONFIGURE_SCRIPT $TARGET_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_TARGET" | tr -s " "
+      $PKG_CONFIGURE_SCRIPT $TARGET_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_TARGET
+      ;;
+    "configure:host"|"autotools:host")
+      echo "Executing (host): $PKG_CONFIGURE_SCRIPT $HOST_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_HOST" | tr -s " "
+      $PKG_CONFIGURE_SCRIPT $HOST_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_HOST
+      ;;
+    "configure:init"|"autotools:init")
+      echo "Executing (init): $PKG_CONFIGURE_SCRIPT $INIT_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_INIT" | tr -s " "
+      $PKG_CONFIGURE_SCRIPT $INIT_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_INIT
+      ;;
+    "configure:bootstrap"|"autotools:bootstrap")
+      echo "Executing (bootstrap): $PKG_CONFIGURE_SCRIPT $BOOTSTRAP_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_BOOTSTRAP" | tr -s " "
+      $PKG_CONFIGURE_SCRIPT $BOOTSTRAP_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_BOOTSTRAP
+      ;;
+  esac
+fi
+if [ "$(type -t post_configure_$TARGET)" = "function" ]; then
+  post_configure_$TARGET
+fi
 
-    for i in `find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null`; do \
-      $SED "s:\(['= ]\)/usr:\\1$SYSROOT_PREFIX/usr:g" $i; \
-    done
+# make
+if [ "$(type -t pre_make_$TARGET)" = "function" ]; then
+  pre_make_$TARGET
+fi
+if [ "$(type -t make_$TARGET)" = "function" ]; then
+  make_$TARGET
+else
+  case "$PKG_TOOLCHAIN:$TARGET" in
+    # ninja based builds
+    "meson:target"|"cmake:target"|"ninja:target")
+      echo "Executing (target): ninja $PKG_MAKE_OPTS_TARGET" | tr -s " "
+      ninja $PKG_MAKE_OPTS_TARGET
+      ;;
+    "meson:host"|"cmake:host"|"ninja:host")
+      echo "Executing (host): ninja $PKG_MAKE_OPTS_HOST" | tr -s " "
+      ninja $PKG_MAKE_OPTS_HOST
+      ;;
+    "meson:init"|"cmake:init"|"ninja:init")
+      echo "Executing (init): ninja $PKG_MAKE_OPTS_INIT" | tr -s " "
+      ninja $PKG_MAKE_OPTS_INIT
+      ;;
+    "meson:bootstrap"|"cmake:bootstrap"|"ninja:bootstrap")
+      echo "Executing (bootstrap): ninja $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
+      ninja $PKG_MAKE_OPTS_BOOTSTRAP
+      ;;
+
+    # make based builds
+    "configure:target"|"cmake-make:target"|"autotools:target"|"make:target")
+      echo "Executing (target): make $PKG_MAKE_OPTS_TARGET" | tr -s " "
+      make $PKG_MAKE_OPTS_TARGET
+      ;;
+    "configure:host"|"cmake-make:host"|"autotools:host"|"make:host")
+      echo "Executing (host): make $PKG_MAKE_OPTS_HOST" | tr -s " "
+      make $PKG_MAKE_OPTS_HOST
+      ;;
+    "configure:init"|"cmake-make:init"|"autotools:init"|"make:init")
+      echo "Executing (init): make $PKG_MAKE_OPTS_INIT" | tr -s " "
+      make $PKG_MAKE_OPTS_INIT
+      ;;
+    "configure:bootstrap"|"cmake-make:bootstrap"|"autotools:bootstrap"|"make:bootstrap")
+      echo "Executing (bootstrap): make $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
+      make $PKG_MAKE_OPTS_BOOTSTRAP
+      ;;
+  esac
+fi
+if [ "$(type -t post_make_$TARGET)" = "function" ]; then
+  post_make_$TARGET
+fi
 
-    PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
-    for i in PKG_NAME PKG_DEEPMD5; do
-      echo "STAMP_$i=\"${!i}\"" >> $STAMP
-    done
+# make install
+if [ "$(type -t pre_makeinstall_$TARGET)" = "function" ]; then
+  pre_makeinstall_$TARGET
+fi
+if [ "$(type -t makeinstall_$TARGET)" = "function" ]; then
+  makeinstall_$TARGET
+else
+  case "$PKG_TOOLCHAIN:$TARGET" in
+    # ninja based builds
+    "meson:target"|"cmake:target")
+      DESTDIR=$SYSROOT_PREFIX ninja install $PKG_MAKEINSTALL_OPTS_TARGET
+      DESTDIR=$INSTALL ninja install $PKG_MAKEINSTALL_OPTS_TARGET
+      ;;
+    "meson:host"|"cmake:host")
+      ninja install $PKG_MAKEINSTALL_OPTS_HOST
+      ;;
+    "meson:init"|"cmake:init")
+      DESTDIR=$INSTALL ninja install $PKG_MAKEINSTALL_OPTS_INIT
+      ;;
+    "meson:bootstrap"|"cmake:bootstrap")
+      ninja install $PKG_MAKEINSTALL_OPTS_BOOTSTRAP
+      ;;
+
+    # make based builds
+    "configure:target"|"cmake-make:target"|"autotools:target"|"make:target")
+      $MAKEINSTALL $PKG_MAKEINSTALL_OPTS_TARGET
+      make install DESTDIR=$INSTALL $PKG_MAKEINSTALL_OPTS_TARGET
+      ;;
+    "configure:host"|"cmake-make:host"|"autotools:host"|"make:host")
+      make install $PKG_MAKEINSTALL_OPTS_HOST
+      ;;
+    "configure:init"|"cmake-make:init"|"autotools:init"|"make:init")
+      make install DESTDIR=$INSTALL $PKG_MAKEINSTALL_OPTS_INIT
+      ;;
+    "configure:bootstrap"|"cmake-make:bootstrap"|"autotools:bootstrap"|"make:bootstrap")
+      make install $PKG_MAKEINSTALL_OPTS_BOOTSTRAP
+      ;;
+  esac
+fi
+if [ "$(type -t post_makeinstall_$TARGET)" = "function" ]; then
+  post_makeinstall_$TARGET
+fi
 
-    if [ "$1" = "u-boot" ]; then
-      echo "STAMP_UBOOT_SYSTEM=\"${UBOOT_SYSTEM}\"" >> $STAMP
+if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
+  if [ -d $INSTALL ] ; then
+    rm -rf $INSTALL/{usr/,}include
+    rm -rf $INSTALL/{usr/,}lib/cmake
+    rm -rf $INSTALL/{usr/,}lib/pkgconfig
+    rm -rf $INSTALL/{usr/,}man
+    rm -rf $INSTALL/{usr/,}share/aclocal
+    rm -rf $INSTALL/{usr/,}share/bash-completion
+    rm -rf $INSTALL/{usr/,}share/doc
+    rm -rf $INSTALL/{usr/,}share/gtk-doc
+    rm -rf $INSTALL/{usr/,}share/info
+    rm -rf $INSTALL/{usr/,}share/locale
+    rm -rf $INSTALL/{usr/,}share/man
+    rm -rf $INSTALL/{usr/,}share/pkgconfig
+    rm -rf $INSTALL/{usr/,}share/zsh
+    rm -rf $INSTALL/{usr/,}var
+    find $INSTALL \( -name "*.orig" \
+                  -o -name "*.rej" \
+                  -o -name "*.a" \
+                  -o -name "*.la" \
+                  -o -name "*.o" \
+                  -o -name "*.in" \
+                  -o -name ".git*" \) \
+        -exec rm -f {} \; 2>/dev/null || :
+    find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
+
+    if [ ! "$DEBUG" = yes ]; then
+      $STRIP `find $INSTALL \
+        -type f -name "*.so*" \
+        ! -name "ld-*.so" \
+        ! -name "libc-*.so" \
+        ! -name "libpthread-*.so" \
+        ! -name "libthread_db-*so" \
+        2>/dev/null` 2>/dev/null || :
+        if [ "$TARGET" = "init" ]; then
+          $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
+        fi
+        $STRIP `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
+          -type f -executable 2>/dev/null` 2>/dev/null || :
     fi
+  fi
+fi
+
+cd $ROOT
+
+for i in `find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null`; do \
+  $SED "s:\(['= ]\)/usr:\\1$SYSROOT_PREFIX/usr:g" $i; \
+done
+
+PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
+for i in PKG_NAME PKG_DEEPMD5; do
+  echo "STAMP_$i=\"${!i}\"" >> $STAMP
+done
+
+if [ "$1" = "u-boot" ]; then
+  echo "STAMP_UBOOT_SYSTEM=\"${UBOOT_SYSTEM}\"" >> $STAMP
 fi

commit 06dd7642d46c979517314208c872672c4f2efcb6
Author: AV <27rurk@gmail.com>
Date:   Sun Nov 12 01:51:28 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 8b7a2b7c00..a037394954 100755
--- a/scripts/build
+++ b/scripts/build
@@ -65,6 +65,10 @@ if [ -f $STAMP ] ; then
   if [ ! "$PKG_DEEPMD5" = "$STAMP_PKG_DEEPMD5" ] ; then
     rm -f $STAMP
   fi
+
+  if [ "$1" = "u-boot" -a ! "$UBOOT_SYSTEM" = "$STAMP_UBOOT_SYSTEM" ]; then
+    rm -f $STAMP
+  fi
 fi
 
 if [ ! -f $STAMP ]; then
@@ -494,4 +498,8 @@ if [ ! -f $STAMP ]; then
     for i in PKG_NAME PKG_DEEPMD5; do
       echo "STAMP_$i=\"${!i}\"" >> $STAMP
     done
+
+    if [ "$1" = "u-boot" ]; then
+      echo "STAMP_UBOOT_SYSTEM=\"${UBOOT_SYSTEM}\"" >> $STAMP
+    fi
 fi

commit cfd000a6acc609e7c659f95f0b2ffb8944829384
Author: AV <27rurk@gmail.com>
Date:   Thu Nov 9 09:00:44 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 467c84ea7c..8b7a2b7c00 100755
--- a/scripts/build
+++ b/scripts/build
@@ -128,7 +128,8 @@ if [ ! -f $STAMP ]; then
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static \
-                           --enable-shared"
+                           --enable-shared \
+                           --enable-silent-rules"
 
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
@@ -173,7 +174,8 @@ if [ ! -f $STAMP ]; then
                          --libexecdir=$TOOLCHAIN/lib \
                          --localstatedir=$TOOLCHAIN/var \
                          --disable-static \
-                         --enable-shared"
+                         --enable-shared \
+                         --enable-silent-rules"
 
     HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                      -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit 92f4428ce2edb0e64ba85fa4f73a7138a91702a2
Author: AV <27rurk@gmail.com>
Date:   Tue Nov 7 22:30:37 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 6d5475f1f6..467c84ea7c 100755
--- a/scripts/build
+++ b/scripts/build
@@ -133,7 +133,7 @@ if [ ! -f $STAMP ]; then
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
     else
-      CMAKE_BUILD_TYPE="Release"
+      CMAKE_BUILD_TYPE=""
     fi
     if [ "$PKG_USE_NINJA" = "no" ]; then
       CMAKE_GENERATOR=""

commit c4b319bd273c2854506069aa1a0bdaf1661eaf50
Author: AV <27rurk@gmail.com>
Date:   Tue Nov 7 18:05:51 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 4f71460d7c..6d5475f1f6 100755
--- a/scripts/build
+++ b/scripts/build
@@ -471,10 +471,6 @@ if [ ! -f $STAMP ]; then
           if [ ! "$DEBUG" = yes ]; then
             $STRIP `find $INSTALL \
               -type f -name "*.so*" \
-              ! -name "ld-*.so" \
-              ! -name "libc-*.so" \
-              ! -name "libpthread-*.so" \
-              ! -name "libthread_db-*so" \
               2>/dev/null` 2>/dev/null || :
             if [ "$TARGET" = "init" ]; then
               $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :

commit f40c9e0552e954973122cdbd75c1614a980c5d68
Author: AV <27rurk@gmail.com>
Date:   Sat Nov 4 10:58:07 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index cd55e6a397..4f71460d7c 100755
--- a/scripts/build
+++ b/scripts/build
@@ -138,7 +138,8 @@ if [ ! -f $STAMP ]; then
     if [ "$PKG_USE_NINJA" = "no" ]; then
       CMAKE_GENERATOR=""
     else
-      CMAKE_GENERATOR=""
+      CMAKE_GENERATOR="-GNinja \
+                       -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
     fi
 
     TARGET_CMAKE_OPTS="$CMAKE_GENERATOR \

commit 105ebc14e8a6e7e8a59b1854fcf0ce06af1af89d
Author: AV <27rurk@gmail.com>
Date:   Sat Nov 4 08:35:15 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index ee1261d756..cd55e6a397 100755
--- a/scripts/build
+++ b/scripts/build
@@ -128,14 +128,23 @@ if [ ! -f $STAMP ]; then
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static \
-                           --enable-shared \
-                           --enable-silent-rules"
+                           --enable-shared"
 
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
     else
       CMAKE_BUILD_TYPE="Release"
     fi
+    if [ "$PKG_USE_NINJA" = "no" ]; then
+      CMAKE_GENERATOR=""
+    else
+      CMAKE_GENERATOR=""
+    fi
+
+    TARGET_CMAKE_OPTS="$CMAKE_GENERATOR \
+                       -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
+                       -DCMAKE_INSTALL_PREFIX=/usr \
+                       -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
 
     if [ "$DEBUG" = "yes" ]; then
       MESON_BUILD_TYPE="debug"
@@ -163,8 +172,7 @@ if [ ! -f $STAMP ]; then
                          --libexecdir=$TOOLCHAIN/lib \
                          --localstatedir=$TOOLCHAIN/var \
                          --disable-static \
-                         --enable-shared \
-                         --enable-silent-rules"
+                         --enable-shared"
 
     HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                      -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
@@ -349,6 +357,20 @@ if [ ! -f $STAMP ]; then
       fi
       if [ "$(type -t make_$TARGET)" = "function" ]; then
         make_$TARGET
+      elif [ \( -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" \) -o \( -f "$PKG_MESON_SCRIPT" -a ! "$PKG_USE_MESON" = "no" \) ]; then
+        if [ "$TARGET" = "target" ]; then
+          echo "Executing (target): ninja $PKG_MAKE_OPTS_TARGET" | tr -s " "
+          ninja $PKG_MAKE_OPTS_TARGET
+        elif [ "$TARGET" = "host" ]; then
+          echo "Executing (host): ninja $PKG_MAKE_OPTS_HOST" | tr -s " "
+          ninja $PKG_MAKE_OPTS_HOST
+        elif [ "$TARGET" = "init" ]; then
+          echo "Executing (init): ninja $PKG_MAKE_OPTS_INIT" | tr -s " "
+          ninja $PKG_MAKE_OPTS_INIT
+        elif [ "$TARGET" = "bootstrap" ]; then
+          echo "Executing (bootstrap): ninja $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
+          ninja $PKG_MAKE_OPTS_BOOTSTRAP
+        fi
       else
         if [ "$TARGET" = "target" ]; then
           echo "Executing (target): make $PKG_MAKE_OPTS_TARGET" | tr -s " "
@@ -374,6 +396,17 @@ if [ ! -f $STAMP ]; then
       fi
       if [ "$(type -t makeinstall_$TARGET)" = "function" ]; then
         makeinstall_$TARGET
+      elif [ \( -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" \) -o \( -f "$PKG_MESON_SCRIPT"  -a ! "$PKG_USE_MESON" = "no" \) ]; then
+        if [ "$TARGET" = "target" ]; then
+          DESTDIR=$SYSROOT_PREFIX ninja install $PKG_MAKEINSTALL_OPTS_TARGET
+          DESTDIR=$INSTALL ninja install $PKG_MAKEINSTALL_OPTS_TARGET
+        elif [ "$TARGET" = "host" ]; then
+          ninja install $PKG_MAKEINSTALL_OPTS_HOST
+        elif [ "$TARGET" = "init" ]; then
+          DESTDIR=$INSTALL ninja install $PKG_MAKEINSTALL_OPTS_INIT
+        elif [ "$TARGET" = "bootstrap" ]; then
+          ninja install $PKG_MAKEINSTALL_OPTS_BOOTSTRAP
+        fi
       else
         if [ "$TARGET" = "target" ]; then
           $MAKEINSTALL $PKG_MAKEINSTALL_OPTS_TARGET

commit c06af9a88e82c5eb1edf9427192548e3ca8875bc
Author: AV <27rurk@gmail.com>
Date:   Sat Nov 4 07:55:20 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index dd99f6ad48..ee1261d756 100755
--- a/scripts/build
+++ b/scripts/build
@@ -137,17 +137,6 @@ if [ ! -f $STAMP ]; then
       CMAKE_BUILD_TYPE="Release"
     fi
 
-    if [ "$PKG_USE_NINJA" = "no" ]; then
-      CMAKE_GENERATOR=""
-    else
-      CMAKE_GENERATOR="-GNinja \
-                       -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
-    fi
-
-    TARGET_CMAKE_OPTS="$CMAKE_GENERATOR \
-                       -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                       -DCMAKE_INSTALL_PREFIX=/usr"
-
     if [ "$DEBUG" = "yes" ]; then
       MESON_BUILD_TYPE="debug"
     else
@@ -360,20 +349,6 @@ if [ ! -f $STAMP ]; then
       fi
       if [ "$(type -t make_$TARGET)" = "function" ]; then
         make_$TARGET
-      elif [ \( -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" \) -o \( -f "$PKG_MESON_SCRIPT" -a ! "$PKG_USE_MESON" = "no" \) ]; then
-        if [ "$TARGET" = "target" ]; then
-          echo "Executing (target): ninja $PKG_MAKE_OPTS_TARGET" | tr -s " "
-          ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_TARGET
-        elif [ "$TARGET" = "host" ]; then
-          echo "Executing (host): ninja $PKG_MAKE_OPTS_HOST" | tr -s " "
-          ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_HOST
-        elif [ "$TARGET" = "init" ]; then
-          echo "Executing (init): ninja $PKG_MAKE_OPTS_INIT" | tr -s " "
-          ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_INIT
-        elif [ "$TARGET" = "bootstrap" ]; then
-          echo "Executing (bootstrap): ninja $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
-          ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_BOOTSTRAP
-        fi
       else
         if [ "$TARGET" = "target" ]; then
           echo "Executing (target): make $PKG_MAKE_OPTS_TARGET" | tr -s " "
@@ -399,21 +374,6 @@ if [ ! -f $STAMP ]; then
       fi
       if [ "$(type -t makeinstall_$TARGET)" = "function" ]; then
         makeinstall_$TARGET
-      elif [ \( -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" \) -o \( -f "$PKG_MESON_SCRIPT"  -a ! "$PKG_USE_MESON" = "no" \) ]; then
-        if [ "$TARGET" = "target" ]; then
-          DESTDIR=$SYSROOT_PREFIX ninja install $PKG_MAKEINSTALL_OPTS_TARGET
-          DESTDIR=$INSTALL ninja install $PKG_MAKEINSTALL_OPTS_TARGET
-        elif [ "$TARGET" = "host" ]; then
-          ninja install $PKG_MAKEINSTALL_OPTS_HOST
-        elif [ "$TARGET" = "init" ]; then
-          DESTDIR=$INSTALL ninja install $PKG_MAKEINSTALL_OPTS_INIT
-        elif [ "$TARGET" = "bootstrap" ]; then
-          ninja install $PKG_MAKEINSTALL_OPTS_BOOTSTRAP
-        fi
-        if [ "$TARGET" = "target" -a -d "$INSTALL_DEV" ]; then
-          mkdir -p $INSTALL
-            cp -PRv $INSTALL_DEV/* $INSTALL
-        fi
       else
         if [ "$TARGET" = "target" ]; then
           $MAKEINSTALL $PKG_MAKEINSTALL_OPTS_TARGET

commit e1e90dee09ad22e33f7c74871681ba40026bb683
Author: AV <27rurk@gmail.com>
Date:   Thu Nov 2 22:39:17 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 3a05d62828..dd99f6ad48 100755
--- a/scripts/build
+++ b/scripts/build
@@ -128,7 +128,8 @@ if [ ! -f $STAMP ]; then
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static \
-                           --enable-shared"
+                           --enable-shared \
+                           --enable-silent-rules"
 
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
@@ -173,7 +174,8 @@ if [ ! -f $STAMP ]; then
                          --libexecdir=$TOOLCHAIN/lib \
                          --localstatedir=$TOOLCHAIN/var \
                          --disable-static \
-                         --enable-shared"
+                         --enable-shared \
+                         --enable-silent-rules"
 
     HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                      -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit dfa83a088b495ec2a45f7dc6aea6e42d2c12bafa
Author: AV <27rurk@gmail.com>
Date:   Thu Nov 2 22:04:11 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index b4c4a037dd..3a05d62828 100755
--- a/scripts/build
+++ b/scripts/build
@@ -44,9 +44,9 @@ else
 fi
 [ -z "$TARGET" ] && TARGET="target"
 
-if [ -n "$PKG_ARCH" -a ! "$PKG_ARCH" = "any" ]; then
-  echo "$PKG_ARCH" | grep -q "$TARGET_ARCH" || exit 0
-  echo "$PKG_ARCH" | grep -q "\-$TARGET_ARCH" && exit 0
+if [ -n "$PKG_ARCH" ]; then
+  listcontains "$PKG_ARCH" "!$TARGET_ARCH" && exit 0
+  listcontains "$PKG_ARCH" "$TARGET_ARCH" || listcontains "$PKG_ARCH" "any" || exit 0
 fi
 
 unset INSTALL

commit b9051ac35c5cb679c1b83769c50b8fe0336ad1b4
Author: AV <27rurk@gmail.com>
Date:   Thu Nov 2 06:31:08 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
old mode 100644
new mode 100755

commit 2c30b95664f7464cda18b262cabf9787b550904f
Author: AV <27rurk@gmail.com>
Date:   Thu Nov 2 06:29:32 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
old mode 100755
new mode 100644
index 3a05d62828..b4c4a037dd
--- a/scripts/build
+++ b/scripts/build
@@ -44,9 +44,9 @@ else
 fi
 [ -z "$TARGET" ] && TARGET="target"
 
-if [ -n "$PKG_ARCH" ]; then
-  listcontains "$PKG_ARCH" "!$TARGET_ARCH" && exit 0
-  listcontains "$PKG_ARCH" "$TARGET_ARCH" || listcontains "$PKG_ARCH" "any" || exit 0
+if [ -n "$PKG_ARCH" -a ! "$PKG_ARCH" = "any" ]; then
+  echo "$PKG_ARCH" | grep -q "$TARGET_ARCH" || exit 0
+  echo "$PKG_ARCH" | grep -q "\-$TARGET_ARCH" && exit 0
 fi
 
 unset INSTALL

commit 9edbadd405f64fb3dacec24ab6bf45be9e5d60e5
Author: AV <27rurk@gmail.com>
Date:   Thu Nov 2 03:36:14 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index b4c4a037dd..3a05d62828 100755
--- a/scripts/build
+++ b/scripts/build
@@ -44,9 +44,9 @@ else
 fi
 [ -z "$TARGET" ] && TARGET="target"
 
-if [ -n "$PKG_ARCH" -a ! "$PKG_ARCH" = "any" ]; then
-  echo "$PKG_ARCH" | grep -q "$TARGET_ARCH" || exit 0
-  echo "$PKG_ARCH" | grep -q "\-$TARGET_ARCH" && exit 0
+if [ -n "$PKG_ARCH" ]; then
+  listcontains "$PKG_ARCH" "!$TARGET_ARCH" && exit 0
+  listcontains "$PKG_ARCH" "$TARGET_ARCH" || listcontains "$PKG_ARCH" "any" || exit 0
 fi
 
 unset INSTALL

commit 4869f84f8f9de0f45b1815db029e09a628451982
Author: AV <27rurk@gmail.com>
Date:   Wed Nov 1 17:35:23 2017 +0000

    autocommit on change

diff --git a/scripts/build b/scripts/build
old mode 100644
new mode 100755

commit f357aa2923da944d2115621e79ac71059eb88d75
Author: AV <27rurk@gmail.com>
Date:   Wed Nov 1 17:35:09 2017 +0000

    autocommit on change

diff --git a/scripts/build b/scripts/build
old mode 100755
new mode 100644
index 3b44478682..b4c4a037dd
--- a/scripts/build
+++ b/scripts/build
@@ -126,7 +126,9 @@ if [ ! -f $STAMP ]; then
                            --sysconfdir=/etc \
                            --libdir=/usr/lib \
                            --libexecdir=/usr/lib \
-                           --localstatedir=/var"
+                           --localstatedir=/var \
+                           --disable-static \
+                           --enable-shared"
 
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
@@ -169,7 +171,9 @@ if [ ! -f $STAMP ]; then
                          --sbindir=$TOOLCHAIN/sbin \
                          --sysconfdir=$TOOLCHAIN/etc \
                          --libexecdir=$TOOLCHAIN/lib \
-                         --localstatedir=$TOOLCHAIN/var"
+                         --localstatedir=$TOOLCHAIN/var \
+                         --disable-static \
+                         --enable-shared"
 
     HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                      -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit 84faca96ed3354a4f72f004292d0276a23be8b9f
Author: AV <27rurk@gmail.com>
Date:   Wed Nov 1 15:09:44 2017 +0000

    autocommit on change

diff --git a/scripts/build b/scripts/build
index b4c4a037dd..3b44478682 100755
--- a/scripts/build
+++ b/scripts/build
@@ -126,9 +126,7 @@ if [ ! -f $STAMP ]; then
                            --sysconfdir=/etc \
                            --libdir=/usr/lib \
                            --libexecdir=/usr/lib \
-                           --localstatedir=/var \
-                           --disable-static \
-                           --enable-shared"
+                           --localstatedir=/var"
 
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
@@ -171,9 +169,7 @@ if [ ! -f $STAMP ]; then
                          --sbindir=$TOOLCHAIN/sbin \
                          --sysconfdir=$TOOLCHAIN/etc \
                          --libexecdir=$TOOLCHAIN/lib \
-                         --localstatedir=$TOOLCHAIN/var \
-                         --disable-static \
-                         --enable-shared"
+                         --localstatedir=$TOOLCHAIN/var"
 
     HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                      -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit d15999b286b471720ea4cabd09232b9898051407
Author: AV <27rurk@gmail.com>
Date:   Tue Oct 31 23:32:57 2017 +0000

    autocommit on change

diff --git a/scripts/build b/scripts/build
index a4c111be74..b4c4a037dd 100755
--- a/scripts/build
+++ b/scripts/build
@@ -361,16 +361,16 @@ if [ ! -f $STAMP ]; then
       elif [ \( -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" \) -o \( -f "$PKG_MESON_SCRIPT" -a ! "$PKG_USE_MESON" = "no" \) ]; then
         if [ "$TARGET" = "target" ]; then
           echo "Executing (target): ninja $PKG_MAKE_OPTS_TARGET" | tr -s " "
-          ninja $PKG_MAKE_OPTS_TARGET
+          ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_TARGET
         elif [ "$TARGET" = "host" ]; then
           echo "Executing (host): ninja $PKG_MAKE_OPTS_HOST" | tr -s " "
-          ninja $PKG_MAKE_OPTS_HOST
+          ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_HOST
         elif [ "$TARGET" = "init" ]; then
           echo "Executing (init): ninja $PKG_MAKE_OPTS_INIT" | tr -s " "
-          ninja $PKG_MAKE_OPTS_INIT
+          ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_INIT
         elif [ "$TARGET" = "bootstrap" ]; then
           echo "Executing (bootstrap): ninja $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
-          ninja $PKG_MAKE_OPTS_BOOTSTRAP
+          ninja -j${CONCURRENCY_MAKE_LEVEL} $PKG_MAKE_OPTS_BOOTSTRAP
         fi
       else
         if [ "$TARGET" = "target" ]; then

commit 7a8fb5c45ae9f75549b9fd99bc3ec97541179f8c
Author: AV <27rurk@gmail.com>
Date:   Tue Oct 31 15:51:27 2017 +0000

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 4a1493b10f..a4c111be74 100755
--- a/scripts/build
+++ b/scripts/build
@@ -204,7 +204,7 @@ if [ ! -f $STAMP ]; then
 
     if [ "$PKG_IS_KERNEL_PKG" = "yes" ]; then
       if [ "$TARGET_KERNEL_ARCH" = "arm64" -a "$TARGET_ARCH" = "arm" ]; then
-        TARGET_PREFIX=$TOOLCHAIN/lib/gcc-linaro-aarch64-elf/bin/aarch64-elf-
+        TARGET_PREFIX=$TOOLCHAIN/lib/gcc-linaro-aarch64-linux-gnu/bin/aarch64-linux-gnu-
       fi
     fi
 

commit 8918a095edc8730f54c8c695905378f5bec7d361
Author: AV <27rurk@gmail.com>
Date:   Tue Oct 24 01:12:09 2017 +0000

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 10af4c3b71..4a1493b10f 100755
--- a/scripts/build
+++ b/scripts/build
@@ -145,8 +145,7 @@ if [ ! -f $STAMP ]; then
 
     TARGET_CMAKE_OPTS="$CMAKE_GENERATOR \
                        -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                       -DCMAKE_INSTALL_PREFIX=/usr \
-                       -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
+                       -DCMAKE_INSTALL_PREFIX=/usr"
 
     if [ "$DEBUG" = "yes" ]; then
       MESON_BUILD_TYPE="debug"

commit bf1aec69e50b1b303e843fc821c4dbc97cd6baad
Author: AV <27rurk@gmail.com>
Date:   Mon Oct 23 15:17:48 2017 +0000

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 5415ede8c3..10af4c3b71 100755
--- a/scripts/build
+++ b/scripts/build
@@ -133,7 +133,7 @@ if [ ! -f $STAMP ]; then
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
     else
-      CMAKE_BUILD_TYPE=""
+      CMAKE_BUILD_TYPE="Release"
     fi
 
     if [ "$PKG_USE_NINJA" = "no" ]; then

commit bbc545054956249c2bf9347dbc6bb762b4ae0d30
Author: AV <27rurk@gmail.com>
Date:   Mon Oct 23 10:37:08 2017 +0000

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 36007bfa40..5415ede8c3 100755
--- a/scripts/build
+++ b/scripts/build
@@ -151,7 +151,7 @@ if [ ! -f $STAMP ]; then
     if [ "$DEBUG" = "yes" ]; then
       MESON_BUILD_TYPE="debug"
     else
-      MESON_BUILD_TYPE="release"
+      MESON_BUILD_TYPE="plain"
     fi
 
     TARGET_MESON_OPTS="--prefix=/usr \

commit 9444600ce2e2c5711c99f1e617af3d46f28d167e
Author: AV <27rurk@gmail.com>
Date:   Mon Oct 23 09:10:42 2017 +0000

    autocommit on change

diff --git a/scripts/build b/scripts/build
index bd413e749e..36007bfa40 100755
--- a/scripts/build
+++ b/scripts/build
@@ -133,7 +133,7 @@ if [ ! -f $STAMP ]; then
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
     else
-      CMAKE_BUILD_TYPE="Release"
+      CMAKE_BUILD_TYPE=""
     fi
 
     if [ "$PKG_USE_NINJA" = "no" ]; then

commit a994c88cfbf3664b3b677326ebe628568b8bda0a
Author: AV <27rurk@gmail.com>
Date:   Mon Oct 23 08:49:13 2017 +0000

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 3367fb8390..bd413e749e 100755
--- a/scripts/build
+++ b/scripts/build
@@ -145,7 +145,8 @@ if [ ! -f $STAMP ]; then
 
     TARGET_CMAKE_OPTS="$CMAKE_GENERATOR \
                        -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                       -DCMAKE_INSTALL_PREFIX=/usr"
+                       -DCMAKE_INSTALL_PREFIX=/usr \
+                       -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
 
     if [ "$DEBUG" = "yes" ]; then
       MESON_BUILD_TYPE="debug"

commit d576b1c820de2add2d8ee45d0a2fdd99068a8237
Author: AV <27rurk@gmail.com>
Date:   Mon Oct 23 08:36:57 2017 +0000

    autocommit on change

diff --git a/scripts/build b/scripts/build
index a364141e8f..3367fb8390 100755
--- a/scripts/build
+++ b/scripts/build
@@ -415,7 +415,7 @@ if [ ! -f $STAMP ]; then
       else
         if [ "$TARGET" = "target" ]; then
           $MAKEINSTALL $PKG_MAKEINSTALL_OPTS_TARGET
-            make install DESTDIR=$INSTALL_DEV $PKG_MAKEINSTALL_OPTS_TARGET
+          make install DESTDIR=$INSTALL_DEV $PKG_MAKEINSTALL_OPTS_TARGET
             for i in `find $INSTALL_DEV/lib/ -name "*.la" 2>/dev/null`; do \
               $SED "s:\(['= ]\)/lib:\\1$SYSROOT_PREFIX/lib:g" $i; \
             done

commit 4dae448e12a1fcc45823dd904ceedb824149f8a3
Author: AV <27rurk@gmail.com>
Date:   Sun Oct 22 20:12:49 2017 +0000

    autocommit on change

diff --git a/scripts/build b/scripts/build
index ca866b1ee0..a364141e8f 100755
--- a/scripts/build
+++ b/scripts/build
@@ -150,7 +150,7 @@ if [ ! -f $STAMP ]; then
     if [ "$DEBUG" = "yes" ]; then
       MESON_BUILD_TYPE="debug"
     else
-      MESON_BUILD_TYPE="plain"
+      MESON_BUILD_TYPE="release"
     fi
 
     TARGET_MESON_OPTS="--prefix=/usr \

commit 505affe761fc83fdc30b235b406eb5a529d8ebfa
Author: AV <27rurk@gmail.com>
Date:   Sun Oct 22 19:28:25 2017 +0000

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 03b3d7b12f..ca866b1ee0 100755
--- a/scripts/build
+++ b/scripts/build
@@ -130,11 +130,11 @@ if [ ! -f $STAMP ]; then
                            --disable-static \
                            --enable-shared"
 
-#    if [ "$DEBUG" = "yes" ]; then
-#      CMAKE_BUILD_TYPE="Debug"
-#    else
-#      CMAKE_BUILD_TYPE="Release"
-#    fi
+    if [ "$DEBUG" = "yes" ]; then
+      CMAKE_BUILD_TYPE="Debug"
+    else
+      CMAKE_BUILD_TYPE="Release"
+    fi
 
     if [ "$PKG_USE_NINJA" = "no" ]; then
       CMAKE_GENERATOR=""

commit 02da9dd4cf355c3c64e664797698dd977c546327
Author: AV <27rurk@gmail.com>
Date:   Sun Oct 22 18:50:49 2017 +0000

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 499382e985..03b3d7b12f 100755
--- a/scripts/build
+++ b/scripts/build
@@ -127,7 +127,8 @@ if [ ! -f $STAMP ]; then
                            --libdir=/usr/lib \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
-                           --enable-silent-rules"
+                           --disable-static \
+                           --enable-shared"
 
 #    if [ "$DEBUG" = "yes" ]; then
 #      CMAKE_BUILD_TYPE="Debug"
@@ -172,8 +173,7 @@ if [ ! -f $STAMP ]; then
                          --libexecdir=$TOOLCHAIN/lib \
                          --localstatedir=$TOOLCHAIN/var \
                          --disable-static \
-                         --enable-shared \
-                         --enable-silent-rules"
+                         --enable-shared"
 
     HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                      -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit ec13fb0935bce0f60269989148c92a3af24ffe61
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 20 22:46:09 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index cf0640b11f..499382e985 100755
--- a/scripts/build
+++ b/scripts/build
@@ -129,11 +129,11 @@ if [ ! -f $STAMP ]; then
                            --localstatedir=/var \
                            --enable-silent-rules"
 
-    if [ "$DEBUG" = "yes" ]; then
-      CMAKE_BUILD_TYPE="Debug"
-    else
-      CMAKE_BUILD_TYPE="Release"
-    fi
+#    if [ "$DEBUG" = "yes" ]; then
+#      CMAKE_BUILD_TYPE="Debug"
+#    else
+#      CMAKE_BUILD_TYPE="Release"
+#    fi
 
     if [ "$PKG_USE_NINJA" = "no" ]; then
       CMAKE_GENERATOR=""
@@ -144,8 +144,7 @@ if [ ! -f $STAMP ]; then
 
     TARGET_CMAKE_OPTS="$CMAKE_GENERATOR \
                        -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                       -DCMAKE_INSTALL_PREFIX=/usr \
-                       -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
+                       -DCMAKE_INSTALL_PREFIX=/usr"
 
     if [ "$DEBUG" = "yes" ]; then
       MESON_BUILD_TYPE="debug"

commit d1a6d58e86894cadb2b4d078f82e9e2a8c72e45c
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 20 21:18:07 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 8c0216a797..cf0640b11f 100755
--- a/scripts/build
+++ b/scripts/build
@@ -150,7 +150,7 @@ if [ ! -f $STAMP ]; then
     if [ "$DEBUG" = "yes" ]; then
       MESON_BUILD_TYPE="debug"
     else
-      MESON_BUILD_TYPE="release"
+      MESON_BUILD_TYPE="plain"
     fi
 
     TARGET_MESON_OPTS="--prefix=/usr \

commit bd304ac7d618e5ba461e5bb20b0bcc7d8d10316a
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 20 16:45:27 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index cf0640b11f..8c0216a797 100755
--- a/scripts/build
+++ b/scripts/build
@@ -150,7 +150,7 @@ if [ ! -f $STAMP ]; then
     if [ "$DEBUG" = "yes" ]; then
       MESON_BUILD_TYPE="debug"
     else
-      MESON_BUILD_TYPE="plain"
+      MESON_BUILD_TYPE="release"
     fi
 
     TARGET_MESON_OPTS="--prefix=/usr \

commit 136c179f08a448afaeca3d9ce2a71c4e7d8bac12
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 20 14:51:30 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 8c0216a797..cf0640b11f 100755
--- a/scripts/build
+++ b/scripts/build
@@ -150,7 +150,7 @@ if [ ! -f $STAMP ]; then
     if [ "$DEBUG" = "yes" ]; then
       MESON_BUILD_TYPE="debug"
     else
-      MESON_BUILD_TYPE="release"
+      MESON_BUILD_TYPE="plain"
     fi
 
     TARGET_MESON_OPTS="--prefix=/usr \

commit 795427c8ab9c7d1514a59e3d70fa3df4134df382
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 20 08:39:22 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index cf0640b11f..8c0216a797 100755
--- a/scripts/build
+++ b/scripts/build
@@ -150,7 +150,7 @@ if [ ! -f $STAMP ]; then
     if [ "$DEBUG" = "yes" ]; then
       MESON_BUILD_TYPE="debug"
     else
-      MESON_BUILD_TYPE="plain"
+      MESON_BUILD_TYPE="release"
     fi
 
     TARGET_MESON_OPTS="--prefix=/usr \

commit 8577919b4ce722b3d4272a785c5592a431f83dcd
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 20 03:17:54 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index fb34e92b78..cf0640b11f 100755
--- a/scripts/build
+++ b/scripts/build
@@ -147,6 +147,22 @@ if [ ! -f $STAMP ]; then
                        -DCMAKE_INSTALL_PREFIX=/usr \
                        -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
 
+    if [ "$DEBUG" = "yes" ]; then
+      MESON_BUILD_TYPE="debug"
+    else
+      MESON_BUILD_TYPE="plain"
+    fi
+
+    TARGET_MESON_OPTS="--prefix=/usr \
+                       --bindir=/usr/bin \
+                       --sbindir=/usr/sbin \
+                       --sysconfdir=/etc \
+                       --libdir=/usr/lib \
+                       --libexecdir=/usr/lib \
+                       --localstatedir=/var \
+                       --buildtype=$MESON_BUILD_TYPE \
+                       --cross-file=$MESON_CONF"
+
   # configure HOST build defaults
     HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
                          --build=$HOST_NAME \
@@ -164,13 +180,25 @@ if [ ! -f $STAMP ]; then
                      -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                      -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
 
+    HOST_MESON_OPTS="--prefix=$TOOLCHAIN \
+                     --bindir=$TOOLCHAIN/bin \
+                     --sbindir=$TOOLCHAIN/sbin \
+                     --sysconfdir=$TOOLCHAIN/etc \
+                     --libdir=$TOOLCHAIN/lib \
+                     --libexecdir=$TOOLCHAIN/lib \
+                     --localstatedir=$TOOLCHAIN/var \
+                     --buildtype=plain \
+                     --cross-file=$MESON_CONF"
+
   # configure INIT build defaults
     INIT_CONFIGURE_OPTS="$TARGET_CONFIGURE_OPTS"
     INIT_CMAKE_OPTS="$TARGET_CMAKE_OPTS"
+    INIT_MESON_OPTS="$TARGET_MESON_OPTS"
 
   # configure BOOTSTRAP build defaults
     BOOTSTRAP_CONFIGURE_OPTS="$HOST_CONFIGURE_OPTS"
     BOOTSTRAP_CMAKE_OPTS="$HOST_CMAKE_OPTS"
+    BOOTSTRAP_MESON_OPTS="$HOST_MESON_OPTS"
 
   # include buildfile
     . $PKG_DIR/package.mk
@@ -234,6 +262,10 @@ if [ ! -f $STAMP ]; then
         PKG_CMAKE_SCRIPT="$PKG_BUILD/CMakeLists.txt"
       fi
 
+      if [ -z "$PKG_MESON_SCRIPT" ]; then
+        PKG_MESON_SCRIPT="$PKG_BUILD/meson.build"
+      fi
+
       # include build template and build
       if [ "$(type -t pre_build_$TARGET)" = "function" ]; then
         pre_build_$TARGET
@@ -247,22 +279,22 @@ if [ ! -f $STAMP ]; then
       cd $PKG_BUILD
 
       if [ "$TARGET" = "target" ]; then
-        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" ]; then
+        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRIPT" ]; then
           mkdir -p .$TARGET_NAME
           cd .$TARGET_NAME
         fi
       elif [ "$TARGET" = "host" ]; then
-        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" ]; then
+        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRIPT" ]; then
           mkdir -p .$HOST_NAME
           cd .$HOST_NAME
         fi
       elif [ "$TARGET" = "init" ]; then
-        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" ]; then
+        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRIPT" ]; then
           mkdir -p .$TARGET_NAME-$TARGET
           cd .$TARGET_NAME-$TARGET
         fi
       elif [ "$TARGET" = "bootstrap" ]; then
-        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" ]; then
+        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" -o -f "$PKG_MESON_SCRIPT" ]; then
           mkdir -p .$HOST_NAME-$TARGET
           cd .$HOST_NAME-$TARGET
         fi
@@ -274,6 +306,20 @@ if [ ! -f $STAMP ]; then
       fi
       if [ "$(type -t configure_$TARGET)" = "function" ]; then
         configure_$TARGET
+      elif [ -f "$PKG_MESON_SCRIPT" -a ! "$PKG_USE_MESON" = "no" ]; then
+        if [ "$TARGET" = "target" ]; then
+          echo "Executing (target): meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+          meson $TARGET_MESON_OPTS $PKG_MESON_OPTS_TARGET $(dirname $PKG_MESON_SCRIPT)
+        elif [ "$TARGET" = "host" ]; then
+          echo "Executing (host): meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+          meson $HOST_MESON_OPTS $PKG_MESON_OPTS_HOST $(dirname $PKG_MESON_SCRIPT)
+        elif [ "$TARGET" = "init" ]; then
+          echo "Executing (init): meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+          meson $INIT_MESON_OPTS $PKG_MESON_OPTS_INIT $(dirname $PKG_MESON_SCRIPT)
+        elif [ "$TARGET" = "bootstrap" ]; then
+          echo "Executing (bootstrap): meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)" | tr -s " "
+          meson $BOOTSTRAP_MESON_OPTS $PKG_MESON_OPTS_BOOTSTRAP $(dirname $PKG_MESON_SCRIPT)
+        fi
       elif [ -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" ]; then
         if [ "$TARGET" = "target" ]; then
           echo "Executing (target): cmake $TARGET_CMAKE_OPTS $PKG_CMAKE_OPTS_TARGET $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
@@ -313,7 +359,7 @@ if [ ! -f $STAMP ]; then
       fi
       if [ "$(type -t make_$TARGET)" = "function" ]; then
         make_$TARGET
-      elif [ -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" ]; then
+      elif [ \( -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" \) -o \( -f "$PKG_MESON_SCRIPT" -a ! "$PKG_USE_MESON" = "no" \) ]; then
         if [ "$TARGET" = "target" ]; then
           echo "Executing (target): ninja $PKG_MAKE_OPTS_TARGET" | tr -s " "
           ninja $PKG_MAKE_OPTS_TARGET
@@ -352,7 +398,7 @@ if [ ! -f $STAMP ]; then
       fi
       if [ "$(type -t makeinstall_$TARGET)" = "function" ]; then
         makeinstall_$TARGET
-      elif [ -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" ]; then
+      elif [ \( -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" \) -o \( -f "$PKG_MESON_SCRIPT"  -a ! "$PKG_USE_MESON" = "no" \) ]; then
         if [ "$TARGET" = "target" ]; then
           DESTDIR=$SYSROOT_PREFIX ninja install $PKG_MAKEINSTALL_OPTS_TARGET
           DESTDIR=$INSTALL ninja install $PKG_MAKEINSTALL_OPTS_TARGET

commit 1ebb36d6a32b1a2c7054500794a70c3ff378951d
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 20 02:22:43 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 3ac1ef9b37..fb34e92b78 100755
--- a/scripts/build
+++ b/scripts/build
@@ -210,6 +210,7 @@ if [ ! -f $STAMP ]; then
     if [ ! "$PKG_SECTION" = "virtual" ]; then
 
       # configure other variables
+      INSTALL_DEV=$PKG_BUILD/.install_dev
       if [ "$TARGET" = "target" ]; then
         INSTALL=$PKG_BUILD/.install_pkg
       elif [ "$TARGET" = "init" ]; then
@@ -362,10 +363,24 @@ if [ ! -f $STAMP ]; then
         elif [ "$TARGET" = "bootstrap" ]; then
           ninja install $PKG_MAKEINSTALL_OPTS_BOOTSTRAP
         fi
+        if [ "$TARGET" = "target" -a -d "$INSTALL_DEV" ]; then
+          mkdir -p $INSTALL
+            cp -PRv $INSTALL_DEV/* $INSTALL
+        fi
       else
         if [ "$TARGET" = "target" ]; then
           $MAKEINSTALL $PKG_MAKEINSTALL_OPTS_TARGET
-          make install DESTDIR=$INSTALL $PKG_MAKEINSTALL_OPTS_TARGET
+            make install DESTDIR=$INSTALL_DEV $PKG_MAKEINSTALL_OPTS_TARGET
+            for i in `find $INSTALL_DEV/lib/ -name "*.la" 2>/dev/null`; do \
+              $SED "s:\(['= ]\)/lib:\\1$SYSROOT_PREFIX/lib:g" $i; \
+            done
+            for i in `find $INSTALL_DEV/usr/lib/ -name "*.la" 2>/dev/null`; do \
+              $SED "s:\(['= ]\)/usr:\\1$SYSROOT_PREFIX/usr:g" $i; \
+            done
+            mkdir -p $SYSROOT_PREFIX
+              cp -PRvf $INSTALL_DEV/* $SYSROOT_PREFIX
+            mkdir -p $INSTALL
+              cp -PRvf $INSTALL_DEV/* $INSTALL
         elif [ "$TARGET" = "host" ]; then
           make install $PKG_MAKEINSTALL_OPTS_HOST
         elif [ "$TARGET" = "init" ]; then

commit f66acfa218c345c6b3548f183ecc2d4ee119be32
Author: AV <27rurk@gmail.com>
Date:   Thu Oct 19 21:54:34 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 02247c7596..3ac1ef9b37 100755
--- a/scripts/build
+++ b/scripts/build
@@ -127,8 +127,6 @@ if [ ! -f $STAMP ]; then
                            --libdir=/usr/lib \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
-                           --disable-static \
-                           --enable-shared \
                            --enable-silent-rules"
 
     if [ "$DEBUG" = "yes" ]; then

commit a08b63e8ce77f733571904282e4510c685836cc9
Author: AV <27rurk@gmail.com>
Date:   Thu Oct 19 18:47:38 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 2899773310..02247c7596 100755
--- a/scripts/build
+++ b/scripts/build
@@ -403,7 +403,6 @@ if [ ! -f $STAMP ]; then
           rm -rf $INSTALL/{usr/,}share/locale
           rm -rf $INSTALL/{usr/,}share/man
           rm -rf $INSTALL/{usr/,}share/pkgconfig
-          rm -rf $INSTALL/{usr/,}share/zsh
           rm -rf $INSTALL/{usr/,}var
           find $INSTALL \( -name "*.orig" \
                         -o -name "*.rej" \

commit 83cde5194f112f7454bd0ed86e12accebe85e0fd
Author: AV <27rurk@gmail.com>
Date:   Thu Oct 19 14:03:45 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 928a7ac711..2899773310 100755
--- a/scripts/build
+++ b/scripts/build
@@ -127,6 +127,8 @@ if [ ! -f $STAMP ]; then
                            --libdir=/usr/lib \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
+                           --disable-static \
+                           --enable-shared \
                            --enable-silent-rules"
 
     if [ "$DEBUG" = "yes" ]; then
@@ -156,9 +158,9 @@ if [ ! -f $STAMP ]; then
                          --sysconfdir=$TOOLCHAIN/etc \
                          --libexecdir=$TOOLCHAIN/lib \
                          --localstatedir=$TOOLCHAIN/var \
-                         --enable-silent-rules \
                          --disable-static \
-                         --enable-shared"
+                         --enable-shared \
+                         --enable-silent-rules"
 
     HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
                      -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit 88c80a1248c26e5526db8c86b87f586f7f71c3ae
Author: AV <27rurk@gmail.com>
Date:   Thu Oct 19 09:05:11 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index a8ad43645c..928a7ac711 100755
--- a/scripts/build
+++ b/scripts/build
@@ -127,9 +127,7 @@ if [ ! -f $STAMP ]; then
                            --libdir=/usr/lib \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
-                           --enable-silent-rules \
-                           --disable-static \
-                           --enable-shared"
+                           --enable-silent-rules"
 
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"

commit e522011b025731c5721e9f17a69092d6fd7283cf
Author: AV <27rurk@gmail.com>
Date:   Thu Oct 19 07:12:25 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index cb1c7c30d9..a8ad43645c 100755
--- a/scripts/build
+++ b/scripts/build
@@ -134,7 +134,7 @@ if [ ! -f $STAMP ]; then
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
     else
-      CMAKE_BUILD_TYPE="MinSizeRel"
+      CMAKE_BUILD_TYPE="Release"
     fi
 
     if [ "$PKG_USE_NINJA" = "no" ]; then

commit 0f654bcc0d87784929ed17079991b93c869ad33b
Author: AV <27rurk@gmail.com>
Date:   Thu Oct 19 05:33:32 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index bb813ce25e..cb1c7c30d9 100755
--- a/scripts/build
+++ b/scripts/build
@@ -133,11 +133,19 @@ if [ ! -f $STAMP ]; then
 
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
-#    else
-#      CMAKE_BUILD_TYPE="Release"
+    else
+      CMAKE_BUILD_TYPE="MinSizeRel"
     fi
 
-    TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
+    if [ "$PKG_USE_NINJA" = "no" ]; then
+      CMAKE_GENERATOR=""
+    else
+      CMAKE_GENERATOR="-GNinja \
+                       -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
+    fi
+
+    TARGET_CMAKE_OPTS="$CMAKE_GENERATOR \
+                       -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                        -DCMAKE_INSTALL_PREFIX=/usr \
                        -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
 
@@ -154,9 +162,9 @@ if [ ! -f $STAMP ]; then
                          --disable-static \
                          --enable-shared"
 
-    HOST_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                     -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN \
-                     -DCMAKE_BUILD_TYPE=Release"
+    HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
+                     -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
+                     -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
 
   # configure INIT build defaults
     INIT_CONFIGURE_OPTS="$TARGET_CONFIGURE_OPTS"
@@ -306,6 +314,20 @@ if [ ! -f $STAMP ]; then
       fi
       if [ "$(type -t make_$TARGET)" = "function" ]; then
         make_$TARGET
+      elif [ -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" ]; then
+        if [ "$TARGET" = "target" ]; then
+          echo "Executing (target): ninja $PKG_MAKE_OPTS_TARGET" | tr -s " "
+          ninja $PKG_MAKE_OPTS_TARGET
+        elif [ "$TARGET" = "host" ]; then
+          echo "Executing (host): ninja $PKG_MAKE_OPTS_HOST" | tr -s " "
+          ninja $PKG_MAKE_OPTS_HOST
+        elif [ "$TARGET" = "init" ]; then
+          echo "Executing (init): ninja $PKG_MAKE_OPTS_INIT" | tr -s " "
+          ninja $PKG_MAKE_OPTS_INIT
+        elif [ "$TARGET" = "bootstrap" ]; then
+          echo "Executing (bootstrap): ninja $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
+          ninja $PKG_MAKE_OPTS_BOOTSTRAP
+        fi
       else
         if [ "$TARGET" = "target" ]; then
           echo "Executing (target): make $PKG_MAKE_OPTS_TARGET" | tr -s " "
@@ -331,6 +353,17 @@ if [ ! -f $STAMP ]; then
       fi
       if [ "$(type -t makeinstall_$TARGET)" = "function" ]; then
         makeinstall_$TARGET
+      elif [ -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" ]; then
+        if [ "$TARGET" = "target" ]; then
+          DESTDIR=$SYSROOT_PREFIX ninja install $PKG_MAKEINSTALL_OPTS_TARGET
+          DESTDIR=$INSTALL ninja install $PKG_MAKEINSTALL_OPTS_TARGET
+        elif [ "$TARGET" = "host" ]; then
+          ninja install $PKG_MAKEINSTALL_OPTS_HOST
+        elif [ "$TARGET" = "init" ]; then
+          DESTDIR=$INSTALL ninja install $PKG_MAKEINSTALL_OPTS_INIT
+        elif [ "$TARGET" = "bootstrap" ]; then
+          ninja install $PKG_MAKEINSTALL_OPTS_BOOTSTRAP
+        fi
       else
         if [ "$TARGET" = "target" ]; then
           $MAKEINSTALL $PKG_MAKEINSTALL_OPTS_TARGET

commit 388e950e921f8e54f6f53f0a1d74a0f097205fdd
Author: AV <27rurk@gmail.com>
Date:   Sat Oct 14 10:15:23 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 521f67093a..bb813ce25e 100755
--- a/scripts/build
+++ b/scripts/build
@@ -31,15 +31,18 @@ if [ ! -f $PKG_DIR/package.mk ]; then
 fi
 
 # set defaults
-  PKG_CONFIGURE_SCRIPT=""
-  PKG_MAKE_OPTS=""
-  PKG_MAKEINSTALL_OPTS=""
-
-  PACKAGE_NAME=$(echo $1 | awk -F : '{print $1}')
-  TARGET=$(echo $1 | awk -F : '{print $2}')
-  if [ -z "$TARGET" ]; then
-    TARGET="target"
-  fi
+PKG_CONFIGURE_SCRIPT=""
+PKG_MAKE_OPTS=""
+PKG_MAKEINSTALL_OPTS=""
+
+if [ "${1//:/}" != "${1}" ]; then
+  PACKAGE_NAME="${1%:*}"
+  TARGET="${1#*:}"
+else
+  PACKAGE_NAME=$1
+  TARGET=
+fi
+[ -z "$TARGET" ] && TARGET="target"
 
 if [ -n "$PKG_ARCH" -a ! "$PKG_ARCH" = "any" ]; then
   echo "$PKG_ARCH" | grep -q "$TARGET_ARCH" || exit 0
@@ -130,8 +133,8 @@ if [ ! -f $STAMP ]; then
 
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
-    else
-      CMAKE_BUILD_TYPE="Release"
+#    else
+#      CMAKE_BUILD_TYPE="Release"
     fi
 
     TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit a1c9f19c709268939dd6c6b6b9d1e827ce8a701b
Author: AV <27rurk@gmail.com>
Date:   Sat Oct 14 10:05:08 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index f08f2b484a..521f67093a 100755
--- a/scripts/build
+++ b/scripts/build
@@ -26,7 +26,7 @@ if [ -z "$1" ]; then
 fi
 
 if [ ! -f $PKG_DIR/package.mk ]; then
-  printf "${boldred}$1: no package.mk file found${endcolor}\n"
+  printf "$(print_color CLR_ERROR "$1: no package.mk file found")\n"
   exit 1
 fi
 
@@ -166,6 +166,12 @@ if [ ! -f $STAMP ]; then
   # include buildfile
     . $PKG_DIR/package.mk
 
+    if [ "$PKG_IS_KERNEL_PKG" = "yes" ]; then
+      if [ "$TARGET_KERNEL_ARCH" = "arm64" -a "$TARGET_ARCH" = "arm" ]; then
+        TARGET_PREFIX=$TOOLCHAIN/lib/gcc-linaro-aarch64-elf/bin/aarch64-elf-
+      fi
+    fi
+
     if [ "$TARGET" = "target" ]; then
       for p in $PKG_DEPENDS_TARGET; do
         $SCRIPTS/build $p
@@ -184,7 +190,7 @@ if [ ! -f $STAMP ]; then
       done
     fi
 
-    printf "%${BUILD_INDENT}c ${boldyellow}BUILD${endcolor}    $PACKAGE_NAME ${boldwhite}($TARGET)${endcolor}\n" ' '>&$SILENT_OUT
+    printf "%${BUILD_INDENT}c $(print_color CLR_BUILD "BUILD")    $PACKAGE_NAME $(print_color CLR_TARGET "($TARGET)")\n" ' '>&$SILENT_OUT
     export BUILD_INDENT=$((${BUILD_INDENT:-1}+$BUILD_INDENT_SIZE))
 
     if [ "$PKG_AUTORECONF" = yes ]; then
@@ -321,11 +327,9 @@ if [ ! -f $STAMP ]; then
         pre_makeinstall_$TARGET
       fi
       if [ "$(type -t makeinstall_$TARGET)" = "function" ]; then
-        unset LD_LIBRARY_PATH
         makeinstall_$TARGET
       else
         if [ "$TARGET" = "target" ]; then
-          unset LD_LIBRARY_PATH
           $MAKEINSTALL $PKG_MAKEINSTALL_OPTS_TARGET
           make install DESTDIR=$INSTALL $PKG_MAKEINSTALL_OPTS_TARGET
         elif [ "$TARGET" = "host" ]; then

commit 855ae08f78e4a5339eebbc41cf9d412309f0cece
Author: AV <27rurk@gmail.com>
Date:   Sat Oct 14 09:08:58 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 196892c2bb..f08f2b484a 100755
--- a/scripts/build
+++ b/scripts/build
@@ -321,9 +321,11 @@ if [ ! -f $STAMP ]; then
         pre_makeinstall_$TARGET
       fi
       if [ "$(type -t makeinstall_$TARGET)" = "function" ]; then
+        unset LD_LIBRARY_PATH
         makeinstall_$TARGET
       else
         if [ "$TARGET" = "target" ]; then
+          unset LD_LIBRARY_PATH
           $MAKEINSTALL $PKG_MAKEINSTALL_OPTS_TARGET
           make install DESTDIR=$INSTALL $PKG_MAKEINSTALL_OPTS_TARGET
         elif [ "$TARGET" = "host" ]; then

commit 825575de1523176d65be40e83cd5a45718364a83
Author: AV <27rurk@gmail.com>
Date:   Sat Oct 14 07:14:10 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 14b47124ad..196892c2bb 100755
--- a/scripts/build
+++ b/scripts/build
@@ -130,8 +130,8 @@ if [ ! -f $STAMP ]; then
 
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
-    #else
-      #CMAKE_BUILD_TYPE="Release"
+    else
+      CMAKE_BUILD_TYPE="Release"
     fi
 
     TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit 1a4d37242f98a5a63b4c216621fb7b024b82382c
Author: AV <27rurk@gmail.com>
Date:   Sat Oct 14 07:12:10 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 196892c2bb..14b47124ad 100755
--- a/scripts/build
+++ b/scripts/build
@@ -130,8 +130,8 @@ if [ ! -f $STAMP ]; then
 
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
-    else
-      CMAKE_BUILD_TYPE="Release"
+    #else
+      #CMAKE_BUILD_TYPE="Release"
     fi
 
     TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit 74682d697e160c477e2483838938eca590d0b1e1
Author: AV <27rurk@gmail.com>
Date:   Sat Oct 14 06:11:20 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 97574427e0..196892c2bb 100755
--- a/scripts/build
+++ b/scripts/build
@@ -26,23 +26,20 @@ if [ -z "$1" ]; then
 fi
 
 if [ ! -f $PKG_DIR/package.mk ]; then
-  printf "$(print_color CLR_ERROR "$1: no package.mk file found")\n"
+  printf "${boldred}$1: no package.mk file found${endcolor}\n"
   exit 1
 fi
 
 # set defaults
-PKG_CONFIGURE_SCRIPT=""
-PKG_MAKE_OPTS=""
-PKG_MAKEINSTALL_OPTS=""
-
-if [ "${1//:/}" != "${1}" ]; then
-  PACKAGE_NAME="${1%:*}"
-  TARGET="${1#*:}"
-else
-  PACKAGE_NAME=$1
-  TARGET=
-fi
-[ -z "$TARGET" ] && TARGET="target"
+  PKG_CONFIGURE_SCRIPT=""
+  PKG_MAKE_OPTS=""
+  PKG_MAKEINSTALL_OPTS=""
+
+  PACKAGE_NAME=$(echo $1 | awk -F : '{print $1}')
+  TARGET=$(echo $1 | awk -F : '{print $2}')
+  if [ -z "$TARGET" ]; then
+    TARGET="target"
+  fi
 
 if [ -n "$PKG_ARCH" -a ! "$PKG_ARCH" = "any" ]; then
   echo "$PKG_ARCH" | grep -q "$TARGET_ARCH" || exit 0
@@ -137,15 +134,7 @@ if [ ! -f $STAMP ]; then
       CMAKE_BUILD_TYPE="Release"
     fi
 
-    if [ "$PKG_USE_NINJA" = "no" ]; then
-      CMAKE_GENERATOR=""
-    else
-      CMAKE_GENERATOR="-GNinja \
-                       -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
-    fi
-
-    TARGET_CMAKE_OPTS="$CMAKE_GENERATOR \
-                       -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
+    TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                        -DCMAKE_INSTALL_PREFIX=/usr \
                        -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
 
@@ -162,9 +151,9 @@ if [ ! -f $STAMP ]; then
                          --disable-static \
                          --enable-shared"
 
-    HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
-                     -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                     -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
+    HOST_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
+                     -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN \
+                     -DCMAKE_BUILD_TYPE=Release"
 
   # configure INIT build defaults
     INIT_CONFIGURE_OPTS="$TARGET_CONFIGURE_OPTS"
@@ -195,7 +184,7 @@ if [ ! -f $STAMP ]; then
       done
     fi
 
-    printf "%${BUILD_INDENT}c $(print_color CLR_BUILD "BUILD")    $PACKAGE_NAME $(print_color CLR_TARGET "($TARGET)")\n" ' '>&$SILENT_OUT
+    printf "%${BUILD_INDENT}c ${boldyellow}BUILD${endcolor}    $PACKAGE_NAME ${boldwhite}($TARGET)${endcolor}\n" ' '>&$SILENT_OUT
     export BUILD_INDENT=$((${BUILD_INDENT:-1}+$BUILD_INDENT_SIZE))
 
     if [ "$PKG_AUTORECONF" = yes ]; then
@@ -308,20 +297,6 @@ if [ ! -f $STAMP ]; then
       fi
       if [ "$(type -t make_$TARGET)" = "function" ]; then
         make_$TARGET
-      elif [ -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" ]; then
-        if [ "$TARGET" = "target" ]; then
-          echo "Executing (target): ninja $PKG_MAKE_OPTS_TARGET" | tr -s " "
-          ninja $PKG_MAKE_OPTS_TARGET
-        elif [ "$TARGET" = "host" ]; then
-          echo "Executing (host): ninja $PKG_MAKE_OPTS_HOST" | tr -s " "
-          ninja $PKG_MAKE_OPTS_HOST
-        elif [ "$TARGET" = "init" ]; then
-          echo "Executing (init): ninja $PKG_MAKE_OPTS_INIT" | tr -s " "
-          ninja $PKG_MAKE_OPTS_INIT
-        elif [ "$TARGET" = "bootstrap" ]; then
-          echo "Executing (bootstrap): ninja $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
-          ninja $PKG_MAKE_OPTS_BOOTSTRAP
-        fi
       else
         if [ "$TARGET" = "target" ]; then
           echo "Executing (target): make $PKG_MAKE_OPTS_TARGET" | tr -s " "
@@ -347,17 +322,6 @@ if [ ! -f $STAMP ]; then
       fi
       if [ "$(type -t makeinstall_$TARGET)" = "function" ]; then
         makeinstall_$TARGET
-      elif [ -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" ]; then
-        if [ "$TARGET" = "target" ]; then
-          DESTDIR=$SYSROOT_PREFIX ninja install $PKG_MAKEINSTALL_OPTS_TARGET
-          DESTDIR=$INSTALL ninja install $PKG_MAKEINSTALL_OPTS_TARGET
-        elif [ "$TARGET" = "host" ]; then
-          ninja install $PKG_MAKEINSTALL_OPTS_HOST
-        elif [ "$TARGET" = "init" ]; then
-          DESTDIR=$INSTALL ninja install $PKG_MAKEINSTALL_OPTS_INIT
-        elif [ "$TARGET" = "bootstrap" ]; then
-          ninja install $PKG_MAKEINSTALL_OPTS_BOOTSTRAP
-        fi
       else
         if [ "$TARGET" = "target" ]; then
           $MAKEINSTALL $PKG_MAKEINSTALL_OPTS_TARGET

commit 013dcf6670ca0e0ab6a826abc00b40bb454987d9
Author: AV <27rurk@gmail.com>
Date:   Sat Oct 14 03:51:17 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index a3ca8bd0b4..97574427e0 100755
--- a/scripts/build
+++ b/scripts/build
@@ -133,8 +133,8 @@ if [ ! -f $STAMP ]; then
 
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
-  # else
-  # CMAKE_BUILD_TYPE="Release"
+    else
+      CMAKE_BUILD_TYPE="Release"
     fi
 
     if [ "$PKG_USE_NINJA" = "no" ]; then
@@ -177,12 +177,6 @@ if [ ! -f $STAMP ]; then
   # include buildfile
     . $PKG_DIR/package.mk
 
-    if [ "$PKG_IS_KERNEL_PKG" = "yes" ]; then
-      if [ "$TARGET_KERNEL_ARCH" = "arm64" -a "$TARGET_ARCH" = "arm" ]; then
-        TARGET_PREFIX=$TOOLCHAIN/lib/gcc-linaro-aarch64-elf/bin/aarch64-elf-
-      fi
-    fi
-
     if [ "$TARGET" = "target" ]; then
       for p in $PKG_DEPENDS_TARGET; do
         $SCRIPTS/build $p

commit 5472b8550680af6ea864af52ad1120f975a777cf
Author: AV <27rurk@gmail.com>
Date:   Sat Oct 14 02:28:36 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 09d326ec91..a3ca8bd0b4 100755
--- a/scripts/build
+++ b/scripts/build
@@ -127,7 +127,9 @@ if [ ! -f $STAMP ]; then
                            --libdir=/usr/lib \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
-                           --enable-silent-rules"
+                           --enable-silent-rules \
+                           --disable-static \
+                           --enable-shared"
 
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"

commit 4d67db58c6b09dd9b6c06edad942ec86f460d57d
Author: AV <27rurk@gmail.com>
Date:   Sat Oct 14 00:39:15 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 928a7ac711..09d326ec91 100755
--- a/scripts/build
+++ b/scripts/build
@@ -131,8 +131,8 @@ if [ ! -f $STAMP ]; then
 
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
-    else
-      CMAKE_BUILD_TYPE="Release"
+  # else
+  # CMAKE_BUILD_TYPE="Release"
     fi
 
     if [ "$PKG_USE_NINJA" = "no" ]; then

commit f69415159d9afcf35a15c2527516925d173e017d
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 13 23:27:11 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index ab35328ab3..928a7ac711 100755
--- a/scripts/build
+++ b/scripts/build
@@ -31,15 +31,18 @@ if [ ! -f $PKG_DIR/package.mk ]; then
 fi
 
 # set defaults
-  PKG_CONFIGURE_SCRIPT=""
-  PKG_MAKE_OPTS=""
-  PKG_MAKEINSTALL_OPTS=""
-
-  PACKAGE_NAME=$(echo $1 | awk -F : '{print $1}')
-  TARGET=$(echo $1 | awk -F : '{print $2}')
-  if [ -z "$TARGET" ]; then
-    TARGET="target"
-  fi
+PKG_CONFIGURE_SCRIPT=""
+PKG_MAKE_OPTS=""
+PKG_MAKEINSTALL_OPTS=""
+
+if [ "${1//:/}" != "${1}" ]; then
+  PACKAGE_NAME="${1%:*}"
+  TARGET="${1#*:}"
+else
+  PACKAGE_NAME=$1
+  TARGET=
+fi
+[ -z "$TARGET" ] && TARGET="target"
 
 if [ -n "$PKG_ARCH" -a ! "$PKG_ARCH" = "any" ]; then
   echo "$PKG_ARCH" | grep -q "$TARGET_ARCH" || exit 0

commit 4002b85ae65d99f3df688d16c4bff9123dfb90a2
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 13 23:25:31 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index b127dbd01f..ab35328ab3 100755
--- a/scripts/build
+++ b/scripts/build
@@ -375,6 +375,15 @@ if [ ! -f $STAMP ]; then
         post_makeinstall_$TARGET
       fi
 
+      # Bump addon version to prevent online updates
+      if [ "$TARGET" = "target" -a "$PKG_IS_ADDON" = "yes" ]; then
+        mhaddonxml="$(find $INSTALL -type f -name addon.xml 2>/dev/null | head -1 || true)"
+        if [[ -n "${mhaddonxml}" ]] && [[ -f "${mhaddonxml}" ]]; then
+          mhaddonver="$(xmlstarlet sel -t -m "/addon" -m "@version" -v . -n ${mhaddonxml})"
+          [ -n "${mhaddonver}" ] && xmlstarlet edit --inplace --update "/addon/@version" --value "999.${mhaddonver}" ${mhaddonxml}
+        fi
+      fi
+
       if [ "$TARGET" = "target" -o "$TARGET" = "init" ]; then
         if [ -d $INSTALL ] ; then
           rm -rf $INSTALL/{usr/,}include

commit 983cdfd1ca21d63469bc66264ad6e8de985c9e6b
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 13 20:09:13 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 43927cedfa..b127dbd01f 100755
--- a/scripts/build
+++ b/scripts/build
@@ -132,7 +132,15 @@ if [ ! -f $STAMP ]; then
       CMAKE_BUILD_TYPE="Release"
     fi
 
-    TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
+    if [ "$PKG_USE_NINJA" = "no" ]; then
+      CMAKE_GENERATOR=""
+    else
+      CMAKE_GENERATOR="-GNinja \
+                       -DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
+    fi
+
+    TARGET_CMAKE_OPTS="$CMAKE_GENERATOR \
+                       -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
                        -DCMAKE_INSTALL_PREFIX=/usr \
                        -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
 
@@ -149,9 +157,9 @@ if [ ! -f $STAMP ]; then
                          --disable-static \
                          --enable-shared"
 
-    HOST_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
-                     -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN \
-                     -DCMAKE_BUILD_TYPE=Release"
+    HOST_CMAKE_OPTS="$CMAKE_GENERATOR \
+                     -DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
+                     -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN"
 
   # configure INIT build defaults
     INIT_CONFIGURE_OPTS="$TARGET_CONFIGURE_OPTS"
@@ -301,6 +309,20 @@ if [ ! -f $STAMP ]; then
       fi
       if [ "$(type -t make_$TARGET)" = "function" ]; then
         make_$TARGET
+      elif [ -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" ]; then
+        if [ "$TARGET" = "target" ]; then
+          echo "Executing (target): ninja $PKG_MAKE_OPTS_TARGET" | tr -s " "
+          ninja $PKG_MAKE_OPTS_TARGET
+        elif [ "$TARGET" = "host" ]; then
+          echo "Executing (host): ninja $PKG_MAKE_OPTS_HOST" | tr -s " "
+          ninja $PKG_MAKE_OPTS_HOST
+        elif [ "$TARGET" = "init" ]; then
+          echo "Executing (init): ninja $PKG_MAKE_OPTS_INIT" | tr -s " "
+          ninja $PKG_MAKE_OPTS_INIT
+        elif [ "$TARGET" = "bootstrap" ]; then
+          echo "Executing (bootstrap): ninja $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
+          ninja $PKG_MAKE_OPTS_BOOTSTRAP
+        fi
       else
         if [ "$TARGET" = "target" ]; then
           echo "Executing (target): make $PKG_MAKE_OPTS_TARGET" | tr -s " "
@@ -326,6 +348,17 @@ if [ ! -f $STAMP ]; then
       fi
       if [ "$(type -t makeinstall_$TARGET)" = "function" ]; then
         makeinstall_$TARGET
+      elif [ -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" -a ! "$PKG_USE_NINJA" = "no" ]; then
+        if [ "$TARGET" = "target" ]; then
+          DESTDIR=$SYSROOT_PREFIX ninja install $PKG_MAKEINSTALL_OPTS_TARGET
+          DESTDIR=$INSTALL ninja install $PKG_MAKEINSTALL_OPTS_TARGET
+        elif [ "$TARGET" = "host" ]; then
+          ninja install $PKG_MAKEINSTALL_OPTS_HOST
+        elif [ "$TARGET" = "init" ]; then
+          DESTDIR=$INSTALL ninja install $PKG_MAKEINSTALL_OPTS_INIT
+        elif [ "$TARGET" = "bootstrap" ]; then
+          ninja install $PKG_MAKEINSTALL_OPTS_BOOTSTRAP
+        fi
       else
         if [ "$TARGET" = "target" ]; then
           $MAKEINSTALL $PKG_MAKEINSTALL_OPTS_TARGET

commit 24eaef6a53c8d69c1b98e3e7db6e40d825627183
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 13 18:31:21 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 5315f46320..43927cedfa 100755
--- a/scripts/build
+++ b/scripts/build
@@ -193,9 +193,6 @@ if [ ! -f $STAMP ]; then
 
     if [ "$PKG_AUTORECONF" = yes ]; then
       $SCRIPTS/autoreconf $PACKAGE_NAME
-      touch $PKG_BUILD/NEWS $PKG_BUILD/AUTHORS $PKG_BUILD/ChangeLog
-      mkdir -p $PKG_BUILD/m4
-      mkdir -p $PKG_BUILD/build-aux
     fi
 
     # virtual packages dont must be build, they only contains dependencies, so dont go further here

commit e8d98eab0300eb95ff4ea6bdc35e44ebf0a1439a
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 13 11:33:04 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 848fcc34ec..5315f46320 100755
--- a/scripts/build
+++ b/scripts/build
@@ -129,7 +129,7 @@ if [ ! -f $STAMP ]; then
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
     else
-      CMAKE_BUILD_TYPE="MinSizeRel"
+      CMAKE_BUILD_TYPE="Release"
     fi
 
     TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \

commit 299b138233aa8873dd7748f8c0afe7515b9c0cd9
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 13 11:25:43 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 57cf4178bd..848fcc34ec 100755
--- a/scripts/build
+++ b/scripts/build
@@ -193,6 +193,9 @@ if [ ! -f $STAMP ]; then
 
     if [ "$PKG_AUTORECONF" = yes ]; then
       $SCRIPTS/autoreconf $PACKAGE_NAME
+      touch $PKG_BUILD/NEWS $PKG_BUILD/AUTHORS $PKG_BUILD/ChangeLog
+      mkdir -p $PKG_BUILD/m4
+      mkdir -p $PKG_BUILD/build-aux
     fi
 
     # virtual packages dont must be build, they only contains dependencies, so dont go further here

commit 676638b970f4113e23d6ca88e48a9b7313f42906
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 13 11:14:28 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 43f9fbed9d..57cf4178bd 100755
--- a/scripts/build
+++ b/scripts/build
@@ -124,8 +124,7 @@ if [ ! -f $STAMP ]; then
                            --libdir=/usr/lib \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
-                           --disable-static \
-                           --enable-shared"
+                           --enable-silent-rules"
 
     if [ "$DEBUG" = "yes" ]; then
       CMAKE_BUILD_TYPE="Debug"
@@ -146,6 +145,7 @@ if [ ! -f $STAMP ]; then
                          --sysconfdir=$TOOLCHAIN/etc \
                          --libexecdir=$TOOLCHAIN/lib \
                          --localstatedir=$TOOLCHAIN/var \
+                         --enable-silent-rules \
                          --disable-static \
                          --enable-shared"
 

commit 3f6f7651d5d8bf6802ab6c2188f43845018b3233
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 13 10:01:59 2017 -0400

    \autocommit on change'

diff --git a/scripts/build b/scripts/build
index 0167dd877c..43f9fbed9d 100755
--- a/scripts/build
+++ b/scripts/build
@@ -26,15 +26,20 @@ if [ -z "$1" ]; then
 fi
 
 if [ ! -f $PKG_DIR/package.mk ]; then
-  printf "${boldred}$1: no package.mk file found${endcolor}\n"
+  printf "$(print_color CLR_ERROR "$1: no package.mk file found")\n"
   exit 1
 fi
 
-PACKAGE_NAME=$(echo $1 | awk -F : '{print $1}')
-TARGET=$(echo $1 | awk -F : '{print $2}')
-if [ -z "$TARGET" ]; then
-  TARGET="target"
-fi
+# set defaults
+  PKG_CONFIGURE_SCRIPT=""
+  PKG_MAKE_OPTS=""
+  PKG_MAKEINSTALL_OPTS=""
+
+  PACKAGE_NAME=$(echo $1 | awk -F : '{print $1}')
+  TARGET=$(echo $1 | awk -F : '{print $2}')
+  if [ -z "$TARGET" ]; then
+    TARGET="target"
+  fi
 
 if [ -n "$PKG_ARCH" -a ! "$PKG_ARCH" = "any" ]; then
   echo "$PKG_ARCH" | grep -q "$TARGET_ARCH" || exit 0
@@ -49,6 +54,7 @@ STAMP=$STAMPS/$PACKAGE_NAME/build_$TARGET
 $SCRIPTS/unpack $PACKAGE_NAME
 
 STAMP_DEPENDS="$PKG_DIR $PKG_NEED_UNPACK $PROJECT_DIR/$PROJECT/patches/$PKG_NAME"
+[ -n "$DEVICE" ] && STAMP_DEPENDS="$STAMP_DEPENDS $PROJECT_DIR/$PROJECT/devices/$DEVICE/patches/$PKG_NAME"
 
 if [ -f $STAMP ] ; then
   . $STAMP
@@ -64,102 +70,156 @@ if [ ! -f $STAMP ]; then
   setup_toolchain $TARGET
 
   # unset functions
-    unset -f pre_build_$TARGET
-    unset -f pre_configure_$TARGET
-    unset -f configure_$TARGET
-    unset -f post_configure_$TARGET
-    unset -f pre_make_$TARGET
-    unset -f make_$TARGET
-    unset -f post_make_$TARGET
-    unset -f pre_makeinstall_$TARGET
-    unset -f makeinstall_$TARGET
-    unset -f post_makeinstall_$TARGET
-
-  # include builddefaults
-    . $CONFIG/build.builddefaults
+    unset -f pre_build_target
+    unset -f pre_configure_target
+    unset -f configure_target
+    unset -f post_configure_target
+    unset -f pre_make_target
+    unset -f make_target
+    unset -f post_make_target
+    unset -f pre_makeinstall_target
+    unset -f makeinstall_target
+    unset -f post_makeinstall_target
+
+    unset -f pre_build_host
+    unset -f pre_configure_host
+    unset -f configure_host
+    unset -f post_configure_host
+    unset -f pre_make_host
+    unset -f make_host
+    unset -f post_make_host
+    unset -f pre_makeinstall_host
+    unset -f makeinstall_host
+    unset -f post_makeinstall_host
+
+    unset -f pre_build_init
+    unset -f pre_configure_init
+    unset -f configure_init
+    unset -f post_configure_init
+    unset -f pre_make_init
+    unset -f make_init
+    unset -f post_make_init
+    unset -f pre_makeinstall_init
+    unset -f makeinstall_init
+    unset -f post_makeinstall_init
+
+    unset -f pre_build_bootstrap
+    unset -f pre_configure_bootstrap
+    unset -f configure_bootstrap
+    unset -f post_configure_bootstrap
+    unset -f pre_make_bootstrap
+    unset -f make_bootstrap
+    unset -f post_make_bootstrap
+    unset -f pre_makeinstall_bootstrap
+    unset -f makeinstall_bootstrap
+    unset -f post_makeinstall_bootstrap
+
+  # configure TARGET build defaults
+    TARGET_CONFIGURE_OPTS="--host=$TARGET_NAME \
+                           --build=$HOST_NAME \
+                           --prefix=/usr \
+                           --bindir=/usr/bin \
+                           --sbindir=/usr/sbin \
+                           --sysconfdir=/etc \
+                           --libdir=/usr/lib \
+                           --libexecdir=/usr/lib \
+                           --localstatedir=/var \
+                           --disable-static \
+                           --enable-shared"
+
+    if [ "$DEBUG" = "yes" ]; then
+      CMAKE_BUILD_TYPE="Debug"
+    else
+      CMAKE_BUILD_TYPE="MinSizeRel"
+    fi
+
+    TARGET_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
+                       -DCMAKE_INSTALL_PREFIX=/usr \
+                       -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE"
+
+  # configure HOST build defaults
+    HOST_CONFIGURE_OPTS="--host=$HOST_NAME \
+                         --build=$HOST_NAME \
+                         --prefix=$TOOLCHAIN \
+                         --bindir=$TOOLCHAIN/bin \
+                         --sbindir=$TOOLCHAIN/sbin \
+                         --sysconfdir=$TOOLCHAIN/etc \
+                         --libexecdir=$TOOLCHAIN/lib \
+                         --localstatedir=$TOOLCHAIN/var \
+                         --disable-static \
+                         --enable-shared"
+
+    HOST_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=$CMAKE_CONF \
+                     -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN \
+                     -DCMAKE_BUILD_TYPE=Release"
+
+  # configure INIT build defaults
+    INIT_CONFIGURE_OPTS="$TARGET_CONFIGURE_OPTS"
+    INIT_CMAKE_OPTS="$TARGET_CMAKE_OPTS"
+
+  # configure BOOTSTRAP build defaults
+    BOOTSTRAP_CONFIGURE_OPTS="$HOST_CONFIGURE_OPTS"
+    BOOTSTRAP_CMAKE_OPTS="$HOST_CMAKE_OPTS"
 
   # include buildfile
     . $PKG_DIR/package.mk
 
-    case "$TARGET" in
-      target)
-        for p in $PKG_DEPENDS_TARGET; do
-          $SCRIPTS/build $p
-        done
-        ;;
-      host)
-        for p in $PKG_DEPENDS_HOST; do
-          $SCRIPTS/build $p
-        done
-        ;;
-      init)
-        for p in $PKG_DEPENDS_INIT; do
-          $SCRIPTS/build $p
-        done
-        ;;
-      bootstrap)
-        for p in $PKG_DEPENDS_BOOTSTRAP; do
-          $SCRIPTS/build $p
-        done
-        ;;
-    esac
-
-    printf "%${BUILD_INDENT}c ${boldyellow}BUILD${endcolor}    $PACKAGE_NAME ${boldwhite}($TARGET)${endcolor}\n" ' '>&$SILENT_OUT
-    export BUILD_INDENT=$((${BUILD_INDENT:-1}+$BUILD_INDENT_SIZE))
-
-    if [ "$PKG_AUTORECONF" = yes ]; then
-      if [ ! -f "$PKG_BUILD/configure.in" \
-          -a ! -f "$PKG_BUILD/configure.ac" ] ; then
-        echo "configure.in or configure.ac not found"
-        exit 1
+    if [ "$PKG_IS_KERNEL_PKG" = "yes" ]; then
+      if [ "$TARGET_KERNEL_ARCH" = "arm64" -a "$TARGET_ARCH" = "arm" ]; then
+        TARGET_PREFIX=$TOOLCHAIN/lib/gcc-linaro-aarch64-elf/bin/aarch64-elf-
       fi
+    fi
 
-      if [ ! -f $PKG_BUILD/.autoreconf-done ] ; then
-        touch $PKG_BUILD/NEWS $PKG_BUILD/AUTHORS $PKG_BUILD/ChangeLog
-        mkdir -p $PKG_BUILD/m4
-        mkdir -p $PKG_BUILD/build-aux
+    if [ "$TARGET" = "target" ]; then
+      for p in $PKG_DEPENDS_TARGET; do
+        $SCRIPTS/build $p
+      done
+    elif [ "$TARGET" = "host" ]; then
+      for p in $PKG_DEPENDS_HOST; do
+        $SCRIPTS/build $p
+      done
+    elif [ "$TARGET" = "init" ]; then
+      for p in $PKG_DEPENDS_INIT; do
+        $SCRIPTS/build $p
+      done
+    elif [ "$TARGET" = "bootstrap" ]; then
+      for p in $PKG_DEPENDS_BOOTSTRAP; do
+        $SCRIPTS/build $p
+      done
+    fi
 
-        printf "%${BUILD_INDENT}c ${boldmagenta}AUTORECONF${endcolor}   $1\n" ' '>&$SILENT_OUT
-        export BUILD_INDENT=$((${BUILD_INDENT:-1}+$BUILD_INDENT_SIZE))
+    printf "%${BUILD_INDENT}c $(print_color CLR_BUILD "BUILD")    $PACKAGE_NAME $(print_color CLR_TARGET "($TARGET)")\n" ' '>&$SILENT_OUT
+    export BUILD_INDENT=$((${BUILD_INDENT:-1}+$BUILD_INDENT_SIZE))
 
-        do_autoreconf $PKG_BUILD
-        touch $PKG_BUILD/.autoreconf-done
-      fi
+    if [ "$PKG_AUTORECONF" = yes ]; then
+      $SCRIPTS/autoreconf $PACKAGE_NAME
     fi
 
     # virtual packages dont must be build, they only contains dependencies, so dont go further here
     if [ ! "$PKG_SECTION" = "virtual" ]; then
 
       # configure other variables
-      INSTALL_DEV=$ROOT/$PKG_BUILD/.install_dev
-      case "$TARGET" in
-        target)
-          INSTALL=$ROOT/$PKG_BUILD/.install_pkg
-          ;;
-        init)
-          INSTALL=$ROOT/$PKG_BUILD/.install_init
-          ;;
-      esac
-
-      # clean up
-      [ -n "$INSTALL" ] && rm -rf $INSTALL
+      if [ "$TARGET" = "target" ]; then
+        INSTALL=$PKG_BUILD/.install_pkg
+      elif [ "$TARGET" = "init" ]; then
+        INSTALL=$PKG_BUILD/.install_init
+      fi
+
+       # clean up
+       if [ ! -z "$INSTALL" ] ; then
+         if [ -d "$INSTALL" ] ; then
+           rm -rf $INSTALL
+         fi
+       fi
 
       # setup configure script
       if [ -z "$PKG_CONFIGURE_SCRIPT" ]; then
-        PKG_CONFIGURE_SCRIPT="$ROOT/$PKG_BUILD/configure"
+        PKG_CONFIGURE_SCRIPT="$PKG_BUILD/configure"
       else
-        PKG_CONFIGURE_SCRIPT="$ROOT/$PKG_BUILD/$PKG_CONFIGURE_SCRIPT"
+        PKG_CONFIGURE_SCRIPT="$PKG_BUILD/$PKG_CONFIGURE_SCRIPT"
       fi
-
-      PKG_CMAKE_SCRIPT="$ROOT/$PKG_BUILD/CMakeLists.txt"
-      if [ "$TARGET" = "target" -a -n "$PKG_CMAKE_SCRIPT_TARGET" ]; then
-        PKG_CMAKE_SCRIPT="$ROOT/$PKG_BUILD/$PKG_CMAKE_SCRIPT_TARGET"
-      elif [ "$TARGET" = "host" -a -n "$PKG_CMAKE_SCRIPT_HOST" ]; then
-        PKG_CMAKE_SCRIPT="$ROOT/$PKG_BUILD/$PKG_CMAKE_SCRIPT_HOST"
-      elif [ "$TARGET" = "init" -a -n "$PKG_CMAKE_SCRIPT_INIT" ]; then
-        PKG_CMAKE_SCRIPT="$ROOT/$PKG_BUILD/$PKG_CMAKE_SCRIPT_INIT"
-      elif [ "$TARGET" = "bootstrap" -a -n "$PKG_CMAKE_SCRIPT_BOOTSTRAP" ]; then
-        PKG_CMAKE_SCRIPT="$ROOT/$PKG_BUILD/$PKG_CMAKE_SCRIPT_BOOTSTRAP"
+      if [ -z "$PKG_CMAKE_SCRIPT" ]; then
+        PKG_CMAKE_SCRIPT="$PKG_BUILD/CMakeLists.txt"
       fi
 
       # include build template and build
@@ -168,35 +228,33 @@ if [ ! -f $STAMP ]; then
       fi
 
       # ensure $PKG_BUILD is there. (installer? PKG_URL="")
-      mkdir -p $PKG_BUILD
+      if [ ! -d $PKG_BUILD ] ; then
+        mkdir -p $PKG_BUILD
+      fi
 
       cd $PKG_BUILD
-        case "$TARGET" in
-          target)
-            if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" ]; then
-              mkdir -p .$TARGET_NAME
-              cd .$TARGET_NAME
-            fi
-            ;;
-          host)
-            if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" ]; then
-              mkdir -p .$HOST_NAME
-              cd .$HOST_NAME
-            fi
-            ;;
-          init)
-            if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" ]; then
-              mkdir -p .$TARGET_NAME-$TARGET
-              cd .$TARGET_NAME-$TARGET
-            fi
-            ;;
-          bootstrap)
-            if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" ]; then
-              mkdir -p .$HOST_NAME-$TARGET
-              cd .$HOST_NAME-$TARGET
-            fi
-            ;;
-        esac
+
+      if [ "$TARGET" = "target" ]; then
+        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" ]; then
+          mkdir -p .$TARGET_NAME
+          cd .$TARGET_NAME
+        fi
+      elif [ "$TARGET" = "host" ]; then
+        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" ]; then
+          mkdir -p .$HOST_NAME
+          cd .$HOST_NAME
+        fi
+      elif [ "$TARGET" = "init" ]; then
+        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" ]; then
+          mkdir -p .$TARGET_NAME-$TARGET
+          cd .$TARGET_NAME-$TARGET
+        fi
+      elif [ "$TARGET" = "bootstrap" ]; then
+        if [ -f "$PKG_CONFIGURE_SCRIPT" -o -f "$PKG_CMAKE_SCRIPT" ]; then
+          mkdir -p .$HOST_NAME-$TARGET
+          cd .$HOST_NAME-$TARGET
+        fi
+      fi
 
       # configure
       if [ "$(type -t pre_configure_$TARGET)" = "function" ]; then
@@ -205,35 +263,33 @@ if [ ! -f $STAMP ]; then
       if [ "$(type -t configure_$TARGET)" = "function" ]; then
         configure_$TARGET
       elif [ -f "$PKG_CMAKE_SCRIPT" -a ! "$PKG_USE_CMAKE" = "no" ]; then
-        case "$TARGET" in
-          target)
-            cmake $TARGET_CMAKE_OPTS $PKG_CMAKE_OPTS_TARGET $(dirname $PKG_CMAKE_SCRIPT)
-            ;;
-          host)
-            cmake $HOST_CMAKE_OPTS $PKG_CMAKE_OPTS_HOST $(dirname $PKG_CMAKE_SCRIPT)
-            ;;
-          init)
-            cmake $INIT_CMAKE_OPTS $PKG_CMAKE_OPTS_INIT $(dirname $PKG_CMAKE_SCRIPT)
-            ;;
-          bootstrap)
-            cmake $BOOTSTRAP_CMAKE_OPTS $PKG_CMAKE_OPTS_BOOTSTRAP $(dirname $PKG_CMAKE_SCRIPT)
-            ;;
-        esac
+        if [ "$TARGET" = "target" ]; then
+          echo "Executing (target): cmake $TARGET_CMAKE_OPTS $PKG_CMAKE_OPTS_TARGET $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
+          cmake $TARGET_CMAKE_OPTS $PKG_CMAKE_OPTS_TARGET $(dirname $PKG_CMAKE_SCRIPT)
+        elif [ "$TARGET" = "host" ]; then
+          echo "Executing (host): cmake $HOST_CMAKE_OPTS $PKG_CMAKE_OPTS_HOST $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
+          cmake $HOST_CMAKE_OPTS $PKG_CMAKE_OPTS_HOST $(dirname $PKG_CMAKE_SCRIPT)
+        elif [ "$TARGET" = "init" ]; then
+          echo "Executing (init): cmake $INIT_CMAKE_OPTS $PKG_CMAKE_OPTS_INIT $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
+          cmake $INIT_CMAKE_OPTS $PKG_CMAKE_OPTS_INIT $(dirname $PKG_CMAKE_SCRIPT)
+        elif [ "$TARGET" = "bootstrap" ]; then
+          echo "Executing (bootstrap): cmake $BOOTSTRAP_CMAKE_OPTS $PKG_CMAKE_OPTS_BOOTSTRAP $(dirname $PKG_CMAKE_SCRIPT)" | tr -s " "
+          cmake $BOOTSTRAP_CMAKE_OPTS $PKG_CMAKE_OPTS_BOOTSTRAP $(dirname $PKG_CMAKE_SCRIPT)
+        fi
       elif [ -f "$PKG_CONFIGURE_SCRIPT" ]; then
-        case "$TARGET" in
-          target)
-            $PKG_CONFIGURE_SCRIPT $TARGET_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_TARGET
-            ;;
-          host)
-            $PKG_CONFIGURE_SCRIPT $HOST_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_HOST
-            ;;
-          init)
-            $PKG_CONFIGURE_SCRIPT $INIT_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_INIT
-            ;;
-          bootstrap)
-            $PKG_CONFIGURE_SCRIPT $BOOTSTRAP_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_BOOTSTRAP
-            ;;
-        esac
+        if [ "$TARGET" = "target" ]; then
+          echo "Executing (target): $PKG_CONFIGURE_SCRIPT $TARGET_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_TARGET" | tr -s " "
+          $PKG_CONFIGURE_SCRIPT $TARGET_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_TARGET
+        elif [ "$TARGET" = "host" ]; then
+          echo "Executing (host): $PKG_CONFIGURE_SCRIPT $HOST_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_HOST" | tr -s " "
+          $PKG_CONFIGURE_SCRIPT $HOST_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_HOST
+        elif [ "$TARGET" = "init" ]; then
+          echo "Executing (init): $PKG_CONFIGURE_SCRIPT $INIT_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_INIT" | tr -s " "
+          $PKG_CONFIGURE_SCRIPT $INIT_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_INIT
+        elif [ "$TARGET" = "bootstrap" ]; then
+          echo "Executing (bootstrap): $PKG_CONFIGURE_SCRIPT $BOOTSTRAP_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_BOOTSTRAP" | tr -s " "
+          $PKG_CONFIGURE_SCRIPT $BOOTSTRAP_CONFIGURE_OPTS $PKG_CONFIGURE_OPTS_BOOTSTRAP
+        fi
       fi
       if [ "$(type -t post_configure_$TARGET)" = "function" ]; then
         post_configure_$TARGET
@@ -246,70 +302,41 @@ if [ ! -f $STAMP ]; then
       if [ "$(type -t make_$TARGET)" = "function" ]; then
         make_$TARGET
       else
-        case "$TARGET" in
-          target)
-            make $PKG_MAKE_OPTS_TARGET
-            ;;
-          host)
-            make $PKG_MAKE_OPTS_HOST
-            ;;
-          init)
-            make $PKG_MAKE_OPTS_INIT
-            ;;
-          bootstrap)
-            make $PKG_MAKE_OPTS_BOOTSTRAP
-            ;;
-        esac
+        if [ "$TARGET" = "target" ]; then
+          echo "Executing (target): make $PKG_MAKE_OPTS_TARGET" | tr -s " "
+          make $PKG_MAKE_OPTS_TARGET
+        elif [ "$TARGET" = "host" ]; then
+          echo "Executing (host): make $PKG_MAKE_OPTS_HOST" | tr -s " "
+          make $PKG_MAKE_OPTS_HOST
+        elif [ "$TARGET" = "init" ]; then
+          echo "Executing (init): make $PKG_MAKE_OPTS_INIT" | tr -s " "
+          make $PKG_MAKE_OPTS_INIT
+        elif [ "$TARGET" = "bootstrap" ]; then
+          echo "Executing (bootstrap): make $PKG_MAKE_OPTS_BOOTSTRAP" | tr -s " "
+          make $PKG_MAKE_OPTS_BOOTSTRAP
+        fi
       fi
       if [ "$(type -t post_make_$TARGET)" = "function" ]; then
         post_make_$TARGET
       fi
 
-      # Bump addon version to prevent online updates
-      if [ "$TARGET" = "target" -a "$PKG_IS_ADDON" = "yes" ]; then
-        mhaddonxml="$ROOT/$PKG_BUILD/$PKG_NAME/addon.xml"
-        [ -f ${mhaddonxml} ] || mhaddonxml="$ROOT/$PKG_BUILD/addon.xml"
-        if [ -f ${mhaddonxml} ]; then
-          mhaddonver="$(xmlstarlet sel -t -m "/addon" -m "@version" -v . -n ${mhaddonxml})"
-          [ -n "${mhaddonver}" ] && xmlstarlet edit --inplace --update "/addon/@version" --value "999.${mhaddonver}" ${mhaddonxml}
-        fi
-      fi
-
       # make install
       if [ "$(type -t pre_makeinstall_$TARGET)" = "function" ]; then
         pre_makeinstall_$TARGET
       fi
       if [ "$(type -t makeinstall_$TARGET)" = "function" ]; then
         makeinstall_$TARGET
-        if [ "$TARGET" = "target" -a -d "$INSTALL_DEV" ]; then
-          mkdir -p $INSTALL
-            cp -PRv $INSTALL_DEV/* $INSTALL
-        fi
       else
-        case "$TARGET" in
-          target)
-            make install DESTDIR=$INSTALL_DEV $PKG_MAKEINSTALL_OPTS_TARGET
-            for i in `find $INSTALL_DEV/lib/ -name "*.la" 2>/dev/null`; do \
-              $SED "s:\(['= ]\)/lib:\\1$SYSROOT_PREFIX/lib:g" $i; \
-            done
-            for i in `find $INSTALL_DEV/usr/lib/ -name "*.la" 2>/dev/null`; do \
-              $SED "s:\(['= ]\)/usr:\\1$SYSROOT_PREFIX/usr:g" $i; \
-            done
-            mkdir -p $SYSROOT_PREFIX
-              cp -PRvf $INSTALL_DEV/* $SYSROOT_PREFIX
-            mkdir -p $INSTALL
-              cp -PRvf $INSTALL_DEV/* $INSTALL
-            ;;
-          host)
-            make install $PKG_MAKEINSTALL_OPTS_HOST
-            ;;
-          init)
-            make install DESTDIR=$INSTALL $PKG_MAKEINSTALL_OPTS_INIT
-            ;;
-          bootstrap)
-            make install $PKG_MAKEINSTALL_OPTS_BOOTSTRAP
-            ;;
-        esac
+        if [ "$TARGET" = "target" ]; then
+          $MAKEINSTALL $PKG_MAKEINSTALL_OPTS_TARGET
+          make install DESTDIR=$INSTALL $PKG_MAKEINSTALL_OPTS_TARGET
+        elif [ "$TARGET" = "host" ]; then
+          make install $PKG_MAKEINSTALL_OPTS_HOST
+        elif [ "$TARGET" = "init" ]; then
+          make install DESTDIR=$INSTALL $PKG_MAKEINSTALL_OPTS_INIT
+        elif [ "$TARGET" = "bootstrap" ]; then
+          make install $PKG_MAKEINSTALL_OPTS_BOOTSTRAP
+        fi
       fi
       if [ "$(type -t post_makeinstall_$TARGET)" = "function" ]; then
         post_makeinstall_$TARGET
@@ -326,9 +353,10 @@ if [ ! -f $STAMP ]; then
           rm -rf $INSTALL/{usr/,}share/doc
           rm -rf $INSTALL/{usr/,}share/gtk-doc
           rm -rf $INSTALL/{usr/,}share/info
-          [ ! "$PKG_LOCALE_INSTALL" = yes ] && rm -rf $INSTALL/{usr/,}share/locale
+          rm -rf $INSTALL/{usr/,}share/locale
           rm -rf $INSTALL/{usr/,}share/man
           rm -rf $INSTALL/{usr/,}share/pkgconfig
+          rm -rf $INSTALL/{usr/,}share/zsh
           rm -rf $INSTALL/{usr/,}var
           find $INSTALL \( -name "*.orig" \
                         -o -name "*.rej" \
@@ -360,6 +388,10 @@ if [ ! -f $STAMP ]; then
       cd $ROOT
     fi  # ! "$PKG_SECTION" = "virtual"
 
+    for i in `find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null`; do \
+      $SED "s:\(['= ]\)/usr:\\1$SYSROOT_PREFIX/usr:g" $i; \
+    done
+
     PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
     for i in PKG_NAME PKG_DEEPMD5; do
       echo "STAMP_$i=\"${!i}\"" >> $STAMP

commit 1b113ab6365efca8cc9edc7c9b24fa8a9a53de92
Author: AV <27rurk@gmail.com>
Date:   Tue Oct 10 07:52:08 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 5ff806141b..0167dd877c 100755
--- a/scripts/build
+++ b/scripts/build
@@ -330,25 +330,29 @@ if [ ! -f $STAMP ]; then
           rm -rf $INSTALL/{usr/,}share/man
           rm -rf $INSTALL/{usr/,}share/pkgconfig
           rm -rf $INSTALL/{usr/,}var
-          find $INSTALL \( -name "*.orig" -o \
-                           -name "*.a" -o \
-                           -name "*.la" -o \
-                           -name "*.so*T" -o \
-                           -name "*.o" -o \
-                           -name "*.in" -o \
-                           -name "*.rej" -o \
-                           -name ".git*" \) \
-                           -exec rm -f "{}" ";" 2>/dev/null || true
-          find $INSTALL -type d -exec rmdir -p "{}" ";" 2>/dev/null || true
+          find $INSTALL \( -name "*.orig" \
+                        -o -name "*.rej" \
+                        -o -name "*.a" \
+                        -o -name "*.la" \
+                        -o -name "*.o" \
+                        -o -name "*.in" \
+                        -o -name ".git*" \) \
+            -exec rm -f {} \; 2>/dev/null || :
+          find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
 
           if [ ! "$DEBUG" = yes ]; then
-            $STRIP `find $INSTALL -name "*.so" 2>/dev/null` 2>/dev/null || :
-            $STRIP `find $INSTALL -name "*.so.[0-9]*" 2>/dev/null` 2>/dev/null || :
-
-            # strip kernel modules
-            for MOD in `find $INSTALL/lib $INSTALL/usr/lib -type f -name *.ko`; do
-              $STRIP --strip-debug $MOD
-            done
+            $STRIP `find $INSTALL \
+              -type f -name "*.so*" \
+              ! -name "ld-*.so" \
+              ! -name "libc-*.so" \
+              ! -name "libpthread-*.so" \
+              ! -name "libthread_db-*so" \
+              2>/dev/null` 2>/dev/null || :
+            if [ "$TARGET" = "init" ]; then
+              $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
+            fi
+            $STRIP `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
+              -type f -executable 2>/dev/null` 2>/dev/null || :
           fi
         fi
       fi
@@ -358,7 +362,6 @@ if [ ! -f $STAMP ]; then
 
     PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
     for i in PKG_NAME PKG_DEEPMD5; do
-      eval val=\$$i
-      echo "STAMP_$i=\"$val\"" >> $STAMP
+      echo "STAMP_$i=\"${!i}\"" >> $STAMP
     done
 fi

commit 5919e99a5770f87b3f9ed01901f3436ada46d3e1
Author: AV <27rurk@gmail.com>
Date:   Tue Oct 10 07:40:36 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 0167dd877c..5ff806141b 100755
--- a/scripts/build
+++ b/scripts/build
@@ -330,29 +330,25 @@ if [ ! -f $STAMP ]; then
           rm -rf $INSTALL/{usr/,}share/man
           rm -rf $INSTALL/{usr/,}share/pkgconfig
           rm -rf $INSTALL/{usr/,}var
-          find $INSTALL \( -name "*.orig" \
-                        -o -name "*.rej" \
-                        -o -name "*.a" \
-                        -o -name "*.la" \
-                        -o -name "*.o" \
-                        -o -name "*.in" \
-                        -o -name ".git*" \) \
-            -exec rm -f {} \; 2>/dev/null || :
-          find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
+          find $INSTALL \( -name "*.orig" -o \
+                           -name "*.a" -o \
+                           -name "*.la" -o \
+                           -name "*.so*T" -o \
+                           -name "*.o" -o \
+                           -name "*.in" -o \
+                           -name "*.rej" -o \
+                           -name ".git*" \) \
+                           -exec rm -f "{}" ";" 2>/dev/null || true
+          find $INSTALL -type d -exec rmdir -p "{}" ";" 2>/dev/null || true
 
           if [ ! "$DEBUG" = yes ]; then
-            $STRIP `find $INSTALL \
-              -type f -name "*.so*" \
-              ! -name "ld-*.so" \
-              ! -name "libc-*.so" \
-              ! -name "libpthread-*.so" \
-              ! -name "libthread_db-*so" \
-              2>/dev/null` 2>/dev/null || :
-            if [ "$TARGET" = "init" ]; then
-              $STRIP `find $INSTALL -type f -name "*.so*" 2>/dev/null` 2>/dev/null || :
-            fi
-            $STRIP `find $INSTALL/bin $INSTALL/usr/bin $INSTALL/sbin $INSTALL/usr/sbin \
-              -type f -executable 2>/dev/null` 2>/dev/null || :
+            $STRIP `find $INSTALL -name "*.so" 2>/dev/null` 2>/dev/null || :
+            $STRIP `find $INSTALL -name "*.so.[0-9]*" 2>/dev/null` 2>/dev/null || :
+
+            # strip kernel modules
+            for MOD in `find $INSTALL/lib $INSTALL/usr/lib -type f -name *.ko`; do
+              $STRIP --strip-debug $MOD
+            done
           fi
         fi
       fi
@@ -362,6 +358,7 @@ if [ ! -f $STAMP ]; then
 
     PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
     for i in PKG_NAME PKG_DEEPMD5; do
-      echo "STAMP_$i=\"${!i}\"" >> $STAMP
+      eval val=\$$i
+      echo "STAMP_$i=\"$val\"" >> $STAMP
     done
 fi

commit b54db67ef4641f95dcc33113eeec4376dbfb71ce
Author: AV <27rurk@gmail.com>
Date:   Sat Oct 7 00:56:55 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index fe085bd75e..0167dd877c 100755
--- a/scripts/build
+++ b/scripts/build
@@ -330,16 +330,15 @@ if [ ! -f $STAMP ]; then
           rm -rf $INSTALL/{usr/,}share/man
           rm -rf $INSTALL/{usr/,}share/pkgconfig
           rm -rf $INSTALL/{usr/,}var
-          find $INSTALL \( -name "*.orig" -o \
-                           -name "*.a" -o \
-                           -name "*.la" -o \
-                           -name "*.so*T" -o \
-                           -name "*.o" -o \
-                           -name "*.in" -o \
-                           -name "*.rej" -o \
-                           -name ".git*" \) \
-                           -exec rm -f "{}" ";" 2>/dev/null || true
-          find $INSTALL -type d -exec rmdir -p "{}" ";" 2>/dev/null || true
+          find $INSTALL \( -name "*.orig" \
+                        -o -name "*.rej" \
+                        -o -name "*.a" \
+                        -o -name "*.la" \
+                        -o -name "*.o" \
+                        -o -name "*.in" \
+                        -o -name ".git*" \) \
+            -exec rm -f {} \; 2>/dev/null || :
+          find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
 
           if [ ! "$DEBUG" = yes ]; then
             $STRIP `find $INSTALL \
@@ -363,7 +362,6 @@ if [ ! -f $STAMP ]; then
 
     PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
     for i in PKG_NAME PKG_DEEPMD5; do
-      eval val=\$$i
-      echo "STAMP_$i=\"$val\"" >> $STAMP
+      echo "STAMP_$i=\"${!i}\"" >> $STAMP
     done
 fi

commit 3ef9b3bc50e06aef3ea362ae46be8d086b449fbb
Author: AV <27rurk@gmail.com>
Date:   Sat Oct 7 00:23:28 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 0167dd877c..fe085bd75e 100755
--- a/scripts/build
+++ b/scripts/build
@@ -330,15 +330,16 @@ if [ ! -f $STAMP ]; then
           rm -rf $INSTALL/{usr/,}share/man
           rm -rf $INSTALL/{usr/,}share/pkgconfig
           rm -rf $INSTALL/{usr/,}var
-          find $INSTALL \( -name "*.orig" \
-                        -o -name "*.rej" \
-                        -o -name "*.a" \
-                        -o -name "*.la" \
-                        -o -name "*.o" \
-                        -o -name "*.in" \
-                        -o -name ".git*" \) \
-            -exec rm -f {} \; 2>/dev/null || :
-          find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
+          find $INSTALL \( -name "*.orig" -o \
+                           -name "*.a" -o \
+                           -name "*.la" -o \
+                           -name "*.so*T" -o \
+                           -name "*.o" -o \
+                           -name "*.in" -o \
+                           -name "*.rej" -o \
+                           -name ".git*" \) \
+                           -exec rm -f "{}" ";" 2>/dev/null || true
+          find $INSTALL -type d -exec rmdir -p "{}" ";" 2>/dev/null || true
 
           if [ ! "$DEBUG" = yes ]; then
             $STRIP `find $INSTALL \
@@ -362,6 +363,7 @@ if [ ! -f $STAMP ]; then
 
     PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
     for i in PKG_NAME PKG_DEEPMD5; do
-      echo "STAMP_$i=\"${!i}\"" >> $STAMP
+      eval val=\$$i
+      echo "STAMP_$i=\"$val\"" >> $STAMP
     done
 fi

commit 343402095aac1041d0982a05c053243006e5922c
Author: AV <27rurk@gmail.com>
Date:   Fri Oct 6 22:55:53 2017 -0400

    autocommit on change

diff --git a/scripts/build b/scripts/build
index fe085bd75e..0167dd877c 100755
--- a/scripts/build
+++ b/scripts/build
@@ -330,16 +330,15 @@ if [ ! -f $STAMP ]; then
           rm -rf $INSTALL/{usr/,}share/man
           rm -rf $INSTALL/{usr/,}share/pkgconfig
           rm -rf $INSTALL/{usr/,}var
-          find $INSTALL \( -name "*.orig" -o \
-                           -name "*.a" -o \
-                           -name "*.la" -o \
-                           -name "*.so*T" -o \
-                           -name "*.o" -o \
-                           -name "*.in" -o \
-                           -name "*.rej" -o \
-                           -name ".git*" \) \
-                           -exec rm -f "{}" ";" 2>/dev/null || true
-          find $INSTALL -type d -exec rmdir -p "{}" ";" 2>/dev/null || true
+          find $INSTALL \( -name "*.orig" \
+                        -o -name "*.rej" \
+                        -o -name "*.a" \
+                        -o -name "*.la" \
+                        -o -name "*.o" \
+                        -o -name "*.in" \
+                        -o -name ".git*" \) \
+            -exec rm -f {} \; 2>/dev/null || :
+          find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
 
           if [ ! "$DEBUG" = yes ]; then
             $STRIP `find $INSTALL \
@@ -363,7 +362,6 @@ if [ ! -f $STAMP ]; then
 
     PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
     for i in PKG_NAME PKG_DEEPMD5; do
-      eval val=\$$i
-      echo "STAMP_$i=\"$val\"" >> $STAMP
+      echo "STAMP_$i=\"${!i}\"" >> $STAMP
     done
 fi

commit ceec40332e149a486c60a919983a97e337ab436c
Author: AV <27rurk@gmail.com>
Date:   Tue Sep 19 23:44:25 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 0847191cbb..fe085bd75e 100755
--- a/scripts/build
+++ b/scripts/build
@@ -330,15 +330,16 @@ if [ ! -f $STAMP ]; then
           rm -rf $INSTALL/{usr/,}share/man
           rm -rf $INSTALL/{usr/,}share/pkgconfig
           rm -rf $INSTALL/{usr/,}var
-          find $INSTALL \( -name "*.orig" \
-                        -o -name "*.rej" \
-                        -o -name "*.a" \
-                        -o -name "*.la" \
-                        -o -name "*.o" \
-                        -o -name "*.in" \
-                        -o -name ".git*" \) \
-            -exec rm -f {} \; 2>/dev/null || :
-          find $INSTALL -type d -exec rmdir -p {} \; 2>/dev/null || :
+          find $INSTALL \( -name "*.orig" -o \
+                           -name "*.a" -o \
+                           -name "*.la" -o \
+                           -name "*.so*T" -o \
+                           -name "*.o" -o \
+                           -name "*.in" -o \
+                           -name "*.rej" -o \
+                           -name ".git*" \) \
+                           -exec rm -f "{}" ";" 2>/dev/null || true
+          find $INSTALL -type d -exec rmdir -p "{}" ";" 2>/dev/null || true
 
           if [ ! "$DEBUG" = yes ]; then
             $STRIP `find $INSTALL \
@@ -360,12 +361,9 @@ if [ ! -f $STAMP ]; then
       cd $ROOT
     fi  # ! "$PKG_SECTION" = "virtual"
 
-    for i in `find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null`; do \
-      $SED "s:\(['= ]\)/usr:\\1$SYSROOT_PREFIX/usr:g" $i; \
-    done
-
     PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
     for i in PKG_NAME PKG_DEEPMD5; do
-      echo "STAMP_$i=\"${!i}\"" >> $STAMP
+      eval val=\$$i
+      echo "STAMP_$i=\"$val\"" >> $STAMP
     done
 fi

commit 24370bc42d24292e6a0eb2833ea5b13f72f9c8e1
Author: AV <27rurk@gmail.com>
Date:   Tue Sep 19 22:17:15 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 0167dd877c..0847191cbb 100755
--- a/scripts/build
+++ b/scripts/build
@@ -360,6 +360,10 @@ if [ ! -f $STAMP ]; then
       cd $ROOT
     fi  # ! "$PKG_SECTION" = "virtual"
 
+    for i in `find $SYSROOT_PREFIX/usr/lib/ -name "*.la" 2>/dev/null`; do \
+      $SED "s:\(['= ]\)/usr:\\1$SYSROOT_PREFIX/usr:g" $i; \
+    done
+
     PKG_DEEPMD5=$(find $STAMP_DEPENDS -exec md5sum {} \; 2>/dev/null | sort | md5sum | cut -d" " -f1)
     for i in PKG_NAME PKG_DEEPMD5; do
       echo "STAMP_$i=\"${!i}\"" >> $STAMP

commit 5f541091eb481544c625c6389d3dd36abdc33135
Author: AV <27rurk@gmail.com>
Date:   Sun Sep 17 11:25:55 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 2130b23c8c..0167dd877c 100755
--- a/scripts/build
+++ b/scripts/build
@@ -296,7 +296,7 @@ if [ ! -f $STAMP ]; then
               $SED "s:\(['= ]\)/usr:\\1$SYSROOT_PREFIX/usr:g" $i; \
             done
             mkdir -p $SYSROOT_PREFIX
-              cp -PRvf $INSTALL_DEV/* $SYSROOT_PREFIXf
+              cp -PRvf $INSTALL_DEV/* $SYSROOT_PREFIX
             mkdir -p $INSTALL
               cp -PRvf $INSTALL_DEV/* $INSTALL
             ;;

commit bc4d8c6c6bd32d1a8d166405192844fc1776d752
Author: AV <27rurk@gmail.com>
Date:   Sun Sep 17 11:24:36 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index e002e8d6fe..2130b23c8c 100755
--- a/scripts/build
+++ b/scripts/build
@@ -280,7 +280,6 @@ if [ ! -f $STAMP ]; then
         pre_makeinstall_$TARGET
       fi
       if [ "$(type -t makeinstall_$TARGET)" = "function" ]; then
-        unset LD_LIBRARY_PATH
         makeinstall_$TARGET
         if [ "$TARGET" = "target" -a -d "$INSTALL_DEV" ]; then
           mkdir -p $INSTALL

commit 3f36126151d7338f513e31d373c564581e2a5c4d
Author: AV <27rurk@gmail.com>
Date:   Sun Sep 17 11:23:43 2017 +0300

    autocommit on change

diff --git a/scripts/build b/scripts/build
index 2727e58f42..e002e8d6fe 100755
--- a/scripts/build
+++ b/scripts/build
@@ -289,7 +289,6 @@ if [ ! -f $STAMP ]; then
       else
         case "$TARGET" in
           target)
-          unset LD_LIBRARY_PATH
             make install DESTDIR=$INSTALL_DEV $PKG_MAKEINSTALL_OPTS_TARGET
             for i in `find $INSTALL_DEV/lib/ -name "*.la" 2>/dev/null`; do \
               $SED "s:\(['= ]\)/lib:\\1$SYSROOT_PREFIX/lib:g" $i; \
