@node ax_check_page_aligned_malloc
@unnumberedsec ax_check_page_aligned_malloc

@majorheading Synopsis

@smallexample
AX_CHECK_PAGE_ALIGNED_MALLOC
@end smallexample

@majorheading Description

Some operating systems (generally, BSD Unix variants) lack a
posix_memalign function, a memalign function, and a working (meaning,
the memory can be freed) valloc function. To make up for it, the malloc
function promises to return page-aligned addresses if more than one
page's worth of memory is allocated. AX_CHECK_PAGE_ALIGNED_MALLOC checks
for this condition and defines HAVE_PAGE_ALIGNED_MALLOC if the condition
holds.

As an aside, note that valloc'd memory cannot safely be freed on all
operating systems. (Again, some flavors of BSD are the troublemakers.)
It's best to avoid using valloc in favor of posix_memalign, memalign, or
an aligned malloc as detected by AX_CHECK_PAGE_ALIGNED_MALLOC.

Caveat: AX_CHECK_PAGE_ALIGNED_MALLOC takes a probabilistic approach. If
100 calls to malloc all return page-aligned addresses, it assumes that
all calls will behave likewise. It is therefore possible -- albeit
extremely unlikely -- that AX_CHECK_PAGE_ALIGNED_MALLOC can return a
false positive.

@majorheading Source Code

Download the
@uref{http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_page_aligned_malloc.m4,latest
version of @file{ax_check_page_aligned_malloc.m4}} or browse
@uref{http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_page_aligned_malloc.m4,the
macro's revision history}.

@majorheading License

@w{Copyright @copyright{} 2008 Scott Pakin @email{pakin@@uiuc.edu}}

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved. This file is offered as-is, without any
warranty.
