GCC_OPTIM="-O2 -pipe -fno-plt"
LD_OPTIM="-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now"

if [ "$LTO_SUPPORT" = yes ];then
  GCC_OPTIM_LTO="-falign-functions=32 -ffat-lto-objects -ffat-lto-objects -flto=$CONCURRENCY_MAKE_LEVEL -fno-math-errno -fno-semantic-interposition -fno-trapping-math"
  LD_OPTIM_LTO="-fuse-linker-plugin -flto=$CONCURRENCY_MAKE_LEVEL"
fi

if [ "$GOLD_SUPPORT" = yes ];then
  LD_OPTIM_GOLD="-fuse-ld=gold"
fi

if [ "$DEBUG" = yes ]; then
  TARGET_CFLAGS="$TARGET_CFLAGS -ggdb"
  TARGET_CXXFLAGS="$TARGET_CXXFLAGS -ggdb"
  TARGET_LDFLAGS="$TARGET_LDFLAGS -ggdb"
else
  TARGET_CFLAGS="$TARGET_CFLAGS -fomit-frame-pointer"
  TARGET_CXXFLAGS="$TARGET_CXXFLAGS -fomit-frame-pointer"
  TARGET_LDFLAGS="$TARGET_LDFLAGS"
fi

TARGET_CPPFLAGS=
TARGET_CFLAGS="$TARGET_CFLAGS $GCC_OPTIM $GCC_OPTIM_LTO $PROJECT_CFLAGS -fdiagnostics-color=always"
TARGET_CXXFLAGS="$TARGET_CFLAGS"
TARGET_LDFLAGS="$TARGET_LDFLAGS $LD_OPTIM $LD_OPTIM_GOLD $LD_OPTIM_LTO"
TARGET_LIBDIR="$SYSROOT_PREFIX/lib $SYSROOT_PREFIX/usr/lib"
TARGET_INCDIR="$SYSROOT_PREFIX/include $SYSROOT_PREFIX/usr/include"

HOST_CPPFLAGS=""
HOST_CFLAGS="-march=haswell -O2 -pipe -I$TOOLCHAIN/include"
HOST_CXXFLAGS="$HOST_CFLAGS"
HOST_LDFLAGS="-Wl,-rpath,$TOOLCHAIN/lib -L$TOOLCHAIN/lib -s"
HOST_INCDIR="$TOOLCHAIN/include /usr/include"

# work around Ubuntu default C*FLAGS 
# see https://wiki.ubuntu.com/ToolChain/CompilerFlags#A-Wformat_-Wformat-security
HOST_CFLAGS="$HOST_CFLAGS -Wno-format-security"
HOST_CXXFLAGS="$HOST_CXXFLAGS -Wno-format-security" 

# add distro specific library dirs
if [ -z "$HOST_LIBDIR" ]; then
  HOST_LIBDIR="$TOOLCHAIN/lib"

  # ubuntu/debian specific "multiarch support"
  MACHINE_HARDWARE_NAME="$(uname -m)"
  MACHINE_HARDWARE_PLATFORM="$(uname -i)"
  FAMILY_TRIPLET=${HOST_NAME/${MACHINE_HARDWARE_NAME}/${MACHINE_HARDWARE_PLATFORM}}
  if [ -d /lib/$FAMILY_TRIPLET ]; then
    HOST_LIBDIR="$HOST_LIBDIR /lib/$FAMILY_TRIPLET"
  fi
  if [ -d /usr/lib/$FAMILY_TRIPLET ]; then
    HOST_LIBDIR="$HOST_LIBDIR /usr/lib/$FAMILY_TRIPLET"
  fi

  # default multiarch support
  case "${MACHINE_HARDWARE_NAME}" in
    i*86)
      if [ -d /lib32 ]; then
        HOST_LIBDIR="$HOST_LIBDIR /lib32"
      fi
      if [ -d /usr/lib32 ]; then
        HOST_LIBDIR="$HOST_LIBDIR /usr/lib32"
      fi
    ;;
    x86_64)
      if [ -d /lib64 ]; then
        HOST_LIBDIR="$HOST_LIBDIR /lib64"
      fi
      if [ -d /usr/lib64 ]; then
        HOST_LIBDIR="$HOST_LIBDIR /usr/lib64"
      fi
    ;;
  esac

  # default dirs
  export HOST_LIBDIR="$HOST_LIBDIR /lib /usr/lib"
fi
