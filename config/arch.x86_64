# determines TARGET_CPU, if not forced by user
  if [ -z "$TARGET_CPU" ]; then
    TARGET_CPU=core2
  fi

# determine architecture's family
  TARGET_SUBARCH=x86_64

  TARGET_GCC_ARCH="${TARGET_SUBARCH/-/}"
  TARGET_KERNEL_ARCH=x86

# setup ARCH specific *FLAGS
#  TARGET_CFLAGS="-march=$TARGET_CPU -m64 -mmmx -msse -msse2 -msse3 -mssse3 -mcx16 -mno-sse4a -msse4.2 -msse4.1 -mfpmath=sse"
  TARGET_CFLAGS="-march=$TARGET_CPU -m64 -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a -mcx16 -msahf -mno-movbe -mno-aes -mno-sha -mno-pclmul -mpopcnt -mno-abm -mno-lwp -mno-fma -mno-fma4 -mno-xop -mno-bmi -mno-sgx -mno-bmi2 -mno-pconfig -mno-wbnoinvd -mno-tbm -mno-avx -mno-avx2 -msse4.2 -msse4.1 -mno-lzcnt -mno-rtm -mno-hle -mno-rdrnd -mno-f16c -mno-fsgsbase -mno-rdseed -mno-prfchw -mno-adx -mfxsr -mno-xsave -mno-xsaveopt -mno-avx512f -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mno-clflushopt -mno-xsavec -mno-xsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq -mno-avx512bitalg -mno-movdiri -mno-movdir64b -mno-waitpkg -mno-cldemote -mno-ptwrite --param l1-cache-size=32 --param l1-cache-line-size=64 --param l2-cache-size=3072 -mfpmath=sse"  

# build with SIMD support ( yes / no )
  TARGET_FEATURES+=" mmx sse sse2 sse3 sse4_1 sse4_2 ssse3"