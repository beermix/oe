--- chromium-66.0.3359.66/ui/gfx/ipc/skia/gfx_skia_param_traits_macros.h.gcc7_5	2018-03-30 17:16:10.416384243 +0200
+++ chromium-66.0.3359.66/ui/gfx/ipc/skia/gfx_skia_param_traits_macros.h	2018-03-30 17:17:45.715797731 +0200
@@ -10,7 +10,7 @@
 #include "ipc/ipc_message_macros.h"
 #include "third_party/skia/include/core/SkImageInfo.h"
 
-IPC_ENUM_TRAITS_VALIDATE(SkColorType, kLastEnum_SkColorType);
-IPC_ENUM_TRAITS_VALIDATE(SkAlphaType, kLastEnum_SkAlphaType);
+IPC_ENUM_TRAITS_VALIDATE(SkColorType, kLastEnum_SkColorType != 0);
+IPC_ENUM_TRAITS_VALIDATE(SkAlphaType, kLastEnum_SkAlphaType != 0);
 
 #endif  // UI_GFX_IPC_SKIA_GFX_SKIA_PARAM_TRAITS_MACROS_H_
--- chromium-66.0.3359.66/components/autofill/core/common/autofill_regexes.cc.gcc7-5	2018-03-28 21:10:54.000000000 +0200
+++ chromium-66.0.3359.66/components/autofill/core/common/autofill_regexes.cc	2018-03-30 17:59:39.857829411 +0200
@@ -54,10 +54,6 @@
   g_autofill_regexes_tls.Pointer()->Set(this);
 }
 
-AutofillRegexes::~AutofillRegexes() {
-  g_autofill_regexes_tls.Pointer()->Set(nullptr);
-}
-
 icu::RegexMatcher* AutofillRegexes::GetMatcher(const base::string16& pattern) {
   auto it = matchers_.find(pattern);
   if (it == matchers_.end()) {
--- chromium-66.0.3359.66/chrome/browser/notifications/notification_permission_context.cc.gcc7-5	2018-03-28 21:10:50.000000000 +0200
+++ chromium-66.0.3359.66/chrome/browser/notifications/notification_permission_context.cc	2018-04-01 20:19:51.928280032 +0200
@@ -42,9 +42,6 @@
                                  base::TimeDelta visible_delay,
                                  const PermissionRequestID& id);
 
-  // Deletes any earlier task(s) that match |id|.
-  void CancelTask(const PermissionRequestID& id);
-
   // WebContentsObserver:
   void OnVisibilityChanged(content::Visibility visibility) override;
   void WebContentsDestroyed() override;
@@ -119,15 +116,6 @@
     task_queue_.front().timer->Reset();
 }
 
-void VisibilityTimerTabHelper::CancelTask(const PermissionRequestID& id) {
-  bool deleting_front = task_queue_.front().id == id;
-
-  base::EraseIf(task_queue_, [id](const Task& task) { return task.id == id; });
-
-  if (!task_queue_.empty() && is_visible_ && deleting_front)
-    task_queue_.front().timer->Reset();
-}
-
 void VisibilityTimerTabHelper::OnVisibilityChanged(
     content::Visibility visibility) {
   if (visibility == content::Visibility::VISIBLE) {
--- chromium-66.0.3359.66/third_party/blink/renderer/platform/mhtml/mhtml_parser.cc.gcc7-5	2018-04-02 02:25:58.873350066 +0200
+++ chromium-66.0.3359.66/third_party/blink/renderer/platform/mhtml/mhtml_parser.cc	2018-04-02 02:27:48.929444720 +0200
@@ -316,9 +316,10 @@
     // In order to support parsing the MHTML archive file produced before the
     // MHTMLArchive bug was fixed, we need to take a risk of stripping off the
     // CRLF that indeed belongs to the content.
-    if (content.size() >= 2 && content[content.size() - 2] == '\r' &&
-        content[content.size() - 1] == '\n') {
-      content.resize(content.size() - 2);
+    size_t size = content.size();
+    if (size >= 2 && content[size - 2] == '\r' &&
+        content[size - 1] == '\n') {
+      content.resize(size - 2);
     }
 
     Vector<char> next_chars;
