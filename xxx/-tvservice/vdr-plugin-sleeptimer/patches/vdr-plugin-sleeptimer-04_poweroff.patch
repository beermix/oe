diff -Naurp vdr-sleeptimer-b777501/po/ru_RU.po vdr-sleeptimer-b777501-patch/po/ru_RU.po
--- vdr-sleeptimer-b777501/po/ru_RU.po	2015-08-03 15:02:57.000000000 +0300
+++ vdr-sleeptimer-b777501-patch/po/ru_RU.po	2015-08-03 14:31:14.000000000 +0300
@@ -41,6 +41,12 @@ msgstr "Отключить Таймер в %d минут"
 msgid "Shutdown"
 msgstr "Выключить"
 
+msgid "Sleep"
+msgstr "Ждущий режим"
+
+msgid "Exit"
+msgstr "Перекл. в KODI"
+
 msgid "Mute"
 msgstr "Отк. звук"
 
diff -Naurp vdr-sleeptimer-b777501/sleeptimer.c vdr-sleeptimer-b777501-patch/sleeptimer.c
--- vdr-sleeptimer-b777501/sleeptimer.c	2013-04-23 08:46:11.000000000 +0300
+++ vdr-sleeptimer-b777501-patch/sleeptimer.c	2015-08-03 14:23:31.000000000 +0300
@@ -19,7 +19,7 @@
  #define COMMANDLENGTH 512
 #endif
 
-static const char *VERSION        = "0.8.3-201301261156dev";
+static const char *VERSION        = "0.8.3";
 static const char *DESCRIPTION    = "Sleeptimer for VDR";
 static const char *MAINMENUENTRY  = tr("Sleeptimer");
 
@@ -29,7 +29,7 @@ int shutdown_time = 0;
 int shutdown_minutes = 2;
 bool start_w_default=false;
 bool do_confirm=false;
-char command[COMMANDLENGTH] = "/sbin/poweroff";
+char command[COMMANDLENGTH] = "systemctl poweroff";
 char cli_command[COMMANDLENGTH]="";
 bool process_red=false;
 
@@ -158,7 +158,7 @@ cPluginSleeptimer::~cPluginSleeptimer()
 const char *cPluginSleeptimer::CommandLineHelp(void)
 {
   // Return a string that describes all known command line options.
-	return "  -e command   shutdown command (default: /sbin/poweroff)\n";
+	return "  -e command   shutdown command (default: systemctl poweroff)\n";
 }
 
 bool cPluginSleeptimer::ProcessArgs(int argc, char *argv[])
@@ -274,7 +274,7 @@ private:
 	int setup_start_w_default;
 	int setup_do_confirm;
 	char setup_command[COMMANDLENGTH];
-	const char* methods[3];
+	const char* methods[5];
 public:
 	cMenuSetupSleeptimer(void);
 	virtual void Store(void);
@@ -324,13 +324,15 @@ cMenuSetupSleeptimer::cMenuSetupSleeptim
  setup_do_confirm=do_confirm;
  
  methods[0]=tr("Shutdown");
- methods[1]=tr("Mute");
- methods[2]=tr("Execute command");
+ methods[1]=tr("Sleep");
+ methods[2]=tr("Exit");
+ methods[3]=tr("Mute");
+ methods[4]=tr("Execute command");
  
  char* allowed_chars=(char*)" abcdefghijklmnopqrstuvwxyz0123456789-.,#~\\^$[]|()*+?{}/:%@&";
  
  Add(new cMenuEditIntItem(tr("Default Timespan [min]"),  &timespan, 2));
- Add(new cMenuEditStraItem(tr("Action"), &new_method, 3, methods)); 
+ Add(new cMenuEditStraItem(tr("Action"), &new_method, 5, methods)); 
  
  cMenuEditStrItem *commanditem;
  if (cli_command[0]=='\0')
@@ -409,12 +411,26 @@ void cBackgroundSleeptimer::Action(void)
 
    if(method == 1) 
    {
+    isyslog("plugin-sleeptimer: pressing key Sleep internally");
+    if(!(cRemote::Put(kSleep)))
+     isyslog("plugin-sleeptimer: ERROR: internal keypress did not succeed \"%s\"!", command);
+   }
+
+   if(method == 2) 
+   {
+    isyslog("plugin-sleeptimer: pressing key Exit internally");
+    if(!(cRemote::Put(kExit)))
+     isyslog("plugin-sleeptimer: ERROR: internal keypress did not succeed \"%s\"!", command);
+   }
+
+   if(method == 3) 
+   {
     isyslog("plugin-sleeptimer: muting audio");
     if(!cDevice::PrimaryDevice()->IsMute())
      cDevice::PrimaryDevice()->ToggleMute();
    }
 
-   if(method == 2) 
+   if(method == 4) 
    {
     dsyslog("plugin-sleeptimer: executing \"%s\"", command);
     if(SystemExec(command) == -1)
